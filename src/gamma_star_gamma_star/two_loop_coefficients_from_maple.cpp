#include <math.h>

double GstarVVCoeffsC1em2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0.16e2 / 0.3e1 * ((0.13e2 * t * t * u + 0.17e2 * t * u * u - 0.18e2 * pow(u, 0.3e1) + 0.18e2 * t * u + 0.24e2 * u * u + 0.6e1 * u) * pow(q3, 0.5e1) + (-0.11e2 * pow(t, 0.3e1) * u - 0.43e2 * t * t * u * u + 0.32e2 * t * pow(u, 0.3e1) + 0.46e2 * pow(u, 0.4e1) - 0.21e2 * t * t * u - 0.97e2 * t * u * u - 0.16e2 * pow(u, 0.3e1) - 0.12e2 * t * u - 0.48e2 * u * u - 0.2e1 * u) * pow(q3, 0.4e1) + (0.5e1 * pow(t, 0.4e1) * u + 0.50e2 * pow(t, 0.3e1) * u * u + 0.6e1 * t * t * pow(u, 0.3e1) - 0.107e3 * t * pow(u, 0.4e1) - 0.40e2 * pow(u, 0.5e1) + 0.12e2 * pow(t, 0.3e1) * u + 0.142e3 * t * t * u * u + 0.122e3 * t * pow(u, 0.3e1) - 0.34e2 * pow(u, 0.4e1) + 0.9e1 * t * t * u + 0.124e3 * t * u * u + 0.94e2 * pow(u, 0.3e1) + 0.2e1 * t * u + 0.32e2 * u * u) * pow(q3, 0.3e1) + (-pow(t, 0.5e1) * u - 0.29e2 * pow(t, 0.4e1) * u * u - 0.42e2 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.72e2 * t * t * pow(u, 0.4e1) + 0.90e2 * t * pow(u, 0.5e1) + 0.12e2 * pow(u, 0.6e1) - 0.3e1 * pow(t, 0.4e1) * u - 0.95e2 * pow(t, 0.3e1) * u * u - 0.198e3 * t * t * pow(u, 0.3e1) - 0.4e1 * t * pow(u, 0.4e1) + 0.48e2 * pow(u, 0.5e1) - 0.3e1 * pow(t, 0.3e1) * u - 0.109e3 * t * t * u * u - 0.234e3 * t * pow(u, 0.3e1) - 0.52e2 * pow(u, 0.4e1) - t * t * u - 0.49e2 * t * u * u - 0.78e2 * pow(u, 0.3e1) - 0.6e1 * u * u) * q3 * q3 + (0.7e1 * pow(t, 0.5e1) * u * u + 0.28e2 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.7e1 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.60e2 * t * t * pow(u, 0.5e1) - 0.24e2 * t * pow(u, 0.6e1) + 0.26e2 * pow(t, 0.4e1) * u * u + 0.117e3 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.66e2 * t * t * pow(u, 0.4e1) - 0.53e2 * t * pow(u, 0.5e1) - 0.16e2 * pow(u, 0.6e1) + 0.36e2 * pow(t, 0.3e1) * u * u + 0.170e3 * t * t * pow(u, 0.3e1) + 0.123e3 * t * pow(u, 0.4e1) - 0.4e1 * pow(u, 0.5e1) + 0.22e2 * t * t * u * u + 0.101e3 * t * pow(u, 0.3e1) + 0.50e2 * pow(u, 0.4e1) + 0.5e1 * t * u * u + 0.20e2 * pow(u, 0.3e1)) * q3 + (-0.6e1 * t * t * pow(u, 0.3e1) - 0.12e2 * t * pow(u, 0.3e1) - 0.6e1 * pow(u, 0.3e1)) * pow(q4, 0.3e1) + (-0.2e1 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.24e2 * t * t * pow(u, 0.4e1) - 0.12e2 * t * t * pow(u, 0.3e1) + 0.42e2 * t * pow(u, 0.4e1) - 0.18e2 * t * pow(u, 0.3e1) + 0.18e2 * pow(u, 0.4e1) - 0.8e1 * pow(u, 0.3e1)) * q4 * q4 + (0.10e2 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.8e1 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.30e2 * t * t * pow(u, 0.5e1) + 0.41e2 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.5e1 * t * t * pow(u, 0.4e1) - 0.46e2 * t * pow(u, 0.5e1) + 0.60e2 * t * t * pow(u, 0.3e1) + 0.29e2 * t * pow(u, 0.4e1) - 0.18e2 * pow(u, 0.5e1) + 0.37e2 * t * pow(u, 0.3e1) + 0.16e2 * pow(u, 0.4e1) + 0.8e1 * pow(u, 0.3e1)) * q4 + (-0.8e1 * t * u - 0.2e1 * u * u - 0.6e1 * u) * pow(q3, 0.6e1) - 0.25e2 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.28e2 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.6e1 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.2e1 * pow(q3, 0.7e1) * u - 0.4e1 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.10e2 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.12e2 * t * t * pow(u, 0.6e1) - 0.13e2 * t * pow(u, 0.3e1) - 0.41e2 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.52e2 * t * t * pow(u, 0.4e1) - 0.13e2 * t * pow(u, 0.5e1) - 0.36e2 * t * pow(u, 0.4e1) + 0.5e1 * t * t * pow(u, 0.5e1) + 0.16e2 * t * pow(u, 0.6e1) - 0.33e2 * t * t * pow(u, 0.3e1) - 0.6e1 * u * pow(q3, 0.4e1) * pow(q4, 0.3e1) + (0.12e2 * t * u + 0.12e2 * u * u + 0.12e2 * u) * pow(q3, 0.3e1) * pow(q4, 0.3e1) + (0.6e1 * pow(t, 0.3e1) + 0.6e1 * t * t * u - 0.72e2 * t * u * u - 0.52e2 * pow(u, 0.3e1) + 0.12e2 * t * t - 0.60e2 * u * u + 0.6e1 * t - 0.6e1 * u) * pow(q3, 0.3e1) * q4 * q4 + (0.2e1 * pow(t, 0.4e1) + 0.8e1 * pow(t, 0.3e1) * u - 0.9e1 * t * t * u * u + 0.143e3 * t * pow(u, 0.3e1) + 0.80e2 * pow(u, 0.4e1) + 0.6e1 * pow(t, 0.3e1) + 0.6e1 * t * t * u - 0.68e2 * t * u * u + 0.74e2 * pow(u, 0.3e1) + 0.6e1 * t * t - 0.6e1 * t * u - 0.48e2 * u * u + 0.2e1 * t - 0.4e1 * u) * pow(q3, 0.3e1) * q4 + (-0.6e1 * t * t * u - 0.24e2 * t * u * u - 0.6e1 * pow(u, 0.3e1) - 0.12e2 * t * u - 0.24e2 * u * u - 0.6e1 * u) * q3 * q3 * pow(q4, 0.3e1) + (-0.8e1 * pow(t, 0.3e1) * u + 0.30e2 * t * t * u * u + 0.102e3 * t * pow(u, 0.3e1) + 0.24e2 * pow(u, 0.4e1) - 0.18e2 * t * t * u + 0.42e2 * t * u * u + 0.84e2 * pow(u, 0.3e1) - 0.12e2 * t * u + 0.12e2 * u * u - 0.2e1 * u) * q3 * q3 * q4 * q4 + (-0.5e1 * pow(t, 0.4e1) * u + 0.27e2 * pow(t, 0.3e1) * u * u - 0.60e2 * t * t * pow(u, 0.3e1) - 0.168e3 * t * pow(u, 0.4e1) - 0.30e2 * pow(u, 0.5e1) - 0.12e2 * pow(t, 0.3e1) * u + 0.113e3 * t * t * u * u + 0.3e1 * t * pow(u, 0.3e1) - 0.110e3 * pow(u, 0.4e1) - 0.9e1 * t * t * u + 0.128e3 * t * u * u + 0.48e2 * pow(u, 0.3e1) - 0.2e1 * t * u + 0.42e2 * u * u) * q3 * q3 * q4 + (0.12e2 * t * t * u * u + 0.12e2 * t * pow(u, 0.3e1) + 0.24e2 * t * u * u + 0.12e2 * pow(u, 0.3e1) + 0.12e2 * u * u) * q3 * pow(q4, 0.3e1) + (0.4e1 * pow(t, 0.3e1) * u * u - 0.48e2 * t * t * pow(u, 0.3e1) - 0.48e2 * t * pow(u, 0.4e1) + 0.18e2 * t * t * u * u - 0.72e2 * t * pow(u, 0.3e1) - 0.42e2 * pow(u, 0.4e1) + 0.24e2 * t * u * u - 0.24e2 * pow(u, 0.3e1) + 0.10e2 * u * u) * q3 * q4 * q4 + (-0.7e1 * pow(t, 0.4e1) * u * u - 0.21e2 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.96e2 * t * t * pow(u, 0.4e1) + 0.60e2 * t * pow(u, 0.5e1) - 0.33e2 * pow(t, 0.3e1) * u * u - 0.118e3 * t * t * pow(u, 0.3e1) + 0.105e3 * t * pow(u, 0.4e1) + 0.46e2 * pow(u, 0.5e1) - 0.51e2 * t * t * u * u - 0.157e3 * t * pow(u, 0.3e1) + 0.18e2 * pow(u, 0.4e1) - 0.31e2 * t * u * u - 0.60e2 * pow(u, 0.3e1) - 0.6e1 * u * u) * q3 * q4 + (-0.2e1 * t - 0.2e1 * u) * pow(q3, 0.6e1) * q4 + (0.6e1 * t - 0.10e2 * u) * pow(q3, 0.5e1) * q4 * q4 + (0.6e1 * t * t + 0.2e1 * t * u + 0.24e2 * u * u + 0.6e1 * t) * pow(q3, 0.5e1) * q4 + (-0.12e2 * t * t + 0.12e2 * t * u + 0.38e2 * u * u - 0.12e2 * t + 0.18e2 * u) * pow(q3, 0.4e1) * q4 * q4 + (-0.6e1 * pow(t, 0.3e1) - 0.3e1 * t * t * u - 0.35e2 * t * u * u - 0.72e2 * pow(u, 0.3e1) - 0.12e2 * t * t + 0.6e1 * t * u - 0.12e2 * u * u - 0.6e1 * t + 0.6e1 * u) * pow(q3, 0.4e1) * q4 - 0.8e1 * pow(u, 0.5e1) - 0.8e1 * pow(u, 0.4e1) - 0.2e1 * pow(u, 0.3e1) + 0.6e1 * pow(u, 0.6e1)) * pow(q3 - u, -0.2e1) * pow(-0.1e1 - t + q3, -0.3e1) / t * pow(u, -0.3e1));
}
#include <math.h>

double GstarVVCoeffsC1em1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.8e1 / 0.9e1 * (-0.46e2 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.184e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.335e3 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.1518e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.3034e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.3128e4 * t * t * pow(u, 0.6e1) - 0.348e3 * t * t * pow(u, 0.5e1) - 0.328e3 * t * pow(u, 0.6e1) + (0.12672e5 * t * u + 0.12672e5 * u * u + 0.12672e5 * u) * pow(q3, 0.7e1) * pow(q4, 0.3e1) + (0.24336e5 * pow(t, 0.3e1) + 0.23280e5 * t * t * u - 0.65456e5 * t * u * u - 0.55888e5 * pow(u, 0.3e1) + 0.44928e5 * t * t + 0.3008e4 * t * u - 0.73152e5 * u * u + 0.22464e5 * t - 0.18368e5 * u) * pow(q3, 0.7e1) * q4 * q4 + (0.1920e4 * pow(t, 0.4e1) - 0.20112e5 * pow(t, 0.3e1) * u - 0.37216e5 * t * t * u * u + 0.113984e6 * t * pow(u, 0.3e1) + 0.91440e5 * pow(u, 0.4e1) + 0.5120e4 * pow(t, 0.3e1) - 0.75952e5 * t * t * u - 0.110688e6 * t * u * u + 0.79152e5 * pow(u, 0.3e1) + 0.4800e4 * t * t - 0.86720e5 * t * u - 0.62016e5 * u * u + 0.1600e4 * t - 0.30848e5 * u) * pow(q3, 0.7e1) * q4 + (-0.20592e5 * t * t * u - 0.47520e5 * t * u * u - 0.20592e5 * pow(u, 0.3e1) - 0.38016e5 * t * u - 0.44352e5 * u * u - 0.19008e5 * u) * pow(q3, 0.6e1) * pow(q4, 0.3e1) + (-0.20592e5 * pow(t, 0.4e1) - 0.49440e5 * pow(t, 0.3e1) * u + 0.66288e5 * t * t * u * u + 0.187936e6 * t * pow(u, 0.3e1) + 0.76544e5 * pow(u, 0.4e1) - 0.50544e5 * pow(t, 0.3e1) - 0.75488e5 * t * t * u + 0.148144e6 * t * u * u + 0.168544e6 * pow(u, 0.3e1) - 0.44928e5 * t * t - 0.20928e5 * t * u + 0.82912e5 * u * u - 0.14976e5 * t + 0.9152e4 * u) * pow(q3, 0.6e1) * q4 * q4 + (-0.1290e4 * pow(t, 0.5e1) + 0.8130e4 * pow(t, 0.4e1) * u + 0.73236e5 * pow(t, 0.3e1) * u * u - 0.119412e6 * t * t * pow(u, 0.3e1) - 0.316634e6 * t * pow(u, 0.4e1) - 0.115326e6 * pow(u, 0.5e1) - 0.4160e4 * pow(t, 0.4e1) + 0.55280e5 * pow(t, 0.3e1) * u + 0.302736e6 * t * t * u * u - 0.71232e5 * t * pow(u, 0.3e1) - 0.225248e6 * pow(u, 0.4e1) - 0.5280e4 * pow(t, 0.3e1) + 0.105264e6 * t * t * u + 0.342416e6 * t * u * u + 0.9424e4 * pow(u, 0.3e1) - 0.3200e4 * t * t + 0.81472e5 * t * u + 0.117280e6 * u * u - 0.800e3 * t + 0.22432e5 * u) * pow(q3, 0.6e1) * q4 + (0.17424e5 * pow(t, 0.3e1) * u + 0.71280e5 * t * t * u * u + 0.71280e5 * t * pow(u, 0.3e1) + 0.17424e5 * pow(u, 0.4e1) + 0.42768e5 * t * t * u + 0.123552e6 * t * u * u + 0.61776e5 * pow(u, 0.3e1) + 0.38016e5 * t * u + 0.57024e5 * u * u + 0.12672e5 * u) * pow(q3, 0.5e1) * pow(q4, 0.3e1) + (0.9594e4 * pow(t, 0.5e1) + 0.42834e5 * pow(t, 0.4e1) * u - 0.19164e5 * pow(t, 0.3e1) * u * u - 0.245340e6 * t * t * pow(u, 0.3e1) - 0.251966e6 * t * pow(u, 0.4e1) - 0.60118e5 * pow(u, 0.5e1) + 0.26208e5 * pow(t, 0.4e1) + 0.98864e5 * pow(t, 0.3e1) * u - 0.67808e5 * t * t * u * u - 0.399824e6 * t * pow(u, 0.3e1) - 0.205536e6 * pow(u, 0.4e1) + 0.28080e5 * pow(t, 0.3e1) + 0.81600e5 * t * t * u - 0.76464e5 * t * u * u - 0.171392e6 * pow(u, 0.3e1) + 0.14976e5 * t * t + 0.24896e5 * t * u - 0.29024e5 * u * u + 0.3744e4 * t + 0.32e2 * u) * pow(q3, 0.5e1) * q4 * q4 + (-0.93664e5 * u * u + 0.160e3 * t - 0.7808e4 * u - 0.56368e5 * t * t * u - 0.381648e6 * t * u * u - 0.33696e5 * t * u - 0.43136e5 * pow(t, 0.3e1) * u - 0.561552e6 * t * t * u * u - 0.10332e5 * pow(t, 0.4e1) * u - 0.341812e6 * pow(t, 0.3e1) * u * u + 0.2310e4 * pow(t, 0.5e1) * u - 0.64488e5 * pow(t, 0.4e1) * u * u - 0.370368e6 * t * pow(u, 0.3e1) + 0.25812e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.424774e6 * t * t * pow(u, 0.4e1) + 0.390102e6 * t * pow(u, 0.5e1) + 0.486758e6 * t * pow(u, 0.4e1) - 0.222088e6 * t * t * pow(u, 0.3e1) + 0.272532e6 * pow(u, 0.5e1) + 0.135920e6 * pow(u, 0.4e1) - 0.142832e6 * pow(u, 0.3e1) + 0.82932e5 * pow(u, 0.6e1) + 0.1920e4 * pow(t, 0.3e1) + 0.800e3 * t * t + 0.2560e4 * pow(t, 0.4e1) + 0.1790e4 * pow(t, 0.5e1) + 0.510e3 * pow(t, 0.6e1)) * pow(q3, 0.5e1) * q4 + (-0.8118e4 * pow(t, 0.4e1) * u - 0.54648e5 * pow(t, 0.3e1) * u * u - 0.96228e5 * t * t * pow(u, 0.3e1) - 0.54648e5 * t * pow(u, 0.4e1) - 0.8118e4 * pow(u, 0.5e1) - 0.22176e5 * pow(t, 0.3e1) * u - 0.126720e6 * t * t * u * u - 0.155232e6 * t * pow(u, 0.3e1) - 0.44352e5 * pow(u, 0.4e1) - 0.23760e5 * t * t * u - 0.104544e6 * t * u * u - 0.64944e5 * pow(u, 0.3e1) - 0.12672e5 * t * u - 0.31680e5 * u * u - 0.3168e4 * u) * pow(q3, 0.4e1) * pow(q4, 0.3e1) + (-0.7680e4 * u * u - 0.928e3 * u - 0.29856e5 * t * t * u - 0.29680e5 * t * u * u - 0.8960e4 * t * u - 0.53440e5 * pow(t, 0.3e1) * u - 0.44736e5 * t * t * u * u - 0.49982e5 * pow(t, 0.4e1) * u - 0.32496e5 * pow(t, 0.3e1) * u * u - 0.18636e5 * pow(t, 0.5e1) * u - 0.9930e4 * pow(t, 0.4e1) * u * u + 0.223872e6 * t * pow(u, 0.3e1) + 0.157680e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.319440e6 * t * t * pow(u, 0.4e1) + 0.183916e6 * t * pow(u, 0.5e1) + 0.473732e6 * t * pow(u, 0.4e1) + 0.319612e6 * t * t * pow(u, 0.3e1) + 0.141298e6 * pow(u, 0.5e1) + 0.181104e6 * pow(u, 0.4e1) + 0.56608e5 * pow(u, 0.3e1) + 0.27086e5 * pow(u, 0.6e1) - 0.1872e4 * pow(t, 0.3e1) - 0.5616e4 * pow(t, 0.4e1) - 0.6084e4 * pow(t, 0.5e1) - 0.2340e4 * pow(t, 0.6e1)) * pow(q3, 0.4e1) * q4 * q4 + (0.33120e5 * u * u + 0.960e3 * u + 0.9232e4 * t * t * u + 0.176880e6 * t * u * u + 0.4448e4 * t * u + 0.9712e4 * pow(t, 0.3e1) * u + 0.380416e6 * t * t * u * u + 0.1502e4 * pow(t, 0.4e1) * u + 0.403780e6 * pow(t, 0.3e1) * u * u - 0.5738e4 * pow(t, 0.5e1) * u + 0.199420e6 * pow(t, 0.4e1) * u * u + 0.31485e5 * pow(t, 0.5e1) * u * u + 0.45772e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.272228e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.533968e6 * t * pow(u, 0.3e1) + 0.431108e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.263644e6 * t * t * pow(u, 0.4e1) - 0.617626e6 * t * pow(u, 0.5e1) + 0.28714e5 * t * pow(u, 0.4e1) - 0.510613e6 * t * t * pow(u, 0.5e1) - 0.259947e6 * t * pow(u, 0.6e1) + 0.783012e6 * t * t * pow(u, 0.3e1) - 0.3389e4 * pow(t, 0.6e1) * u - 0.183650e6 * pow(u, 0.5e1) + 0.54512e5 * pow(u, 0.4e1) + 0.127904e6 * pow(u, 0.3e1) - 0.179012e6 * pow(u, 0.6e1) - 0.80e2 * pow(t, 0.3e1) - 0.320e3 * pow(t, 0.4e1) - 0.34490e5 * pow(u, 0.7e1) - 0.510e3 * pow(t, 0.5e1) - 0.380e3 * pow(t, 0.6e1) - 0.110e3 * pow(t, 0.7e1)) * pow(q3, 0.4e1) * q4 + (0.1980e4 * pow(t, 0.5e1) * u + 0.22572e5 * pow(t, 0.4e1) * u * u + 0.64152e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.64152e5 * t * t * pow(u, 0.4e1) + 0.22572e5 * t * pow(u, 0.5e1) + 0.1980e4 * pow(u, 0.6e1) + 0.5148e4 * pow(t, 0.4e1) * u + 0.58608e5 * pow(t, 0.3e1) * u * u + 0.138600e6 * t * t * pow(u, 0.3e1) + 0.96624e5 * t * pow(u, 0.4e1) + 0.17820e5 * pow(u, 0.5e1) + 0.4752e4 * pow(t, 0.3e1) * u + 0.58608e5 * t * t * u * u + 0.102960e6 * t * pow(u, 0.3e1) + 0.36432e5 * pow(u, 0.4e1) + 0.1584e4 * t * t * u + 0.28512e5 * t * u * u + 0.26928e5 * pow(u, 0.3e1) + 0.6336e4 * u * u) * pow(q3, 0.3e1) * pow(q4, 0.3e1) + (0.5024e4 * u * u + 0.464e3 * t * t * u + 0.23456e5 * t * u * u + 0.4016e4 * pow(t, 0.3e1) * u + 0.48768e5 * t * t * u * u + 0.10086e5 * pow(t, 0.4e1) * u + 0.54884e5 * pow(t, 0.3e1) * u * u + 0.10520e5 * pow(t, 0.5e1) * u + 0.32840e5 * pow(t, 0.4e1) * u * u + 0.8112e4 * pow(t, 0.5e1) * u * u - 0.51900e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.197350e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.10352e5 * t * pow(u, 0.3e1) - 0.91024e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.372156e6 * t * t * pow(u, 0.4e1) - 0.292008e6 * t * pow(u, 0.5e1) - 0.234702e6 * t * pow(u, 0.4e1) - 0.208998e6 * t * t * pow(u, 0.5e1) - 0.74420e5 * t * pow(u, 0.6e1) - 0.37044e5 * t * t * pow(u, 0.3e1) + 0.3986e4 * pow(t, 0.6e1) * u - 0.100914e6 * pow(u, 0.5e1) - 0.51488e5 * pow(u, 0.4e1) + 0.6224e4 * pow(u, 0.3e1) - 0.56256e5 * pow(u, 0.6e1) - 0.6512e4 * pow(u, 0.7e1) + 0.234e3 * pow(t, 0.5e1) + 0.468e3 * pow(t, 0.6e1) + 0.234e3 * pow(t, 0.7e1)) * pow(q3, 0.3e1) * q4 * q4 + (-0.3936e4 * u * u - 0.480e3 * t * t * u - 0.27344e5 * t * u * u - 0.1744e4 * pow(t, 0.3e1) * u - 0.86352e5 * t * t * u * u - 0.1568e4 * pow(t, 0.4e1) * u - 0.151468e6 * pow(t, 0.3e1) * u * u + 0.1110e4 * pow(t, 0.5e1) * u - 0.144552e6 * pow(t, 0.4e1) * u * u - 0.65628e5 * pow(t, 0.5e1) * u * u - 0.309494e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.95930e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.43961e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.75742e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.325342e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.304945e6 * t * t * pow(u, 0.6e1) - 0.235168e6 * t * pow(u, 0.3e1) - 0.619228e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.393338e6 * t * t * pow(u, 0.4e1) + 0.161750e6 * t * pow(u, 0.5e1) - 0.305070e6 * t * pow(u, 0.4e1) + 0.452954e6 * t * t * pow(u, 0.5e1) + 0.371848e6 * t * pow(u, 0.6e1) - 0.550768e6 * t * t * pow(u, 0.3e1) + 0.1168e4 * pow(t, 0.7e1) * u - 0.9299e4 * pow(t, 0.6e1) * u * u + 0.96587e5 * t * pow(u, 0.7e1) + 0.2582e4 * pow(t, 0.6e1) * u + 0.5408e4 * pow(u, 0.5e1) - 0.72192e5 * pow(u, 0.4e1) - 0.40448e5 * pow(u, 0.3e1) + 0.108084e6 * pow(u, 0.6e1) + 0.67926e5 * pow(u, 0.7e1) + 0.10e2 * pow(t, 0.5e1) + 0.30e2 * pow(t, 0.6e1) + 0.30e2 * pow(t, 0.7e1) + 0.10e2 * pow(t, 0.8e1) + 0.7738e4 * pow(u, 0.8e1)) * pow(q3, 0.3e1) * q4 + (-0.198e3 * pow(t, 0.6e1) * u - 0.4752e4 * pow(t, 0.5e1) * u * u - 0.21978e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.34848e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.21978e5 * t * t * pow(u, 0.5e1) - 0.4752e4 * t * pow(u, 0.6e1) - 0.198e3 * pow(u, 0.7e1) - 0.396e3 * pow(t, 0.5e1) * u - 0.11880e5 * pow(t, 0.4e1) * u * u - 0.53064e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.69696e5 * t * t * pow(u, 0.4e1) - 0.32076e5 * t * pow(u, 0.5e1) - 0.3960e4 * pow(u, 0.6e1) - 0.198e3 * pow(t, 0.4e1) * u - 0.10296e5 * pow(t, 0.3e1) * u * u - 0.47124e5 * t * t * pow(u, 0.3e1) - 0.45144e5 * t * pow(u, 0.4e1) - 0.11286e5 * pow(u, 0.5e1) - 0.3168e4 * t * t * u * u - 0.19008e5 * t * pow(u, 0.3e1) - 0.9504e4 * pow(u, 0.4e1) - 0.3168e4 * pow(u, 0.3e1)) * q3 * q3 * pow(q4, 0.3e1) + (-0.2512e4 * t * t * u * u - 0.58e2 * pow(t, 0.4e1) * u - 0.8984e4 * pow(t, 0.3e1) * u * u - 0.444e3 * pow(t, 0.5e1) * u - 0.12696e5 * pow(t, 0.4e1) * u * u - 0.8146e4 * pow(t, 0.5e1) * u * u - 0.856e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.115260e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.7710e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.61940e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.108964e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.71238e5 * t * t * pow(u, 0.6e1) - 0.22336e5 * t * pow(u, 0.3e1) - 0.34552e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.64080e5 * t * t * pow(u, 0.4e1) + 0.106932e6 * t * pow(u, 0.5e1) + 0.8552e4 * t * pow(u, 0.4e1) + 0.194070e6 * t * t * pow(u, 0.5e1) + 0.97974e5 * t * pow(u, 0.6e1) - 0.44460e5 * t * t * pow(u, 0.3e1) - 0.328e3 * pow(t, 0.7e1) * u - 0.1922e4 * pow(t, 0.6e1) * u * u + 0.15558e5 * t * pow(u, 0.7e1) - 0.714e3 * pow(t, 0.6e1) * u + 0.17686e5 * pow(u, 0.5e1) - 0.624e3 * pow(u, 0.4e1) - 0.4096e4 * pow(u, 0.3e1) + 0.31848e5 * pow(u, 0.6e1) + 0.12588e5 * pow(u, 0.7e1) + 0.648e3 * pow(u, 0.8e1)) * q3 * q3 * q4 * q4 + (0.1968e4 * t * t * u * u + 0.60e2 * pow(t, 0.4e1) * u + 0.11368e5 * pow(t, 0.3e1) * u * u + 0.158e3 * pow(t, 0.5e1) * u + 0.24954e5 * pow(t, 0.4e1) * u * u + 0.25918e5 * pow(t, 0.5e1) * u * u + 0.223438e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.327656e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.110555e6 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.138914e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.99306e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.245749e6 * t * t * pow(u, 0.6e1) + 0.28816e5 * t * pow(u, 0.3e1) + 0.213380e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.285844e6 * t * t * pow(u, 0.4e1) + 0.92542e5 * t * pow(u, 0.5e1) + 0.109336e6 * t * pow(u, 0.4e1) + 0.66581e5 * t * t * pow(u, 0.5e1) - 0.97246e5 * t * pow(u, 0.6e1) + 0.107688e6 * t * t * pow(u, 0.3e1) - 0.240e3 * pow(t, 0.7e1) * u + 0.12071e5 * pow(t, 0.6e1) * u * u - 0.120049e6 * t * pow(u, 0.7e1) - 0.139e3 * pow(t, 0.8e1) * u + 0.1707e4 * pow(t, 0.7e1) * u * u + 0.17844e5 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.1478e4 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.102873e6 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.165417e6 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.95034e5 * t * t * pow(u, 0.7e1) - 0.18696e5 * t * pow(u, 0.8e1) - 0.3e1 * pow(t, 0.6e1) * u + 0.23212e5 * pow(u, 0.5e1) + 0.15568e5 * pow(u, 0.4e1) + 0.3520e4 * pow(u, 0.3e1) - 0.6030e4 * pow(u, 0.6e1) - 0.34840e5 * pow(u, 0.7e1) - 0.14468e5 * pow(u, 0.8e1) - 0.726e3 * pow(u, 0.9e1)) * q3 * q3 * q4 + (0.396e3 * pow(t, 0.6e1) * u * u + 0.3564e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.8712e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.8712e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.3564e4 * t * t * pow(u, 0.6e1) + 0.396e3 * t * pow(u, 0.7e1) + 0.792e3 * pow(t, 0.5e1) * u * u + 0.8316e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.19008e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.16632e5 * t * t * pow(u, 0.5e1) + 0.5544e4 * t * pow(u, 0.6e1) + 0.396e3 * pow(u, 0.7e1) + 0.396e3 * pow(t, 0.4e1) * u * u + 0.6336e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.13464e5 * t * t * pow(u, 0.4e1) + 0.9504e4 * t * pow(u, 0.5e1) + 0.1980e4 * pow(u, 0.6e1) + 0.1584e4 * t * t * pow(u, 0.3e1) + 0.3168e4 * t * pow(u, 0.4e1) + 0.1584e4 * pow(u, 0.5e1)) * q3 * pow(q4, 0.3e1) + (0.314e3 * pow(t, 0.4e1) * u * u + 0.780e3 * pow(t, 0.5e1) * u * u + 0.9876e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.5928e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.3920e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.11090e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.46240e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.47898e5 * t * t * pow(u, 0.6e1) + 0.7864e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.12108e5 * t * t * pow(u, 0.4e1) + 0.1880e4 * t * pow(u, 0.5e1) + 0.4096e4 * t * pow(u, 0.4e1) - 0.20472e5 * t * t * pow(u, 0.5e1) - 0.23124e5 * t * pow(u, 0.6e1) + 0.2048e4 * t * t * pow(u, 0.3e1) + 0.618e3 * pow(t, 0.6e1) * u * u - 0.17328e5 * t * pow(u, 0.7e1) + 0.152e3 * pow(t, 0.7e1) * u * u - 0.140e3 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.9024e4 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.26008e5 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.27560e5 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.11580e5 * t * t * pow(u, 0.7e1) - 0.1296e4 * t * pow(u, 0.8e1) + 0.2048e4 * pow(u, 0.5e1) - 0.2678e4 * pow(u, 0.6e1) - 0.5820e4 * pow(u, 0.7e1) - 0.1278e4 * pow(u, 0.8e1)) * q3 * q4 * q4 + (-0.246e3 * pow(t, 0.4e1) * u * u - 0.1133e4 * pow(t, 0.5e1) * u * u - 0.29286e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.77478e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.35173e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.92686e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.76634e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.389e3 * t * t * pow(u, 0.6e1) - 0.11472e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.28740e5 * t * t * pow(u, 0.4e1) - 0.23664e5 * t * pow(u, 0.5e1) - 0.3904e4 * t * pow(u, 0.4e1) - 0.70920e5 * t * t * pow(u, 0.5e1) - 0.20309e5 * t * pow(u, 0.6e1) - 0.1760e4 * t * t * pow(u, 0.3e1) - 0.1689e4 * pow(t, 0.6e1) * u * u + 0.23343e5 * t * pow(u, 0.7e1) - 0.963e3 * pow(t, 0.7e1) * u * u - 0.161e3 * pow(t, 0.8e1) * u * u - 0.3609e4 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.5416e4 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.13618e5 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.41127e5 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.38267e5 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.14178e5 * t * t * pow(u, 0.8e1) + 0.1452e4 * t * pow(u, 0.9e1) - 0.19208e5 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.45547e5 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.13836e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.54615e5 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.60008e5 * t * t * pow(u, 0.7e1) + 0.20247e5 * t * pow(u, 0.8e1) - 0.2336e4 * pow(u, 0.5e1) - 0.5574e4 * pow(u, 0.6e1) + 0.710e3 * pow(u, 0.7e1) + 0.6492e4 * pow(u, 0.8e1) + 0.1388e4 * pow(u, 0.9e1)) * q3 * q4 - 0.3168e4 * u * pow(q3, 0.8e1) * pow(q4, 0.3e1) + (-0.160e3 * t + 0.800e3 * u) * pow(q3, 0.10e2) * q4 + (0.3744e4 * t - 0.3680e4 * u) * pow(q3, 0.9e1) * q4 * q4 + (0.800e3 * t * t - 0.7072e4 * t * u + 0.4352e4 * u * u + 0.800e3 * t - 0.7168e4 * u) * pow(q3, 0.9e1) * q4 + (-0.14976e5 * t * t + 0.1984e4 * t * u + 0.21920e5 * u * u - 0.14976e5 * t + 0.13792e5 * u) * pow(q3, 0.8e1) * q4 * q4 + (-0.1680e4 * pow(t, 0.3e1) + 0.18304e5 * t * t * u + 0.384e3 * t * u * u - 0.36720e5 * pow(u, 0.3e1) - 0.3200e4 * t * t + 0.41568e5 * t * u + 0.4864e4 * u * u - 0.1600e4 * t + 0.21632e5 * u) * pow(q3, 0.8e1) * q4 - 0.5767e4 * pow(t, 0.6e1) * pow(u, 0.5e1) - 0.3266e4 * pow(t, 0.5e1) * pow(u, 0.6e1) + 0.2155e4 * pow(t, 0.4e1) * pow(u, 0.7e1) + 0.4310e4 * pow(t, 0.3e1) * pow(u, 0.8e1) + 0.2451e4 * t * t * pow(u, 0.9e1) + 0.506e3 * t * pow(u, 0.10e2) - 0.1551e4 * t * pow(u, 0.7e1) - 0.1231e4 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.5898e4 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.11665e5 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.11628e5 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.5241e4 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.86e2 * t * t * pow(u, 0.8e1) + 0.937e3 * t * pow(u, 0.9e1) - 0.198e3 * pow(t, 0.9e1) * pow(u, 0.3e1) - 0.752e3 * pow(t, 0.8e1) * pow(u, 0.4e1) - 0.702e3 * pow(t, 0.7e1) * pow(u, 0.5e1) + 0.1028e4 * pow(t, 0.6e1) * pow(u, 0.6e1) + 0.3022e4 * pow(t, 0.5e1) * pow(u, 0.7e1) + 0.3000e4 * pow(t, 0.4e1) * pow(u, 0.8e1) + 0.1430e4 * pow(t, 0.3e1) * pow(u, 0.9e1) + 0.276e3 * t * t * pow(u, 0.10e2) - 0.791e3 * pow(t, 0.8e1) * pow(u, 0.3e1) - 0.3502e4 * pow(t, 0.7e1) * pow(u, 0.4e1) - 0.927e3 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.4482e4 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.9286e4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.10144e5 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.5847e4 * t * t * pow(u, 0.7e1) - 0.1558e4 * t * pow(u, 0.8e1) + (0.2976e4 * pow(t, 0.3e1) + 0.32608e5 * t * t * u + 0.42704e5 * t * u * u + 0.3440e4 * pow(u, 0.3e1) + 0.5760e4 * t * t + 0.58528e5 * t * u + 0.43264e5 * u * u + 0.2880e4 * t + 0.26752e5 * u) * pow(q3, 0.9e1) + (-0.4320e4 * pow(t, 0.4e1) - 0.48544e5 * pow(t, 0.3e1) * u - 0.107312e6 * t * t * u * u - 0.26800e5 * t * pow(u, 0.3e1) + 0.24480e5 * pow(u, 0.4e1) - 0.12000e5 * pow(t, 0.3e1) - 0.125936e6 * t * t * u - 0.213072e6 * t * u * u - 0.46848e5 * pow(u, 0.3e1) - 0.11520e5 * t * t - 0.111040e6 * t * u - 0.104224e6 * u * u - 0.3840e4 * t - 0.33280e5 * u) * pow(q3, 0.8e1) + (0.3852e4 * pow(t, 0.5e1) + 0.45162e5 * pow(t, 0.4e1) * u + 0.155848e6 * pow(t, 0.3e1) * u * u + 0.82436e5 * t * t * pow(u, 0.3e1) - 0.97588e5 * t * pow(u, 0.4e1) - 0.58830e5 * pow(u, 0.5e1) + 0.13440e5 * pow(t, 0.4e1) + 0.149504e6 * pow(t, 0.3e1) * u + 0.449248e6 * t * t * u * u + 0.258240e6 * t * pow(u, 0.3e1) - 0.29568e5 * pow(u, 0.4e1) + 0.18240e5 * pow(t, 0.3e1) + 0.188960e6 * t * t * u + 0.424672e6 * t * u * u + 0.152016e6 * pow(u, 0.3e1) + 0.11520e5 * t * t + 0.108480e6 * t * u + 0.132864e6 * u * u + 0.2880e4 * t + 0.23840e5 * u) * pow(q3, 0.7e1) + (-0.95776e5 * u * u - 0.1152e4 * t - 0.9760e4 * u - 0.137440e6 * t * t * u - 0.429984e6 * t * u * u - 0.57280e5 * t * u - 0.169216e6 * pow(t, 0.3e1) * u - 0.723472e6 * t * t * u * u - 0.106286e6 * pow(t, 0.4e1) * u - 0.537752e6 * pow(t, 0.3e1) * u * u - 0.27024e5 * pow(t, 0.5e1) * u - 0.146658e6 * pow(t, 0.4e1) * u * u - 0.652976e6 * t * pow(u, 0.3e1) - 0.142368e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.153420e6 * t * t * pow(u, 0.4e1) + 0.233936e6 * t * pow(u, 0.5e1) + 0.4488e4 * t * pow(u, 0.4e1) - 0.592324e6 * t * t * pow(u, 0.3e1) + 0.124242e6 * pow(u, 0.5e1) - 0.79744e5 * pow(u, 0.4e1) - 0.217472e6 * pow(u, 0.3e1) + 0.64806e5 * pow(u, 0.6e1) - 0.12480e5 * pow(t, 0.3e1) - 0.5760e4 * t * t - 0.14400e5 * pow(t, 0.4e1) - 0.8688e4 * pow(t, 0.5e1) - 0.2160e4 * pow(t, 0.6e1)) * pow(q3, 0.6e1) + (0.38656e5 * u * u + 0.192e3 * t + 0.2112e4 * u + 0.48800e5 * t * t * u + 0.232080e6 * t * u * u + 0.15520e5 * t * u + 0.84864e5 * pow(t, 0.3e1) * u + 0.560336e6 * t * t * u * u + 0.85018e5 * pow(t, 0.4e1) * u + 0.678480e6 * pow(t, 0.3e1) * u * u + 0.45842e5 * pow(t, 0.5e1) * u + 0.406524e6 * pow(t, 0.4e1) * u * u + 0.94557e5 * pow(t, 0.5e1) * u * u + 0.158214e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.108302e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.710432e6 * t * pow(u, 0.3e1) + 0.760132e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.207400e6 * t * t * pow(u, 0.4e1) - 0.315270e6 * t * pow(u, 0.5e1) + 0.460280e6 * t * pow(u, 0.4e1) - 0.377765e6 * t * t * pow(u, 0.5e1) - 0.238423e6 * t * pow(u, 0.6e1) + 0.1145684e7 * t * t * pow(u, 0.3e1) + 0.10271e5 * pow(t, 0.6e1) * u - 0.35118e5 * pow(u, 0.5e1) + 0.182496e6 * pow(u, 0.4e1) + 0.157936e6 * pow(u, 0.3e1) - 0.138276e6 * pow(u, 0.6e1) + 0.3360e4 * pow(t, 0.3e1) + 0.1152e4 * t * t + 0.5760e4 * pow(t, 0.4e1) - 0.41056e5 * pow(u, 0.7e1) + 0.5832e4 * pow(t, 0.5e1) + 0.3216e4 * pow(t, 0.6e1) + 0.744e3 * pow(t, 0.7e1)) * pow(q3, 0.5e1) + (-0.8160e4 * u * u - 0.192e3 * u - 0.7088e4 * t * t * u - 0.63760e5 * t * u * u - 0.1728e4 * t * u - 0.17376e5 * pow(t, 0.3e1) * u - 0.211072e6 * t * t * u * u - 0.26238e5 * pow(t, 0.4e1) * u - 0.378208e6 * pow(t, 0.3e1) * u * u - 0.23624e5 * pow(t, 0.5e1) * u - 0.380752e6 * pow(t, 0.4e1) * u * u - 0.200661e6 * pow(t, 0.5e1) * u * u - 0.605152e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.421082e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.118188e6 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.10476e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.313879e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.348725e6 * t * t * pow(u, 0.6e1) - 0.368784e6 * t * pow(u, 0.3e1) - 0.1081672e7 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.878160e6 * t * t * pow(u, 0.4e1) - 0.103120e6 * t * pow(u, 0.5e1) - 0.597040e6 * t * pow(u, 0.4e1) + 0.245093e6 * t * t * pow(u, 0.5e1) + 0.344655e6 * t * pow(u, 0.6e1) - 0.906972e6 * t * t * pow(u, 0.3e1) - 0.2337e4 * pow(t, 0.7e1) * u - 0.42411e5 * pow(t, 0.6e1) * u * u + 0.135638e6 * t * pow(u, 0.7e1) - 0.11547e5 * pow(t, 0.6e1) * u - 0.81334e5 * pow(u, 0.5e1) - 0.134112e6 * pow(u, 0.4e1) - 0.58656e5 * pow(u, 0.3e1) + 0.71696e5 * pow(u, 0.6e1) - 0.96e2 * pow(t, 0.3e1) - 0.480e3 * pow(t, 0.4e1) + 0.82246e5 * pow(u, 0.7e1) - 0.1008e4 * pow(t, 0.5e1) - 0.1104e4 * pow(t, 0.6e1) - 0.624e3 * pow(t, 0.7e1) - 0.144e3 * pow(t, 0.8e1) + 0.15354e5 * pow(u, 0.8e1)) * pow(q3, 0.4e1) + (0.768e3 * u * u + 0.96e2 * t * t * u + 0.7360e4 * t * u * u + 0.768e3 * pow(t, 0.3e1) * u + 0.32656e5 * t * t * u * u + 0.2356e4 * pow(t, 0.4e1) * u + 0.84808e5 * pow(t, 0.3e1) * u * u + 0.3770e4 * pow(t, 0.5e1) * u + 0.133844e6 * pow(t, 0.4e1) * u * u + 0.124938e6 * pow(t, 0.5e1) * u * u + 0.590124e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.792848e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.302930e6 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.378494e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.436e3 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.296226e6 * t * t * pow(u, 0.6e1) + 0.87776e5 * t * pow(u, 0.3e1) + 0.577996e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.685960e6 * t * t * pow(u, 0.4e1) + 0.281274e6 * t * pow(u, 0.5e1) + 0.271244e6 * t * pow(u, 0.4e1) + 0.337479e6 * t * t * pow(u, 0.5e1) - 0.50026e5 * t * pow(u, 0.6e1) + 0.309320e6 * t * t * pow(u, 0.3e1) + 0.1528e4 * pow(t, 0.7e1) * u + 0.62658e5 * pow(t, 0.6e1) * u * u - 0.181510e6 * t * pow(u, 0.7e1) + 0.275e3 * pow(t, 0.8e1) * u + 0.12820e5 * pow(t, 0.7e1) * u * u + 0.58324e5 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.37139e5 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.136331e6 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.257390e6 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.170902e6 * t * t * pow(u, 0.7e1) - 0.44373e5 * t * pow(u, 0.8e1) + 0.3339e4 * pow(t, 0.6e1) * u + 0.64372e5 * pow(u, 0.5e1) + 0.40672e5 * pow(u, 0.4e1) + 0.10320e5 * pow(u, 0.3e1) + 0.18868e5 * pow(u, 0.6e1) - 0.42694e5 * pow(u, 0.7e1) + 0.12e2 * pow(t, 0.5e1) + 0.48e2 * pow(t, 0.6e1) + 0.72e2 * pow(t, 0.7e1) + 0.48e2 * pow(t, 0.8e1) - 0.28670e5 * pow(u, 0.8e1) + 0.12e2 * pow(t, 0.9e1) - 0.3158e4 * pow(u, 0.9e1)) * pow(q3, 0.3e1) + (-0.384e3 * t * t * u * u - 0.12e2 * pow(t, 0.4e1) * u - 0.3176e4 * pow(t, 0.3e1) * u * u - 0.84e2 * pow(t, 0.5e1) * u - 0.11022e5 * pow(t, 0.4e1) * u * u - 0.20345e5 * pow(t, 0.5e1) * u * u - 0.183562e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.348778e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.178134e6 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.366230e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.295969e6 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.60437e5 * t * t * pow(u, 0.6e1) - 0.7888e4 * t * pow(u, 0.3e1) - 0.108976e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.170892e6 * t * t * pow(u, 0.4e1) - 0.103308e6 * t * pow(u, 0.5e1) - 0.42264e5 * t * pow(u, 0.4e1) - 0.273451e6 * t * t * pow(u, 0.5e1) - 0.80701e5 * t * pow(u, 0.6e1) - 0.38512e5 * t * t * pow(u, 0.3e1) - 0.189e3 * pow(t, 0.7e1) * u - 0.20761e5 * pow(t, 0.6e1) * u * u + 0.37236e5 * t * pow(u, 0.7e1) - 0.81e2 * pow(t, 0.8e1) * u - 0.10999e5 * pow(t, 0.7e1) * u * u - 0.11e2 * pow(t, 0.9e1) * u - 0.2353e4 * pow(t, 0.8e1) * u * u - 0.17834e5 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.26182e5 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.24683e5 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.99295e5 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.102136e6 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.45684e5 * t * t * pow(u, 0.8e1) + 0.7746e4 * t * pow(u, 0.9e1) - 0.90022e5 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.176978e6 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.89873e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.93605e5 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.132676e6 * t * t * pow(u, 0.7e1) + 0.52740e5 * t * pow(u, 0.8e1) - 0.191e3 * pow(t, 0.6e1) * u - 0.13844e5 * pow(u, 0.5e1) - 0.4224e4 * pow(u, 0.4e1) - 0.736e3 * pow(u, 0.3e1) - 0.19254e5 * pow(u, 0.6e1) - 0.2476e4 * pow(u, 0.7e1) + 0.13572e5 * pow(u, 0.8e1) + 0.5668e4 * pow(u, 0.9e1) + 0.276e3 * pow(u, 0.10e2)) * q3 * q3 + (0.48e2 * pow(t, 0.4e1) * u * u + 0.343e3 * pow(t, 0.5e1) * u * u + 0.12006e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.35514e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.23651e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.73804e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.95698e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.59238e5 * t * t * pow(u, 0.6e1) + 0.3240e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.8704e4 * t * t * pow(u, 0.4e1) + 0.7832e4 * t * pow(u, 0.5e1) + 0.880e3 * t * pow(u, 0.4e1) + 0.40800e5 * t * t * pow(u, 0.5e1) + 0.20647e5 * t * pow(u, 0.6e1) + 0.368e3 * t * t * pow(u, 0.3e1) + 0.197e3 * pow(t, 0.9e1) * u * u + 0.1130e4 * pow(t, 0.6e1) * pow(u, 0.5e1) - 0.18041e5 * pow(t, 0.5e1) * pow(u, 0.6e1) - 0.28838e5 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.19665e5 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.6018e4 * t * t * pow(u, 0.9e1) - 0.552e3 * t * pow(u, 0.10e2) + 0.938e3 * pow(t, 0.6e1) * u * u + 0.14979e5 * t * pow(u, 0.7e1) + 0.1236e4 * pow(t, 0.7e1) * u * u + 0.790e3 * pow(t, 0.8e1) * u * u + 0.13835e5 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.40748e5 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.42011e5 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.492e3 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.35567e5 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.28380e5 * t * t * pow(u, 0.8e1) - 0.8119e4 * t * pow(u, 0.9e1) + 0.2974e4 * pow(t, 0.8e1) * pow(u, 0.3e1) + 0.7309e4 * pow(t, 0.7e1) * pow(u, 0.4e1) + 0.25378e5 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.79553e5 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.102978e6 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.57930e5 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.3562e4 * t * t * pow(u, 0.7e1) - 0.9287e4 * t * pow(u, 0.8e1) + 0.512e3 * pow(u, 0.5e1) + 0.2320e4 * pow(u, 0.6e1) + 0.3698e4 * pow(u, 0.7e1) + 0.348e3 * pow(u, 0.8e1) - 0.2486e4 * pow(u, 0.9e1) - 0.506e3 * pow(u, 0.10e2)) * q3 + (-0.198e3 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.792e3 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.1188e4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.792e3 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.198e3 * t * t * pow(u, 0.7e1) - 0.396e3 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.1584e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.2376e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.1584e4 * t * t * pow(u, 0.6e1) - 0.396e3 * t * pow(u, 0.7e1) - 0.198e3 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.792e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.1188e4 * t * t * pow(u, 0.5e1) - 0.792e3 * t * pow(u, 0.6e1) - 0.198e3 * pow(u, 0.7e1)) * pow(q4, 0.3e1) + (-0.58e2 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.416e3 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.2244e4 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.3656e4 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.2534e4 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.648e3 * t * t * pow(u, 0.8e1) - 0.372e3 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.210e3 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.2880e4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.6180e4 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.4740e4 * t * t * pow(u, 0.7e1) + 0.1278e4 * t * pow(u, 0.8e1) - 0.570e3 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.1650e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.900e3 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.1500e4 * t * t * pow(u, 0.6e1) + 0.1950e4 * t * pow(u, 0.7e1) + 0.630e3 * pow(u, 0.8e1) - 0.256e3 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.1024e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.1536e4 * t * t * pow(u, 0.5e1) - 0.1024e4 * t * pow(u, 0.6e1) - 0.256e3 * pow(u, 0.7e1)) * q4 * q4 + (0.220e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.976e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.1067e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.4894e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.8762e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.7448e4 * t * t * pow(u, 0.6e1) + 0.1656e4 * t * t * pow(u, 0.5e1) + 0.1264e4 * t * pow(u, 0.6e1) - 0.250e3 * pow(t, 0.6e1) * pow(u, 0.5e1) - 0.3640e4 * pow(t, 0.5e1) * pow(u, 0.6e1) - 0.5330e4 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.3220e4 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.726e3 * t * t * pow(u, 0.9e1) + 0.2851e4 * t * pow(u, 0.7e1) + 0.1207e4 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.4697e4 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.5282e4 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.1702e4 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.7885e4 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.5779e4 * t * t * pow(u, 0.8e1) - 0.1388e4 * t * pow(u, 0.9e1) + 0.290e3 * pow(t, 0.8e1) * pow(u, 0.3e1) + 0.844e3 * pow(t, 0.7e1) * pow(u, 0.4e1) + 0.1764e4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.7771e4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.12628e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.8082e4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.128e3 * t * t * pow(u, 0.7e1) - 0.2261e4 * t * pow(u, 0.8e1) + 0.364e3 * pow(u, 0.7e1) + 0.338e3 * pow(u, 0.8e1) - 0.672e3 * pow(u, 0.9e1)) * q4 + (0.192e3 * t + 0.2080e4 * u) * pow(q3, 0.11e2) + (-0.1152e4 * t * t - 0.12480e5 * t * u - 0.7392e4 * u * u - 0.1152e4 * t - 0.11552e5 * u) * pow(q3, 0.10e2) - 0.118e3 * pow(u, 0.7e1) - 0.274e3 * pow(u, 0.8e1) - 0.124e3 * pow(u, 0.9e1) + 0.240e3 * pow(u, 0.10e2)) * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / t * pow(u, -0.3e1) * pow(-0.1e1 - t + q3, -0.3e1) * pow(q3 - u, -0.2e1));
}
#include <math.h>

double GstarVVCoeffsC1e0 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0.8e1 / 0.27e2 * (-0.160e3 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.712e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.1355e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.6423e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.14326e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.16262e5 * t * t * pow(u, 0.6e1) - 0.1752e4 * t * t * pow(u, 0.5e1) - 0.2008e4 * t * pow(u, 0.6e1) - 0.15552e5 * u * pow(q3, 0.8e1) * pow(q4, 0.3e1) + (0.2912e4 * t + 0.1568e4 * u) * pow(q3, 0.10e2) * q4 + (0.25056e5 * t - 0.13088e5 * u) * pow(q3, 0.9e1) * q4 * q4 + (-0.14560e5 * t * t - 0.42304e5 * t * u + 0.19808e5 * u * u - 0.14560e5 * t - 0.23392e5 * u) * pow(q3, 0.9e1) * q4 + (-0.100224e6 * t * t - 0.35648e5 * t * u + 0.78272e5 * u * u - 0.100224e6 * t + 0.49024e5 * u) * pow(q3, 0.8e1) * q4 * q4 + (0.30576e5 * pow(t, 0.3e1) + 0.145120e6 * t * t * u + 0.46320e5 * t * u * u - 0.137664e6 * pow(u, 0.3e1) + 0.58240e5 * t * t + 0.237984e6 * t * u + 0.8704e4 * u * u + 0.29120e5 * t + 0.84032e5 * u) * pow(q3, 0.8e1) * q4 + (0.62208e5 * t * u + 0.62208e5 * u * u + 0.62208e5 * u) * pow(q3, 0.7e1) * pow(q4, 0.3e1) + (0.162864e6 * pow(t, 0.3e1) + 0.241872e6 * t * t * u - 0.170480e6 * t * u * u - 0.204304e6 * pow(u, 0.3e1) + 0.300672e6 * t * t + 0.158144e6 * t * u - 0.260640e6 * u * u + 0.150336e6 * t - 0.65216e5 * u) * pow(q3, 0.7e1) * q4 * q4 + (-0.34944e5 * pow(t, 0.4e1) - 0.204576e6 * pow(t, 0.3e1) * u - 0.324880e6 * t * t * u * u + 0.348896e6 * t * pow(u, 0.3e1) + 0.337104e6 * pow(u, 0.4e1) - 0.93184e5 * pow(t, 0.3e1) - 0.554272e6 * t * t * u - 0.607488e6 * t * u * u + 0.308544e6 * pow(u, 0.3e1) - 0.87360e5 * t * t - 0.491264e6 * t * u - 0.234816e6 * u * u - 0.29120e5 * t - 0.133568e6 * u) * pow(q3, 0.7e1) * q4 + (-0.101088e6 * t * t * u - 0.233280e6 * t * u * u - 0.101088e6 * pow(u, 0.3e1) - 0.186624e6 * t * u - 0.217728e6 * u * u - 0.93312e5 * u) * pow(q3, 0.6e1) * pow(q4, 0.3e1) + (-0.137808e6 * pow(t, 0.4e1) - 0.412320e6 * pow(t, 0.3e1) * u + 0.20352e5 * t * t * u * u + 0.640480e6 * t * pow(u, 0.3e1) + 0.287120e6 * pow(u, 0.4e1) - 0.338256e6 * pow(t, 0.3e1) - 0.675440e6 * t * t * u + 0.337456e6 * t * u * u + 0.622384e6 * pow(u, 0.3e1) - 0.300672e6 * t * t - 0.260544e6 * t * u + 0.290080e6 * u * u - 0.100224e6 * t + 0.32384e5 * u) * pow(q3, 0.6e1) * q4 * q4 + (0.23478e5 * pow(t, 0.5e1) + 0.137298e6 * pow(t, 0.4e1) * u + 0.538572e6 * pow(t, 0.3e1) * u * u - 0.193788e6 * t * t * pow(u, 0.3e1) - 0.1118114e7 * t * pow(u, 0.4e1) - 0.428598e6 * pow(u, 0.5e1) + 0.75712e5 * pow(t, 0.4e1) + 0.519440e6 * pow(t, 0.3e1) * u + 0.1693776e7 * t * t * u * u - 0.47472e5 * t * pow(u, 0.3e1) - 0.871568e6 * pow(u, 0.4e1) + 0.96096e5 * pow(t, 0.3e1) + 0.738720e6 * t * t * u + 0.1625648e7 * t * u * u + 0.18160e5 * pow(u, 0.3e1) + 0.58240e5 * t * t + 0.468928e6 * t * u + 0.472192e6 * u * u + 0.14560e5 * t + 0.106912e6 * u) * pow(q3, 0.6e1) * q4 + (0.85536e5 * pow(t, 0.3e1) * u + 0.349920e6 * t * t * u * u + 0.349920e6 * t * pow(u, 0.3e1) + 0.85536e5 * pow(u, 0.4e1) + 0.209952e6 * t * t * u + 0.606528e6 * t * u * u + 0.303264e6 * pow(u, 0.3e1) + 0.186624e6 * t * u + 0.279936e6 * u * u + 0.62208e5 * u) * pow(q3, 0.5e1) * pow(q4, 0.3e1) + (0.64206e5 * pow(t, 0.5e1) + 0.331446e6 * pow(t, 0.4e1) * u + 0.218796e6 * pow(t, 0.3e1) * u * u - 0.753588e6 * t * t * pow(u, 0.3e1) - 0.928634e6 * t * pow(u, 0.4e1) - 0.230530e6 * pow(u, 0.5e1) + 0.175392e6 * pow(t, 0.4e1) + 0.763904e6 * pow(t, 0.3e1) * u + 0.231088e6 * t * t * u * u - 0.1353440e7 * t * pow(u, 0.3e1) - 0.788304e6 * pow(u, 0.4e1) + 0.187920e6 * pow(t, 0.3e1) + 0.626928e6 * t * t * u - 0.55152e5 * t * u * u - 0.633680e6 * pow(u, 0.3e1) + 0.100224e6 * t * t + 0.189248e6 * t * u - 0.89120e5 * u * u + 0.25056e5 * t + 0.224e3 * u) * pow(q3, 0.5e1) * q4 * q4 + (-0.391840e6 * u * u - 0.2912e4 * t - 0.41696e5 * u - 0.398176e6 * t * t * u - 0.1743600e7 * t * u * u - 0.204480e6 * t * u - 0.400016e6 * pow(t, 0.3e1) * u - 0.2749344e7 * t * t * u * u - 0.199602e6 * pow(t, 0.4e1) * u - 0.1829932e7 * pow(t, 0.3e1) * u * u - 0.35796e5 * pow(t, 0.5e1) * u - 0.414642e6 * pow(t, 0.4e1) * u * u - 0.1688400e7 * t * pow(u, 0.3e1) - 0.213048e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.1425994e7 * t * t * pow(u, 0.4e1) + 0.1443948e7 * t * pow(u, 0.5e1) + 0.1766750e7 * t * pow(u, 0.4e1) - 0.1418212e7 * t * t * pow(u, 0.3e1) + 0.1074630e7 * pow(u, 0.5e1) + 0.569120e6 * pow(u, 0.4e1) - 0.544784e6 * pow(u, 0.3e1) + 0.312522e6 * pow(u, 0.6e1) - 0.34944e5 * pow(t, 0.3e1) - 0.14560e5 * t * t - 0.46592e5 * pow(t, 0.4e1) - 0.32578e5 * pow(t, 0.5e1) - 0.9282e4 * pow(t, 0.6e1)) * pow(q3, 0.5e1) * q4 + (-0.39852e5 * pow(t, 0.4e1) * u - 0.268272e6 * pow(t, 0.3e1) * u * u - 0.472392e6 * t * t * pow(u, 0.3e1) - 0.268272e6 * t * pow(u, 0.4e1) - 0.39852e5 * pow(u, 0.5e1) - 0.108864e6 * pow(t, 0.3e1) * u - 0.622080e6 * t * t * u * u - 0.762048e6 * t * pow(u, 0.3e1) - 0.217728e6 * pow(u, 0.4e1) - 0.116640e6 * t * t * u - 0.513216e6 * t * u * u - 0.318816e6 * pow(u, 0.3e1) - 0.62208e5 * t * u - 0.155520e6 * u * u - 0.15552e5 * u) * pow(q3, 0.4e1) * pow(q4, 0.3e1) + (-0.40800e5 * u * u - 0.3328e4 * u - 0.195024e6 * t * t * u - 0.220144e6 * t * u * u - 0.51200e5 * t * u - 0.375520e6 * pow(t, 0.3e1) * u - 0.493728e6 * t * t * u * u - 0.365228e6 * pow(t, 0.4e1) * u - 0.531384e6 * pow(t, 0.3e1) * u * u - 0.139020e6 * pow(t, 0.5e1) * u - 0.222384e6 * pow(t, 0.4e1) * u * u + 0.706848e6 * t * pow(u, 0.3e1) + 0.412776e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.1154676e7 * t * t * pow(u, 0.4e1) + 0.703780e6 * t * pow(u, 0.5e1) + 0.1776836e7 * t * pow(u, 0.4e1) + 0.914104e6 * t * t * pow(u, 0.3e1) + 0.558868e6 * pow(u, 0.5e1) + 0.707856e6 * pow(u, 0.4e1) + 0.198544e6 * pow(u, 0.3e1) + 0.105704e6 * pow(u, 0.6e1) - 0.12528e5 * pow(t, 0.3e1) - 0.37584e5 * pow(t, 0.4e1) - 0.40716e5 * pow(t, 0.5e1) - 0.15660e5 * pow(t, 0.6e1)) * pow(q3, 0.4e1) * q4 * q4 + (0.144000e6 * u * u + 0.6144e4 * u + 0.71680e5 * t * t * u + 0.808608e6 * t * u * u + 0.31136e5 * t * u + 0.97648e5 * pow(t, 0.3e1) * u + 0.1774288e7 * t * t * u * u + 0.68078e5 * pow(t, 0.4e1) * u + 0.1914148e7 * pow(t, 0.3e1) * u * u + 0.12394e5 * pow(t, 0.5e1) * u + 0.973300e6 * pow(t, 0.4e1) * u * u + 0.166044e6 * pow(t, 0.5e1) * u * u + 0.347971e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.862334e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.2249248e7 * t * pow(u, 0.3e1) + 0.2150588e7 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.782212e6 * t * t * pow(u, 0.4e1) - 0.2431366e7 * t * pow(u, 0.5e1) + 0.159706e6 * t * pow(u, 0.4e1) - 0.1892461e7 * t * t * pow(u, 0.5e1) - 0.987408e6 * t * pow(u, 0.6e1) + 0.3521028e7 * t * t * pow(u, 0.3e1) - 0.5507e4 * pow(t, 0.6e1) * u - 0.773234e6 * pow(u, 0.5e1) + 0.188480e6 * pow(u, 0.4e1) + 0.501776e6 * pow(u, 0.3e1) - 0.722228e6 * pow(u, 0.6e1) + 0.1456e4 * pow(t, 0.3e1) + 0.5824e4 * pow(t, 0.4e1) - 0.131891e6 * pow(u, 0.7e1) + 0.9282e4 * pow(t, 0.5e1) + 0.6916e4 * pow(t, 0.6e1) + 0.2002e4 * pow(t, 0.7e1)) * pow(q3, 0.4e1) * q4 + (0.9720e4 * pow(t, 0.5e1) * u + 0.110808e6 * pow(t, 0.4e1) * u * u + 0.314928e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.314928e6 * t * t * pow(u, 0.4e1) + 0.110808e6 * t * pow(u, 0.5e1) + 0.9720e4 * pow(u, 0.6e1) + 0.25272e5 * pow(t, 0.4e1) * u + 0.287712e6 * pow(t, 0.3e1) * u * u + 0.680400e6 * t * t * pow(u, 0.3e1) + 0.474336e6 * t * pow(u, 0.4e1) + 0.87480e5 * pow(u, 0.5e1) + 0.23328e5 * pow(t, 0.3e1) * u + 0.287712e6 * t * t * u * u + 0.505440e6 * t * pow(u, 0.3e1) + 0.178848e6 * pow(u, 0.4e1) + 0.7776e4 * t * t * u + 0.139968e6 * t * u * u + 0.132192e6 * pow(u, 0.3e1) + 0.31104e5 * u * u) * pow(q3, 0.3e1) * pow(q4, 0.3e1) + (0.22208e5 * u * u + 0.1664e4 * t * t * u + 0.108320e6 * t * u * u + 0.23936e5 * pow(t, 0.3e1) * u + 0.253392e6 * t * t * u * u + 0.67686e5 * pow(t, 0.4e1) * u + 0.349628e6 * pow(t, 0.3e1) * u * u + 0.74540e5 * pow(t, 0.5e1) * u + 0.273314e6 * pow(t, 0.4e1) * u * u + 0.90750e5 * pow(t, 0.5e1) * u * u - 0.104514e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.701734e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.107168e6 * t * pow(u, 0.3e1) - 0.143824e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1357368e7 * t * t * pow(u, 0.4e1) - 0.1149996e7 * t * pow(u, 0.5e1) - 0.882810e6 * t * pow(u, 0.4e1) - 0.799326e6 * t * t * pow(u, 0.5e1) - 0.291062e6 * t * pow(u, 0.6e1) + 0.26028e5 * t * t * pow(u, 0.3e1) + 0.29126e5 * pow(t, 0.6e1) * u - 0.410226e6 * pow(u, 0.5e1) - 0.201872e6 * pow(u, 0.4e1) + 0.35936e5 * pow(u, 0.3e1) - 0.227958e6 * pow(u, 0.6e1) - 0.25766e5 * pow(u, 0.7e1) + 0.1566e4 * pow(t, 0.5e1) + 0.3132e4 * pow(t, 0.6e1) + 0.1566e4 * pow(t, 0.7e1)) * pow(q3, 0.3e1) * q4 * q4 + (-0.18048e5 * u * u - 0.3072e4 * t * t * u - 0.129488e6 * t * u * u - 0.12496e5 * pow(t, 0.3e1) * u - 0.402864e6 * t * t * u * u - 0.15566e5 * pow(t, 0.4e1) * u - 0.692356e6 * pow(t, 0.3e1) * u * u - 0.2544e4 * pow(t, 0.5e1) * u - 0.645330e6 * pow(t, 0.4e1) * u * u - 0.280908e6 * pow(t, 0.5e1) * u * u - 0.1388570e7 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.537914e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.212066e6 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.219001e6 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.1221982e7 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.1174027e7 * t * t * pow(u, 0.6e1) - 0.981616e6 * t * pow(u, 0.3e1) - 0.2717440e7 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1680710e7 * t * t * pow(u, 0.4e1) + 0.700592e6 * t * pow(u, 0.5e1) - 0.1245750e7 * t * pow(u, 0.4e1) + 0.1798340e7 * t * t * pow(u, 0.5e1) + 0.1519048e7 * t * pow(u, 0.6e1) - 0.2373148e7 * t * t * pow(u, 0.3e1) + 0.4954e4 * pow(t, 0.7e1) * u - 0.34943e5 * pow(t, 0.6e1) * u * u + 0.373034e6 * t * pow(u, 0.7e1) + 0.8552e4 * pow(t, 0.6e1) * u + 0.41690e5 * pow(u, 0.5e1) - 0.288048e6 * pow(u, 0.4e1) - 0.158576e6 * pow(u, 0.3e1) + 0.463674e6 * pow(u, 0.6e1) + 0.280110e6 * pow(u, 0.7e1) - 0.182e3 * pow(t, 0.5e1) - 0.546e3 * pow(t, 0.6e1) - 0.546e3 * pow(t, 0.7e1) - 0.182e3 * pow(t, 0.8e1) + 0.30001e5 * pow(u, 0.8e1)) * pow(q3, 0.3e1) * q4 + (-0.972e3 * pow(t, 0.6e1) * u - 0.23328e5 * pow(t, 0.5e1) * u * u - 0.107892e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.171072e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.107892e6 * t * t * pow(u, 0.5e1) - 0.23328e5 * t * pow(u, 0.6e1) - 0.972e3 * pow(u, 0.7e1) - 0.1944e4 * pow(t, 0.5e1) * u - 0.58320e5 * pow(t, 0.4e1) * u * u - 0.260496e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.342144e6 * t * t * pow(u, 0.4e1) - 0.157464e6 * t * pow(u, 0.5e1) - 0.19440e5 * pow(u, 0.6e1) - 0.972e3 * pow(t, 0.4e1) * u - 0.50544e5 * pow(t, 0.3e1) * u * u - 0.231336e6 * t * t * pow(u, 0.3e1) - 0.221616e6 * t * pow(u, 0.4e1) - 0.55404e5 * pow(u, 0.5e1) - 0.15552e5 * t * t * u * u - 0.93312e5 * t * pow(u, 0.3e1) - 0.46656e5 * pow(u, 0.4e1) - 0.15552e5 * pow(u, 0.3e1)) * q3 * q3 * pow(q4, 0.3e1) + (-0.11104e5 * t * t * u * u - 0.208e3 * pow(t, 0.4e1) * u - 0.42224e5 * pow(t, 0.3e1) * u * u - 0.2784e4 * pow(t, 0.5e1) * u - 0.68046e5 * pow(t, 0.4e1) * u * u - 0.53242e5 * pow(t, 0.5e1) * u * u - 0.58084e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.407076e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.8268e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.220136e6 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.418552e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.279732e6 * t * t * pow(u, 0.6e1) - 0.101056e6 * t * pow(u, 0.3e1) - 0.190744e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.215244e6 * t * t * pow(u, 0.4e1) + 0.429384e6 * t * pow(u, 0.5e1) + 0.18320e5 * t * pow(u, 0.4e1) + 0.762528e6 * t * t * pow(u, 0.5e1) + 0.397638e6 * t * pow(u, 0.6e1) - 0.207216e6 * t * t * pow(u, 0.3e1) - 0.2368e4 * pow(t, 0.7e1) * u - 0.16316e5 * pow(t, 0.6e1) * u * u + 0.61692e5 * t * pow(u, 0.7e1) - 0.4944e4 * pow(t, 0.6e1) * u + 0.72448e5 * pow(u, 0.5e1) - 0.4800e4 * pow(u, 0.4e1) - 0.18880e5 * pow(u, 0.3e1) + 0.133458e6 * pow(u, 0.6e1) + 0.51972e5 * pow(u, 0.7e1) + 0.2592e4 * pow(u, 0.8e1)) * q3 * q3 * q4 * q4 + (0.9024e4 * t * t * u * u + 0.384e3 * pow(t, 0.4e1) * u + 0.53440e5 * pow(t, 0.3e1) * u * u + 0.1178e4 * pow(t, 0.5e1) * u + 0.114792e6 * pow(t, 0.4e1) * u * u + 0.112531e6 * pow(t, 0.5e1) * u * u + 0.971650e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1387886e7 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.471998e6 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.596243e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.414684e6 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.1029961e7 * t * t * pow(u, 0.6e1) + 0.119344e6 * t * pow(u, 0.3e1) + 0.933716e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.1205848e7 * t * t * pow(u, 0.4e1) + 0.379666e6 * t * pow(u, 0.5e1) + 0.457408e6 * t * pow(u, 0.4e1) + 0.253307e6 * t * t * pow(u, 0.5e1) - 0.433681e6 * t * pow(u, 0.6e1) + 0.467256e6 * t * t * pow(u, 0.3e1) - 0.1104e4 * pow(t, 0.7e1) * u + 0.46193e5 * pow(t, 0.6e1) * u * u - 0.502834e6 * t * pow(u, 0.7e1) - 0.757e3 * pow(t, 0.8e1) * u + 0.4038e4 * pow(t, 0.7e1) * u * u + 0.72879e5 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.16412e5 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.401025e6 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.651786e6 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.372567e6 * t * t * pow(u, 0.7e1) - 0.72984e5 * t * pow(u, 0.8e1) + 0.447e3 * pow(t, 0.6e1) * u + 0.97288e5 * pow(u, 0.5e1) + 0.64912e5 * pow(u, 0.4e1) + 0.12544e5 * pow(u, 0.3e1) - 0.31104e5 * pow(u, 0.6e1) - 0.152332e6 * pow(u, 0.7e1) - 0.60731e5 * pow(u, 0.8e1) - 0.2850e4 * pow(u, 0.9e1)) * q3 * q3 * q4 + (0.1944e4 * pow(t, 0.6e1) * u * u + 0.17496e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.42768e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.42768e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.17496e5 * t * t * pow(u, 0.6e1) + 0.1944e4 * t * pow(u, 0.7e1) + 0.3888e4 * pow(t, 0.5e1) * u * u + 0.40824e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.93312e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.81648e5 * t * t * pow(u, 0.5e1) + 0.27216e5 * t * pow(u, 0.6e1) + 0.1944e4 * pow(u, 0.7e1) + 0.1944e4 * pow(t, 0.4e1) * u * u + 0.31104e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.66096e5 * t * t * pow(u, 0.4e1) + 0.46656e5 * t * pow(u, 0.5e1) + 0.9720e4 * pow(u, 0.6e1) + 0.7776e4 * t * t * pow(u, 0.3e1) + 0.15552e5 * t * pow(u, 0.4e1) + 0.7776e4 * pow(u, 0.5e1)) * q3 * pow(q4, 0.3e1) + (0.1388e4 * pow(t, 0.4e1) * u * u + 0.3786e4 * pow(t, 0.5e1) * u * u + 0.45462e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.33108e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.20456e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.37202e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.183208e6 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.195372e6 * t * t * pow(u, 0.6e1) + 0.35536e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.55704e5 * t * t * pow(u, 0.4e1) + 0.10352e5 * t * pow(u, 0.5e1) + 0.18880e5 * t * pow(u, 0.4e1) - 0.80052e5 * t * t * pow(u, 0.5e1) - 0.96510e5 * t * pow(u, 0.6e1) + 0.9440e4 * t * t * pow(u, 0.3e1) + 0.3408e4 * pow(t, 0.6e1) * u * u - 0.71760e5 * t * pow(u, 0.7e1) + 0.1010e4 * pow(t, 0.7e1) * u * u + 0.1090e4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.33324e5 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.101596e6 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.109094e6 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.46086e5 * t * t * pow(u, 0.7e1) - 0.5184e4 * t * pow(u, 0.8e1) + 0.9440e4 * pow(u, 0.5e1) - 0.11204e5 * pow(u, 0.6e1) - 0.25026e5 * pow(u, 0.7e1) - 0.5346e4 * pow(u, 0.8e1)) * q3 * q4 * q4 + (-0.1128e4 * pow(t, 0.4e1) * u * u - 0.5267e4 * pow(t, 0.5e1) * u * u - 0.127755e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.338046e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.154402e6 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.399925e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.320924e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.11659e5 * t * t * pow(u, 0.6e1) - 0.47400e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.123816e6 * t * t * pow(u, 0.4e1) - 0.107544e6 * t * pow(u, 0.5e1) - 0.15520e5 * t * pow(u, 0.4e1) - 0.310734e6 * t * t * pow(u, 0.5e1) - 0.86255e5 * t * pow(u, 0.6e1) - 0.6272e4 * t * t * pow(u, 0.3e1) - 0.7467e4 * pow(t, 0.6e1) * u * u + 0.106782e6 * t * pow(u, 0.7e1) - 0.3645e4 * pow(t, 0.7e1) * u * u - 0.317e3 * pow(t, 0.8e1) * u * u - 0.14436e5 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.21505e5 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.57796e5 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.168513e6 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.153596e6 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.55965e5 * t * t * pow(u, 0.8e1) + 0.5700e4 * t * pow(u, 0.9e1) - 0.82211e5 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.191569e6 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.48423e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.243201e6 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.258839e6 * t * t * pow(u, 0.7e1) + 0.86109e5 * t * pow(u, 0.8e1) - 0.10880e5 * pow(u, 0.5e1) - 0.25104e5 * pow(u, 0.6e1) + 0.4025e4 * pow(u, 0.7e1) + 0.28821e5 * pow(u, 0.8e1) + 0.5891e4 * pow(u, 0.9e1)) * q3 * q4 - 0.30991e5 * pow(t, 0.6e1) * pow(u, 0.5e1) - 0.18533e5 * pow(t, 0.5e1) * pow(u, 0.6e1) + 0.9451e4 * pow(t, 0.4e1) * pow(u, 0.7e1) + 0.21053e5 * pow(t, 0.3e1) * pow(u, 0.8e1) + 0.12099e5 * t * t * pow(u, 0.9e1) + 0.2489e4 * t * pow(u, 0.10e2) - 0.8463e4 * t * pow(u, 0.7e1) - 0.6133e4 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.29631e5 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.59695e5 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.60831e5 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.28011e5 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.251e3 * t * t * pow(u, 0.8e1) + 0.4831e4 * t * pow(u, 0.9e1) - 0.1116e4 * pow(t, 0.9e1) * pow(u, 0.3e1) - 0.4238e4 * pow(t, 0.8e1) * pow(u, 0.4e1) - 0.4356e4 * pow(t, 0.7e1) * pow(u, 0.5e1) + 0.3866e4 * pow(t, 0.6e1) * pow(u, 0.6e1) + 0.13324e5 * pow(t, 0.5e1) * pow(u, 0.7e1) + 0.13350e5 * pow(t, 0.4e1) * pow(u, 0.8e1) + 0.6356e4 * pow(t, 0.3e1) * pow(u, 0.9e1) + 0.1230e4 * t * t * pow(u, 0.10e2) - 0.4223e4 * pow(t, 0.8e1) * pow(u, 0.3e1) - 0.18673e5 * pow(t, 0.7e1) * pow(u, 0.4e1) - 0.4221e4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.20907e5 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.45634e5 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.52630e5 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.31569e5 * t * t * pow(u, 0.7e1) - 0.8575e4 * t * pow(u, 0.8e1) + (0.61632e5 * pow(t, 0.5e1) + 0.341136e6 * pow(t, 0.4e1) * u + 0.817840e6 * pow(t, 0.3e1) * u * u + 0.365696e6 * t * t * pow(u, 0.3e1) - 0.424240e6 * t * pow(u, 0.4e1) - 0.240720e6 * pow(u, 0.5e1) + 0.215040e6 * pow(t, 0.4e1) + 0.1103120e7 * pow(t, 0.3e1) * u + 0.2254384e7 * t * t * u * u + 0.999984e6 * t * pow(u, 0.3e1) - 0.196464e6 * pow(u, 0.4e1) + 0.291840e6 * pow(t, 0.3e1) + 0.1328192e7 * t * t * u + 0.1980976e7 * t * u * u + 0.507120e6 * pow(u, 0.3e1) + 0.184320e6 * t * t + 0.696000e6 * t * u + 0.547584e6 * u * u + 0.46080e5 * t + 0.128000e6 * u) * pow(q3, 0.7e1) + (-0.429376e6 * u * u - 0.18432e5 * t - 0.62848e5 * u - 0.1110688e7 * t * t * u - 0.2154240e7 * t * u * u - 0.432640e6 * t * u - 0.1405408e7 * pow(t, 0.3e1) * u - 0.3838432e7 * t * t * u * u - 0.887696e6 * pow(t, 0.4e1) * u - 0.2936696e7 * pow(t, 0.3e1) * u * u - 0.223620e6 * pow(t, 0.5e1) * u - 0.809040e6 * pow(t, 0.4e1) * u * u - 0.2718272e7 * t * pow(u, 0.3e1) - 0.711096e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.622464e6 * t * t * pow(u, 0.4e1) + 0.950492e6 * t * pow(u, 0.5e1) + 0.140136e6 * t * pow(u, 0.4e1) - 0.2693056e7 * t * t * pow(u, 0.3e1) + 0.558816e6 * pow(u, 0.5e1) - 0.186688e6 * pow(u, 0.4e1) - 0.796832e6 * pow(u, 0.3e1) + 0.260016e6 * pow(u, 0.6e1) - 0.199680e6 * pow(t, 0.3e1) - 0.92160e5 * t * t - 0.230400e6 * pow(t, 0.4e1) - 0.139008e6 * pow(t, 0.5e1) - 0.34560e5 * pow(t, 0.6e1)) * pow(q3, 0.6e1) + (0.197728e6 * u * u + 0.3072e4 * t + 0.18240e5 * u + 0.478832e6 * t * t * u + 0.1287744e7 * t * u * u + 0.148960e6 * t * u + 0.826464e6 * pow(t, 0.3e1) * u + 0.3207392e7 * t * t * u * u + 0.811180e6 * pow(t, 0.4e1) * u + 0.3912072e7 * pow(t, 0.3e1) * u * u + 0.424574e6 * pow(t, 0.5e1) * u + 0.2326566e7 * pow(t, 0.4e1) * u * u + 0.529518e6 * pow(t, 0.5e1) * u * u + 0.822981e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.376028e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.3136880e7 * t * pow(u, 0.3e1) + 0.3759532e7 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.944452e6 * t * t * pow(u, 0.4e1) - 0.1389402e7 * t * pow(u, 0.5e1) + 0.1810328e7 * t * pow(u, 0.4e1) - 0.1527131e7 * t * t * pow(u, 0.5e1) - 0.962866e6 * t * pow(u, 0.6e1) + 0.5406872e7 * t * t * pow(u, 0.3e1) + 0.91355e5 * pow(t, 0.6e1) * u - 0.233316e6 * pow(u, 0.5e1) + 0.648048e6 * pow(u, 0.4e1) + 0.621136e6 * pow(u, 0.3e1) - 0.602298e6 * pow(u, 0.6e1) + 0.53760e5 * pow(t, 0.3e1) + 0.18432e5 * t * t + 0.92160e5 * pow(t, 0.4e1) - 0.166693e6 * pow(u, 0.7e1) + 0.93312e5 * pow(t, 0.5e1) + 0.51456e5 * pow(t, 0.6e1) + 0.11904e5 * pow(t, 0.7e1)) * pow(q3, 0.5e1) - 0.808e3 * pow(u, 0.7e1) - 0.1459e4 * pow(u, 0.8e1) - 0.688e3 * pow(u, 0.9e1) + 0.1203e4 * pow(u, 0.10e2) + (-0.50784e5 * u * u - 0.2496e4 * u - 0.88784e5 * t * t * u - 0.405856e6 * t * u * u - 0.22752e5 * t * u - 0.205584e6 * pow(t, 0.3e1) * u - 0.1329760e7 * t * t * u * u - 0.294852e6 * pow(t, 0.4e1) * u - 0.2331592e7 * pow(t, 0.3e1) * u * u - 0.252326e6 * pow(t, 0.5e1) * u - 0.2283610e7 * pow(t, 0.4e1) * u * u - 0.1162176e7 * pow(t, 0.5e1) * u * u - 0.3121981e7 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.2102816e7 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.620217e6 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.57600e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.1259893e7 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.1422248e7 * t * t * pow(u, 0.6e1) - 0.1721952e7 * t * pow(u, 0.3e1) - 0.5480644e7 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.4003932e7 * t * t * pow(u, 0.4e1) - 0.366358e6 * t * pow(u, 0.5e1) - 0.2554744e7 * t * pow(u, 0.4e1) + 0.1014659e7 * t * t * pow(u, 0.5e1) + 0.1504944e7 * t * pow(u, 0.6e1) - 0.4466616e7 * t * t * pow(u, 0.3e1) - 0.21849e5 * pow(t, 0.7e1) * u - 0.233904e6 * pow(t, 0.6e1) * u * u + 0.556445e6 * t * pow(u, 0.7e1) - 0.116379e6 * pow(t, 0.6e1) * u - 0.302308e6 * pow(u, 0.5e1) - 0.527376e6 * pow(u, 0.4e1) - 0.244560e6 * pow(u, 0.3e1) + 0.345110e6 * pow(u, 0.6e1) - 0.1536e4 * pow(t, 0.3e1) - 0.7680e4 * pow(t, 0.4e1) + 0.364933e6 * pow(u, 0.7e1) - 0.16128e5 * pow(t, 0.5e1) - 0.17664e5 * pow(t, 0.6e1) - 0.9984e4 * pow(t, 0.7e1) - 0.2304e4 * pow(t, 0.8e1) + 0.64008e5 * pow(u, 0.8e1)) * pow(q3, 0.4e1) + (0.5952e4 * u * u + 0.1248e4 * t * t * u + 0.54256e5 * t * u * u + 0.10128e5 * pow(t, 0.3e1) * u + 0.227440e6 * t * t * u * u + 0.30388e5 * pow(t, 0.4e1) * u + 0.561256e6 * pow(t, 0.3e1) * u * u + 0.46658e5 * pow(t, 0.5e1) * u + 0.845846e6 * pow(t, 0.4e1) * u * u + 0.753687e6 * pow(t, 0.5e1) * u * u + 0.3097236e7 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.3872390e7 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.1594586e7 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.1940942e7 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.119384e6 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.1290978e7 * t * t * pow(u, 0.6e1) + 0.425504e6 * t * pow(u, 0.3e1) + 0.3007372e7 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.3233740e7 * t * t * pow(u, 0.4e1) + 0.1252194e7 * t * pow(u, 0.5e1) + 0.1218200e7 * t * pow(u, 0.4e1) + 0.1568841e7 * t * t * pow(u, 0.5e1) - 0.250381e6 * t * pow(u, 0.6e1) + 0.1576424e7 * t * t * pow(u, 0.3e1) + 0.16492e5 * pow(t, 0.7e1) * u + 0.358506e6 * pow(t, 0.6e1) * u * u - 0.814702e6 * t * pow(u, 0.7e1) + 0.2609e4 * pow(t, 0.8e1) * u + 0.68545e5 * pow(t, 0.7e1) * u * u + 0.307090e6 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.234629e6 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.531632e6 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.1063109e7 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.710962e6 * t * t * pow(u, 0.7e1) - 0.186753e6 * t * pow(u, 0.8e1) + 0.39033e5 * pow(t, 0.6e1) * u + 0.279460e6 * pow(u, 0.5e1) + 0.167488e6 * pow(u, 0.4e1) + 0.43728e5 * pow(u, 0.3e1) + 0.76942e5 * pow(u, 0.6e1) - 0.201478e6 * pow(u, 0.7e1) + 0.192e3 * pow(t, 0.5e1) + 0.768e3 * pow(t, 0.6e1) + 0.1152e4 * pow(t, 0.7e1) + 0.768e3 * pow(t, 0.8e1) - 0.131462e6 * pow(u, 0.8e1) + 0.192e3 * pow(t, 0.9e1) - 0.13601e5 * pow(u, 0.9e1)) * pow(q3, 0.3e1) + (-0.2976e4 * t * t * u * u - 0.156e3 * pow(t, 0.4e1) * u - 0.22880e5 * pow(t, 0.3e1) * u * u - 0.1110e4 * pow(t, 0.5e1) * u - 0.74310e5 * pow(t, 0.4e1) * u * u - 0.129014e6 * pow(t, 0.5e1) * u * u - 0.965245e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.1727764e7 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.944997e6 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.1854140e7 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.1461025e7 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.296204e6 * t * t * pow(u, 0.6e1) - 0.35632e5 * t * pow(u, 0.3e1) - 0.561844e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.824004e6 * t * t * pow(u, 0.4e1) - 0.488886e6 * t * pow(u, 0.5e1) - 0.193680e6 * t * pow(u, 0.4e1) - 0.1316827e7 * t * t * pow(u, 0.5e1) - 0.385078e6 * t * pow(u, 0.6e1) - 0.190600e6 * t * t * pow(u, 0.3e1) - 0.2367e4 * pow(t, 0.7e1) * u - 0.123988e6 * pow(t, 0.6e1) * u * u + 0.179157e6 * t * pow(u, 0.7e1) - 0.927e3 * pow(t, 0.8e1) * u - 0.61630e5 * pow(t, 0.7e1) * u * u - 0.95e2 * pow(t, 0.9e1) * u - 0.12250e5 * pow(t, 0.8e1) * u * u - 0.94913e5 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.147688e6 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.79613e5 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.414724e6 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.432685e6 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.194832e6 * t * t * pow(u, 0.8e1) + 0.33558e5 * t * pow(u, 0.9e1) - 0.478981e6 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.923126e6 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.497549e6 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.393038e6 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.604093e6 * t * t * pow(u, 0.7e1) + 0.245286e6 * t * pow(u, 0.8e1) - 0.2489e4 * pow(t, 0.6e1) * u - 0.64652e5 * pow(u, 0.5e1) - 0.17040e5 * pow(u, 0.4e1) - 0.2560e4 * pow(u, 0.3e1) - 0.92406e5 * pow(u, 0.6e1) - 0.13327e5 * pow(u, 0.7e1) + 0.64908e5 * pow(u, 0.8e1) + 0.26932e5 * pow(u, 0.9e1) + 0.1230e4 * pow(u, 0.10e2)) * q3 * q3 + (0.372e3 * pow(t, 0.4e1) * u * u + 0.2401e4 * pow(t, 0.5e1) * u * u + 0.56961e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.169650e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.119495e6 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.366805e6 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.478870e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.300888e6 * t * t * pow(u, 0.6e1) + 0.13752e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.39760e5 * t * t * pow(u, 0.4e1) + 0.38120e5 * t * pow(u, 0.5e1) + 0.4000e4 * t * pow(u, 0.4e1) + 0.201378e6 * t * t * pow(u, 0.5e1) + 0.105901e6 * t * pow(u, 0.6e1) + 0.1280e4 * t * t * pow(u, 0.3e1) + 0.1019e4 * pow(t, 0.9e1) * u * u + 0.13841e5 * pow(t, 0.6e1) * pow(u, 0.5e1) - 0.74879e5 * pow(t, 0.5e1) * pow(u, 0.6e1) - 0.124799e6 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.85437e5 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.26313e5 * t * t * pow(u, 0.9e1) - 0.2460e4 * t * pow(u, 0.10e2) + 0.5990e4 * pow(t, 0.6e1) * u * u + 0.77475e5 * t * pow(u, 0.7e1) + 0.7284e4 * pow(t, 0.7e1) * u * u + 0.4342e4 * pow(t, 0.8e1) * u * u + 0.74075e5 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.215549e6 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.225083e6 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.13827e5 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.163775e6 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.134877e6 * t * t * pow(u, 0.8e1) - 0.39031e5 * t * pow(u, 0.9e1) + 0.16183e5 * pow(t, 0.8e1) * pow(u, 0.3e1) + 0.40669e5 * pow(t, 0.7e1) * pow(u, 0.4e1) + 0.132898e6 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.407795e6 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.524205e6 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.295746e6 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.19876e5 * t * t * pow(u, 0.7e1) - 0.45929e5 * t * pow(u, 0.8e1) + 0.2720e4 * pow(u, 0.5e1) + 0.11740e5 * pow(u, 0.6e1) + 0.19613e5 * pow(u, 0.7e1) + 0.2157e4 * pow(u, 0.8e1) - 0.12083e5 * pow(u, 0.9e1) - 0.2489e4 * pow(u, 0.10e2)) * q3 + (-0.972e3 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.3888e4 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.5832e4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.3888e4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.972e3 * t * t * pow(u, 0.7e1) - 0.1944e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.7776e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.11664e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.7776e4 * t * t * pow(u, 0.6e1) - 0.1944e4 * t * pow(u, 0.7e1) - 0.972e3 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.3888e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.5832e4 * t * t * pow(u, 0.5e1) - 0.3888e4 * t * pow(u, 0.6e1) - 0.972e3 * pow(u, 0.7e1)) * pow(q4, 0.3e1) + (-0.208e3 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.1760e4 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.9120e4 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.14720e5 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.10160e5 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.2592e4 * t * t * pow(u, 0.8e1) - 0.1596e4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.1038e4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.11808e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.25692e5 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.19788e5 * t * t * pow(u, 0.7e1) + 0.5346e4 * t * pow(u, 0.8e1) - 0.2568e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.7518e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.4392e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.6252e4 * t * t * pow(u, 0.6e1) + 0.8448e4 * t * pow(u, 0.7e1) + 0.2754e4 * pow(u, 0.8e1) - 0.1180e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.4720e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.7080e4 * t * t * pow(u, 0.5e1) - 0.4720e4 * t * pow(u, 0.6e1) - 0.1180e4 * pow(u, 0.7e1)) * q4 * q4 + (0.784e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.3880e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.4391e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.21145e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.39662e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.34802e5 * t * t * pow(u, 0.6e1) + 0.7344e4 * t * t * pow(u, 0.5e1) + 0.6184e4 * t * pow(u, 0.6e1) - 0.1642e4 * pow(t, 0.6e1) * pow(u, 0.5e1) - 0.15868e5 * pow(t, 0.5e1) * pow(u, 0.6e1) - 0.22172e5 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.12982e5 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.2850e4 * t * t * pow(u, 0.9e1) + 0.13243e5 * t * pow(u, 0.7e1) + 0.5335e4 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.20270e5 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.21503e5 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.10060e5 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.36115e5 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.25378e5 * t * t * pow(u, 0.8e1) - 0.5891e4 * t * pow(u, 0.9e1) + 0.1256e4 * pow(t, 0.8e1) * pow(u, 0.3e1) + 0.3442e4 * pow(t, 0.7e1) * pow(u, 0.4e1) + 0.7686e4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.34093e5 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.55519e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.34650e5 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.2300e4 * t * t * pow(u, 0.7e1) - 0.10823e5 * t * pow(u, 0.8e1) + 0.1936e4 * pow(u, 0.7e1) + 0.1349e4 * pow(u, 0.8e1) - 0.2985e4 * pow(u, 0.9e1)) * q4 + (0.3072e4 * t + 0.9088e4 * u) * pow(q3, 0.11e2) + (-0.18432e5 * t * t - 0.64320e5 * t * u - 0.27264e5 * u * u - 0.18432e5 * t - 0.51200e5 * u) * pow(q3, 0.10e2) + (0.47616e5 * pow(t, 0.3e1) + 0.194416e6 * t * t * u + 0.183584e6 * t * u * u + 0.1904e4 * pow(u, 0.3e1) + 0.92160e5 * t * t + 0.315232e6 * t * u + 0.163168e6 * u * u + 0.46080e5 * t + 0.122176e6 * u) * pow(q3, 0.9e1) + (-0.69120e5 * pow(t, 0.4e1) - 0.328720e6 * pow(t, 0.3e1) * u - 0.518048e6 * t * t * u * u - 0.86512e5 * t * pow(u, 0.3e1) + 0.112032e6 * pow(u, 0.4e1) - 0.192000e6 * pow(t, 0.3e1) - 0.803216e6 * t * t * u - 0.946464e6 * t * u * u - 0.129936e6 * pow(u, 0.3e1) - 0.184320e6 * t * t - 0.640480e6 * t * u - 0.407008e6 * u * u - 0.61440e5 * t - 0.160960e6 * u) * pow(q3, 0.8e1)) * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / t * pow(u, -0.3e1) * pow(-0.1e1 - t + q3, -0.3e1) * pow(q3 - u, -0.2e1));
}
#include <math.h>

double GstarVVCoeffsC1e1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.8e1 / 0.81e2 * (-0.112e3 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.628e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.1691e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.8538e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.21622e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.26876e5 * t * t * pow(u, 0.6e1) - 0.2436e4 * t * t * pow(u, 0.5e1) - 0.3436e4 * t * pow(u, 0.6e1) - 0.23328e5 * u * pow(q3, 0.8e1) * pow(q4, 0.3e1) + (0.14048e5 * t - 0.16096e5 * u) * pow(q3, 0.10e2) * q4 + (0.69984e5 * t - 0.608e3 * u) * pow(q3, 0.9e1) * q4 * q4 + (-0.70240e5 * t * t - 0.47584e5 * t * u + 0.76160e5 * u * u - 0.70240e5 * t + 0.57152e5 * u) * pow(q3, 0.9e1) * q4 + (-0.279936e6 * t * t - 0.253568e6 * t * u + 0.25760e5 * u * u - 0.279936e6 * t + 0.3040e4 * u) * pow(q3, 0.8e1) * q4 * q4 + (0.147504e6 * pow(t, 0.3e1) + 0.332704e6 * t * t * u + 0.17088e5 * t * u * u - 0.207216e6 * pow(u, 0.3e1) + 0.280960e6 * t * t + 0.299040e6 * t * u - 0.237728e6 * u * u + 0.140480e6 * t - 0.62656e5 * u) * pow(q3, 0.8e1) * q4 + (0.93312e5 * t * u + 0.93312e5 * u * u + 0.93312e5 * u) * pow(q3, 0.7e1) * pow(q4, 0.3e1) + (0.454896e6 * pow(t, 0.3e1) + 0.950064e6 * t * t * u + 0.280048e6 * t * u * u - 0.120592e6 * pow(u, 0.3e1) + 0.839808e6 * t * t + 0.874304e6 * t * u - 0.80928e5 * u * u + 0.419904e6 * t - 0.6080e4 * u) * pow(q3, 0.7e1) * q4 * q4 + (-0.168576e6 * pow(t, 0.4e1) - 0.590064e6 * pow(t, 0.3e1) * u - 0.635872e6 * t * t * u * u + 0.404672e6 * t * pow(u, 0.3e1) + 0.414864e6 * pow(u, 0.4e1) - 0.449536e6 * pow(t, 0.3e1) - 0.1192720e7 * t * t * u - 0.497040e6 * t * u * u + 0.607200e6 * pow(u, 0.3e1) - 0.421440e6 * t * t - 0.646976e6 * t * u + 0.212160e6 * u * u - 0.140480e6 * t + 0.1024e4 * u) * pow(q3, 0.7e1) * q4 + (-0.151632e6 * t * t * u - 0.349920e6 * t * u * u - 0.151632e6 * pow(u, 0.3e1) - 0.279936e6 * t * u - 0.326592e6 * u * u - 0.139968e6 * u) * pow(q3, 0.6e1) * pow(q4, 0.3e1) + (-0.384912e6 * pow(t, 0.4e1) - 0.1415712e7 * pow(t, 0.3e1) * u - 0.1143600e7 * t * t * u * u + 0.157600e6 * t * pow(u, 0.3e1) + 0.224960e6 * pow(u, 0.4e1) - 0.944784e6 * pow(t, 0.3e1) - 0.2429984e7 * t * t * u - 0.903440e6 * t * u * u + 0.365728e6 * pow(u, 0.3e1) - 0.839808e6 * t * t - 0.1101504e7 * t * u + 0.66112e5 * u * u - 0.279936e6 * t + 0.6080e4 * u) * pow(q3, 0.6e1) * q4 * q4 + (0.113262e6 * pow(t, 0.5e1) + 0.481458e6 * pow(t, 0.4e1) * u + 0.1113636e7 * pow(t, 0.3e1) * u * u + 0.20700e5 * t * t * pow(u, 0.3e1) - 0.1346402e7 * t * pow(u, 0.4e1) - 0.550206e6 * pow(u, 0.5e1) + 0.365248e6 * pow(t, 0.4e1) + 0.1391120e7 * pow(t, 0.3e1) * u + 0.2428896e7 * t * t * u * u - 0.396240e6 * t * pow(u, 0.3e1) - 0.1194464e7 * pow(u, 0.4e1) + 0.463584e6 * pow(t, 0.3e1) + 0.1474416e7 * t * t * u + 0.1409552e7 * t * u * u - 0.514544e6 * pow(u, 0.3e1) + 0.280960e6 * t * t + 0.622528e6 * t * u + 0.41440e5 * u * u + 0.70240e5 * t + 0.42784e5 * u) * pow(q3, 0.6e1) * q4 + (0.128304e6 * pow(t, 0.3e1) * u + 0.524880e6 * t * t * u * u + 0.524880e6 * t * pow(u, 0.3e1) + 0.128304e6 * pow(u, 0.4e1) + 0.314928e6 * t * t * u + 0.909792e6 * t * u * u + 0.454896e6 * pow(u, 0.3e1) + 0.279936e6 * t * u + 0.419904e6 * u * u + 0.93312e5 * u) * pow(q3, 0.5e1) * pow(q4, 0.3e1) + (0.179334e6 * pow(t, 0.5e1) + 0.1074018e7 * pow(t, 0.4e1) * u + 0.1600044e7 * pow(t, 0.3e1) * u * u + 0.230292e6 * t * t * pow(u, 0.3e1) - 0.662642e6 * t * pow(u, 0.4e1) - 0.211510e6 * pow(u, 0.5e1) + 0.489888e6 * pow(t, 0.4e1) + 0.2468624e7 * pow(t, 0.3e1) * u + 0.2574352e7 * t * t * u * u - 0.230288e6 * t * pow(u, 0.3e1) - 0.618384e6 * pow(u, 0.4e1) + 0.524880e6 * pow(t, 0.3e1) + 0.2009472e7 * t * t * u + 0.1100016e7 * t * u * u - 0.350912e6 * pow(u, 0.3e1) + 0.279936e6 * t * t + 0.594368e6 * t * u + 0.29632e5 * u * u + 0.69984e5 * t - 0.3040e4 * u) * pow(q3, 0.5e1) * q4 * q4 + (-0.162400e6 * u * u - 0.14048e5 * t - 0.27200e5 * u - 0.703984e6 * t * t * u - 0.1525296e7 * t * u * u - 0.262368e6 * t * u - 0.953888e6 * pow(t, 0.3e1) * u - 0.3241536e7 * t * t * u * u - 0.665784e6 * pow(t, 0.4e1) * u - 0.2702416e7 * pow(t, 0.3e1) * u * u - 0.185502e6 * pow(t, 0.5e1) * u - 0.791472e6 * pow(t, 0.4e1) * u * u - 0.973008e6 * t * pow(u, 0.3e1) - 0.528516e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.1769278e7 * t * t * pow(u, 0.4e1) + 0.1939218e7 * t * pow(u, 0.5e1) + 0.2638970e7 * t * pow(u, 0.4e1) - 0.1511332e7 * t * t * pow(u, 0.3e1) + 0.1486236e7 * pow(u, 0.5e1) + 0.1079216e7 * pow(u, 0.4e1) - 0.46160e5 * pow(u, 0.3e1) + 0.442860e6 * pow(u, 0.6e1) - 0.168576e6 * pow(t, 0.3e1) - 0.70240e5 * t * t - 0.224768e6 * pow(t, 0.4e1) - 0.157162e6 * pow(t, 0.5e1) - 0.44778e5 * pow(t, 0.6e1)) * pow(q3, 0.5e1) * q4 + (-0.59778e5 * pow(t, 0.4e1) * u - 0.402408e6 * pow(t, 0.3e1) * u * u - 0.708588e6 * t * t * pow(u, 0.3e1) - 0.402408e6 * t * pow(u, 0.4e1) - 0.59778e5 * pow(u, 0.5e1) - 0.163296e6 * pow(t, 0.3e1) * u - 0.933120e6 * t * t * u * u - 0.1143072e7 * t * pow(u, 0.3e1) - 0.326592e6 * pow(u, 0.4e1) - 0.174960e6 * t * t * u - 0.769824e6 * t * u * u - 0.478224e6 * pow(u, 0.3e1) - 0.93312e5 * t * u - 0.233280e6 * u * u - 0.23328e5 * u) * pow(q3, 0.4e1) * pow(q4, 0.3e1) + (-0.62688e5 * u * u + 0.608e3 * u - 0.529248e6 * t * t * u - 0.609904e6 * t * u * u - 0.113600e6 * t * u - 0.1110016e7 * pow(t, 0.3e1) * u - 0.1868928e7 * t * t * u * u - 0.1124606e7 * pow(t, 0.4e1) * u - 0.2362560e7 * pow(t, 0.3e1) * u * u - 0.436920e6 * pow(t, 0.5e1) * u - 0.1068474e7 * pow(t, 0.4e1) * u * u - 0.124608e6 * t * pow(u, 0.3e1) - 0.520344e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.740136e6 * t * t * pow(u, 0.4e1) + 0.645952e6 * t * pow(u, 0.5e1) + 0.1253516e7 * t * pow(u, 0.4e1) - 0.671636e6 * t * t * pow(u, 0.3e1) + 0.506530e6 * pow(u, 0.5e1) + 0.552048e6 * pow(u, 0.4e1) + 0.64288e5 * pow(u, 0.3e1) + 0.106814e6 * pow(u, 0.6e1) - 0.34992e5 * pow(t, 0.3e1) - 0.104976e6 * pow(t, 0.4e1) - 0.113724e6 * pow(t, 0.5e1) - 0.43740e5 * pow(t, 0.6e1)) * pow(q3, 0.4e1) * q4 * q4 + (0.83520e5 * u * u + 0.4992e4 * u + 0.92080e5 * t * t * u + 0.724656e6 * t * u * u + 0.35360e5 * t * u + 0.168016e6 * pow(t, 0.3e1) * u + 0.1854448e7 * t * t * u * u + 0.188546e6 * pow(t, 0.4e1) * u + 0.2206312e7 * pow(t, 0.3e1) * u * u + 0.104434e6 * pow(t, 0.5e1) * u + 0.1232542e7 * pow(t, 0.4e1) * u * u + 0.236829e6 * pow(t, 0.5e1) * u * u + 0.434440e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.1272980e7 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.1641952e7 * t * pow(u, 0.3e1) + 0.2255288e7 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1883044e7 * t * t * pow(u, 0.4e1) - 0.3720298e7 * t * pow(u, 0.5e1) - 0.932690e6 * t * pow(u, 0.4e1) - 0.2746243e7 * t * t * pow(u, 0.5e1) - 0.1469331e7 * t * pow(u, 0.6e1) + 0.3181656e7 * t * t * pow(u, 0.3e1) + 0.20005e5 * pow(t, 0.6e1) * u - 0.1269578e7 * pow(u, 0.5e1) - 0.180400e6 * pow(u, 0.4e1) + 0.246656e6 * pow(u, 0.3e1) - 0.1069838e7 * pow(u, 0.6e1) + 0.7024e4 * pow(t, 0.3e1) + 0.28096e5 * pow(t, 0.4e1) - 0.206234e6 * pow(u, 0.7e1) + 0.44778e5 * pow(t, 0.5e1) + 0.33364e5 * pow(t, 0.6e1) + 0.9658e4 * pow(t, 0.7e1)) * pow(q3, 0.4e1) * q4 + (0.14580e5 * pow(t, 0.5e1) * u + 0.166212e6 * pow(t, 0.4e1) * u * u + 0.472392e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.472392e6 * t * t * pow(u, 0.4e1) + 0.166212e6 * t * pow(u, 0.5e1) + 0.14580e5 * pow(u, 0.6e1) + 0.37908e5 * pow(t, 0.4e1) * u + 0.431568e6 * pow(t, 0.3e1) * u * u + 0.1020600e7 * t * t * pow(u, 0.3e1) + 0.711504e6 * t * pow(u, 0.4e1) + 0.131220e6 * pow(u, 0.5e1) + 0.34992e5 * pow(t, 0.3e1) * u + 0.431568e6 * t * t * u * u + 0.758160e6 * t * pow(u, 0.3e1) + 0.268272e6 * pow(u, 0.4e1) + 0.11664e5 * t * t * u + 0.209952e6 * t * u * u + 0.198288e6 * pow(u, 0.3e1) + 0.46656e5 * u * u) * pow(q3, 0.3e1) * pow(q4, 0.3e1) + (0.22112e5 * u * u - 0.304e3 * t * t * u + 0.133280e6 * t * u * u + 0.57104e5 * pow(t, 0.3e1) * u + 0.449232e6 * t * t * u * u + 0.190518e6 * pow(t, 0.4e1) * u + 0.888236e6 * pow(t, 0.3e1) * u * u + 0.223088e6 * pow(t, 0.5e1) * u + 0.907970e6 * pow(t, 0.4e1) * u * u + 0.359256e6 * pow(t, 0.5e1) * u * u + 0.329016e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.417034e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.309680e6 * t * pow(u, 0.3e1) + 0.767384e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.837384e6 * t * t * pow(u, 0.4e1) - 0.1043256e7 * t * pow(u, 0.5e1) - 0.589698e6 * t * pow(u, 0.4e1) - 0.743382e6 * t * t * pow(u, 0.5e1) - 0.298724e6 * t * pow(u, 0.6e1) + 0.685260e6 * t * t * pow(u, 0.3e1) + 0.89978e5 * pow(t, 0.6e1) * u - 0.367170e6 * pow(u, 0.5e1) - 0.148784e6 * pow(u, 0.4e1) + 0.64208e5 * pow(u, 0.3e1) - 0.224214e6 * pow(u, 0.6e1) - 0.27740e5 * pow(u, 0.7e1) + 0.4374e4 * pow(t, 0.5e1) + 0.8748e4 * pow(t, 0.6e1) + 0.4374e4 * pow(t, 0.7e1)) * pow(q3, 0.3e1) * q4 * q4 + (-0.13152e5 * u * u - 0.2496e4 * t * t * u - 0.128960e6 * t * u * u - 0.15184e5 * pow(t, 0.3e1) * u - 0.412512e6 * t * t * u * u - 0.22868e5 * pow(t, 0.4e1) * u - 0.709408e6 * pow(t, 0.3e1) * u * u - 0.7926e4 * pow(t, 0.5e1) * u - 0.647724e6 * pow(t, 0.4e1) * u * u - 0.247968e6 * pow(t, 0.5e1) * u * u - 0.1316654e7 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.282622e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.153695e6 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.560080e6 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.2013034e7 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.1869265e7 * t * t * pow(u, 0.6e1) - 0.772624e6 * t * pow(u, 0.3e1) - 0.2628724e7 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.802250e6 * t * t * pow(u, 0.4e1) + 0.1739834e7 * t * pow(u, 0.5e1) - 0.747906e6 * t * pow(u, 0.4e1) + 0.3349394e7 * t * t * pow(u, 0.5e1) + 0.2452300e7 * t * pow(u, 0.6e1) - 0.2167108e7 * t * t * pow(u, 0.3e1) + 0.6616e4 * pow(t, 0.7e1) * u - 0.9143e4 * pow(t, 0.6e1) * u * u + 0.604445e6 * t * pow(u, 0.7e1) + 0.8870e4 * pow(t, 0.6e1) * u + 0.288680e6 * pow(u, 0.5e1) - 0.177312e6 * pow(u, 0.4e1) - 0.89360e5 * pow(u, 0.3e1) + 0.763824e6 * pow(u, 0.6e1) + 0.443478e6 * pow(u, 0.7e1) - 0.878e3 * pow(t, 0.5e1) - 0.2634e4 * pow(t, 0.6e1) - 0.2634e4 * pow(t, 0.7e1) - 0.878e3 * pow(t, 0.8e1) + 0.51076e5 * pow(u, 0.8e1)) * pow(q3, 0.3e1) * q4 + (-0.1458e4 * pow(t, 0.6e1) * u - 0.34992e5 * pow(t, 0.5e1) * u * u - 0.161838e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.256608e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.161838e6 * t * t * pow(u, 0.5e1) - 0.34992e5 * t * pow(u, 0.6e1) - 0.1458e4 * pow(u, 0.7e1) - 0.2916e4 * pow(t, 0.5e1) * u - 0.87480e5 * pow(t, 0.4e1) * u * u - 0.390744e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.513216e6 * t * t * pow(u, 0.4e1) - 0.236196e6 * t * pow(u, 0.5e1) - 0.29160e5 * pow(u, 0.6e1) - 0.1458e4 * pow(t, 0.4e1) * u - 0.75816e5 * pow(t, 0.3e1) * u * u - 0.347004e6 * t * t * pow(u, 0.3e1) - 0.332424e6 * t * pow(u, 0.4e1) - 0.83106e5 * pow(u, 0.5e1) - 0.23328e5 * t * t * u * u - 0.139968e6 * t * pow(u, 0.3e1) - 0.69984e5 * pow(u, 0.4e1) - 0.23328e5 * pow(u, 0.3e1)) * q3 * q3 * pow(q4, 0.3e1) + (-0.11056e5 * t * t * u * u + 0.38e2 * pow(t, 0.4e1) * u - 0.55736e5 * pow(t, 0.3e1) * u * u - 0.7176e4 * pow(t, 0.5e1) * u - 0.131262e6 * pow(t, 0.4e1) * u * u - 0.142456e6 * pow(t, 0.5e1) * u * u - 0.262480e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.227832e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.82578e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.142496e6 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.406840e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.294654e6 * t * t * pow(u, 0.6e1) - 0.112384e6 * t * pow(u, 0.3e1) - 0.344056e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.80028e5 * t * t * pow(u, 0.4e1) + 0.381936e6 * t * pow(u, 0.5e1) - 0.23896e5 * t * pow(u, 0.4e1) + 0.707574e6 * t * t * pow(u, 0.5e1) + 0.399312e6 * t * pow(u, 0.6e1) - 0.255276e6 * t * t * pow(u, 0.3e1) - 0.7252e4 * pow(t, 0.7e1) * u - 0.55874e5 * pow(t, 0.6e1) * u * u + 0.67182e5 * t * pow(u, 0.7e1) - 0.14466e5 * pow(t, 0.6e1) * u + 0.60790e5 * pow(u, 0.5e1) - 0.9840e4 * pow(u, 0.4e1) - 0.22720e5 * pow(u, 0.3e1) + 0.127986e6 * pow(u, 0.6e1) + 0.54060e5 * pow(u, 0.7e1) + 0.2916e4 * pow(u, 0.8e1)) * q3 * q3 * q4 * q4 + (0.6576e4 * t * t * u * u + 0.312e3 * pow(t, 0.4e1) * u + 0.55876e5 * pow(t, 0.3e1) * u * u + 0.1586e4 * pow(t, 0.5e1) * u + 0.126276e6 * pow(t, 0.4e1) * u * u + 0.111250e6 * pow(t, 0.5e1) * u * u + 0.1014118e7 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1142144e7 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.443561e6 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.293162e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.1273446e7 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.1901167e7 * t * t * pow(u, 0.6e1) + 0.95248e5 * t * pow(u, 0.3e1) + 0.980744e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.1065148e7 * t * t * pow(u, 0.4e1) + 0.139606e6 * t * pow(u, 0.5e1) + 0.398572e6 * t * pow(u, 0.4e1) - 0.409117e6 * t * t * pow(u, 0.5e1) - 0.914746e6 * t * pow(u, 0.6e1) + 0.462468e6 * t * t * pow(u, 0.3e1) - 0.2112e4 * pow(t, 0.7e1) * u + 0.26117e5 * pow(t, 0.6e1) * u * u - 0.848611e6 * t * pow(u, 0.7e1) - 0.1537e4 * pow(t, 0.8e1) * u - 0.8157e4 * pow(t, 0.7e1) * u * u + 0.38598e5 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.133156e6 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.803829e6 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.1138389e7 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.634296e6 * t * t * pow(u, 0.7e1) - 0.126570e6 * t * pow(u, 0.8e1) + 0.699e3 * pow(t, 0.6e1) * u + 0.55012e5 * pow(u, 0.5e1) + 0.58096e5 * pow(u, 0.4e1) + 0.3424e4 * pow(u, 0.3e1) - 0.112752e6 * pow(u, 0.6e1) - 0.254668e6 * pow(u, 0.7e1) - 0.102368e6 * pow(u, 0.8e1) - 0.5208e4 * pow(u, 0.9e1)) * q3 * q3 * q4 + (0.2916e4 * pow(t, 0.6e1) * u * u + 0.26244e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.64152e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.64152e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.26244e5 * t * t * pow(u, 0.6e1) + 0.2916e4 * t * pow(u, 0.7e1) + 0.5832e4 * pow(t, 0.5e1) * u * u + 0.61236e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.139968e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.122472e6 * t * t * pow(u, 0.5e1) + 0.40824e5 * t * pow(u, 0.6e1) + 0.2916e4 * pow(u, 0.7e1) + 0.2916e4 * pow(t, 0.4e1) * u * u + 0.46656e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.99144e5 * t * t * pow(u, 0.4e1) + 0.69984e5 * t * pow(u, 0.5e1) + 0.14580e5 * pow(u, 0.6e1) + 0.11664e5 * t * t * pow(u, 0.3e1) + 0.23328e5 * t * pow(u, 0.4e1) + 0.11664e5 * pow(u, 0.5e1)) * q3 * pow(q4, 0.3e1) + (0.1382e4 * pow(t, 0.4e1) * u * u + 0.5604e4 * pow(t, 0.5e1) * u * u + 0.54012e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.46104e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.32636e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.26036e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.186112e6 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.204714e6 * t * t * pow(u, 0.6e1) + 0.39304e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.63876e5 * t * t * pow(u, 0.4e1) + 0.15368e5 * t * pow(u, 0.5e1) + 0.22720e5 * t * pow(u, 0.4e1) - 0.72312e5 * t * t * pow(u, 0.5e1) - 0.94908e5 * t * pow(u, 0.6e1) + 0.11360e5 * t * t * pow(u, 0.3e1) + 0.7062e4 * pow(t, 0.6e1) * u * u - 0.76044e5 * t * pow(u, 0.7e1) + 0.2840e4 * pow(t, 0.7e1) * u * u + 0.6568e4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.30984e5 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.109792e6 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.120392e6 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.51144e5 * t * t * pow(u, 0.7e1) - 0.5832e4 * t * pow(u, 0.8e1) + 0.11360e5 * pow(u, 0.5e1) - 0.10586e5 * pow(u, 0.6e1) - 0.24900e5 * pow(u, 0.7e1) - 0.5832e4 * pow(u, 0.8e1)) * q3 * q4 * q4 + (-0.822e3 * pow(t, 0.4e1) * u * u - 0.5909e4 * pow(t, 0.5e1) * u * u - 0.141498e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.356226e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.180355e6 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.415528e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.215510e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.199675e6 * t * t * pow(u, 0.6e1) - 0.41064e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.113628e6 * t * t * pow(u, 0.4e1) - 0.112584e6 * t * pow(u, 0.5e1) - 0.6544e4 * t * pow(u, 0.4e1) - 0.305172e6 * t * t * pow(u, 0.5e1) - 0.54641e5 * t * pow(u, 0.6e1) - 0.1712e4 * t * t * pow(u, 0.3e1) - 0.8421e4 * pow(t, 0.6e1) * u * u + 0.216249e6 * t * pow(u, 0.7e1) - 0.2403e4 * pow(t, 0.7e1) * u * u + 0.931e3 * pow(t, 0.8e1) * u * u - 0.10467e5 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.5966e4 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.158674e6 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.332007e6 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.280193e6 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.99912e5 * t * t * pow(u, 0.8e1) + 0.10416e5 * t * pow(u, 0.9e1) - 0.88676e5 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.159643e6 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.147552e6 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.564411e6 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.483536e6 * t * t * pow(u, 0.7e1) + 0.150675e6 * t * pow(u, 0.8e1) - 0.8480e4 * pow(u, 0.5e1) - 0.28254e5 * pow(u, 0.6e1) + 0.18950e5 * pow(u, 0.7e1) + 0.48306e5 * pow(u, 0.8e1) + 0.10628e5 * pow(u, 0.9e1)) * q3 * q4 - 0.71749e5 * pow(t, 0.6e1) * pow(u, 0.5e1) - 0.46256e5 * pow(t, 0.5e1) * pow(u, 0.6e1) + 0.26323e5 * pow(t, 0.4e1) * pow(u, 0.7e1) + 0.61088e5 * pow(t, 0.3e1) * pow(u, 0.8e1) + 0.36525e5 * t * t * pow(u, 0.9e1) + 0.7712e4 * t * pow(u, 0.10e2) - 0.14583e5 * t * pow(u, 0.7e1) - 0.11089e5 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.57378e5 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.123259e6 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.131166e6 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.58755e5 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.7166e4 * t * t * pow(u, 0.8e1) + 0.15583e5 * t * pow(u, 0.9e1) - 0.2304e4 * pow(t, 0.9e1) * pow(u, 0.3e1) - 0.9776e4 * pow(t, 0.8e1) * pow(u, 0.4e1) - 0.12618e5 * pow(t, 0.7e1) * pow(u, 0.5e1) + 0.4958e4 * pow(t, 0.6e1) * pow(u, 0.6e1) + 0.31132e5 * pow(t, 0.5e1) * pow(u, 0.7e1) + 0.35724e5 * pow(t, 0.4e1) * pow(u, 0.8e1) + 0.18446e5 * pow(t, 0.3e1) * pow(u, 0.9e1) + 0.3750e4 * t * t * pow(u, 0.10e2) - 0.8267e4 * pow(t, 0.8e1) * pow(u, 0.3e1) - 0.39712e5 * pow(t, 0.7e1) * pow(u, 0.4e1) - 0.6705e4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.35352e5 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.83314e5 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.103288e6 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.66597e5 * t * t * pow(u, 0.7e1) - 0.20056e5 * t * pow(u, 0.8e1) + (0.876e3 * pow(t, 0.4e1) * u * u + 0.6295e4 * pow(t, 0.5e1) * u * u + 0.96624e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.296226e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.229487e6 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.716884e6 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.971302e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.615438e6 * t * t * pow(u, 0.6e1) + 0.18288e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.58720e5 * t * t * pow(u, 0.4e1) + 0.61568e5 * t * pow(u, 0.5e1) + 0.4960e4 * t * pow(u, 0.4e1) + 0.373980e6 * t * t * pow(u, 0.5e1) + 0.208831e6 * t * pow(u, 0.6e1) + 0.896e3 * t * t * pow(u, 0.3e1) + 0.2417e4 * pow(t, 0.9e1) * u * u + 0.70058e5 * pow(t, 0.6e1) * pow(u, 0.5e1) - 0.133877e6 * pow(t, 0.5e1) * pow(u, 0.6e1) - 0.292562e6 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.224919e6 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.74706e5 * t * t * pow(u, 0.9e1) - 0.7500e4 * t * pow(u, 0.10e2) + 0.16046e5 * pow(t, 0.6e1) * u * u + 0.145155e6 * t * pow(u, 0.7e1) + 0.19128e5 * pow(t, 0.7e1) * u * u + 0.10918e5 * pow(t, 0.8e1) * u * u + 0.159731e6 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.492032e6 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.564251e6 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.62418e5 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.430043e6 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.376248e6 * t * t * pow(u, 0.8e1) - 0.112531e6 * t * pow(u, 0.9e1) + 0.36106e5 * pow(t, 0.8e1) * pow(u, 0.3e1) + 0.102775e6 * pow(t, 0.7e1) * pow(u, 0.4e1) + 0.273880e6 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.863675e6 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.1150092e7 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.627666e6 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.24956e5 * t * t * pow(u, 0.7e1) - 0.146525e6 * t * pow(u, 0.8e1) + 0.4064e4 * pow(u, 0.5e1) + 0.20260e5 * pow(u, 0.6e1) + 0.40748e5 * pow(u, 0.7e1) - 0.2424e4 * pow(u, 0.8e1) - 0.35072e5 * pow(u, 0.9e1) - 0.7712e4 * pow(u, 0.10e2)) * q3 + (-0.1458e4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.5832e4 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.8748e4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.5832e4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.1458e4 * t * t * pow(u, 0.7e1) - 0.2916e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.11664e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.17496e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.11664e5 * t * t * pow(u, 0.6e1) - 0.2916e4 * t * pow(u, 0.7e1) - 0.1458e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.5832e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.8748e4 * t * t * pow(u, 0.5e1) - 0.5832e4 * t * pow(u, 0.6e1) - 0.1458e4 * pow(u, 0.7e1)) * pow(q4, 0.3e1) + (0.38e2 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.3068e4 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.11892e5 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.17648e5 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.11702e5 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.2916e4 * t * t * pow(u, 0.8e1) - 0.1344e4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.456e3 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.15264e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.29616e5 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.21984e5 * t * t * pow(u, 0.7e1) + 0.5832e4 * t * pow(u, 0.8e1) - 0.2802e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.8292e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.5148e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.6288e4 * t * t * pow(u, 0.6e1) + 0.8862e4 * t * pow(u, 0.7e1) + 0.2916e4 * pow(u, 0.8e1) - 0.1420e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.5680e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.8520e4 * t * t * pow(u, 0.5e1) - 0.5680e4 * t * pow(u, 0.6e1) - 0.1420e4 * pow(u, 0.7e1)) * q4 * q4 + (0.214e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1636e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.4313e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.21538e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.43418e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.41420e5 * t * t * pow(u, 0.6e1) + 0.4536e4 * t * t * pow(u, 0.5e1) + 0.5020e4 * t * pow(u, 0.6e1) - 0.10648e5 * pow(t, 0.6e1) * pow(u, 0.5e1) - 0.36412e5 * pow(t, 0.5e1) * pow(u, 0.6e1) - 0.44108e5 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.24418e5 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.5208e4 * t * t * pow(u, 0.9e1) + 0.17173e5 * t * pow(u, 0.7e1) + 0.6853e4 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.22397e5 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.10562e5 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.45706e5 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.78403e5 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.48307e5 * t * t * pow(u, 0.8e1) - 0.10628e5 * t * pow(u, 0.9e1) + 0.1484e4 * pow(t, 0.8e1) * pow(u, 0.3e1) + 0.2350e4 * pow(t, 0.7e1) * pow(u, 0.4e1) + 0.9468e4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.39949e5 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.60196e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.27522e5 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.18404e5 * t * t * pow(u, 0.7e1) - 0.21527e5 * t * pow(u, 0.8e1) + 0.1906e4 * pow(u, 0.7e1) + 0.1946e4 * pow(u, 0.8e1) - 0.5316e4 * pow(u, 0.9e1)) * q4 + (0.18048e5 * t + 0.6880e4 * u) * pow(q3, 0.11e2) + (-0.108288e6 * t * t - 0.134016e6 * t * u + 0.96e2 * u * u - 0.108288e6 * t - 0.41888e5 * u) * pow(q3, 0.10e2) + (0.279744e6 * pow(t, 0.3e1) + 0.608224e6 * t * t * u + 0.255344e6 * t * u * u - 0.70768e5 * pow(u, 0.3e1) + 0.541440e6 * t * t + 0.723424e6 * t * u + 0.55552e5 * u * u + 0.270720e6 * t + 0.116800e6 * u) * pow(q3, 0.9e1) + (-0.406080e6 * pow(t, 0.4e1) - 0.1309024e7 * pow(t, 0.3e1) * u - 0.1241840e7 * t * t * u * u - 0.47728e5 * t * pow(u, 0.3e1) + 0.221760e6 * pow(u, 0.4e1) - 0.1128000e7 * pow(t, 0.3e1) - 0.2732144e7 * t * t * u - 0.1562208e7 * t * u * u + 0.94416e5 * pow(u, 0.3e1) - 0.1082880e7 * t * t - 0.1656640e7 * t * u - 0.282400e6 * u * u - 0.360960e6 * t - 0.196480e6 * u) * pow(q3, 0.8e1) + (0.362088e6 * pow(t, 0.5e1) + 0.1608246e7 * pow(t, 0.4e1) * u + 0.2561632e7 * pow(t, 0.3e1) * u * u + 0.1033004e7 * t * t * pow(u, 0.3e1) - 0.667624e6 * t * pow(u, 0.4e1) - 0.406914e6 * pow(u, 0.5e1) + 0.1263360e7 * pow(t, 0.4e1) + 0.4706624e7 * pow(t, 0.3e1) * u + 0.5725744e7 * t * t * u * u + 0.1564464e7 * t * pow(u, 0.3e1) - 0.454656e6 * pow(u, 0.4e1) + 0.1714560e7 * pow(t, 0.3e1) + 0.4951136e7 * t * t * u + 0.3794608e7 * t * u * u + 0.349152e6 * pow(u, 0.3e1) + 0.1082880e7 * t * t + 0.2072640e7 * t * u + 0.586176e6 * u * u + 0.270720e6 * t + 0.214880e6 * u) * pow(q3, 0.7e1) + (-0.635104e6 * u * u - 0.108288e6 * t - 0.149920e6 * u - 0.4548064e7 * t * t * u - 0.4706496e7 * t * u * u - 0.1502080e7 * t * u - 0.6411520e7 * pow(t, 0.3e1) * u - 0.10265392e8 * t * t * u * u - 0.4417598e7 * pow(t, 0.4e1) * u - 0.9149732e7 * pow(t, 0.3e1) * u * u - 0.1205484e7 * pow(t, 0.5e1) * u - 0.2925318e7 * pow(t, 0.4e1) * u * u - 0.4955216e7 * t * pow(u, 0.3e1) - 0.2486760e7 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.520548e6 * t * t * pow(u, 0.4e1) + 0.1557716e7 * t * pow(u, 0.5e1) - 0.50988e5 * t * pow(u, 0.4e1) - 0.6532984e7 * t * t * pow(u, 0.3e1) + 0.965958e6 * pow(u, 0.5e1) - 0.164896e6 * pow(u, 0.4e1) - 0.973280e6 * pow(u, 0.3e1) + 0.484098e6 * pow(u, 0.6e1) - 0.1173120e7 * pow(t, 0.3e1) - 0.541440e6 * t * t - 0.1353600e7 * pow(t, 0.4e1) - 0.816672e6 * pow(t, 0.5e1) - 0.203040e6 * pow(t, 0.6e1)) * pow(q3, 0.6e1) + (0.376960e6 * u * u + 0.18048e5 * t + 0.60288e5 * u + 0.2135456e7 * t * t * u + 0.3143760e7 * t * u * u + 0.599776e6 * t * u + 0.3985536e7 * pow(t, 0.3e1) * u + 0.8932016e7 * t * t * u * u + 0.4208074e7 * pow(t, 0.4e1) * u + 0.12049368e8 * pow(t, 0.3e1) * u * u + 0.2376542e7 * pow(t, 0.5e1) * u + 0.7909644e7 * pow(t, 0.4e1) * u * u + 0.2023473e7 * pow(t, 0.5e1) * u * u + 0.2927082e7 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.455002e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.6145376e7 * t * pow(u, 0.3e1) + 0.10350400e8 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.3408820e7 * t * t * pow(u, 0.4e1) - 0.2236446e7 * t * pow(u, 0.5e1) + 0.3751208e7 * t * pow(u, 0.4e1) - 0.2372603e7 * t * t * pow(u, 0.5e1) - 0.1827403e7 * t * pow(u, 0.6e1) + 0.12546764e8 * t * t * pow(u, 0.3e1) + 0.556793e6 * pow(t, 0.6e1) * u - 0.412758e6 * pow(u, 0.5e1) + 0.1050528e7 * pow(u, 0.4e1) + 0.944080e6 * pow(u, 0.3e1) - 0.1179072e7 * pow(u, 0.6e1) + 0.315840e6 * pow(t, 0.3e1) + 0.108288e6 * t * t + 0.541440e6 * pow(t, 0.4e1) - 0.359704e6 * pow(u, 0.7e1) + 0.548208e6 * pow(t, 0.5e1) + 0.302304e6 * pow(t, 0.6e1) + 0.69936e5 * pow(t, 0.7e1)) * pow(q3, 0.5e1) + (-0.115296e6 * u * u - 0.10560e5 * u - 0.419888e6 * t * t * u - 0.1067488e7 * t * u * u - 0.103104e6 * t * u - 0.1017888e7 * pow(t, 0.3e1) * u - 0.3768640e7 * t * t * u * u - 0.1547238e7 * pow(t, 0.4e1) * u - 0.6999520e7 * pow(t, 0.3e1) * u * u - 0.1424444e7 * pow(t, 0.5e1) * u - 0.7263748e7 * pow(t, 0.4e1) * u * u - 0.3955929e7 * pow(t, 0.5e1) * u * u - 0.8640706e7 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.6333386e7 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.2035206e7 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.1175778e7 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.1764709e7 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.2741399e7 * t * t * pow(u, 0.6e1) - 0.3495312e7 * t * pow(u, 0.3e1) - 0.13605148e8 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.9189516e7 * t * t * pow(u, 0.4e1) - 0.904024e6 * t * pow(u, 0.5e1) - 0.5061520e7 * t * pow(u, 0.4e1) + 0.1115183e7 * t * t * pow(u, 0.5e1) + 0.3062115e7 * t * pow(u, 0.6e1) - 0.10100796e8 * t * t * pow(u, 0.3e1) - 0.152511e6 * pow(t, 0.7e1) * u - 0.871149e6 * pow(t, 0.6e1) * u * u + 0.1229792e7 * t * pow(u, 0.7e1) - 0.720261e6 * pow(t, 0.6e1) * u - 0.550174e6 * pow(u, 0.5e1) - 0.923808e6 * pow(u, 0.4e1) - 0.414192e6 * pow(u, 0.3e1) + 0.755360e6 * pow(u, 0.6e1) - 0.9024e4 * pow(t, 0.3e1) - 0.45120e5 * pow(t, 0.4e1) + 0.827224e6 * pow(u, 0.7e1) - 0.94752e5 * pow(t, 0.5e1) - 0.103776e6 * pow(t, 0.6e1) - 0.58656e5 * pow(t, 0.7e1) - 0.13536e5 * pow(t, 0.8e1) + 0.158616e6 * pow(u, 0.8e1)) * pow(q3, 0.4e1) + (0.14016e5 * u * u + 0.5280e4 * t * t * u + 0.142480e6 * t * u * u + 0.46272e5 * pow(t, 0.3e1) * u + 0.625120e6 * t * t * u * u + 0.149176e6 * pow(t, 0.4e1) * u + 0.1598440e7 * pow(t, 0.3e1) * u * u + 0.248558e6 * pow(t, 0.5e1) * u + 0.2493848e7 * pow(t, 0.4e1) * u * u + 0.2303406e7 * pow(t, 0.5e1) * u * u + 0.7525092e7 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.9009800e7 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.4150670e7 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.5260856e7 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.1116740e7 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.2699298e7 * t * t * pow(u, 0.6e1) + 0.839408e6 * t * pow(u, 0.3e1) + 0.6888232e7 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.6857020e7 * t * t * pow(u, 0.4e1) + 0.2465610e7 * t * pow(u, 0.5e1) + 0.2379968e7 * t * pow(u, 0.4e1) + 0.3538797e7 * t * t * pow(u, 0.5e1) - 0.715534e6 * t * pow(u, 0.6e1) + 0.3390872e7 * t * t * pow(u, 0.3e1) + 0.112168e6 * pow(t, 0.7e1) * u + 0.1141614e7 * pow(t, 0.6e1) * u * u - 0.1938538e7 * t * pow(u, 0.7e1) + 0.22133e5 * pow(t, 0.8e1) * u + 0.230272e6 * pow(t, 0.7e1) * u * u + 0.884428e6 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.995141e6 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.563081e6 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.2060942e7 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.1610770e7 * t * t * pow(u, 0.7e1) - 0.470703e6 * t * pow(u, 0.8e1) + 0.230409e6 * pow(t, 0.6e1) * u + 0.522160e6 * pow(u, 0.5e1) + 0.298336e6 * pow(u, 0.4e1) + 0.72384e5 * pow(u, 0.3e1) + 0.82636e5 * pow(u, 0.6e1) - 0.508834e6 * pow(u, 0.7e1) + 0.1128e4 * pow(t, 0.5e1) + 0.4512e4 * pow(t, 0.6e1) + 0.6768e4 * pow(t, 0.7e1) + 0.4512e4 * pow(t, 0.8e1) - 0.335828e6 * pow(u, 0.8e1) + 0.1128e4 * pow(t, 0.9e1) - 0.37814e5 * pow(u, 0.9e1)) * pow(q3, 0.3e1) + (-0.7008e4 * t * t * u * u - 0.660e3 * pow(t, 0.4e1) * u - 0.60188e5 * pow(t, 0.3e1) * u * u - 0.5124e4 * pow(t, 0.5e1) * u - 0.204486e6 * pow(t, 0.4e1) * u * u - 0.362189e6 * pow(t, 0.5e1) * u * u - 0.2070748e7 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.3649414e7 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.2140242e7 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.4179824e7 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.3285331e7 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.500471e6 * t * t * pow(u, 0.6e1) - 0.50992e5 * t * pow(u, 0.3e1) - 0.1118932e7 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1637352e7 * t * t * pow(u, 0.4e1) - 0.953160e6 * t * pow(u, 0.5e1) - 0.356004e6 * t * pow(u, 0.4e1) - 0.2711833e7 * t * t * pow(u, 0.5e1) - 0.698509e6 * t * pow(u, 0.6e1) - 0.337756e6 * t * t * pow(u, 0.3e1) - 0.13815e5 * pow(t, 0.7e1) * u - 0.351559e6 * pow(t, 0.6e1) * u * u + 0.549804e6 * t * pow(u, 0.7e1) - 0.6867e4 * pow(t, 0.8e1) * u - 0.175603e6 * pow(t, 0.7e1) * u * u - 0.1241e4 * pow(t, 0.9e1) * u - 0.34927e5 * pow(t, 0.8e1) * u * u - 0.237854e6 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.442048e6 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.37267e5 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.791767e6 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.1002112e7 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.501282e6 * t * t * pow(u, 0.8e1) + 0.94074e5 * t * pow(u, 0.9e1) - 0.1137724e7 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.2282966e7 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.1453937e7 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.800093e6 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.1515034e7 * t * t * pow(u, 0.7e1) + 0.650988e6 * t * pow(u, 0.8e1) - 0.12653e5 * pow(t, 0.6e1) * u - 0.122336e6 * pow(u, 0.5e1) - 0.27264e5 * pow(u, 0.4e1) - 0.1792e4 * pow(u, 0.3e1) - 0.164946e6 * pow(u, 0.6e1) + 0.6242e4 * pow(u, 0.7e1) + 0.178686e6 * pow(u, 0.8e1) + 0.76006e5 * pow(u, 0.9e1) + 0.3750e4 * pow(u, 0.10e2)) * q3 * q3 - 0.1516e4 * pow(u, 0.7e1) - 0.2482e4 * pow(u, 0.8e1) - 0.2080e4 * pow(u, 0.9e1) + 0.3858e4 * pow(u, 0.10e2)) * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / t * pow(u, -0.3e1) * pow(-0.1e1 - t + q3, -0.3e1) * pow(q3 - u, -0.2e1));
}
#include <math.h>

double GstarVVCoeffsC2em2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.16e2 / 0.3e1 * (0.6e1 * t * pow(q4, 0.4e1) + (-0.12e2 * t * t - 0.12e2 * t * u - 0.12e2 * t) * pow(q4, 0.3e1) + (0.6e1 * pow(t, 0.3e1) + 0.24e2 * t * t * u + 0.6e1 * t * u * u + 0.24e2 * t * t + 0.12e2 * t * u + 0.6e1 * t) * q4 * q4 + (-0.12e2 * pow(t, 0.3e1) * u - 0.12e2 * t * t * u * u - 0.12e2 * pow(t, 0.3e1) - 0.24e2 * t * t * u - 0.12e2 * t * t) * q4 + 0.6e1 * pow(t, 0.3e1) * u * u + 0.12e2 * pow(t, 0.3e1) * u + 0.6e1 * pow(t, 0.3e1)) / u * pow(t, -0.3e1) * pow(q4 - u - 0.1e1, -0.3e1) * pow(q4 - t, -0.2e1) * pow(q3, 0.3e1) - 0.16e2 / 0.3e1 * ((0.10e2 * t - 0.6e1 * u) * pow(q4, 0.5e1) + (-0.38e2 * t * t - 0.12e2 * t * u + 0.12e2 * u * u - 0.18e2 * t + 0.12e2 * u) * pow(q4, 0.4e1) + (0.52e2 * pow(t, 0.3e1) + 0.72e2 * t * t * u - 0.6e1 * t * u * u - 0.6e1 * pow(u, 0.3e1) + 0.60e2 * t * t - 0.12e2 * u * u + 0.6e1 * t - 0.6e1 * u) * pow(q4, 0.3e1) + (-0.24e2 * pow(t, 0.4e1) - 0.102e3 * pow(t, 0.3e1) * u - 0.30e2 * t * t * u * u + 0.8e1 * t * pow(u, 0.3e1) - 0.84e2 * pow(t, 0.3e1) - 0.42e2 * t * t * u + 0.18e2 * t * u * u - 0.12e2 * t * t + 0.12e2 * t * u + 0.2e1 * t) * q4 * q4 + (0.48e2 * pow(t, 0.4e1) * u + 0.48e2 * pow(t, 0.3e1) * u * u - 0.4e1 * t * t * pow(u, 0.3e1) + 0.42e2 * pow(t, 0.4e1) + 0.72e2 * pow(t, 0.3e1) * u - 0.18e2 * t * t * u * u + 0.24e2 * pow(t, 0.3e1) - 0.24e2 * t * t * u - 0.10e2 * t * t) * q4 - 0.24e2 * pow(t, 0.4e1) * u * u + 0.2e1 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.42e2 * pow(t, 0.4e1) * u + 0.12e2 * pow(t, 0.3e1) * u * u - 0.18e2 * pow(t, 0.4e1) + 0.18e2 * pow(t, 0.3e1) * u + 0.8e1 * pow(t, 0.3e1)) / u * pow(t, -0.3e1) * pow(q4 - u - 0.1e1, -0.3e1) * pow(q4 - t, -0.2e1) * q3 * q3 - 0.16e2 / 0.3e1 * ((0.2e1 * t + 0.2e1 * u) * pow(q4, 0.6e1) + (-0.24e2 * t * t - 0.2e1 * t * u - 0.6e1 * u * u - 0.6e1 * u) * pow(q4, 0.5e1) + (0.72e2 * pow(t, 0.3e1) + 0.35e2 * t * t * u + 0.3e1 * t * u * u + 0.6e1 * pow(u, 0.3e1) + 0.12e2 * t * t - 0.6e1 * t * u + 0.12e2 * u * u - 0.6e1 * t + 0.6e1 * u) * pow(q4, 0.4e1) + (-0.80e2 * pow(t, 0.4e1) - 0.143e3 * pow(t, 0.3e1) * u + 0.9e1 * t * t * u * u - 0.8e1 * t * pow(u, 0.3e1) - 0.2e1 * pow(u, 0.4e1) - 0.74e2 * pow(t, 0.3e1) + 0.68e2 * t * t * u - 0.6e1 * t * u * u - 0.6e1 * pow(u, 0.3e1) + 0.48e2 * t * t + 0.6e1 * t * u - 0.6e1 * u * u + 0.4e1 * t - 0.2e1 * u) * pow(q4, 0.3e1) + (0.30e2 * pow(t, 0.5e1) + 0.168e3 * pow(t, 0.4e1) * u + 0.60e2 * pow(t, 0.3e1) * u * u - 0.27e2 * t * t * pow(u, 0.3e1) + 0.5e1 * t * pow(u, 0.4e1) + 0.110e3 * pow(t, 0.4e1) - 0.3e1 * pow(t, 0.3e1) * u - 0.113e3 * t * t * u * u + 0.12e2 * t * pow(u, 0.3e1) - 0.48e2 * pow(t, 0.3e1) - 0.128e3 * t * t * u + 0.9e1 * t * u * u - 0.42e2 * t * t + 0.2e1 * t * u) * q4 * q4 + (-0.60e2 * pow(t, 0.5e1) * u - 0.96e2 * pow(t, 0.4e1) * u * u + 0.21e2 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.7e1 * t * t * pow(u, 0.4e1) - 0.46e2 * pow(t, 0.5e1) - 0.105e3 * pow(t, 0.4e1) * u + 0.118e3 * pow(t, 0.3e1) * u * u + 0.33e2 * t * t * pow(u, 0.3e1) - 0.18e2 * pow(t, 0.4e1) + 0.157e3 * pow(t, 0.3e1) * u + 0.51e2 * t * t * u * u + 0.60e2 * pow(t, 0.3e1) + 0.31e2 * t * t * u + 0.6e1 * t * t) * q4 + 0.30e2 * pow(t, 0.5e1) * u * u + 0.8e1 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.10e2 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.46e2 * pow(t, 0.5e1) * u - 0.5e1 * pow(t, 0.4e1) * u * u - 0.41e2 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.18e2 * pow(t, 0.5e1) - 0.29e2 * pow(t, 0.4e1) * u - 0.60e2 * pow(t, 0.3e1) * u * u - 0.16e2 * pow(t, 0.4e1) - 0.37e2 * pow(t, 0.3e1) * u - 0.8e1 * pow(t, 0.3e1)) / u * pow(t, -0.3e1) * pow(q4 - u - 0.1e1, -0.3e1) * pow(q4 - t, -0.2e1) * q3 - 0.16e2 / 0.3e1 * (0.13e2 * pow(t, 0.3e1) * u + 0.36e2 * pow(t, 0.4e1) * u + 0.33e2 * pow(t, 0.3e1) * u * u + 0.13e2 * pow(t, 0.5e1) * u + 0.52e2 * pow(t, 0.4e1) * u * u - 0.5e1 * pow(t, 0.5e1) * u * u + 0.28e2 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.25e2 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.10e2 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.4e1 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.6e1 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.41e2 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.12e2 * pow(t, 0.6e1) * u * u - 0.16e2 * pow(t, 0.6e1) * u + (0.2e1 * t * t + 0.8e1 * t * u + 0.6e1 * t) * pow(q4, 0.6e1) + (0.18e2 * pow(t, 0.3e1) - 0.17e2 * t * t * u - 0.13e2 * t * u * u - 0.24e2 * t * t - 0.18e2 * t * u - 0.6e1 * t) * pow(q4, 0.5e1) + (-0.46e2 * pow(t, 0.4e1) - 0.32e2 * pow(t, 0.3e1) * u + 0.43e2 * t * t * u * u + 0.11e2 * t * pow(u, 0.3e1) + 0.16e2 * pow(t, 0.3e1) + 0.97e2 * t * t * u + 0.21e2 * t * u * u + 0.48e2 * t * t + 0.12e2 * t * u + 0.2e1 * t) * pow(q4, 0.4e1) + (0.40e2 * pow(t, 0.5e1) + 0.107e3 * pow(t, 0.4e1) * u - 0.6e1 * pow(t, 0.3e1) * u * u - 0.50e2 * t * t * pow(u, 0.3e1) - 0.5e1 * t * pow(u, 0.4e1) + 0.34e2 * pow(t, 0.4e1) - 0.122e3 * pow(t, 0.3e1) * u - 0.142e3 * t * t * u * u - 0.12e2 * t * pow(u, 0.3e1) - 0.94e2 * pow(t, 0.3e1) - 0.124e3 * t * t * u - 0.9e1 * t * u * u - 0.32e2 * t * t - 0.2e1 * t * u) * pow(q4, 0.3e1) + (-0.12e2 * pow(t, 0.6e1) - 0.90e2 * pow(t, 0.5e1) * u - 0.72e2 * pow(t, 0.4e1) * u * u + 0.42e2 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.29e2 * t * t * pow(u, 0.4e1) + t * pow(u, 0.5e1) - 0.48e2 * pow(t, 0.5e1) + 0.4e1 * pow(t, 0.4e1) * u + 0.198e3 * pow(t, 0.3e1) * u * u + 0.95e2 * t * t * pow(u, 0.3e1) + 0.3e1 * t * pow(u, 0.4e1) + 0.52e2 * pow(t, 0.4e1) + 0.234e3 * pow(t, 0.3e1) * u + 0.109e3 * t * t * u * u + 0.3e1 * t * pow(u, 0.3e1) + 0.78e2 * pow(t, 0.3e1) + 0.49e2 * t * t * u + t * u * u + 0.6e1 * t * t) * q4 * q4 + (0.24e2 * pow(t, 0.6e1) * u + 0.60e2 * pow(t, 0.5e1) * u * u + 0.7e1 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.28e2 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.7e1 * t * t * pow(u, 0.5e1) + 0.16e2 * pow(t, 0.6e1) + 0.53e2 * pow(t, 0.5e1) * u - 0.66e2 * pow(t, 0.4e1) * u * u - 0.117e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.26e2 * t * t * pow(u, 0.4e1) + 0.4e1 * pow(t, 0.5e1) - 0.123e3 * pow(t, 0.4e1) * u - 0.170e3 * pow(t, 0.3e1) * u * u - 0.36e2 * t * t * pow(u, 0.3e1) - 0.50e2 * pow(t, 0.4e1) - 0.101e3 * pow(t, 0.3e1) * u - 0.22e2 * t * t * u * u - 0.20e2 * pow(t, 0.3e1) - 0.5e1 * t * t * u) * q4 - 0.2e1 * t * pow(q4, 0.7e1) + 0.2e1 * pow(t, 0.3e1) + 0.8e1 * pow(t, 0.4e1) + 0.8e1 * pow(t, 0.5e1) - 0.6e1 * pow(t, 0.6e1)) / u * pow(t, -0.3e1) * pow(q4 - u - 0.1e1, -0.3e1) * pow(q4 - t, -0.2e1));
}
#include <math.h>

double GstarVVCoeffsC2em1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0.8e1 / 0.9e1 * (0.3168e4 * t * pow(q4, 0.8e1) + (-0.12672e5 * t * t - 0.12672e5 * t * u - 0.12672e5 * t) * pow(q4, 0.7e1) + (0.20592e5 * pow(t, 0.3e1) + 0.47520e5 * t * t * u + 0.20592e5 * t * u * u + 0.44352e5 * t * t + 0.38016e5 * t * u + 0.19008e5 * t) * pow(q4, 0.6e1) + (-0.17424e5 * pow(t, 0.4e1) - 0.71280e5 * pow(t, 0.3e1) * u - 0.71280e5 * t * t * u * u - 0.17424e5 * t * pow(u, 0.3e1) - 0.61776e5 * pow(t, 0.3e1) - 0.123552e6 * t * t * u - 0.42768e5 * t * u * u - 0.57024e5 * t * t - 0.38016e5 * t * u - 0.12672e5 * t) * pow(q4, 0.5e1) + (0.8118e4 * pow(t, 0.5e1) + 0.54648e5 * pow(t, 0.4e1) * u + 0.96228e5 * pow(t, 0.3e1) * u * u + 0.54648e5 * t * t * pow(u, 0.3e1) + 0.8118e4 * t * pow(u, 0.4e1) + 0.44352e5 * pow(t, 0.4e1) + 0.155232e6 * pow(t, 0.3e1) * u + 0.126720e6 * t * t * u * u + 0.22176e5 * t * pow(u, 0.3e1) + 0.64944e5 * pow(t, 0.3e1) + 0.104544e6 * t * t * u + 0.23760e5 * t * u * u + 0.31680e5 * t * t + 0.12672e5 * t * u + 0.3168e4 * t) * pow(q4, 0.4e1) + (-0.1980e4 * pow(t, 0.6e1) - 0.22572e5 * pow(t, 0.5e1) * u - 0.64152e5 * pow(t, 0.4e1) * u * u - 0.64152e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.22572e5 * t * t * pow(u, 0.4e1) - 0.1980e4 * t * pow(u, 0.5e1) - 0.17820e5 * pow(t, 0.5e1) - 0.96624e5 * pow(t, 0.4e1) * u - 0.138600e6 * pow(t, 0.3e1) * u * u - 0.58608e5 * t * t * pow(u, 0.3e1) - 0.5148e4 * t * pow(u, 0.4e1) - 0.36432e5 * pow(t, 0.4e1) - 0.102960e6 * pow(t, 0.3e1) * u - 0.58608e5 * t * t * u * u - 0.4752e4 * t * pow(u, 0.3e1) - 0.26928e5 * pow(t, 0.3e1) - 0.28512e5 * t * t * u - 0.1584e4 * t * u * u - 0.6336e4 * t * t) * pow(q4, 0.3e1) + (0.198e3 * pow(t, 0.7e1) + 0.4752e4 * pow(t, 0.6e1) * u + 0.21978e5 * pow(t, 0.5e1) * u * u + 0.34848e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.21978e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.4752e4 * t * t * pow(u, 0.5e1) + 0.198e3 * t * pow(u, 0.6e1) + 0.3960e4 * pow(t, 0.6e1) + 0.32076e5 * pow(t, 0.5e1) * u + 0.69696e5 * pow(t, 0.4e1) * u * u + 0.53064e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.11880e5 * t * t * pow(u, 0.4e1) + 0.396e3 * t * pow(u, 0.5e1) + 0.11286e5 * pow(t, 0.5e1) + 0.45144e5 * pow(t, 0.4e1) * u + 0.47124e5 * pow(t, 0.3e1) * u * u + 0.10296e5 * t * t * pow(u, 0.3e1) + 0.198e3 * t * pow(u, 0.4e1) + 0.9504e4 * pow(t, 0.4e1) + 0.19008e5 * pow(t, 0.3e1) * u + 0.3168e4 * t * t * u * u + 0.3168e4 * pow(t, 0.3e1)) * q4 * q4 + (-0.396e3 * pow(t, 0.7e1) * u - 0.3564e4 * pow(t, 0.6e1) * u * u - 0.8712e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.8712e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.3564e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.396e3 * t * t * pow(u, 0.6e1) - 0.396e3 * pow(t, 0.7e1) - 0.5544e4 * pow(t, 0.6e1) * u - 0.16632e5 * pow(t, 0.5e1) * u * u - 0.19008e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.8316e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.792e3 * t * t * pow(u, 0.5e1) - 0.1980e4 * pow(t, 0.6e1) - 0.9504e4 * pow(t, 0.5e1) * u - 0.13464e5 * pow(t, 0.4e1) * u * u - 0.6336e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.396e3 * t * t * pow(u, 0.4e1) - 0.1584e4 * pow(t, 0.5e1) - 0.3168e4 * pow(t, 0.4e1) * u - 0.1584e4 * pow(t, 0.3e1) * u * u) * q4 + 0.198e3 * pow(t, 0.7e1) * u * u + 0.792e3 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.1188e4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.792e3 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.198e3 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.396e3 * pow(t, 0.7e1) * u + 0.1584e4 * pow(t, 0.6e1) * u * u + 0.2376e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.1584e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.396e3 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.198e3 * pow(t, 0.7e1) + 0.792e3 * pow(t, 0.6e1) * u + 0.1188e4 * pow(t, 0.5e1) * u * u + 0.792e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.198e3 * pow(t, 0.3e1) * pow(u, 0.4e1)) * pow(q4 - t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) * pow(q4 - u - 0.1e1, -0.3e1) * pow(t, -0.3e1) / u * pow(q3, 0.3e1) + 0.8e1 / 0.9e1 * (0.1536e4 * pow(t, 0.5e1) * u * u + 0.1024e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.256e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.900e3 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.1650e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.570e3 * pow(t, 0.3e1) * pow(u, 0.5e1) + (0.3680e4 * t - 0.3744e4 * u) * pow(q4, 0.9e1) + (-0.21920e5 * t * t - 0.1984e4 * t * u + 0.14976e5 * u * u - 0.13792e5 * t + 0.14976e5 * u) * pow(q4, 0.8e1) + (0.55888e5 * pow(t, 0.3e1) + 0.65456e5 * t * t * u - 0.23280e5 * t * u * u - 0.24336e5 * pow(u, 0.3e1) + 0.73152e5 * t * t - 0.3008e4 * t * u - 0.44928e5 * u * u + 0.18368e5 * t - 0.22464e5 * u) * pow(q4, 0.7e1) + (-0.76544e5 * pow(t, 0.4e1) - 0.187936e6 * pow(t, 0.3e1) * u - 0.66288e5 * t * t * u * u + 0.49440e5 * t * pow(u, 0.3e1) + 0.20592e5 * pow(u, 0.4e1) - 0.168544e6 * pow(t, 0.3e1) - 0.148144e6 * t * t * u + 0.75488e5 * t * u * u + 0.50544e5 * pow(u, 0.3e1) - 0.82912e5 * t * t + 0.20928e5 * t * u + 0.44928e5 * u * u - 0.9152e4 * t + 0.14976e5 * u) * pow(q4, 0.6e1) + (0.60118e5 * pow(t, 0.5e1) + 0.251966e6 * pow(t, 0.4e1) * u + 0.245340e6 * pow(t, 0.3e1) * u * u + 0.19164e5 * t * t * pow(u, 0.3e1) - 0.42834e5 * t * pow(u, 0.4e1) - 0.9594e4 * pow(u, 0.5e1) + 0.205536e6 * pow(t, 0.4e1) + 0.399824e6 * pow(t, 0.3e1) * u + 0.67808e5 * t * t * u * u - 0.98864e5 * t * pow(u, 0.3e1) - 0.26208e5 * pow(u, 0.4e1) + 0.171392e6 * pow(t, 0.3e1) + 0.76464e5 * t * t * u - 0.81600e5 * t * u * u - 0.28080e5 * pow(u, 0.3e1) + 0.29024e5 * t * t - 0.24896e5 * t * u - 0.14976e5 * u * u - 0.32e2 * t - 0.3744e4 * u) * pow(q4, 0.5e1) + (0.928e3 * t + 0.29680e5 * t * t * u + 0.29856e5 * t * u * u + 0.8960e4 * t * u - 0.223872e6 * pow(t, 0.3e1) * u + 0.44736e5 * t * t * u * u - 0.473732e6 * pow(t, 0.4e1) * u - 0.319612e6 * pow(t, 0.3e1) * u * u - 0.183916e6 * pow(t, 0.5e1) * u - 0.319440e6 * pow(t, 0.4e1) * u * u + 0.53440e5 * t * pow(u, 0.3e1) - 0.157680e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.9930e4 * t * t * pow(u, 0.4e1) + 0.18636e5 * t * pow(u, 0.5e1) + 0.49982e5 * t * pow(u, 0.4e1) + 0.32496e5 * t * t * pow(u, 0.3e1) + 0.6084e4 * pow(u, 0.5e1) + 0.5616e4 * pow(u, 0.4e1) + 0.1872e4 * pow(u, 0.3e1) + 0.2340e4 * pow(u, 0.6e1) - 0.56608e5 * pow(t, 0.3e1) + 0.7680e4 * t * t - 0.181104e6 * pow(t, 0.4e1) - 0.141298e6 * pow(t, 0.5e1) - 0.27086e5 * pow(t, 0.6e1)) * pow(q4, 0.4e1) + (-0.23456e5 * t * t * u - 0.464e3 * t * u * u - 0.10352e5 * pow(t, 0.3e1) * u - 0.48768e5 * t * t * u * u + 0.234702e6 * pow(t, 0.4e1) * u + 0.37044e5 * pow(t, 0.3e1) * u * u + 0.292008e6 * pow(t, 0.5e1) * u + 0.372156e6 * pow(t, 0.4e1) * u * u + 0.208998e6 * pow(t, 0.5e1) * u * u + 0.197350e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.51900e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.4016e4 * t * pow(u, 0.3e1) + 0.91024e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.32840e5 * t * t * pow(u, 0.4e1) - 0.10520e5 * t * pow(u, 0.5e1) - 0.10086e5 * t * pow(u, 0.4e1) - 0.8112e4 * t * t * pow(u, 0.5e1) - 0.3986e4 * t * pow(u, 0.6e1) - 0.54884e5 * t * t * pow(u, 0.3e1) + 0.74420e5 * pow(t, 0.6e1) * u - 0.234e3 * pow(u, 0.5e1) - 0.468e3 * pow(u, 0.6e1) - 0.6224e4 * pow(t, 0.3e1) - 0.5024e4 * t * t + 0.51488e5 * pow(t, 0.4e1) - 0.234e3 * pow(u, 0.7e1) + 0.100914e6 * pow(t, 0.5e1) + 0.56256e5 * pow(t, 0.6e1) + 0.6512e4 * pow(t, 0.7e1)) * pow(q4, 0.3e1) + (0.22336e5 * pow(t, 0.3e1) * u + 0.2512e4 * t * t * u * u - 0.8552e4 * pow(t, 0.4e1) * u + 0.44460e5 * pow(t, 0.3e1) * u * u - 0.106932e6 * pow(t, 0.5e1) * u - 0.64080e5 * pow(t, 0.4e1) * u * u - 0.194070e6 * pow(t, 0.5e1) * u * u - 0.115260e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.856e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.108964e6 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.61940e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.7710e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.1922e4 * t * t * pow(u, 0.6e1) + 0.34552e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.12696e5 * t * t * pow(u, 0.4e1) + 0.444e3 * t * pow(u, 0.5e1) + 0.58e2 * t * pow(u, 0.4e1) + 0.8146e4 * t * t * pow(u, 0.5e1) + 0.714e3 * t * pow(u, 0.6e1) + 0.8984e4 * t * t * pow(u, 0.3e1) - 0.15558e5 * pow(t, 0.7e1) * u - 0.71238e5 * pow(t, 0.6e1) * u * u + 0.328e3 * t * pow(u, 0.7e1) - 0.97974e5 * pow(t, 0.6e1) * u + 0.4096e4 * pow(t, 0.3e1) + 0.624e3 * pow(t, 0.4e1) - 0.17686e5 * pow(t, 0.5e1) - 0.31848e5 * pow(t, 0.6e1) - 0.12588e5 * pow(t, 0.7e1) - 0.648e3 * pow(t, 0.8e1)) * q4 * q4 + (-0.4096e4 * pow(t, 0.4e1) * u - 0.2048e4 * pow(t, 0.3e1) * u * u - 0.1880e4 * pow(t, 0.5e1) * u - 0.12108e5 * pow(t, 0.4e1) * u * u + 0.20472e5 * pow(t, 0.5e1) * u * u - 0.5928e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.9876e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.46240e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.11090e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.3920e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.618e3 * t * t * pow(u, 0.6e1) - 0.7864e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.314e3 * t * t * pow(u, 0.4e1) - 0.780e3 * t * t * pow(u, 0.5e1) + 0.17328e5 * pow(t, 0.7e1) * u + 0.47898e5 * pow(t, 0.6e1) * u * u + 0.1296e4 * pow(t, 0.8e1) * u + 0.11580e5 * pow(t, 0.7e1) * u * u + 0.27560e5 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.26008e5 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.9024e4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.140e3 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.152e3 * t * t * pow(u, 0.7e1) + 0.23124e5 * pow(t, 0.6e1) * u - 0.2048e4 * pow(t, 0.5e1) + 0.2678e4 * pow(t, 0.6e1) + 0.5820e4 * pow(t, 0.7e1) + 0.1278e4 * pow(t, 0.8e1)) * q4 - 0.1950e4 * pow(t, 0.7e1) * u - 0.1500e4 * pow(t, 0.6e1) * u * u - 0.1278e4 * pow(t, 0.8e1) * u - 0.4740e4 * pow(t, 0.7e1) * u * u - 0.648e3 * pow(t, 0.8e1) * u * u - 0.2534e4 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.3656e4 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.2244e4 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.416e3 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.58e2 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.6180e4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.2880e4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.210e3 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.372e3 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.1024e4 * pow(t, 0.6e1) * u + 0.256e3 * pow(t, 0.7e1) - 0.630e3 * pow(t, 0.8e1)) * pow(q4 - t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) * pow(q4 - u - 0.1e1, -0.3e1) * pow(t, -0.3e1) / u * q3 * q3 + 0.8e1 / 0.9e1 * (-0.1656e4 * pow(t, 0.5e1) * u * u - 0.976e3 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.220e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.8762e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.4894e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.1067e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + (-0.800e3 * u * u + 0.7808e4 * t - 0.160e3 * u + 0.381648e6 * t * t * u + 0.56368e5 * t * u * u + 0.33696e5 * t * u + 0.370368e6 * pow(t, 0.3e1) * u + 0.561552e6 * t * t * u * u - 0.486758e6 * pow(t, 0.4e1) * u + 0.222088e6 * pow(t, 0.3e1) * u * u - 0.390102e6 * pow(t, 0.5e1) * u - 0.424774e6 * pow(t, 0.4e1) * u * u + 0.43136e5 * t * pow(u, 0.3e1) - 0.25812e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.64488e5 * t * t * pow(u, 0.4e1) - 0.2310e4 * t * pow(u, 0.5e1) + 0.10332e5 * t * pow(u, 0.4e1) + 0.341812e6 * t * t * pow(u, 0.3e1) - 0.1790e4 * pow(u, 0.5e1) - 0.2560e4 * pow(u, 0.4e1) - 0.1920e4 * pow(u, 0.3e1) - 0.510e3 * pow(u, 0.6e1) + 0.142832e6 * pow(t, 0.3e1) + 0.93664e5 * t * t - 0.135920e6 * pow(t, 0.4e1) - 0.272532e6 * pow(t, 0.5e1) - 0.82932e5 * pow(t, 0.6e1)) * pow(q4, 0.5e1) + (-0.960e3 * t - 0.176880e6 * t * t * u - 0.9232e4 * t * u * u - 0.4448e4 * t * u - 0.533968e6 * pow(t, 0.3e1) * u - 0.380416e6 * t * t * u * u - 0.28714e5 * pow(t, 0.4e1) * u - 0.783012e6 * pow(t, 0.3e1) * u * u + 0.617626e6 * pow(t, 0.5e1) * u + 0.263644e6 * pow(t, 0.4e1) * u * u + 0.510613e6 * pow(t, 0.5e1) * u * u + 0.272228e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.45772e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.9712e4 * t * pow(u, 0.3e1) - 0.431108e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.199420e6 * t * t * pow(u, 0.4e1) + 0.5738e4 * t * pow(u, 0.5e1) - 0.1502e4 * t * pow(u, 0.4e1) - 0.31485e5 * t * t * pow(u, 0.5e1) + 0.3389e4 * t * pow(u, 0.6e1) - 0.403780e6 * t * t * pow(u, 0.3e1) + 0.259947e6 * pow(t, 0.6e1) * u + 0.510e3 * pow(u, 0.5e1) + 0.320e3 * pow(u, 0.4e1) + 0.80e2 * pow(u, 0.3e1) + 0.380e3 * pow(u, 0.6e1) - 0.127904e6 * pow(t, 0.3e1) - 0.33120e5 * t * t - 0.54512e5 * pow(t, 0.4e1) + 0.110e3 * pow(u, 0.7e1) + 0.183650e6 * pow(t, 0.5e1) + 0.179012e6 * pow(t, 0.6e1) + 0.34490e5 * pow(t, 0.7e1)) * pow(q4, 0.4e1) + (0.27344e5 * t * t * u + 0.480e3 * t * u * u + 0.235168e6 * pow(t, 0.3e1) * u + 0.86352e5 * t * t * u * u + 0.305070e6 * pow(t, 0.4e1) * u + 0.550768e6 * pow(t, 0.3e1) * u * u - 0.161750e6 * pow(t, 0.5e1) * u + 0.393338e6 * pow(t, 0.4e1) * u * u - 0.452954e6 * pow(t, 0.5e1) * u * u + 0.95930e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.309494e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.325342e6 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.75742e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.43961e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.9299e4 * t * t * pow(u, 0.6e1) + 0.1744e4 * t * pow(u, 0.3e1) + 0.619228e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.144552e6 * t * t * pow(u, 0.4e1) - 0.1110e4 * t * pow(u, 0.5e1) + 0.1568e4 * t * pow(u, 0.4e1) + 0.65628e5 * t * t * pow(u, 0.5e1) - 0.2582e4 * t * pow(u, 0.6e1) + 0.151468e6 * t * t * pow(u, 0.3e1) - 0.96587e5 * pow(t, 0.7e1) * u - 0.304945e6 * pow(t, 0.6e1) * u * u - 0.1168e4 * t * pow(u, 0.7e1) - 0.371848e6 * pow(t, 0.6e1) * u - 0.10e2 * pow(u, 0.5e1) - 0.30e2 * pow(u, 0.6e1) + 0.40448e5 * pow(t, 0.3e1) + 0.3936e4 * t * t + 0.72192e5 * pow(t, 0.4e1) - 0.30e2 * pow(u, 0.7e1) - 0.5408e4 * pow(t, 0.5e1) - 0.108084e6 * pow(t, 0.6e1) - 0.67926e5 * pow(t, 0.7e1) - 0.7738e4 * pow(t, 0.8e1) - 0.10e2 * pow(u, 0.8e1)) * pow(q4, 0.3e1) + (-0.28816e5 * pow(t, 0.3e1) * u - 0.1968e4 * t * t * u * u - 0.109336e6 * pow(t, 0.4e1) * u - 0.107688e6 * pow(t, 0.3e1) * u * u - 0.92542e5 * pow(t, 0.5e1) * u - 0.285844e6 * pow(t, 0.4e1) * u * u - 0.66581e5 * pow(t, 0.5e1) * u * u - 0.327656e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.223438e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.99306e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.138914e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.110555e6 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.12071e5 * t * t * pow(u, 0.6e1) - 0.213380e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.24954e5 * t * t * pow(u, 0.4e1) - 0.158e3 * t * pow(u, 0.5e1) - 0.60e2 * t * pow(u, 0.4e1) - 0.25918e5 * t * t * pow(u, 0.5e1) + 0.3e1 * t * pow(u, 0.6e1) - 0.11368e5 * t * t * pow(u, 0.3e1) + 0.120049e6 * pow(t, 0.7e1) * u + 0.245749e6 * pow(t, 0.6e1) * u * u + 0.240e3 * t * pow(u, 0.7e1) + 0.18696e5 * pow(t, 0.8e1) * u + 0.95034e5 * pow(t, 0.7e1) * u * u + 0.165417e6 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.102873e6 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.1478e4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.17844e5 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.1707e4 * t * t * pow(u, 0.7e1) + 0.139e3 * t * pow(u, 0.8e1) + 0.97246e5 * pow(t, 0.6e1) * u - 0.3520e4 * pow(t, 0.3e1) - 0.15568e5 * pow(t, 0.4e1) - 0.23212e5 * pow(t, 0.5e1) + 0.6030e4 * pow(t, 0.6e1) + 0.34840e5 * pow(t, 0.7e1) + 0.14468e5 * pow(t, 0.8e1) + 0.726e3 * pow(t, 0.9e1)) * q4 * q4 + (0.3904e4 * pow(t, 0.4e1) * u + 0.1760e4 * pow(t, 0.3e1) * u * u + 0.23664e5 * pow(t, 0.5e1) * u + 0.28740e5 * pow(t, 0.4e1) * u * u + 0.70920e5 * pow(t, 0.5e1) * u * u + 0.77478e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.29286e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.76634e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.92686e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.35173e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.1689e4 * t * t * pow(u, 0.6e1) + 0.11472e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.246e3 * t * t * pow(u, 0.4e1) + 0.1133e4 * t * t * pow(u, 0.5e1) - 0.23343e5 * pow(t, 0.7e1) * u + 0.389e3 * pow(t, 0.6e1) * u * u - 0.20247e5 * pow(t, 0.8e1) * u - 0.60008e5 * pow(t, 0.7e1) * u * u - 0.1452e4 * pow(t, 0.9e1) * u - 0.14178e5 * pow(t, 0.8e1) * u * u - 0.38267e5 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.41127e5 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.13618e5 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.5416e4 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.3609e4 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.161e3 * t * t * pow(u, 0.8e1) - 0.54615e5 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.13836e5 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.45547e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.19208e5 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.963e3 * t * t * pow(u, 0.7e1) + 0.20309e5 * pow(t, 0.6e1) * u + 0.2336e4 * pow(t, 0.5e1) + 0.5574e4 * pow(t, 0.6e1) - 0.710e3 * pow(t, 0.7e1) - 0.6492e4 * pow(t, 0.8e1) - 0.1388e4 * pow(t, 0.9e1)) * q4 + (-0.800e3 * t + 0.160e3 * u) * pow(q4, 0.10e2) + (-0.4352e4 * t * t + 0.7072e4 * t * u - 0.800e3 * u * u + 0.7168e4 * t - 0.800e3 * u) * pow(q4, 0.9e1) + (0.36720e5 * pow(t, 0.3e1) - 0.384e3 * t * t * u - 0.18304e5 * t * u * u + 0.1680e4 * pow(u, 0.3e1) - 0.4864e4 * t * t - 0.41568e5 * t * u + 0.3200e4 * u * u - 0.21632e5 * t + 0.1600e4 * u) * pow(q4, 0.8e1) + (-0.91440e5 * pow(t, 0.4e1) - 0.113984e6 * pow(t, 0.3e1) * u + 0.37216e5 * t * t * u * u + 0.20112e5 * t * pow(u, 0.3e1) - 0.1920e4 * pow(u, 0.4e1) - 0.79152e5 * pow(t, 0.3e1) + 0.110688e6 * t * t * u + 0.75952e5 * t * u * u - 0.5120e4 * pow(u, 0.3e1) + 0.62016e5 * t * t + 0.86720e5 * t * u - 0.4800e4 * u * u + 0.30848e5 * t - 0.1600e4 * u) * pow(q4, 0.7e1) + (0.115326e6 * pow(t, 0.5e1) + 0.316634e6 * pow(t, 0.4e1) * u + 0.119412e6 * pow(t, 0.3e1) * u * u - 0.73236e5 * t * t * pow(u, 0.3e1) - 0.8130e4 * t * pow(u, 0.4e1) + 0.1290e4 * pow(u, 0.5e1) + 0.225248e6 * pow(t, 0.4e1) + 0.71232e5 * pow(t, 0.3e1) * u - 0.302736e6 * t * t * u * u - 0.55280e5 * t * pow(u, 0.3e1) + 0.4160e4 * pow(u, 0.4e1) - 0.9424e4 * pow(t, 0.3e1) - 0.342416e6 * t * t * u - 0.105264e6 * t * u * u + 0.5280e4 * pow(u, 0.3e1) - 0.117280e6 * t * t - 0.81472e5 * t * u + 0.3200e4 * u * u - 0.22432e5 * t + 0.800e3 * u) * pow(q4, 0.6e1) + 0.726e3 * pow(t, 0.9e1) * u * u + 0.3640e4 * pow(t, 0.6e1) * pow(u, 0.5e1) + 0.250e3 * pow(t, 0.5e1) * pow(u, 0.6e1) - 0.844e3 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.290e3 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.2851e4 * pow(t, 0.7e1) * u - 0.7448e4 * pow(t, 0.6e1) * u * u + 0.2261e4 * pow(t, 0.8e1) * u + 0.128e3 * pow(t, 0.7e1) * u * u + 0.1388e4 * pow(t, 0.9e1) * u + 0.5779e4 * pow(t, 0.8e1) * u * u + 0.7885e4 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.1702e4 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.5282e4 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.4697e4 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.1207e4 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.3220e4 * pow(t, 0.8e1) * pow(u, 0.3e1) + 0.5330e4 * pow(t, 0.7e1) * pow(u, 0.4e1) - 0.8082e4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.12628e5 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.7771e4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.1764e4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.1264e4 * pow(t, 0.6e1) * u - 0.364e3 * pow(t, 0.7e1) - 0.338e3 * pow(t, 0.8e1) + 0.672e3 * pow(t, 0.9e1)) * pow(q4 - t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) * pow(q4 - u - 0.1e1, -0.3e1) * pow(t, -0.3e1) / u * q3 + 0.8e1 / 0.9e1 * (0.348e3 * pow(t, 0.5e1) * u * u + 0.184e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.46e2 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.3034e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.1518e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.335e3 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.240e3 * pow(t, 0.10e2) + (-0.2080e4 * t - 0.192e3 * u) * pow(q4, 0.11e2) + (0.7392e4 * t * t + 0.12480e5 * t * u + 0.1152e4 * u * u + 0.11552e5 * t + 0.1152e4 * u) * pow(q4, 0.10e2) + (-0.3440e4 * pow(t, 0.3e1) - 0.42704e5 * t * t * u - 0.32608e5 * t * u * u - 0.2976e4 * pow(u, 0.3e1) - 0.43264e5 * t * t - 0.58528e5 * t * u - 0.5760e4 * u * u - 0.26752e5 * t - 0.2880e4 * u) * pow(q4, 0.9e1) + (-0.24480e5 * pow(t, 0.4e1) + 0.26800e5 * pow(t, 0.3e1) * u + 0.107312e6 * t * t * u * u + 0.48544e5 * t * pow(u, 0.3e1) + 0.4320e4 * pow(u, 0.4e1) + 0.46848e5 * pow(t, 0.3e1) + 0.213072e6 * t * t * u + 0.125936e6 * t * u * u + 0.12000e5 * pow(u, 0.3e1) + 0.104224e6 * t * t + 0.111040e6 * t * u + 0.11520e5 * u * u + 0.33280e5 * t + 0.3840e4 * u) * pow(q4, 0.8e1) + (0.58830e5 * pow(t, 0.5e1) + 0.97588e5 * pow(t, 0.4e1) * u - 0.82436e5 * pow(t, 0.3e1) * u * u - 0.155848e6 * t * t * pow(u, 0.3e1) - 0.45162e5 * t * pow(u, 0.4e1) - 0.3852e4 * pow(u, 0.5e1) + 0.29568e5 * pow(t, 0.4e1) - 0.258240e6 * pow(t, 0.3e1) * u - 0.449248e6 * t * t * u * u - 0.149504e6 * t * pow(u, 0.3e1) - 0.13440e5 * pow(u, 0.4e1) - 0.152016e6 * pow(t, 0.3e1) - 0.424672e6 * t * t * u - 0.188960e6 * t * u * u - 0.18240e5 * pow(u, 0.3e1) - 0.132864e6 * t * t - 0.108480e6 * t * u - 0.11520e5 * u * u - 0.23840e5 * t - 0.2880e4 * u) * pow(q4, 0.7e1) + (0.5760e4 * u * u + 0.9760e4 * t + 0.1152e4 * u + 0.429984e6 * t * t * u + 0.137440e6 * t * u * u + 0.57280e5 * t * u + 0.652976e6 * pow(t, 0.3e1) * u + 0.723472e6 * t * t * u * u - 0.4488e4 * pow(t, 0.4e1) * u + 0.592324e6 * pow(t, 0.3e1) * u * u - 0.233936e6 * pow(t, 0.5e1) * u - 0.153420e6 * pow(t, 0.4e1) * u * u + 0.169216e6 * t * pow(u, 0.3e1) + 0.142368e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.146658e6 * t * t * pow(u, 0.4e1) + 0.27024e5 * t * pow(u, 0.5e1) + 0.106286e6 * t * pow(u, 0.4e1) + 0.537752e6 * t * t * pow(u, 0.3e1) + 0.8688e4 * pow(u, 0.5e1) + 0.14400e5 * pow(u, 0.4e1) + 0.12480e5 * pow(u, 0.3e1) + 0.2160e4 * pow(u, 0.6e1) + 0.217472e6 * pow(t, 0.3e1) + 0.95776e5 * t * t + 0.79744e5 * pow(t, 0.4e1) - 0.124242e6 * pow(t, 0.5e1) - 0.64806e5 * pow(t, 0.6e1)) * pow(q4, 0.6e1) + (-0.1152e4 * u * u - 0.2112e4 * t - 0.192e3 * u - 0.232080e6 * t * t * u - 0.48800e5 * t * u * u - 0.15520e5 * t * u - 0.710432e6 * pow(t, 0.3e1) * u - 0.560336e6 * t * t * u * u - 0.460280e6 * pow(t, 0.4e1) * u - 0.1145684e7 * pow(t, 0.3e1) * u * u + 0.315270e6 * pow(t, 0.5e1) * u - 0.207400e6 * pow(t, 0.4e1) * u * u + 0.377765e6 * pow(t, 0.5e1) * u * u + 0.108302e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.158214e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.84864e5 * t * pow(u, 0.3e1) - 0.760132e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.406524e6 * t * t * pow(u, 0.4e1) - 0.45842e5 * t * pow(u, 0.5e1) - 0.85018e5 * t * pow(u, 0.4e1) - 0.94557e5 * t * t * pow(u, 0.5e1) - 0.10271e5 * t * pow(u, 0.6e1) - 0.678480e6 * t * t * pow(u, 0.3e1) + 0.238423e6 * pow(t, 0.6e1) * u - 0.5832e4 * pow(u, 0.5e1) - 0.5760e4 * pow(u, 0.4e1) - 0.3360e4 * pow(u, 0.3e1) - 0.3216e4 * pow(u, 0.6e1) - 0.157936e6 * pow(t, 0.3e1) - 0.38656e5 * t * t - 0.182496e6 * pow(t, 0.4e1) - 0.744e3 * pow(u, 0.7e1) + 0.35118e5 * pow(t, 0.5e1) + 0.138276e6 * pow(t, 0.6e1) + 0.41056e5 * pow(t, 0.7e1)) * pow(q4, 0.5e1) + (0.192e3 * t + 0.63760e5 * t * t * u + 0.7088e4 * t * u * u + 0.1728e4 * t * u + 0.368784e6 * pow(t, 0.3e1) * u + 0.211072e6 * t * t * u * u + 0.597040e6 * pow(t, 0.4e1) * u + 0.906972e6 * pow(t, 0.3e1) * u * u + 0.103120e6 * pow(t, 0.5e1) * u + 0.878160e6 * pow(t, 0.4e1) * u * u - 0.245093e6 * pow(t, 0.5e1) * u * u + 0.421082e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.605152e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.313879e6 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.10476e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.118188e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.42411e5 * t * t * pow(u, 0.6e1) + 0.17376e5 * t * pow(u, 0.3e1) + 0.1081672e7 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.380752e6 * t * t * pow(u, 0.4e1) + 0.23624e5 * t * pow(u, 0.5e1) + 0.26238e5 * t * pow(u, 0.4e1) + 0.200661e6 * t * t * pow(u, 0.5e1) + 0.11547e5 * t * pow(u, 0.6e1) + 0.378208e6 * t * t * pow(u, 0.3e1) - 0.135638e6 * pow(t, 0.7e1) * u - 0.348725e6 * pow(t, 0.6e1) * u * u + 0.2337e4 * t * pow(u, 0.7e1) - 0.344655e6 * pow(t, 0.6e1) * u + 0.1008e4 * pow(u, 0.5e1) + 0.480e3 * pow(u, 0.4e1) + 0.96e2 * pow(u, 0.3e1) + 0.1104e4 * pow(u, 0.6e1) + 0.58656e5 * pow(t, 0.3e1) + 0.8160e4 * t * t + 0.134112e6 * pow(t, 0.4e1) + 0.624e3 * pow(u, 0.7e1) + 0.81334e5 * pow(t, 0.5e1) - 0.71696e5 * pow(t, 0.6e1) - 0.82246e5 * pow(t, 0.7e1) - 0.15354e5 * pow(t, 0.8e1) + 0.144e3 * pow(u, 0.8e1)) * pow(q4, 0.4e1) + (-0.7360e4 * t * t * u - 0.96e2 * t * u * u - 0.87776e5 * pow(t, 0.3e1) * u - 0.32656e5 * t * t * u * u - 0.271244e6 * pow(t, 0.4e1) * u - 0.309320e6 * pow(t, 0.3e1) * u * u - 0.281274e6 * pow(t, 0.5e1) * u - 0.685960e6 * pow(t, 0.4e1) * u * u - 0.337479e6 * pow(t, 0.5e1) * u * u - 0.792848e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.590124e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.436e3 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.378494e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.302930e6 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.62658e5 * t * t * pow(u, 0.6e1) - 0.768e3 * t * pow(u, 0.3e1) - 0.577996e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.133844e6 * t * t * pow(u, 0.4e1) - 0.3770e4 * t * pow(u, 0.5e1) - 0.2356e4 * t * pow(u, 0.4e1) - 0.124938e6 * t * t * pow(u, 0.5e1) - 0.3339e4 * t * pow(u, 0.6e1) - 0.84808e5 * t * t * pow(u, 0.3e1) + 0.181510e6 * pow(t, 0.7e1) * u + 0.296226e6 * pow(t, 0.6e1) * u * u - 0.1528e4 * t * pow(u, 0.7e1) + 0.44373e5 * pow(t, 0.8e1) * u + 0.170902e6 * pow(t, 0.7e1) * u * u + 0.257390e6 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.136331e6 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.37139e5 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.58324e5 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.12820e5 * t * t * pow(u, 0.7e1) - 0.275e3 * t * pow(u, 0.8e1) + 0.50026e5 * pow(t, 0.6e1) * u - 0.12e2 * pow(u, 0.5e1) - 0.48e2 * pow(u, 0.6e1) - 0.10320e5 * pow(t, 0.3e1) - 0.768e3 * t * t - 0.40672e5 * pow(t, 0.4e1) - 0.72e2 * pow(u, 0.7e1) - 0.64372e5 * pow(t, 0.5e1) - 0.18868e5 * pow(t, 0.6e1) + 0.42694e5 * pow(t, 0.7e1) + 0.28670e5 * pow(t, 0.8e1) - 0.48e2 * pow(u, 0.8e1) + 0.3158e4 * pow(t, 0.9e1) - 0.12e2 * pow(u, 0.9e1)) * pow(q4, 0.3e1) + (0.7888e4 * pow(t, 0.3e1) * u + 0.384e3 * t * t * u * u + 0.42264e5 * pow(t, 0.4e1) * u + 0.38512e5 * pow(t, 0.3e1) * u * u + 0.103308e6 * pow(t, 0.5e1) * u + 0.170892e6 * pow(t, 0.4e1) * u * u + 0.273451e6 * pow(t, 0.5e1) * u * u + 0.348778e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.183562e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.295969e6 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.366230e6 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.178134e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.20761e5 * t * t * pow(u, 0.6e1) + 0.108976e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.11022e5 * t * t * pow(u, 0.4e1) + 0.84e2 * t * pow(u, 0.5e1) + 0.12e2 * t * pow(u, 0.4e1) + 0.20345e5 * t * t * pow(u, 0.5e1) + 0.191e3 * t * pow(u, 0.6e1) + 0.3176e4 * t * t * pow(u, 0.3e1) - 0.276e3 * pow(t, 0.10e2) - 0.37236e5 * pow(t, 0.7e1) * u + 0.60437e5 * pow(t, 0.6e1) * u * u + 0.189e3 * t * pow(u, 0.7e1) - 0.52740e5 * pow(t, 0.8e1) * u - 0.132676e6 * pow(t, 0.7e1) * u * u - 0.7746e4 * pow(t, 0.9e1) * u - 0.45684e5 * pow(t, 0.8e1) * u * u - 0.102136e6 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.99295e5 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.24683e5 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.26182e5 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.17834e5 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.2353e4 * t * t * pow(u, 0.8e1) + 0.11e2 * t * pow(u, 0.9e1) - 0.93605e5 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.89873e5 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.176978e6 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.90022e5 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.10999e5 * t * t * pow(u, 0.7e1) + 0.81e2 * t * pow(u, 0.8e1) + 0.80701e5 * pow(t, 0.6e1) * u + 0.736e3 * pow(t, 0.3e1) + 0.4224e4 * pow(t, 0.4e1) + 0.13844e5 * pow(t, 0.5e1) + 0.19254e5 * pow(t, 0.6e1) + 0.2476e4 * pow(t, 0.7e1) - 0.13572e5 * pow(t, 0.8e1) - 0.5668e4 * pow(t, 0.9e1)) * q4 * q4 + (-0.880e3 * pow(t, 0.4e1) * u - 0.368e3 * pow(t, 0.3e1) * u * u - 0.7832e4 * pow(t, 0.5e1) * u - 0.8704e4 * pow(t, 0.4e1) * u * u - 0.40800e5 * pow(t, 0.5e1) * u * u - 0.35514e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.12006e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.95698e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.73804e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.23651e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.938e3 * t * t * pow(u, 0.6e1) - 0.3240e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.48e2 * t * t * pow(u, 0.4e1) - 0.343e3 * t * t * pow(u, 0.5e1) + 0.506e3 * pow(t, 0.10e2) + 0.6018e4 * pow(t, 0.9e1) * u * u + 0.18041e5 * pow(t, 0.6e1) * pow(u, 0.5e1) - 0.1130e4 * pow(t, 0.5e1) * pow(u, 0.6e1) - 0.7309e4 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.2974e4 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.197e3 * t * t * pow(u, 0.9e1) + 0.552e3 * pow(t, 0.10e2) * u - 0.14979e5 * pow(t, 0.7e1) * u - 0.59238e5 * pow(t, 0.6e1) * u * u + 0.9287e4 * pow(t, 0.8e1) * u - 0.3562e4 * pow(t, 0.7e1) * u * u + 0.8119e4 * pow(t, 0.9e1) * u + 0.28380e5 * pow(t, 0.8e1) * u * u + 0.35567e5 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.492e3 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.42011e5 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.40748e5 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.13835e5 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.790e3 * t * t * pow(u, 0.8e1) + 0.19665e5 * pow(t, 0.8e1) * pow(u, 0.3e1) + 0.28838e5 * pow(t, 0.7e1) * pow(u, 0.4e1) - 0.57930e5 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.102978e6 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.79553e5 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.25378e5 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.1236e4 * t * t * pow(u, 0.7e1) - 0.20647e5 * pow(t, 0.6e1) * u - 0.512e3 * pow(t, 0.5e1) - 0.2320e4 * pow(t, 0.6e1) - 0.3698e4 * pow(t, 0.7e1) - 0.348e3 * pow(t, 0.8e1) + 0.2486e4 * pow(t, 0.9e1)) * q4 - 0.276e3 * pow(t, 0.10e2) * u * u - 0.2451e4 * pow(t, 0.9e1) * u * u + 0.3266e4 * pow(t, 0.6e1) * pow(u, 0.5e1) + 0.5767e4 * pow(t, 0.5e1) * pow(u, 0.6e1) + 0.3502e4 * pow(t, 0.4e1) * pow(u, 0.7e1) + 0.791e3 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.506e3 * pow(t, 0.10e2) * u + 0.1551e4 * pow(t, 0.7e1) * u + 0.3128e4 * pow(t, 0.6e1) * u * u + 0.1558e4 * pow(t, 0.8e1) * u + 0.5847e4 * pow(t, 0.7e1) * u * u - 0.937e3 * pow(t, 0.9e1) * u - 0.86e2 * pow(t, 0.8e1) * u * u + 0.5241e4 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.11628e5 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.11665e5 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.5898e4 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.1231e4 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.1430e4 * pow(t, 0.9e1) * pow(u, 0.3e1) - 0.3000e4 * pow(t, 0.8e1) * pow(u, 0.4e1) - 0.3022e4 * pow(t, 0.7e1) * pow(u, 0.5e1) - 0.1028e4 * pow(t, 0.6e1) * pow(u, 0.6e1) + 0.702e3 * pow(t, 0.5e1) * pow(u, 0.7e1) + 0.752e3 * pow(t, 0.4e1) * pow(u, 0.8e1) + 0.198e3 * pow(t, 0.3e1) * pow(u, 0.9e1) - 0.4310e4 * pow(t, 0.8e1) * pow(u, 0.3e1) - 0.2155e4 * pow(t, 0.7e1) * pow(u, 0.4e1) + 0.10144e5 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.9286e4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.4482e4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.927e3 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.328e3 * pow(t, 0.6e1) * u + 0.118e3 * pow(t, 0.7e1) + 0.274e3 * pow(t, 0.8e1) + 0.124e3 * pow(t, 0.9e1)) * pow(q4 - t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) * pow(q4 - u - 0.1e1, -0.3e1) * pow(t, -0.3e1) / u);
}
#include <math.h>

double GstarVVCoeffsC2e0 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.8e1 / 0.27e2 * (0.15552e5 * t * pow(q4, 0.8e1) + (-0.62208e5 * t * t - 0.62208e5 * t * u - 0.62208e5 * t) * pow(q4, 0.7e1) + (0.101088e6 * pow(t, 0.3e1) + 0.233280e6 * t * t * u + 0.101088e6 * t * u * u + 0.217728e6 * t * t + 0.186624e6 * t * u + 0.93312e5 * t) * pow(q4, 0.6e1) + (-0.85536e5 * pow(t, 0.4e1) - 0.349920e6 * pow(t, 0.3e1) * u - 0.349920e6 * t * t * u * u - 0.85536e5 * t * pow(u, 0.3e1) - 0.303264e6 * pow(t, 0.3e1) - 0.606528e6 * t * t * u - 0.209952e6 * t * u * u - 0.279936e6 * t * t - 0.186624e6 * t * u - 0.62208e5 * t) * pow(q4, 0.5e1) + (0.39852e5 * pow(t, 0.5e1) + 0.268272e6 * pow(t, 0.4e1) * u + 0.472392e6 * pow(t, 0.3e1) * u * u + 0.268272e6 * t * t * pow(u, 0.3e1) + 0.39852e5 * t * pow(u, 0.4e1) + 0.217728e6 * pow(t, 0.4e1) + 0.762048e6 * pow(t, 0.3e1) * u + 0.622080e6 * t * t * u * u + 0.108864e6 * t * pow(u, 0.3e1) + 0.318816e6 * pow(t, 0.3e1) + 0.513216e6 * t * t * u + 0.116640e6 * t * u * u + 0.155520e6 * t * t + 0.62208e5 * t * u + 0.15552e5 * t) * pow(q4, 0.4e1) + (-0.9720e4 * pow(t, 0.6e1) - 0.110808e6 * pow(t, 0.5e1) * u - 0.314928e6 * pow(t, 0.4e1) * u * u - 0.314928e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.110808e6 * t * t * pow(u, 0.4e1) - 0.9720e4 * t * pow(u, 0.5e1) - 0.87480e5 * pow(t, 0.5e1) - 0.474336e6 * pow(t, 0.4e1) * u - 0.680400e6 * pow(t, 0.3e1) * u * u - 0.287712e6 * t * t * pow(u, 0.3e1) - 0.25272e5 * t * pow(u, 0.4e1) - 0.178848e6 * pow(t, 0.4e1) - 0.505440e6 * pow(t, 0.3e1) * u - 0.287712e6 * t * t * u * u - 0.23328e5 * t * pow(u, 0.3e1) - 0.132192e6 * pow(t, 0.3e1) - 0.139968e6 * t * t * u - 0.7776e4 * t * u * u - 0.31104e5 * t * t) * pow(q4, 0.3e1) + (0.972e3 * pow(t, 0.7e1) + 0.23328e5 * pow(t, 0.6e1) * u + 0.107892e6 * pow(t, 0.5e1) * u * u + 0.171072e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.107892e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.23328e5 * t * t * pow(u, 0.5e1) + 0.972e3 * t * pow(u, 0.6e1) + 0.19440e5 * pow(t, 0.6e1) + 0.157464e6 * pow(t, 0.5e1) * u + 0.342144e6 * pow(t, 0.4e1) * u * u + 0.260496e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.58320e5 * t * t * pow(u, 0.4e1) + 0.1944e4 * t * pow(u, 0.5e1) + 0.55404e5 * pow(t, 0.5e1) + 0.221616e6 * pow(t, 0.4e1) * u + 0.231336e6 * pow(t, 0.3e1) * u * u + 0.50544e5 * t * t * pow(u, 0.3e1) + 0.972e3 * t * pow(u, 0.4e1) + 0.46656e5 * pow(t, 0.4e1) + 0.93312e5 * pow(t, 0.3e1) * u + 0.15552e5 * t * t * u * u + 0.15552e5 * pow(t, 0.3e1)) * q4 * q4 + (-0.1944e4 * pow(t, 0.7e1) * u - 0.17496e5 * pow(t, 0.6e1) * u * u - 0.42768e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.42768e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.17496e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.1944e4 * t * t * pow(u, 0.6e1) - 0.1944e4 * pow(t, 0.7e1) - 0.27216e5 * pow(t, 0.6e1) * u - 0.81648e5 * pow(t, 0.5e1) * u * u - 0.93312e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.40824e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.3888e4 * t * t * pow(u, 0.5e1) - 0.9720e4 * pow(t, 0.6e1) - 0.46656e5 * pow(t, 0.5e1) * u - 0.66096e5 * pow(t, 0.4e1) * u * u - 0.31104e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1944e4 * t * t * pow(u, 0.4e1) - 0.7776e4 * pow(t, 0.5e1) - 0.15552e5 * pow(t, 0.4e1) * u - 0.7776e4 * pow(t, 0.3e1) * u * u) * q4 + 0.972e3 * pow(t, 0.7e1) * u * u + 0.3888e4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.5832e4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.3888e4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.972e3 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.1944e4 * pow(t, 0.7e1) * u + 0.7776e4 * pow(t, 0.6e1) * u * u + 0.11664e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.7776e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.1944e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.972e3 * pow(t, 0.7e1) + 0.3888e4 * pow(t, 0.6e1) * u + 0.5832e4 * pow(t, 0.5e1) * u * u + 0.3888e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.972e3 * pow(t, 0.3e1) * pow(u, 0.4e1)) * pow(q4 - t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) * pow(q4 - u - 0.1e1, -0.3e1) * pow(t, -0.3e1) / u * pow(q3, 0.3e1) - 0.8e1 / 0.27e2 * (0.7080e4 * pow(t, 0.5e1) * u * u + 0.4720e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1180e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.4392e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.7518e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.2568e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + (0.13088e5 * t - 0.25056e5 * u) * pow(q4, 0.9e1) + (-0.78272e5 * t * t + 0.35648e5 * t * u + 0.100224e6 * u * u - 0.49024e5 * t + 0.100224e6 * u) * pow(q4, 0.8e1) + (0.204304e6 * pow(t, 0.3e1) + 0.170480e6 * t * t * u - 0.241872e6 * t * u * u - 0.162864e6 * pow(u, 0.3e1) + 0.260640e6 * t * t - 0.158144e6 * t * u - 0.300672e6 * u * u + 0.65216e5 * t - 0.150336e6 * u) * pow(q4, 0.7e1) + (-0.287120e6 * pow(t, 0.4e1) - 0.640480e6 * pow(t, 0.3e1) * u - 0.20352e5 * t * t * u * u + 0.412320e6 * t * pow(u, 0.3e1) + 0.137808e6 * pow(u, 0.4e1) - 0.622384e6 * pow(t, 0.3e1) - 0.337456e6 * t * t * u + 0.675440e6 * t * u * u + 0.338256e6 * pow(u, 0.3e1) - 0.290080e6 * t * t + 0.260544e6 * t * u + 0.300672e6 * u * u - 0.32384e5 * t + 0.100224e6 * u) * pow(q4, 0.6e1) + (0.230530e6 * pow(t, 0.5e1) + 0.928634e6 * pow(t, 0.4e1) * u + 0.753588e6 * pow(t, 0.3e1) * u * u - 0.218796e6 * t * t * pow(u, 0.3e1) - 0.331446e6 * t * pow(u, 0.4e1) - 0.64206e5 * pow(u, 0.5e1) + 0.788304e6 * pow(t, 0.4e1) + 0.1353440e7 * pow(t, 0.3e1) * u - 0.231088e6 * t * t * u * u - 0.763904e6 * t * pow(u, 0.3e1) - 0.175392e6 * pow(u, 0.4e1) + 0.633680e6 * pow(t, 0.3e1) + 0.55152e5 * t * t * u - 0.626928e6 * t * u * u - 0.187920e6 * pow(u, 0.3e1) + 0.89120e5 * t * t - 0.189248e6 * t * u - 0.100224e6 * u * u - 0.224e3 * t - 0.25056e5 * u) * pow(q4, 0.5e1) + (0.3328e4 * t + 0.220144e6 * t * t * u + 0.195024e6 * t * u * u + 0.51200e5 * t * u - 0.706848e6 * pow(t, 0.3e1) * u + 0.493728e6 * t * t * u * u - 0.1776836e7 * pow(t, 0.4e1) * u - 0.914104e6 * pow(t, 0.3e1) * u * u - 0.703780e6 * pow(t, 0.5e1) * u - 0.1154676e7 * pow(t, 0.4e1) * u * u + 0.375520e6 * t * pow(u, 0.3e1) - 0.412776e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.222384e6 * t * t * pow(u, 0.4e1) + 0.139020e6 * t * pow(u, 0.5e1) + 0.365228e6 * t * pow(u, 0.4e1) + 0.531384e6 * t * t * pow(u, 0.3e1) + 0.40716e5 * pow(u, 0.5e1) + 0.37584e5 * pow(u, 0.4e1) + 0.12528e5 * pow(u, 0.3e1) + 0.15660e5 * pow(u, 0.6e1) - 0.198544e6 * pow(t, 0.3e1) + 0.40800e5 * t * t - 0.707856e6 * pow(t, 0.4e1) - 0.558868e6 * pow(t, 0.5e1) - 0.105704e6 * pow(t, 0.6e1)) * pow(q4, 0.4e1) + (-0.108320e6 * t * t * u - 0.1664e4 * t * u * u - 0.107168e6 * pow(t, 0.3e1) * u - 0.253392e6 * t * t * u * u + 0.882810e6 * pow(t, 0.4e1) * u - 0.26028e5 * pow(t, 0.3e1) * u * u + 0.1149996e7 * pow(t, 0.5e1) * u + 0.1357368e7 * pow(t, 0.4e1) * u * u + 0.799326e6 * pow(t, 0.5e1) * u * u + 0.701734e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.104514e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.23936e5 * t * pow(u, 0.3e1) + 0.143824e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.273314e6 * t * t * pow(u, 0.4e1) - 0.74540e5 * t * pow(u, 0.5e1) - 0.67686e5 * t * pow(u, 0.4e1) - 0.90750e5 * t * t * pow(u, 0.5e1) - 0.29126e5 * t * pow(u, 0.6e1) - 0.349628e6 * t * t * pow(u, 0.3e1) + 0.291062e6 * pow(t, 0.6e1) * u - 0.1566e4 * pow(u, 0.5e1) - 0.3132e4 * pow(u, 0.6e1) - 0.35936e5 * pow(t, 0.3e1) - 0.22208e5 * t * t + 0.201872e6 * pow(t, 0.4e1) - 0.1566e4 * pow(u, 0.7e1) + 0.410226e6 * pow(t, 0.5e1) + 0.227958e6 * pow(t, 0.6e1) + 0.25766e5 * pow(t, 0.7e1)) * pow(q4, 0.3e1) + (0.101056e6 * pow(t, 0.3e1) * u + 0.11104e5 * t * t * u * u - 0.18320e5 * pow(t, 0.4e1) * u + 0.207216e6 * pow(t, 0.3e1) * u * u - 0.429384e6 * pow(t, 0.5e1) * u - 0.215244e6 * pow(t, 0.4e1) * u * u - 0.762528e6 * pow(t, 0.5e1) * u * u - 0.407076e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.58084e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.418552e6 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.220136e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.8268e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.16316e5 * t * t * pow(u, 0.6e1) + 0.190744e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.68046e5 * t * t * pow(u, 0.4e1) + 0.2784e4 * t * pow(u, 0.5e1) + 0.208e3 * t * pow(u, 0.4e1) + 0.53242e5 * t * t * pow(u, 0.5e1) + 0.4944e4 * t * pow(u, 0.6e1) + 0.42224e5 * t * t * pow(u, 0.3e1) - 0.61692e5 * pow(t, 0.7e1) * u - 0.279732e6 * pow(t, 0.6e1) * u * u + 0.2368e4 * t * pow(u, 0.7e1) - 0.397638e6 * pow(t, 0.6e1) * u + 0.18880e5 * pow(t, 0.3e1) + 0.4800e4 * pow(t, 0.4e1) - 0.72448e5 * pow(t, 0.5e1) - 0.133458e6 * pow(t, 0.6e1) - 0.51972e5 * pow(t, 0.7e1) - 0.2592e4 * pow(t, 0.8e1)) * q4 * q4 + (-0.18880e5 * pow(t, 0.4e1) * u - 0.9440e4 * pow(t, 0.3e1) * u * u - 0.10352e5 * pow(t, 0.5e1) * u - 0.55704e5 * pow(t, 0.4e1) * u * u + 0.80052e5 * pow(t, 0.5e1) * u * u - 0.33108e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.45462e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.183208e6 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.37202e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.20456e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.3408e4 * t * t * pow(u, 0.6e1) - 0.35536e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1388e4 * t * t * pow(u, 0.4e1) - 0.3786e4 * t * t * pow(u, 0.5e1) + 0.71760e5 * pow(t, 0.7e1) * u + 0.195372e6 * pow(t, 0.6e1) * u * u + 0.5184e4 * pow(t, 0.8e1) * u + 0.46086e5 * pow(t, 0.7e1) * u * u + 0.109094e6 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.101596e6 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.33324e5 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.1090e4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.1010e4 * t * t * pow(u, 0.7e1) + 0.96510e5 * pow(t, 0.6e1) * u - 0.9440e4 * pow(t, 0.5e1) + 0.11204e5 * pow(t, 0.6e1) + 0.25026e5 * pow(t, 0.7e1) + 0.5346e4 * pow(t, 0.8e1)) * q4 - 0.8448e4 * pow(t, 0.7e1) * u - 0.6252e4 * pow(t, 0.6e1) * u * u - 0.5346e4 * pow(t, 0.8e1) * u - 0.19788e5 * pow(t, 0.7e1) * u * u - 0.2592e4 * pow(t, 0.8e1) * u * u - 0.10160e5 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.14720e5 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.9120e4 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.1760e4 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.208e3 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.25692e5 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.11808e5 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.1038e4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.1596e4 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.4720e4 * pow(t, 0.6e1) * u + 0.1180e4 * pow(t, 0.7e1) - 0.2754e4 * pow(t, 0.8e1)) * pow(q4 - t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) * pow(q4 - u - 0.1e1, -0.3e1) * pow(t, -0.3e1) / u * q3 * q3 - 0.8e1 / 0.27e2 * (-0.7344e4 * pow(t, 0.5e1) * u * u - 0.3880e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.784e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.39662e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.21145e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.4391e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + (-0.1568e4 * t - 0.2912e4 * u) * pow(q4, 0.10e2) + (-0.19808e5 * t * t + 0.42304e5 * t * u + 0.14560e5 * u * u + 0.23392e5 * t + 0.14560e5 * u) * pow(q4, 0.9e1) + (0.137664e6 * pow(t, 0.3e1) - 0.46320e5 * t * t * u - 0.145120e6 * t * u * u - 0.30576e5 * pow(u, 0.3e1) - 0.8704e4 * t * t - 0.237984e6 * t * u - 0.58240e5 * u * u - 0.84032e5 * t - 0.29120e5 * u) * pow(q4, 0.8e1) + (-0.337104e6 * pow(t, 0.4e1) - 0.348896e6 * pow(t, 0.3e1) * u + 0.324880e6 * t * t * u * u + 0.204576e6 * t * pow(u, 0.3e1) + 0.34944e5 * pow(u, 0.4e1) - 0.308544e6 * pow(t, 0.3e1) + 0.607488e6 * t * t * u + 0.554272e6 * t * u * u + 0.93184e5 * pow(u, 0.3e1) + 0.234816e6 * t * t + 0.491264e6 * t * u + 0.87360e5 * u * u + 0.133568e6 * t + 0.29120e5 * u) * pow(q4, 0.7e1) + (0.428598e6 * pow(t, 0.5e1) + 0.1118114e7 * pow(t, 0.4e1) * u + 0.193788e6 * pow(t, 0.3e1) * u * u - 0.538572e6 * t * t * pow(u, 0.3e1) - 0.137298e6 * t * pow(u, 0.4e1) - 0.23478e5 * pow(u, 0.5e1) + 0.871568e6 * pow(t, 0.4e1) + 0.47472e5 * pow(t, 0.3e1) * u - 0.1693776e7 * t * t * u * u - 0.519440e6 * t * pow(u, 0.3e1) - 0.75712e5 * pow(u, 0.4e1) - 0.18160e5 * pow(t, 0.3e1) - 0.1625648e7 * t * t * u - 0.738720e6 * t * u * u - 0.96096e5 * pow(u, 0.3e1) - 0.472192e6 * t * t - 0.468928e6 * t * u - 0.58240e5 * u * u - 0.106912e6 * t - 0.14560e5 * u) * pow(q4, 0.6e1) + (0.14560e5 * u * u + 0.41696e5 * t + 0.2912e4 * u + 0.1743600e7 * t * t * u + 0.398176e6 * t * u * u + 0.204480e6 * t * u + 0.1688400e7 * pow(t, 0.3e1) * u + 0.2749344e7 * t * t * u * u - 0.1766750e7 * pow(t, 0.4e1) * u + 0.1418212e7 * pow(t, 0.3e1) * u * u - 0.1443948e7 * pow(t, 0.5e1) * u - 0.1425994e7 * pow(t, 0.4e1) * u * u + 0.400016e6 * t * pow(u, 0.3e1) + 0.213048e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.414642e6 * t * t * pow(u, 0.4e1) + 0.35796e5 * t * pow(u, 0.5e1) + 0.199602e6 * t * pow(u, 0.4e1) + 0.1829932e7 * t * t * pow(u, 0.3e1) + 0.32578e5 * pow(u, 0.5e1) + 0.46592e5 * pow(u, 0.4e1) + 0.34944e5 * pow(u, 0.3e1) + 0.9282e4 * pow(u, 0.6e1) + 0.544784e6 * pow(t, 0.3e1) + 0.391840e6 * t * t - 0.569120e6 * pow(t, 0.4e1) - 0.1074630e7 * pow(t, 0.5e1) - 0.312522e6 * pow(t, 0.6e1)) * pow(q4, 0.5e1) + (-0.6144e4 * t - 0.808608e6 * t * t * u - 0.71680e5 * t * u * u - 0.31136e5 * t * u - 0.2249248e7 * pow(t, 0.3e1) * u - 0.1774288e7 * t * t * u * u - 0.159706e6 * pow(t, 0.4e1) * u - 0.3521028e7 * pow(t, 0.3e1) * u * u + 0.2431366e7 * pow(t, 0.5e1) * u + 0.782212e6 * pow(t, 0.4e1) * u * u + 0.1892461e7 * pow(t, 0.5e1) * u * u + 0.862334e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.347971e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.97648e5 * t * pow(u, 0.3e1) - 0.2150588e7 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.973300e6 * t * t * pow(u, 0.4e1) - 0.12394e5 * t * pow(u, 0.5e1) - 0.68078e5 * t * pow(u, 0.4e1) - 0.166044e6 * t * t * pow(u, 0.5e1) + 0.5507e4 * t * pow(u, 0.6e1) - 0.1914148e7 * t * t * pow(u, 0.3e1) + 0.987408e6 * pow(t, 0.6e1) * u - 0.9282e4 * pow(u, 0.5e1) - 0.5824e4 * pow(u, 0.4e1) - 0.1456e4 * pow(u, 0.3e1) - 0.6916e4 * pow(u, 0.6e1) - 0.501776e6 * pow(t, 0.3e1) - 0.144000e6 * t * t - 0.188480e6 * pow(t, 0.4e1) - 0.2002e4 * pow(u, 0.7e1) + 0.773234e6 * pow(t, 0.5e1) + 0.722228e6 * pow(t, 0.6e1) + 0.131891e6 * pow(t, 0.7e1)) * pow(q4, 0.4e1) + (0.129488e6 * t * t * u + 0.3072e4 * t * u * u + 0.981616e6 * pow(t, 0.3e1) * u + 0.402864e6 * t * t * u * u + 0.1245750e7 * pow(t, 0.4e1) * u + 0.2373148e7 * pow(t, 0.3e1) * u * u - 0.700592e6 * pow(t, 0.5e1) * u + 0.1680710e7 * pow(t, 0.4e1) * u * u - 0.1798340e7 * pow(t, 0.5e1) * u * u + 0.537914e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1388570e7 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.1221982e7 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.219001e6 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.212066e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.34943e5 * t * t * pow(u, 0.6e1) + 0.12496e5 * t * pow(u, 0.3e1) + 0.2717440e7 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.645330e6 * t * t * pow(u, 0.4e1) + 0.2544e4 * t * pow(u, 0.5e1) + 0.15566e5 * t * pow(u, 0.4e1) + 0.280908e6 * t * t * pow(u, 0.5e1) - 0.8552e4 * t * pow(u, 0.6e1) + 0.692356e6 * t * t * pow(u, 0.3e1) - 0.373034e6 * pow(t, 0.7e1) * u - 0.1174027e7 * pow(t, 0.6e1) * u * u - 0.4954e4 * t * pow(u, 0.7e1) - 0.1519048e7 * pow(t, 0.6e1) * u + 0.182e3 * pow(u, 0.5e1) + 0.546e3 * pow(u, 0.6e1) + 0.158576e6 * pow(t, 0.3e1) + 0.18048e5 * t * t + 0.288048e6 * pow(t, 0.4e1) + 0.546e3 * pow(u, 0.7e1) - 0.41690e5 * pow(t, 0.5e1) - 0.463674e6 * pow(t, 0.6e1) - 0.280110e6 * pow(t, 0.7e1) - 0.30001e5 * pow(t, 0.8e1) + 0.182e3 * pow(u, 0.8e1)) * pow(q4, 0.3e1) + (-0.119344e6 * pow(t, 0.3e1) * u - 0.9024e4 * t * t * u * u - 0.457408e6 * pow(t, 0.4e1) * u - 0.467256e6 * pow(t, 0.3e1) * u * u - 0.379666e6 * pow(t, 0.5e1) * u - 0.1205848e7 * pow(t, 0.4e1) * u * u - 0.253307e6 * pow(t, 0.5e1) * u * u - 0.1387886e7 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.971650e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.414684e6 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.596243e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.471998e6 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.46193e5 * t * t * pow(u, 0.6e1) - 0.933716e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.114792e6 * t * t * pow(u, 0.4e1) - 0.1178e4 * t * pow(u, 0.5e1) - 0.384e3 * t * pow(u, 0.4e1) - 0.112531e6 * t * t * pow(u, 0.5e1) - 0.447e3 * t * pow(u, 0.6e1) - 0.53440e5 * t * t * pow(u, 0.3e1) + 0.502834e6 * pow(t, 0.7e1) * u + 0.1029961e7 * pow(t, 0.6e1) * u * u + 0.1104e4 * t * pow(u, 0.7e1) + 0.72984e5 * pow(t, 0.8e1) * u + 0.372567e6 * pow(t, 0.7e1) * u * u + 0.651786e6 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.401025e6 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.16412e5 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.72879e5 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.4038e4 * t * t * pow(u, 0.7e1) + 0.757e3 * t * pow(u, 0.8e1) + 0.433681e6 * pow(t, 0.6e1) * u - 0.12544e5 * pow(t, 0.3e1) - 0.64912e5 * pow(t, 0.4e1) - 0.97288e5 * pow(t, 0.5e1) + 0.31104e5 * pow(t, 0.6e1) + 0.152332e6 * pow(t, 0.7e1) + 0.60731e5 * pow(t, 0.8e1) + 0.2850e4 * pow(t, 0.9e1)) * q4 * q4 + (0.15520e5 * pow(t, 0.4e1) * u + 0.6272e4 * pow(t, 0.3e1) * u * u + 0.107544e6 * pow(t, 0.5e1) * u + 0.123816e6 * pow(t, 0.4e1) * u * u + 0.310734e6 * pow(t, 0.5e1) * u * u + 0.338046e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.127755e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.320924e6 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.399925e6 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.154402e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.7467e4 * t * t * pow(u, 0.6e1) + 0.47400e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.1128e4 * t * t * pow(u, 0.4e1) + 0.5267e4 * t * t * pow(u, 0.5e1) - 0.106782e6 * pow(t, 0.7e1) * u - 0.11659e5 * pow(t, 0.6e1) * u * u - 0.86109e5 * pow(t, 0.8e1) * u - 0.258839e6 * pow(t, 0.7e1) * u * u - 0.5700e4 * pow(t, 0.9e1) * u - 0.55965e5 * pow(t, 0.8e1) * u * u - 0.153596e6 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.168513e6 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.57796e5 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.21505e5 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.14436e5 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.317e3 * t * t * pow(u, 0.8e1) - 0.243201e6 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.48423e5 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.191569e6 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.82211e5 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.3645e4 * t * t * pow(u, 0.7e1) + 0.86255e5 * pow(t, 0.6e1) * u + 0.10880e5 * pow(t, 0.5e1) + 0.25104e5 * pow(t, 0.6e1) - 0.4025e4 * pow(t, 0.7e1) - 0.28821e5 * pow(t, 0.8e1) - 0.5891e4 * pow(t, 0.9e1)) * q4 + 0.2850e4 * pow(t, 0.9e1) * u * u + 0.15868e5 * pow(t, 0.6e1) * pow(u, 0.5e1) + 0.1642e4 * pow(t, 0.5e1) * pow(u, 0.6e1) - 0.3442e4 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.1256e4 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.13243e5 * pow(t, 0.7e1) * u - 0.34802e5 * pow(t, 0.6e1) * u * u + 0.10823e5 * pow(t, 0.8e1) * u + 0.2300e4 * pow(t, 0.7e1) * u * u + 0.5891e4 * pow(t, 0.9e1) * u + 0.25378e5 * pow(t, 0.8e1) * u * u + 0.36115e5 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.10060e5 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.21503e5 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.20270e5 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.5335e4 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.12982e5 * pow(t, 0.8e1) * pow(u, 0.3e1) + 0.22172e5 * pow(t, 0.7e1) * pow(u, 0.4e1) - 0.34650e5 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.55519e5 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.34093e5 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.7686e4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.6184e4 * pow(t, 0.6e1) * u - 0.1936e4 * pow(t, 0.7e1) - 0.1349e4 * pow(t, 0.8e1) + 0.2985e4 * pow(t, 0.9e1)) * pow(q4 - t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) * pow(q4 - u - 0.1e1, -0.3e1) * pow(t, -0.3e1) / u * q3 - 0.8e1 / 0.27e2 * (0.1752e4 * pow(t, 0.5e1) * u * u + 0.712e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.160e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.14326e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.6423e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.1355e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + (-0.9088e4 * t - 0.3072e4 * u) * pow(q4, 0.11e2) + (0.27264e5 * t * t + 0.64320e5 * t * u + 0.18432e5 * u * u + 0.51200e5 * t + 0.18432e5 * u) * pow(q4, 0.10e2) + (-0.1904e4 * pow(t, 0.3e1) - 0.183584e6 * t * t * u - 0.194416e6 * t * u * u - 0.47616e5 * pow(u, 0.3e1) - 0.163168e6 * t * t - 0.315232e6 * t * u - 0.92160e5 * u * u - 0.122176e6 * t - 0.46080e5 * u) * pow(q4, 0.9e1) + (-0.112032e6 * pow(t, 0.4e1) + 0.86512e5 * pow(t, 0.3e1) * u + 0.518048e6 * t * t * u * u + 0.328720e6 * t * pow(u, 0.3e1) + 0.69120e5 * pow(u, 0.4e1) + 0.129936e6 * pow(t, 0.3e1) + 0.946464e6 * t * t * u + 0.803216e6 * t * u * u + 0.192000e6 * pow(u, 0.3e1) + 0.407008e6 * t * t + 0.640480e6 * t * u + 0.184320e6 * u * u + 0.160960e6 * t + 0.61440e5 * u) * pow(q4, 0.8e1) + (0.240720e6 * pow(t, 0.5e1) + 0.424240e6 * pow(t, 0.4e1) * u - 0.365696e6 * pow(t, 0.3e1) * u * u - 0.817840e6 * t * t * pow(u, 0.3e1) - 0.341136e6 * t * pow(u, 0.4e1) - 0.61632e5 * pow(u, 0.5e1) + 0.196464e6 * pow(t, 0.4e1) - 0.999984e6 * pow(t, 0.3e1) * u - 0.2254384e7 * t * t * u * u - 0.1103120e7 * t * pow(u, 0.3e1) - 0.215040e6 * pow(u, 0.4e1) - 0.507120e6 * pow(t, 0.3e1) - 0.1980976e7 * t * t * u - 0.1328192e7 * t * u * u - 0.291840e6 * pow(u, 0.3e1) - 0.547584e6 * t * t - 0.696000e6 * t * u - 0.184320e6 * u * u - 0.128000e6 * t - 0.46080e5 * u) * pow(q4, 0.7e1) + (0.92160e5 * u * u + 0.62848e5 * t + 0.18432e5 * u + 0.2154240e7 * t * t * u + 0.1110688e7 * t * u * u + 0.432640e6 * t * u + 0.2718272e7 * pow(t, 0.3e1) * u + 0.3838432e7 * t * t * u * u - 0.140136e6 * pow(t, 0.4e1) * u + 0.2693056e7 * pow(t, 0.3e1) * u * u - 0.950492e6 * pow(t, 0.5e1) * u - 0.622464e6 * pow(t, 0.4e1) * u * u + 0.1405408e7 * t * pow(u, 0.3e1) + 0.711096e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.809040e6 * t * t * pow(u, 0.4e1) + 0.223620e6 * t * pow(u, 0.5e1) + 0.887696e6 * t * pow(u, 0.4e1) + 0.2936696e7 * t * t * pow(u, 0.3e1) + 0.139008e6 * pow(u, 0.5e1) + 0.230400e6 * pow(u, 0.4e1) + 0.199680e6 * pow(u, 0.3e1) + 0.34560e5 * pow(u, 0.6e1) + 0.796832e6 * pow(t, 0.3e1) + 0.429376e6 * t * t + 0.186688e6 * pow(t, 0.4e1) - 0.558816e6 * pow(t, 0.5e1) - 0.260016e6 * pow(t, 0.6e1)) * pow(q4, 0.6e1) + (-0.18432e5 * u * u - 0.18240e5 * t - 0.3072e4 * u - 0.1287744e7 * t * t * u - 0.478832e6 * t * u * u - 0.148960e6 * t * u - 0.3136880e7 * pow(t, 0.3e1) * u - 0.3207392e7 * t * t * u * u - 0.1810328e7 * pow(t, 0.4e1) * u - 0.5406872e7 * pow(t, 0.3e1) * u * u + 0.1389402e7 * pow(t, 0.5e1) * u - 0.944452e6 * pow(t, 0.4e1) * u * u + 0.1527131e7 * pow(t, 0.5e1) * u * u + 0.376028e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.822981e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.826464e6 * t * pow(u, 0.3e1) - 0.3759532e7 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.2326566e7 * t * t * pow(u, 0.4e1) - 0.424574e6 * t * pow(u, 0.5e1) - 0.811180e6 * t * pow(u, 0.4e1) - 0.529518e6 * t * t * pow(u, 0.5e1) - 0.91355e5 * t * pow(u, 0.6e1) - 0.3912072e7 * t * t * pow(u, 0.3e1) + 0.962866e6 * pow(t, 0.6e1) * u - 0.93312e5 * pow(u, 0.5e1) - 0.92160e5 * pow(u, 0.4e1) - 0.53760e5 * pow(u, 0.3e1) - 0.51456e5 * pow(u, 0.6e1) - 0.621136e6 * pow(t, 0.3e1) - 0.197728e6 * t * t - 0.648048e6 * pow(t, 0.4e1) - 0.11904e5 * pow(u, 0.7e1) + 0.233316e6 * pow(t, 0.5e1) + 0.602298e6 * pow(t, 0.6e1) + 0.166693e6 * pow(t, 0.7e1)) * pow(q4, 0.5e1) + (0.2496e4 * t + 0.405856e6 * t * t * u + 0.88784e5 * t * u * u + 0.22752e5 * t * u + 0.1721952e7 * pow(t, 0.3e1) * u + 0.1329760e7 * t * t * u * u + 0.2554744e7 * pow(t, 0.4e1) * u + 0.4466616e7 * pow(t, 0.3e1) * u * u + 0.366358e6 * pow(t, 0.5e1) * u + 0.4003932e7 * pow(t, 0.4e1) * u * u - 0.1014659e7 * pow(t, 0.5e1) * u * u + 0.2102816e7 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.3121981e7 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.1259893e7 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.57600e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.620217e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.233904e6 * t * t * pow(u, 0.6e1) + 0.205584e6 * t * pow(u, 0.3e1) + 0.5480644e7 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.2283610e7 * t * t * pow(u, 0.4e1) + 0.252326e6 * t * pow(u, 0.5e1) + 0.294852e6 * t * pow(u, 0.4e1) + 0.1162176e7 * t * t * pow(u, 0.5e1) + 0.116379e6 * t * pow(u, 0.6e1) + 0.2331592e7 * t * t * pow(u, 0.3e1) - 0.556445e6 * pow(t, 0.7e1) * u - 0.1422248e7 * pow(t, 0.6e1) * u * u + 0.21849e5 * t * pow(u, 0.7e1) - 0.1504944e7 * pow(t, 0.6e1) * u + 0.16128e5 * pow(u, 0.5e1) + 0.7680e4 * pow(u, 0.4e1) + 0.1536e4 * pow(u, 0.3e1) + 0.17664e5 * pow(u, 0.6e1) + 0.244560e6 * pow(t, 0.3e1) + 0.50784e5 * t * t + 0.527376e6 * pow(t, 0.4e1) + 0.9984e4 * pow(u, 0.7e1) + 0.302308e6 * pow(t, 0.5e1) - 0.345110e6 * pow(t, 0.6e1) - 0.364933e6 * pow(t, 0.7e1) - 0.64008e5 * pow(t, 0.8e1) + 0.2304e4 * pow(u, 0.8e1)) * pow(q4, 0.4e1) + (-0.54256e5 * t * t * u - 0.1248e4 * t * u * u - 0.425504e6 * pow(t, 0.3e1) * u - 0.227440e6 * t * t * u * u - 0.1218200e7 * pow(t, 0.4e1) * u - 0.1576424e7 * pow(t, 0.3e1) * u * u - 0.1252194e7 * pow(t, 0.5e1) * u - 0.3233740e7 * pow(t, 0.4e1) * u * u - 0.1568841e7 * pow(t, 0.5e1) * u * u - 0.3872390e7 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.3097236e7 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.119384e6 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.1940942e7 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.1594586e7 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.358506e6 * t * t * pow(u, 0.6e1) - 0.10128e5 * t * pow(u, 0.3e1) - 0.3007372e7 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.845846e6 * t * t * pow(u, 0.4e1) - 0.46658e5 * t * pow(u, 0.5e1) - 0.30388e5 * t * pow(u, 0.4e1) - 0.753687e6 * t * t * pow(u, 0.5e1) - 0.39033e5 * t * pow(u, 0.6e1) - 0.561256e6 * t * t * pow(u, 0.3e1) + 0.814702e6 * pow(t, 0.7e1) * u + 0.1290978e7 * pow(t, 0.6e1) * u * u - 0.16492e5 * t * pow(u, 0.7e1) + 0.186753e6 * pow(t, 0.8e1) * u + 0.710962e6 * pow(t, 0.7e1) * u * u + 0.1063109e7 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.531632e6 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.234629e6 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.307090e6 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.68545e5 * t * t * pow(u, 0.7e1) - 0.2609e4 * t * pow(u, 0.8e1) + 0.250381e6 * pow(t, 0.6e1) * u - 0.192e3 * pow(u, 0.5e1) - 0.768e3 * pow(u, 0.6e1) - 0.43728e5 * pow(t, 0.3e1) - 0.5952e4 * t * t - 0.167488e6 * pow(t, 0.4e1) - 0.1152e4 * pow(u, 0.7e1) - 0.279460e6 * pow(t, 0.5e1) - 0.76942e5 * pow(t, 0.6e1) + 0.201478e6 * pow(t, 0.7e1) + 0.131462e6 * pow(t, 0.8e1) - 0.768e3 * pow(u, 0.8e1) + 0.13601e5 * pow(t, 0.9e1) - 0.192e3 * pow(u, 0.9e1)) * pow(q4, 0.3e1) + (0.35632e5 * pow(t, 0.3e1) * u + 0.2976e4 * t * t * u * u + 0.193680e6 * pow(t, 0.4e1) * u + 0.190600e6 * pow(t, 0.3e1) * u * u + 0.488886e6 * pow(t, 0.5e1) * u + 0.824004e6 * pow(t, 0.4e1) * u * u + 0.1316827e7 * pow(t, 0.5e1) * u * u + 0.1727764e7 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.965245e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.1461025e7 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.1854140e7 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.944997e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.123988e6 * t * t * pow(u, 0.6e1) + 0.561844e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.74310e5 * t * t * pow(u, 0.4e1) + 0.1110e4 * t * pow(u, 0.5e1) + 0.156e3 * t * pow(u, 0.4e1) + 0.129014e6 * t * t * pow(u, 0.5e1) + 0.2489e4 * t * pow(u, 0.6e1) + 0.22880e5 * t * t * pow(u, 0.3e1) - 0.1230e4 * pow(t, 0.10e2) - 0.179157e6 * pow(t, 0.7e1) * u + 0.296204e6 * pow(t, 0.6e1) * u * u + 0.2367e4 * t * pow(u, 0.7e1) - 0.245286e6 * pow(t, 0.8e1) * u - 0.604093e6 * pow(t, 0.7e1) * u * u - 0.33558e5 * pow(t, 0.9e1) * u - 0.194832e6 * pow(t, 0.8e1) * u * u - 0.432685e6 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.414724e6 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.79613e5 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.147688e6 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.94913e5 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.12250e5 * t * t * pow(u, 0.8e1) + 0.95e2 * t * pow(u, 0.9e1) - 0.393038e6 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.497549e6 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.923126e6 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.478981e6 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.61630e5 * t * t * pow(u, 0.7e1) + 0.927e3 * t * pow(u, 0.8e1) + 0.385078e6 * pow(t, 0.6e1) * u + 0.2560e4 * pow(t, 0.3e1) + 0.17040e5 * pow(t, 0.4e1) + 0.64652e5 * pow(t, 0.5e1) + 0.92406e5 * pow(t, 0.6e1) + 0.13327e5 * pow(t, 0.7e1) - 0.64908e5 * pow(t, 0.8e1) - 0.26932e5 * pow(t, 0.9e1)) * q4 * q4 + (-0.4000e4 * pow(t, 0.4e1) * u - 0.1280e4 * pow(t, 0.3e1) * u * u - 0.38120e5 * pow(t, 0.5e1) * u - 0.39760e5 * pow(t, 0.4e1) * u * u - 0.201378e6 * pow(t, 0.5e1) * u * u - 0.169650e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.56961e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.478870e6 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.366805e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.119495e6 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.5990e4 * t * t * pow(u, 0.6e1) - 0.13752e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.372e3 * t * t * pow(u, 0.4e1) - 0.2401e4 * t * t * pow(u, 0.5e1) + 0.2489e4 * pow(t, 0.10e2) + 0.26313e5 * pow(t, 0.9e1) * u * u + 0.74879e5 * pow(t, 0.6e1) * pow(u, 0.5e1) - 0.13841e5 * pow(t, 0.5e1) * pow(u, 0.6e1) - 0.40669e5 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.16183e5 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.1019e4 * t * t * pow(u, 0.9e1) + 0.2460e4 * pow(t, 0.10e2) * u - 0.77475e5 * pow(t, 0.7e1) * u - 0.300888e6 * pow(t, 0.6e1) * u * u + 0.45929e5 * pow(t, 0.8e1) * u - 0.19876e5 * pow(t, 0.7e1) * u * u + 0.39031e5 * pow(t, 0.9e1) * u + 0.134877e6 * pow(t, 0.8e1) * u * u + 0.163775e6 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.13827e5 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.225083e6 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.215549e6 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.74075e5 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.4342e4 * t * t * pow(u, 0.8e1) + 0.85437e5 * pow(t, 0.8e1) * pow(u, 0.3e1) + 0.124799e6 * pow(t, 0.7e1) * pow(u, 0.4e1) - 0.295746e6 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.524205e6 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.407795e6 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.132898e6 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.7284e4 * t * t * pow(u, 0.7e1) - 0.105901e6 * pow(t, 0.6e1) * u - 0.2720e4 * pow(t, 0.5e1) - 0.11740e5 * pow(t, 0.6e1) - 0.19613e5 * pow(t, 0.7e1) - 0.2157e4 * pow(t, 0.8e1) + 0.12083e5 * pow(t, 0.9e1)) * q4 - 0.1203e4 * pow(t, 0.10e2) - 0.1230e4 * pow(t, 0.10e2) * u * u - 0.12099e5 * pow(t, 0.9e1) * u * u + 0.18533e5 * pow(t, 0.6e1) * pow(u, 0.5e1) + 0.30991e5 * pow(t, 0.5e1) * pow(u, 0.6e1) + 0.18673e5 * pow(t, 0.4e1) * pow(u, 0.7e1) + 0.4223e4 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.2489e4 * pow(t, 0.10e2) * u + 0.8463e4 * pow(t, 0.7e1) * u + 0.16262e5 * pow(t, 0.6e1) * u * u + 0.8575e4 * pow(t, 0.8e1) * u + 0.31569e5 * pow(t, 0.7e1) * u * u - 0.4831e4 * pow(t, 0.9e1) * u - 0.251e3 * pow(t, 0.8e1) * u * u + 0.28011e5 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.60831e5 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.59695e5 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.29631e5 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.6133e4 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.6356e4 * pow(t, 0.9e1) * pow(u, 0.3e1) - 0.13350e5 * pow(t, 0.8e1) * pow(u, 0.4e1) - 0.13324e5 * pow(t, 0.7e1) * pow(u, 0.5e1) - 0.3866e4 * pow(t, 0.6e1) * pow(u, 0.6e1) + 0.4356e4 * pow(t, 0.5e1) * pow(u, 0.7e1) + 0.4238e4 * pow(t, 0.4e1) * pow(u, 0.8e1) + 0.1116e4 * pow(t, 0.3e1) * pow(u, 0.9e1) - 0.21053e5 * pow(t, 0.8e1) * pow(u, 0.3e1) - 0.9451e4 * pow(t, 0.7e1) * pow(u, 0.4e1) + 0.52630e5 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.45634e5 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.20907e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.4221e4 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.2008e4 * pow(t, 0.6e1) * u + 0.808e3 * pow(t, 0.7e1) + 0.1459e4 * pow(t, 0.8e1) + 0.688e3 * pow(t, 0.9e1)) * pow(q4 - t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) * pow(q4 - u - 0.1e1, -0.3e1) * pow(t, -0.3e1) / u);
}
#include <math.h>

double GstarVVCoeffsC2e1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0.8e1 / 0.81e2 * (0.23328e5 * t * pow(q4, 0.8e1) + (-0.93312e5 * t * t - 0.93312e5 * t * u - 0.93312e5 * t) * pow(q4, 0.7e1) + (0.151632e6 * pow(t, 0.3e1) + 0.349920e6 * t * t * u + 0.151632e6 * t * u * u + 0.326592e6 * t * t + 0.279936e6 * t * u + 0.139968e6 * t) * pow(q4, 0.6e1) + (-0.128304e6 * pow(t, 0.4e1) - 0.524880e6 * pow(t, 0.3e1) * u - 0.524880e6 * t * t * u * u - 0.128304e6 * t * pow(u, 0.3e1) - 0.454896e6 * pow(t, 0.3e1) - 0.909792e6 * t * t * u - 0.314928e6 * t * u * u - 0.419904e6 * t * t - 0.279936e6 * t * u - 0.93312e5 * t) * pow(q4, 0.5e1) + (0.59778e5 * pow(t, 0.5e1) + 0.402408e6 * pow(t, 0.4e1) * u + 0.708588e6 * pow(t, 0.3e1) * u * u + 0.402408e6 * t * t * pow(u, 0.3e1) + 0.59778e5 * t * pow(u, 0.4e1) + 0.326592e6 * pow(t, 0.4e1) + 0.1143072e7 * pow(t, 0.3e1) * u + 0.933120e6 * t * t * u * u + 0.163296e6 * t * pow(u, 0.3e1) + 0.478224e6 * pow(t, 0.3e1) + 0.769824e6 * t * t * u + 0.174960e6 * t * u * u + 0.233280e6 * t * t + 0.93312e5 * t * u + 0.23328e5 * t) * pow(q4, 0.4e1) + (-0.14580e5 * pow(t, 0.6e1) - 0.166212e6 * pow(t, 0.5e1) * u - 0.472392e6 * pow(t, 0.4e1) * u * u - 0.472392e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.166212e6 * t * t * pow(u, 0.4e1) - 0.14580e5 * t * pow(u, 0.5e1) - 0.131220e6 * pow(t, 0.5e1) - 0.711504e6 * pow(t, 0.4e1) * u - 0.1020600e7 * pow(t, 0.3e1) * u * u - 0.431568e6 * t * t * pow(u, 0.3e1) - 0.37908e5 * t * pow(u, 0.4e1) - 0.268272e6 * pow(t, 0.4e1) - 0.758160e6 * pow(t, 0.3e1) * u - 0.431568e6 * t * t * u * u - 0.34992e5 * t * pow(u, 0.3e1) - 0.198288e6 * pow(t, 0.3e1) - 0.209952e6 * t * t * u - 0.11664e5 * t * u * u - 0.46656e5 * t * t) * pow(q4, 0.3e1) + (0.1458e4 * pow(t, 0.7e1) + 0.34992e5 * pow(t, 0.6e1) * u + 0.161838e6 * pow(t, 0.5e1) * u * u + 0.256608e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.161838e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.34992e5 * t * t * pow(u, 0.5e1) + 0.1458e4 * t * pow(u, 0.6e1) + 0.29160e5 * pow(t, 0.6e1) + 0.236196e6 * pow(t, 0.5e1) * u + 0.513216e6 * pow(t, 0.4e1) * u * u + 0.390744e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.87480e5 * t * t * pow(u, 0.4e1) + 0.2916e4 * t * pow(u, 0.5e1) + 0.83106e5 * pow(t, 0.5e1) + 0.332424e6 * pow(t, 0.4e1) * u + 0.347004e6 * pow(t, 0.3e1) * u * u + 0.75816e5 * t * t * pow(u, 0.3e1) + 0.1458e4 * t * pow(u, 0.4e1) + 0.69984e5 * pow(t, 0.4e1) + 0.139968e6 * pow(t, 0.3e1) * u + 0.23328e5 * t * t * u * u + 0.23328e5 * pow(t, 0.3e1)) * q4 * q4 + (-0.2916e4 * pow(t, 0.7e1) * u - 0.26244e5 * pow(t, 0.6e1) * u * u - 0.64152e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.64152e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.26244e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.2916e4 * t * t * pow(u, 0.6e1) - 0.2916e4 * pow(t, 0.7e1) - 0.40824e5 * pow(t, 0.6e1) * u - 0.122472e6 * pow(t, 0.5e1) * u * u - 0.139968e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.61236e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.5832e4 * t * t * pow(u, 0.5e1) - 0.14580e5 * pow(t, 0.6e1) - 0.69984e5 * pow(t, 0.5e1) * u - 0.99144e5 * pow(t, 0.4e1) * u * u - 0.46656e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.2916e4 * t * t * pow(u, 0.4e1) - 0.11664e5 * pow(t, 0.5e1) - 0.23328e5 * pow(t, 0.4e1) * u - 0.11664e5 * pow(t, 0.3e1) * u * u) * q4 + 0.1458e4 * pow(t, 0.7e1) * u * u + 0.5832e4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.8748e4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.5832e4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.1458e4 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.2916e4 * pow(t, 0.7e1) * u + 0.11664e5 * pow(t, 0.6e1) * u * u + 0.17496e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.11664e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.2916e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.1458e4 * pow(t, 0.7e1) + 0.5832e4 * pow(t, 0.6e1) * u + 0.8748e4 * pow(t, 0.5e1) * u * u + 0.5832e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1458e4 * pow(t, 0.3e1) * pow(u, 0.4e1)) * pow(q4 - t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) * pow(q4 - u - 0.1e1, -0.3e1) * pow(t, -0.3e1) / u * pow(q3, 0.3e1) + 0.8e1 / 0.81e2 * ((0.608e3 * t - 0.69984e5 * u) * pow(q4, 0.9e1) + (-0.25760e5 * t * t + 0.253568e6 * t * u + 0.279936e6 * u * u - 0.3040e4 * t + 0.279936e6 * u) * pow(q4, 0.8e1) + (0.120592e6 * pow(t, 0.3e1) - 0.280048e6 * t * t * u - 0.950064e6 * t * u * u - 0.454896e6 * pow(u, 0.3e1) + 0.80928e5 * t * t - 0.874304e6 * t * u - 0.839808e6 * u * u + 0.6080e4 * t - 0.419904e6 * u) * pow(q4, 0.7e1) + (-0.224960e6 * pow(t, 0.4e1) - 0.157600e6 * pow(t, 0.3e1) * u + 0.1143600e7 * t * t * u * u + 0.1415712e7 * t * pow(u, 0.3e1) + 0.384912e6 * pow(u, 0.4e1) - 0.365728e6 * pow(t, 0.3e1) + 0.903440e6 * t * t * u + 0.2429984e7 * t * u * u + 0.944784e6 * pow(u, 0.3e1) - 0.66112e5 * t * t + 0.1101504e7 * t * u + 0.839808e6 * u * u - 0.6080e4 * t + 0.279936e6 * u) * pow(q4, 0.6e1) + (0.211510e6 * pow(t, 0.5e1) + 0.662642e6 * pow(t, 0.4e1) * u - 0.230292e6 * pow(t, 0.3e1) * u * u - 0.1600044e7 * t * t * pow(u, 0.3e1) - 0.1074018e7 * t * pow(u, 0.4e1) - 0.179334e6 * pow(u, 0.5e1) + 0.618384e6 * pow(t, 0.4e1) + 0.230288e6 * pow(t, 0.3e1) * u - 0.2574352e7 * t * t * u * u - 0.2468624e7 * t * pow(u, 0.3e1) - 0.489888e6 * pow(u, 0.4e1) + 0.350912e6 * pow(t, 0.3e1) - 0.1100016e7 * t * t * u - 0.2009472e7 * t * u * u - 0.524880e6 * pow(u, 0.3e1) - 0.29632e5 * t * t - 0.594368e6 * t * u - 0.279936e6 * u * u + 0.3040e4 * t - 0.69984e5 * u) * pow(q4, 0.5e1) + (-0.608e3 * t + 0.609904e6 * t * t * u + 0.529248e6 * t * u * u + 0.113600e6 * t * u + 0.124608e6 * pow(t, 0.3e1) * u + 0.1868928e7 * t * t * u * u - 0.1253516e7 * pow(t, 0.4e1) * u + 0.671636e6 * pow(t, 0.3e1) * u * u - 0.645952e6 * pow(t, 0.5e1) * u - 0.740136e6 * pow(t, 0.4e1) * u * u + 0.1110016e7 * t * pow(u, 0.3e1) + 0.520344e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.1068474e7 * t * t * pow(u, 0.4e1) + 0.436920e6 * t * pow(u, 0.5e1) + 0.1124606e7 * t * pow(u, 0.4e1) + 0.2362560e7 * t * t * pow(u, 0.3e1) + 0.113724e6 * pow(u, 0.5e1) + 0.104976e6 * pow(u, 0.4e1) + 0.34992e5 * pow(u, 0.3e1) + 0.43740e5 * pow(u, 0.6e1) - 0.64288e5 * pow(t, 0.3e1) + 0.62688e5 * t * t - 0.552048e6 * pow(t, 0.4e1) - 0.506530e6 * pow(t, 0.5e1) - 0.106814e6 * pow(t, 0.6e1)) * pow(q4, 0.4e1) + (-0.133280e6 * t * t * u + 0.304e3 * t * u * u - 0.309680e6 * pow(t, 0.3e1) * u - 0.449232e6 * t * t * u * u + 0.589698e6 * pow(t, 0.4e1) * u - 0.685260e6 * pow(t, 0.3e1) * u * u + 0.1043256e7 * pow(t, 0.5e1) * u + 0.837384e6 * pow(t, 0.4e1) * u * u + 0.743382e6 * pow(t, 0.5e1) * u * u + 0.417034e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.329016e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.57104e5 * t * pow(u, 0.3e1) - 0.767384e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.907970e6 * t * t * pow(u, 0.4e1) - 0.223088e6 * t * pow(u, 0.5e1) - 0.190518e6 * t * pow(u, 0.4e1) - 0.359256e6 * t * t * pow(u, 0.5e1) - 0.89978e5 * t * pow(u, 0.6e1) - 0.888236e6 * t * t * pow(u, 0.3e1) + 0.298724e6 * pow(t, 0.6e1) * u - 0.4374e4 * pow(u, 0.5e1) - 0.8748e4 * pow(u, 0.6e1) - 0.64208e5 * pow(t, 0.3e1) - 0.22112e5 * t * t + 0.148784e6 * pow(t, 0.4e1) - 0.4374e4 * pow(u, 0.7e1) + 0.367170e6 * pow(t, 0.5e1) + 0.224214e6 * pow(t, 0.6e1) + 0.27740e5 * pow(t, 0.7e1)) * pow(q4, 0.3e1) + (0.112384e6 * pow(t, 0.3e1) * u + 0.11056e5 * t * t * u * u + 0.23896e5 * pow(t, 0.4e1) * u + 0.255276e6 * pow(t, 0.3e1) * u * u - 0.381936e6 * pow(t, 0.5e1) * u - 0.80028e5 * pow(t, 0.4e1) * u * u - 0.707574e6 * pow(t, 0.5e1) * u * u - 0.227832e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.262480e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.406840e6 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.142496e6 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.82578e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.55874e5 * t * t * pow(u, 0.6e1) + 0.344056e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.131262e6 * t * t * pow(u, 0.4e1) + 0.7176e4 * t * pow(u, 0.5e1) - 0.38e2 * t * pow(u, 0.4e1) + 0.142456e6 * t * t * pow(u, 0.5e1) + 0.14466e5 * t * pow(u, 0.6e1) + 0.55736e5 * t * t * pow(u, 0.3e1) - 0.67182e5 * pow(t, 0.7e1) * u - 0.294654e6 * pow(t, 0.6e1) * u * u + 0.7252e4 * t * pow(u, 0.7e1) - 0.399312e6 * pow(t, 0.6e1) * u + 0.22720e5 * pow(t, 0.3e1) + 0.9840e4 * pow(t, 0.4e1) - 0.60790e5 * pow(t, 0.5e1) - 0.127986e6 * pow(t, 0.6e1) - 0.54060e5 * pow(t, 0.7e1) - 0.2916e4 * pow(t, 0.8e1)) * q4 * q4 + (-0.22720e5 * pow(t, 0.4e1) * u - 0.11360e5 * pow(t, 0.3e1) * u * u - 0.15368e5 * pow(t, 0.5e1) * u - 0.63876e5 * pow(t, 0.4e1) * u * u + 0.72312e5 * pow(t, 0.5e1) * u * u - 0.46104e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.54012e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.186112e6 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.26036e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.32636e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.7062e4 * t * t * pow(u, 0.6e1) - 0.39304e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1382e4 * t * t * pow(u, 0.4e1) - 0.5604e4 * t * t * pow(u, 0.5e1) + 0.76044e5 * pow(t, 0.7e1) * u + 0.204714e6 * pow(t, 0.6e1) * u * u + 0.5832e4 * pow(t, 0.8e1) * u + 0.51144e5 * pow(t, 0.7e1) * u * u + 0.120392e6 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.109792e6 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.30984e5 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.6568e4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.2840e4 * t * t * pow(u, 0.7e1) + 0.94908e5 * pow(t, 0.6e1) * u - 0.11360e5 * pow(t, 0.5e1) + 0.10586e5 * pow(t, 0.6e1) + 0.24900e5 * pow(t, 0.7e1) + 0.5832e4 * pow(t, 0.8e1)) * q4 + 0.8520e4 * pow(t, 0.5e1) * u * u + 0.5680e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1420e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.5148e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.8292e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.2802e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.8862e4 * pow(t, 0.7e1) * u - 0.6288e4 * pow(t, 0.6e1) * u * u - 0.5832e4 * pow(t, 0.8e1) * u - 0.21984e5 * pow(t, 0.7e1) * u * u - 0.2916e4 * pow(t, 0.8e1) * u * u - 0.11702e5 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.17648e5 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.11892e5 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.3068e4 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.38e2 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.29616e5 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.15264e5 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.456e3 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.1344e4 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.5680e4 * pow(t, 0.6e1) * u + 0.1420e4 * pow(t, 0.7e1) - 0.2916e4 * pow(t, 0.8e1)) * pow(q4 - t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) * pow(q4 - u - 0.1e1, -0.3e1) * pow(t, -0.3e1) / u * q3 * q3 + 0.8e1 / 0.81e2 * ((0.16096e5 * t - 0.14048e5 * u) * pow(q4, 0.10e2) + (-0.76160e5 * t * t + 0.47584e5 * t * u + 0.70240e5 * u * u - 0.57152e5 * t + 0.70240e5 * u) * pow(q4, 0.9e1) + (0.207216e6 * pow(t, 0.3e1) - 0.17088e5 * t * t * u - 0.332704e6 * t * u * u - 0.147504e6 * pow(u, 0.3e1) + 0.237728e6 * t * t - 0.299040e6 * t * u - 0.280960e6 * u * u + 0.62656e5 * t - 0.140480e6 * u) * pow(q4, 0.8e1) + (-0.414864e6 * pow(t, 0.4e1) - 0.404672e6 * pow(t, 0.3e1) * u + 0.635872e6 * t * t * u * u + 0.590064e6 * t * pow(u, 0.3e1) + 0.168576e6 * pow(u, 0.4e1) - 0.607200e6 * pow(t, 0.3e1) + 0.497040e6 * t * t * u + 0.1192720e7 * t * u * u + 0.449536e6 * pow(u, 0.3e1) - 0.212160e6 * t * t + 0.646976e6 * t * u + 0.421440e6 * u * u - 0.1024e4 * t + 0.140480e6 * u) * pow(q4, 0.7e1) + (0.550206e6 * pow(t, 0.5e1) + 0.1346402e7 * pow(t, 0.4e1) * u - 0.20700e5 * pow(t, 0.3e1) * u * u - 0.1113636e7 * t * t * pow(u, 0.3e1) - 0.481458e6 * t * pow(u, 0.4e1) - 0.113262e6 * pow(u, 0.5e1) + 0.1194464e7 * pow(t, 0.4e1) + 0.396240e6 * pow(t, 0.3e1) * u - 0.2428896e7 * t * t * u * u - 0.1391120e7 * t * pow(u, 0.3e1) - 0.365248e6 * pow(u, 0.4e1) + 0.514544e6 * pow(t, 0.3e1) - 0.1409552e7 * t * t * u - 0.1474416e7 * t * u * u - 0.463584e6 * pow(u, 0.3e1) - 0.41440e5 * t * t - 0.622528e6 * t * u - 0.280960e6 * u * u - 0.42784e5 * t - 0.70240e5 * u) * pow(q4, 0.6e1) + (0.70240e5 * u * u + 0.27200e5 * t + 0.14048e5 * u + 0.1525296e7 * t * t * u + 0.703984e6 * t * u * u + 0.262368e6 * t * u + 0.973008e6 * pow(t, 0.3e1) * u + 0.3241536e7 * t * t * u * u - 0.2638970e7 * pow(t, 0.4e1) * u + 0.1511332e7 * pow(t, 0.3e1) * u * u - 0.1939218e7 * pow(t, 0.5e1) * u - 0.1769278e7 * pow(t, 0.4e1) * u * u + 0.953888e6 * t * pow(u, 0.3e1) + 0.528516e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.791472e6 * t * t * pow(u, 0.4e1) + 0.185502e6 * t * pow(u, 0.5e1) + 0.665784e6 * t * pow(u, 0.4e1) + 0.2702416e7 * t * t * pow(u, 0.3e1) + 0.157162e6 * pow(u, 0.5e1) + 0.224768e6 * pow(u, 0.4e1) + 0.168576e6 * pow(u, 0.3e1) + 0.44778e5 * pow(u, 0.6e1) + 0.46160e5 * pow(t, 0.3e1) + 0.162400e6 * t * t - 0.1079216e7 * pow(t, 0.4e1) - 0.1486236e7 * pow(t, 0.5e1) - 0.442860e6 * pow(t, 0.6e1)) * pow(q4, 0.5e1) + (-0.4992e4 * t - 0.724656e6 * t * t * u - 0.92080e5 * t * u * u - 0.35360e5 * t * u - 0.1641952e7 * pow(t, 0.3e1) * u - 0.1854448e7 * t * t * u * u + 0.932690e6 * pow(t, 0.4e1) * u - 0.3181656e7 * pow(t, 0.3e1) * u * u + 0.3720298e7 * pow(t, 0.5e1) * u + 0.1883044e7 * pow(t, 0.4e1) * u * u + 0.2746243e7 * pow(t, 0.5e1) * u * u + 0.1272980e7 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.434440e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.168016e6 * t * pow(u, 0.3e1) - 0.2255288e7 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1232542e7 * t * t * pow(u, 0.4e1) - 0.104434e6 * t * pow(u, 0.5e1) - 0.188546e6 * t * pow(u, 0.4e1) - 0.236829e6 * t * t * pow(u, 0.5e1) - 0.20005e5 * t * pow(u, 0.6e1) - 0.2206312e7 * t * t * pow(u, 0.3e1) + 0.1469331e7 * pow(t, 0.6e1) * u - 0.44778e5 * pow(u, 0.5e1) - 0.28096e5 * pow(u, 0.4e1) - 0.7024e4 * pow(u, 0.3e1) - 0.33364e5 * pow(u, 0.6e1) - 0.246656e6 * pow(t, 0.3e1) - 0.83520e5 * t * t + 0.180400e6 * pow(t, 0.4e1) - 0.9658e4 * pow(u, 0.7e1) + 0.1269578e7 * pow(t, 0.5e1) + 0.1069838e7 * pow(t, 0.6e1) + 0.206234e6 * pow(t, 0.7e1)) * pow(q4, 0.4e1) + (0.128960e6 * t * t * u + 0.2496e4 * t * u * u + 0.772624e6 * pow(t, 0.3e1) * u + 0.412512e6 * t * t * u * u + 0.747906e6 * pow(t, 0.4e1) * u + 0.2167108e7 * pow(t, 0.3e1) * u * u - 0.1739834e7 * pow(t, 0.5e1) * u + 0.802250e6 * pow(t, 0.4e1) * u * u - 0.3349394e7 * pow(t, 0.5e1) * u * u - 0.282622e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1316654e7 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.2013034e7 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.560080e6 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.153695e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.9143e4 * t * t * pow(u, 0.6e1) + 0.15184e5 * t * pow(u, 0.3e1) + 0.2628724e7 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.647724e6 * t * t * pow(u, 0.4e1) + 0.7926e4 * t * pow(u, 0.5e1) + 0.22868e5 * t * pow(u, 0.4e1) + 0.247968e6 * t * t * pow(u, 0.5e1) - 0.8870e4 * t * pow(u, 0.6e1) + 0.709408e6 * t * t * pow(u, 0.3e1) - 0.604445e6 * pow(t, 0.7e1) * u - 0.1869265e7 * pow(t, 0.6e1) * u * u - 0.6616e4 * t * pow(u, 0.7e1) - 0.2452300e7 * pow(t, 0.6e1) * u + 0.878e3 * pow(u, 0.5e1) + 0.2634e4 * pow(u, 0.6e1) + 0.89360e5 * pow(t, 0.3e1) + 0.13152e5 * t * t + 0.177312e6 * pow(t, 0.4e1) + 0.2634e4 * pow(u, 0.7e1) - 0.288680e6 * pow(t, 0.5e1) - 0.763824e6 * pow(t, 0.6e1) - 0.443478e6 * pow(t, 0.7e1) - 0.51076e5 * pow(t, 0.8e1) + 0.878e3 * pow(u, 0.8e1)) * pow(q4, 0.3e1) + (-0.95248e5 * pow(t, 0.3e1) * u - 0.6576e4 * t * t * u * u - 0.398572e6 * pow(t, 0.4e1) * u - 0.462468e6 * pow(t, 0.3e1) * u * u - 0.139606e6 * pow(t, 0.5e1) * u - 0.1065148e7 * pow(t, 0.4e1) * u * u + 0.409117e6 * pow(t, 0.5e1) * u * u - 0.1142144e7 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.1014118e7 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.1273446e7 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.293162e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.443561e6 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.26117e5 * t * t * pow(u, 0.6e1) - 0.980744e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.126276e6 * t * t * pow(u, 0.4e1) - 0.1586e4 * t * pow(u, 0.5e1) - 0.312e3 * t * pow(u, 0.4e1) - 0.111250e6 * t * t * pow(u, 0.5e1) - 0.699e3 * t * pow(u, 0.6e1) - 0.55876e5 * t * t * pow(u, 0.3e1) + 0.848611e6 * pow(t, 0.7e1) * u + 0.1901167e7 * pow(t, 0.6e1) * u * u + 0.2112e4 * t * pow(u, 0.7e1) + 0.126570e6 * pow(t, 0.8e1) * u + 0.634296e6 * pow(t, 0.7e1) * u * u + 0.1138389e7 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.803829e6 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.133156e6 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.38598e5 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.8157e4 * t * t * pow(u, 0.7e1) + 0.1537e4 * t * pow(u, 0.8e1) + 0.914746e6 * pow(t, 0.6e1) * u - 0.3424e4 * pow(t, 0.3e1) - 0.58096e5 * pow(t, 0.4e1) - 0.55012e5 * pow(t, 0.5e1) + 0.112752e6 * pow(t, 0.6e1) + 0.254668e6 * pow(t, 0.7e1) + 0.102368e6 * pow(t, 0.8e1) + 0.5208e4 * pow(t, 0.9e1)) * q4 * q4 + (0.6544e4 * pow(t, 0.4e1) * u + 0.1712e4 * pow(t, 0.3e1) * u * u + 0.112584e6 * pow(t, 0.5e1) * u + 0.113628e6 * pow(t, 0.4e1) * u * u + 0.305172e6 * pow(t, 0.5e1) * u * u + 0.356226e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.141498e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.215510e6 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.415528e6 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.180355e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.8421e4 * t * t * pow(u, 0.6e1) + 0.41064e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.822e3 * t * t * pow(u, 0.4e1) + 0.5909e4 * t * t * pow(u, 0.5e1) - 0.216249e6 * pow(t, 0.7e1) * u - 0.199675e6 * pow(t, 0.6e1) * u * u - 0.150675e6 * pow(t, 0.8e1) * u - 0.483536e6 * pow(t, 0.7e1) * u * u - 0.10416e5 * pow(t, 0.9e1) * u - 0.99912e5 * pow(t, 0.8e1) * u * u - 0.280193e6 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.332007e6 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.158674e6 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.5966e4 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.10467e5 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.931e3 * t * t * pow(u, 0.8e1) - 0.564411e6 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.147552e6 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.159643e6 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.88676e5 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.2403e4 * t * t * pow(u, 0.7e1) + 0.54641e5 * pow(t, 0.6e1) * u + 0.8480e4 * pow(t, 0.5e1) + 0.28254e5 * pow(t, 0.6e1) - 0.18950e5 * pow(t, 0.7e1) - 0.48306e5 * pow(t, 0.8e1) - 0.10628e5 * pow(t, 0.9e1)) * q4 - 0.4536e4 * pow(t, 0.5e1) * u * u - 0.1636e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.214e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.43418e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.21538e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.4313e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.5208e4 * pow(t, 0.9e1) * u * u + 0.36412e5 * pow(t, 0.6e1) * pow(u, 0.5e1) + 0.10648e5 * pow(t, 0.5e1) * pow(u, 0.6e1) - 0.2350e4 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.1484e4 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.17173e5 * pow(t, 0.7e1) * u - 0.41420e5 * pow(t, 0.6e1) * u * u + 0.21527e5 * pow(t, 0.8e1) * u + 0.18404e5 * pow(t, 0.7e1) * u * u + 0.10628e5 * pow(t, 0.9e1) * u + 0.48307e5 * pow(t, 0.8e1) * u * u + 0.78403e5 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.45706e5 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.10562e5 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.22397e5 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.6853e4 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.24418e5 * pow(t, 0.8e1) * pow(u, 0.3e1) + 0.44108e5 * pow(t, 0.7e1) * pow(u, 0.4e1) - 0.27522e5 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.60196e5 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.39949e5 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.9468e4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.5020e4 * pow(t, 0.6e1) * u - 0.1906e4 * pow(t, 0.7e1) - 0.1946e4 * pow(t, 0.8e1) + 0.5316e4 * pow(t, 0.9e1)) * pow(q4 - t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) * pow(q4 - u - 0.1e1, -0.3e1) * pow(t, -0.3e1) / u * q3 + 0.8e1 / 0.81e2 * ((-0.6880e4 * t - 0.18048e5 * u) * pow(q4, 0.11e2) + (-0.96e2 * t * t + 0.134016e6 * t * u + 0.108288e6 * u * u + 0.41888e5 * t + 0.108288e6 * u) * pow(q4, 0.10e2) + (0.70768e5 * pow(t, 0.3e1) - 0.255344e6 * t * t * u - 0.608224e6 * t * u * u - 0.279744e6 * pow(u, 0.3e1) - 0.55552e5 * t * t - 0.723424e6 * t * u - 0.541440e6 * u * u - 0.116800e6 * t - 0.270720e6 * u) * pow(q4, 0.9e1) + (-0.221760e6 * pow(t, 0.4e1) + 0.47728e5 * pow(t, 0.3e1) * u + 0.1241840e7 * t * t * u * u + 0.1309024e7 * t * pow(u, 0.3e1) + 0.406080e6 * pow(u, 0.4e1) - 0.94416e5 * pow(t, 0.3e1) + 0.1562208e7 * t * t * u + 0.2732144e7 * t * u * u + 0.1128000e7 * pow(u, 0.3e1) + 0.282400e6 * t * t + 0.1656640e7 * t * u + 0.1082880e7 * u * u + 0.196480e6 * t + 0.360960e6 * u) * pow(q4, 0.8e1) + (0.406914e6 * pow(t, 0.5e1) + 0.667624e6 * pow(t, 0.4e1) * u - 0.1033004e7 * pow(t, 0.3e1) * u * u - 0.2561632e7 * t * t * pow(u, 0.3e1) - 0.1608246e7 * t * pow(u, 0.4e1) - 0.362088e6 * pow(u, 0.5e1) + 0.454656e6 * pow(t, 0.4e1) - 0.1564464e7 * pow(t, 0.3e1) * u - 0.5725744e7 * t * t * u * u - 0.4706624e7 * t * pow(u, 0.3e1) - 0.1263360e7 * pow(u, 0.4e1) - 0.349152e6 * pow(t, 0.3e1) - 0.3794608e7 * t * t * u - 0.4951136e7 * t * u * u - 0.1714560e7 * pow(u, 0.3e1) - 0.586176e6 * t * t - 0.2072640e7 * t * u - 0.1082880e7 * u * u - 0.214880e6 * t - 0.270720e6 * u) * pow(q4, 0.7e1) + (0.541440e6 * u * u + 0.149920e6 * t + 0.108288e6 * u + 0.4706496e7 * t * t * u + 0.4548064e7 * t * u * u + 0.1502080e7 * t * u + 0.4955216e7 * pow(t, 0.3e1) * u + 0.10265392e8 * t * t * u * u + 0.50988e5 * pow(t, 0.4e1) * u + 0.6532984e7 * pow(t, 0.3e1) * u * u - 0.1557716e7 * pow(t, 0.5e1) * u - 0.520548e6 * pow(t, 0.4e1) * u * u + 0.6411520e7 * t * pow(u, 0.3e1) + 0.2486760e7 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.2925318e7 * t * t * pow(u, 0.4e1) + 0.1205484e7 * t * pow(u, 0.5e1) + 0.4417598e7 * t * pow(u, 0.4e1) + 0.9149732e7 * t * t * pow(u, 0.3e1) + 0.816672e6 * pow(u, 0.5e1) + 0.1353600e7 * pow(u, 0.4e1) + 0.1173120e7 * pow(u, 0.3e1) + 0.203040e6 * pow(u, 0.6e1) + 0.973280e6 * pow(t, 0.3e1) + 0.635104e6 * t * t + 0.164896e6 * pow(t, 0.4e1) - 0.965958e6 * pow(t, 0.5e1) - 0.484098e6 * pow(t, 0.6e1)) * pow(q4, 0.6e1) + (-0.108288e6 * u * u - 0.60288e5 * t - 0.18048e5 * u - 0.3143760e7 * t * t * u - 0.2135456e7 * t * u * u - 0.599776e6 * t * u - 0.6145376e7 * pow(t, 0.3e1) * u - 0.8932016e7 * t * t * u * u - 0.3751208e7 * pow(t, 0.4e1) * u - 0.12546764e8 * pow(t, 0.3e1) * u * u + 0.2236446e7 * pow(t, 0.5e1) * u - 0.3408820e7 * pow(t, 0.4e1) * u * u + 0.2372603e7 * pow(t, 0.5e1) * u * u - 0.455002e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.2927082e7 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.3985536e7 * t * pow(u, 0.3e1) - 0.10350400e8 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.7909644e7 * t * t * pow(u, 0.4e1) - 0.2376542e7 * t * pow(u, 0.5e1) - 0.4208074e7 * t * pow(u, 0.4e1) - 0.2023473e7 * t * t * pow(u, 0.5e1) - 0.556793e6 * t * pow(u, 0.6e1) - 0.12049368e8 * t * t * pow(u, 0.3e1) + 0.1827403e7 * pow(t, 0.6e1) * u - 0.548208e6 * pow(u, 0.5e1) - 0.541440e6 * pow(u, 0.4e1) - 0.315840e6 * pow(u, 0.3e1) - 0.302304e6 * pow(u, 0.6e1) - 0.944080e6 * pow(t, 0.3e1) - 0.376960e6 * t * t - 0.1050528e7 * pow(t, 0.4e1) - 0.69936e5 * pow(u, 0.7e1) + 0.412758e6 * pow(t, 0.5e1) + 0.1179072e7 * pow(t, 0.6e1) + 0.359704e6 * pow(t, 0.7e1)) * pow(q4, 0.5e1) + (0.10560e5 * t + 0.1067488e7 * t * t * u + 0.419888e6 * t * u * u + 0.103104e6 * t * u + 0.3495312e7 * pow(t, 0.3e1) * u + 0.3768640e7 * t * t * u * u + 0.5061520e7 * pow(t, 0.4e1) * u + 0.10100796e8 * pow(t, 0.3e1) * u * u + 0.904024e6 * pow(t, 0.5e1) * u + 0.9189516e7 * pow(t, 0.4e1) * u * u - 0.1115183e7 * pow(t, 0.5e1) * u * u + 0.6333386e7 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.8640706e7 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.1764709e7 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.1175778e7 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.2035206e7 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.871149e6 * t * t * pow(u, 0.6e1) + 0.1017888e7 * t * pow(u, 0.3e1) + 0.13605148e8 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.7263748e7 * t * t * pow(u, 0.4e1) + 0.1424444e7 * t * pow(u, 0.5e1) + 0.1547238e7 * t * pow(u, 0.4e1) + 0.3955929e7 * t * t * pow(u, 0.5e1) + 0.720261e6 * t * pow(u, 0.6e1) + 0.6999520e7 * t * t * pow(u, 0.3e1) - 0.1229792e7 * pow(t, 0.7e1) * u - 0.2741399e7 * pow(t, 0.6e1) * u * u + 0.152511e6 * t * pow(u, 0.7e1) - 0.3062115e7 * pow(t, 0.6e1) * u + 0.94752e5 * pow(u, 0.5e1) + 0.45120e5 * pow(u, 0.4e1) + 0.9024e4 * pow(u, 0.3e1) + 0.103776e6 * pow(u, 0.6e1) + 0.414192e6 * pow(t, 0.3e1) + 0.115296e6 * t * t + 0.923808e6 * pow(t, 0.4e1) + 0.58656e5 * pow(u, 0.7e1) + 0.550174e6 * pow(t, 0.5e1) - 0.755360e6 * pow(t, 0.6e1) - 0.827224e6 * pow(t, 0.7e1) - 0.158616e6 * pow(t, 0.8e1) + 0.13536e5 * pow(u, 0.8e1)) * pow(q4, 0.4e1) + (-0.142480e6 * t * t * u - 0.5280e4 * t * u * u - 0.839408e6 * pow(t, 0.3e1) * u - 0.625120e6 * t * t * u * u - 0.2379968e7 * pow(t, 0.4e1) * u - 0.3390872e7 * pow(t, 0.3e1) * u * u - 0.2465610e7 * pow(t, 0.5e1) * u - 0.6857020e7 * pow(t, 0.4e1) * u * u - 0.3538797e7 * pow(t, 0.5e1) * u * u - 0.9009800e7 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.7525092e7 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.1116740e7 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.5260856e7 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.4150670e7 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.1141614e7 * t * t * pow(u, 0.6e1) - 0.46272e5 * t * pow(u, 0.3e1) - 0.6888232e7 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.2493848e7 * t * t * pow(u, 0.4e1) - 0.248558e6 * t * pow(u, 0.5e1) - 0.149176e6 * t * pow(u, 0.4e1) - 0.2303406e7 * t * t * pow(u, 0.5e1) - 0.230409e6 * t * pow(u, 0.6e1) - 0.1598440e7 * t * t * pow(u, 0.3e1) + 0.1938538e7 * pow(t, 0.7e1) * u + 0.2699298e7 * pow(t, 0.6e1) * u * u - 0.112168e6 * t * pow(u, 0.7e1) + 0.470703e6 * pow(t, 0.8e1) * u + 0.1610770e7 * pow(t, 0.7e1) * u * u + 0.2060942e7 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.563081e6 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.995141e6 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.884428e6 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.230272e6 * t * t * pow(u, 0.7e1) - 0.22133e5 * t * pow(u, 0.8e1) + 0.715534e6 * pow(t, 0.6e1) * u - 0.1128e4 * pow(u, 0.5e1) - 0.4512e4 * pow(u, 0.6e1) - 0.72384e5 * pow(t, 0.3e1) - 0.14016e5 * t * t - 0.298336e6 * pow(t, 0.4e1) - 0.6768e4 * pow(u, 0.7e1) - 0.522160e6 * pow(t, 0.5e1) - 0.82636e5 * pow(t, 0.6e1) + 0.508834e6 * pow(t, 0.7e1) + 0.335828e6 * pow(t, 0.8e1) - 0.4512e4 * pow(u, 0.8e1) + 0.37814e5 * pow(t, 0.9e1) - 0.1128e4 * pow(u, 0.9e1)) * pow(q4, 0.3e1) + (0.50992e5 * pow(t, 0.3e1) * u + 0.7008e4 * t * t * u * u + 0.356004e6 * pow(t, 0.4e1) * u + 0.337756e6 * pow(t, 0.3e1) * u * u + 0.953160e6 * pow(t, 0.5e1) * u + 0.1637352e7 * pow(t, 0.4e1) * u * u + 0.2711833e7 * pow(t, 0.5e1) * u * u + 0.3649414e7 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.2070748e7 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.3285331e7 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.4179824e7 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.2140242e7 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.351559e6 * t * t * pow(u, 0.6e1) + 0.1118932e7 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.204486e6 * t * t * pow(u, 0.4e1) + 0.5124e4 * t * pow(u, 0.5e1) + 0.660e3 * t * pow(u, 0.4e1) + 0.362189e6 * t * t * pow(u, 0.5e1) + 0.12653e5 * t * pow(u, 0.6e1) + 0.60188e5 * t * t * pow(u, 0.3e1) - 0.3750e4 * pow(t, 0.10e2) - 0.549804e6 * pow(t, 0.7e1) * u + 0.500471e6 * pow(t, 0.6e1) * u * u + 0.13815e5 * t * pow(u, 0.7e1) - 0.650988e6 * pow(t, 0.8e1) * u - 0.1515034e7 * pow(t, 0.7e1) * u * u - 0.94074e5 * pow(t, 0.9e1) * u - 0.501282e6 * pow(t, 0.8e1) * u * u - 0.1002112e7 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.791767e6 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.37267e5 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.442048e6 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.237854e6 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.34927e5 * t * t * pow(u, 0.8e1) + 0.1241e4 * t * pow(u, 0.9e1) - 0.800093e6 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.1453937e7 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.2282966e7 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.1137724e7 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.175603e6 * t * t * pow(u, 0.7e1) + 0.6867e4 * t * pow(u, 0.8e1) + 0.698509e6 * pow(t, 0.6e1) * u + 0.1792e4 * pow(t, 0.3e1) + 0.27264e5 * pow(t, 0.4e1) + 0.122336e6 * pow(t, 0.5e1) + 0.164946e6 * pow(t, 0.6e1) - 0.6242e4 * pow(t, 0.7e1) - 0.178686e6 * pow(t, 0.8e1) - 0.76006e5 * pow(t, 0.9e1)) * q4 * q4 + (-0.4960e4 * pow(t, 0.4e1) * u - 0.896e3 * pow(t, 0.3e1) * u * u - 0.61568e5 * pow(t, 0.5e1) * u - 0.58720e5 * pow(t, 0.4e1) * u * u - 0.373980e6 * pow(t, 0.5e1) * u * u - 0.296226e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.96624e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.971302e6 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.716884e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.229487e6 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.16046e5 * t * t * pow(u, 0.6e1) - 0.18288e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.876e3 * t * t * pow(u, 0.4e1) - 0.6295e4 * t * t * pow(u, 0.5e1) + 0.7712e4 * pow(t, 0.10e2) + 0.74706e5 * pow(t, 0.9e1) * u * u + 0.133877e6 * pow(t, 0.6e1) * pow(u, 0.5e1) - 0.70058e5 * pow(t, 0.5e1) * pow(u, 0.6e1) - 0.102775e6 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.36106e5 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.2417e4 * t * t * pow(u, 0.9e1) + 0.7500e4 * pow(t, 0.10e2) * u - 0.145155e6 * pow(t, 0.7e1) * u - 0.615438e6 * pow(t, 0.6e1) * u * u + 0.146525e6 * pow(t, 0.8e1) * u + 0.24956e5 * pow(t, 0.7e1) * u * u + 0.112531e6 * pow(t, 0.9e1) * u + 0.376248e6 * pow(t, 0.8e1) * u * u + 0.430043e6 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.62418e5 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.564251e6 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.492032e6 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.159731e6 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.10918e5 * t * t * pow(u, 0.8e1) + 0.224919e6 * pow(t, 0.8e1) * pow(u, 0.3e1) + 0.292562e6 * pow(t, 0.7e1) * pow(u, 0.4e1) - 0.627666e6 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.1150092e7 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.863675e6 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.273880e6 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.19128e5 * t * t * pow(u, 0.7e1) - 0.208831e6 * pow(t, 0.6e1) * u - 0.4064e4 * pow(t, 0.5e1) - 0.20260e5 * pow(t, 0.6e1) - 0.40748e5 * pow(t, 0.7e1) + 0.2424e4 * pow(t, 0.8e1) + 0.35072e5 * pow(t, 0.9e1)) * q4 + 0.2436e4 * pow(t, 0.5e1) * u * u + 0.628e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.112e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.21622e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.8538e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.1691e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.3858e4 * pow(t, 0.10e2) - 0.3750e4 * pow(t, 0.10e2) * u * u - 0.36525e5 * pow(t, 0.9e1) * u * u + 0.46256e5 * pow(t, 0.6e1) * pow(u, 0.5e1) + 0.71749e5 * pow(t, 0.5e1) * pow(u, 0.6e1) + 0.39712e5 * pow(t, 0.4e1) * pow(u, 0.7e1) + 0.8267e4 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.7712e4 * pow(t, 0.10e2) * u + 0.14583e5 * pow(t, 0.7e1) * u + 0.26876e5 * pow(t, 0.6e1) * u * u + 0.20056e5 * pow(t, 0.8e1) * u + 0.66597e5 * pow(t, 0.7e1) * u * u - 0.15583e5 * pow(t, 0.9e1) * u - 0.7166e4 * pow(t, 0.8e1) * u * u + 0.58755e5 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.131166e6 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.123259e6 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.57378e5 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.11089e5 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.18446e5 * pow(t, 0.9e1) * pow(u, 0.3e1) - 0.35724e5 * pow(t, 0.8e1) * pow(u, 0.4e1) - 0.31132e5 * pow(t, 0.7e1) * pow(u, 0.5e1) - 0.4958e4 * pow(t, 0.6e1) * pow(u, 0.6e1) + 0.12618e5 * pow(t, 0.5e1) * pow(u, 0.7e1) + 0.9776e4 * pow(t, 0.4e1) * pow(u, 0.8e1) + 0.2304e4 * pow(t, 0.3e1) * pow(u, 0.9e1) - 0.61088e5 * pow(t, 0.8e1) * pow(u, 0.3e1) - 0.26323e5 * pow(t, 0.7e1) * pow(u, 0.4e1) + 0.103288e6 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.83314e5 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.35352e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.6705e4 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.3436e4 * pow(t, 0.6e1) * u + 0.1516e4 * pow(t, 0.7e1) + 0.2482e4 * pow(t, 0.8e1) + 0.2080e4 * pow(t, 0.9e1)) * pow(q4 - t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) * pow(q4 - u - 0.1e1, -0.3e1) * pow(t, -0.3e1) / u);
}
double GstarVVCoeffsC3em2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0);
}
#include <math.h>

double GstarVVCoeffsC3em1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0.8e1 / 0.3e1 * (0.4e1 * pow(q3, 0.4e1) * u + (-0.4e1 * t + 0.8e1 * u) * pow(q3, 0.3e1) * q4 + (-0.4e1 * t * u - 0.22e2 * u * u) * pow(q3, 0.3e1) + 0.4e1 * u * q3 * q3 * q4 * q4 + (0.4e1 * t * u - 0.36e2 * u * u) * q3 * q3 * q4 + (0.2e1 * t * t * u + 0.23e2 * t * u * u + 0.42e2 * pow(u, 0.3e1) + 0.6e1 * u * u) * q3 * q3 - 0.14e2 * u * u * q3 * q4 * q4 + (0.15e2 * t * u * u + 0.48e2 * pow(u, 0.3e1) + 0.6e1 * u * u) * q3 * q4 + (-0.9e1 * t * t * u * u - 0.34e2 * t * pow(u, 0.3e1) - 0.34e2 * pow(u, 0.4e1) - 0.5e1 * t * u * u - 0.14e2 * pow(u, 0.3e1)) * q3 + 0.10e2 * pow(u, 0.3e1) * q4 * q4 + (-0.15e2 * t * pow(u, 0.3e1) - 0.20e2 * pow(u, 0.4e1) - 0.8e1 * pow(u, 0.3e1)) * q4 + 0.7e1 * t * t * pow(u, 0.3e1) + 0.15e2 * t * pow(u, 0.4e1) + 0.10e2 * pow(u, 0.5e1) + 0.7e1 * t * pow(u, 0.3e1) + 0.8e1 * pow(u, 0.4e1) + 0.2e1 * pow(u, 0.3e1)) / t * pow(q3 - u, -0.2e1) * pow(u, -0.2e1));
}
#include <math.h>

double GstarVVCoeffsC3e0 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.8e1 / 0.9e1 * (0.32e2 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.128e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.115e3 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.555e3 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.1118e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.1174e4 * t * t * pow(u, 0.6e1) + 0.210e3 * t * t * pow(u, 0.5e1) + 0.164e3 * t * pow(u, 0.6e1) + 0.639e3 * t * pow(u, 0.7e1) + 0.115e3 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.646e3 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.1561e4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.2084e4 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.1621e4 * t * t * pow(u, 0.7e1) + 0.694e3 * t * pow(u, 0.8e1) + (-0.608e3 * pow(t, 0.3e1) * u - 0.7200e4 * t * t * u * u - 0.17312e5 * t * pow(u, 0.3e1) - 0.10720e5 * pow(u, 0.4e1) - 0.608e3 * t * t * u - 0.8384e4 * t * u * u - 0.12512e5 * pow(u, 0.3e1) - 0.3584e4 * u * u) * pow(q3, 0.3e1) * q4 * q4 + (-0.28e2 * pow(t, 0.5e1) + 0.236e3 * pow(t, 0.4e1) * u + 0.12440e5 * pow(t, 0.3e1) * u * u + 0.51080e5 * t * t * pow(u, 0.3e1) + 0.65892e5 * t * pow(u, 0.4e1) + 0.27180e5 * pow(u, 0.5e1) + 0.832e3 * pow(t, 0.3e1) * u + 0.21152e5 * t * t * u * u + 0.61616e5 * t * pow(u, 0.3e1) + 0.40880e5 * pow(u, 0.4e1) + 0.576e3 * t * t * u + 0.12624e5 * t * u * u + 0.20512e5 * pow(u, 0.3e1) + 0.3072e4 * u * u) * pow(q3, 0.3e1) * q4 + (0.76e2 * pow(t, 0.4e1) * u + 0.2096e4 * pow(t, 0.3e1) * u * u + 0.9384e4 * t * t * pow(u, 0.3e1) + 0.12784e5 * t * pow(u, 0.4e1) + 0.5420e4 * pow(u, 0.5e1) + 0.1792e4 * t * t * u * u + 0.8320e4 * t * pow(u, 0.3e1) + 0.6528e4 * pow(u, 0.4e1) + 0.2368e4 * pow(u, 0.3e1)) * q3 * q3 * q4 * q4 + (-0.20e2 * pow(t, 0.5e1) * u - 0.2930e4 * pow(t, 0.4e1) * u * u - 0.19968e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.42572e5 * t * t * pow(u, 0.4e1) - 0.37148e5 * t * pow(u, 0.5e1) - 0.11634e5 * pow(u, 0.6e1) - 0.72e2 * pow(t, 0.4e1) * u - 0.4272e4 * pow(t, 0.3e1) * u * u - 0.26076e5 * t * t * pow(u, 0.3e1) - 0.39400e5 * t * pow(u, 0.4e1) - 0.17764e5 * pow(u, 0.5e1) - 0.1536e4 * t * t * u * u - 0.11440e5 * t * pow(u, 0.3e1) - 0.9552e4 * pow(u, 0.4e1) - 0.2048e4 * pow(u, 0.3e1)) * q3 * q3 * q4 + 0.1216e4 * u * pow(q3, 0.6e1) * q4 * q4 + (-0.224e3 * pow(t, 0.4e1) * u * u - 0.2080e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.4896e4 * t * t * pow(u, 0.4e1) - 0.4448e4 * t * pow(u, 0.5e1) - 0.1408e4 * pow(u, 0.6e1) - 0.1184e4 * t * t * pow(u, 0.3e1) - 0.2368e4 * t * pow(u, 0.4e1) - 0.1184e4 * pow(u, 0.5e1)) * q3 * q4 * q4 + (0.279e3 * pow(t, 0.5e1) * u * u + 0.3633e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.11782e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.16482e5 * t * t * pow(u, 0.5e1) + 0.10755e5 * t * pow(u, 0.6e1) + 0.2701e4 * pow(u, 0.7e1) + 0.192e3 * pow(t, 0.4e1) * u * u + 0.3784e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.10240e5 * t * t * pow(u, 0.4e1) + 0.10040e5 * t * pow(u, 0.5e1) + 0.3392e4 * pow(u, 0.6e1) + 0.1024e4 * t * t * pow(u, 0.3e1) + 0.2144e4 * t * pow(u, 0.4e1) + 0.1168e4 * pow(u, 0.5e1)) * q3 * q4 + (-0.448e3 * t + 0.2240e4 * u) * pow(q3, 0.7e1) * q4 + (0.896e3 * t * t - 0.4288e4 * t * u - 0.12640e5 * u * u + 0.896e3 * t - 0.5632e4 * u) * pow(q3, 0.6e1) * q4 + (-0.2432e4 * t * u - 0.6016e4 * u * u - 0.2432e4 * u) * pow(q3, 0.5e1) * q4 * q4 + (-0.672e3 * pow(t, 0.3e1) + 0.3232e4 * t * t * u + 0.28912e5 * t * u * u + 0.29520e5 * pow(u, 0.3e1) - 0.896e3 * t * t + 0.7296e4 * t * u + 0.26176e5 * u * u - 0.448e3 * t + 0.4544e4 * u) * pow(q3, 0.5e1) * q4 + (0.1824e4 * t * t * u + 0.10816e5 * t * u * u + 0.11360e5 * pow(u, 0.3e1) + 0.2432e4 * t * u + 0.9600e4 * u * u + 0.1216e4 * u) * pow(q3, 0.4e1) * q4 * q4 + (0.224e3 * pow(t, 0.4e1) - 0.1216e4 * pow(t, 0.3e1) * u - 0.26688e5 * t * t * u * u - 0.62416e5 * t * pow(u, 0.3e1) - 0.37104e5 * pow(u, 0.4e1) + 0.224e3 * pow(t, 0.3e1) - 0.3616e4 * t * t * u - 0.39808e5 * t * u * u - 0.46896e5 * pow(u, 0.3e1) - 0.3008e4 * t * u - 0.16608e5 * u * u - 0.1152e4 * u) * pow(q3, 0.4e1) * q4 + 0.1216e4 * pow(q3, 0.8e1) * u + (-0.4320e4 * t * u - 0.7296e4 * u * u - 0.3584e4 * u) * pow(q3, 0.7e1) + (0.6160e4 * t * t * u + 0.24144e5 * t * u * u + 0.19424e5 * pow(u, 0.3e1) + 0.9424e4 * t * u + 0.18160e5 * u * u + 0.3712e4 * u) * pow(q3, 0.6e1) + (-0.4536e4 * pow(t, 0.3e1) * u - 0.32216e5 * t * t * u * u - 0.57272e5 * t * pow(u, 0.3e1) - 0.29784e5 * pow(u, 0.4e1) - 0.9128e4 * t * t * u - 0.44288e5 * t * u * u - 0.39144e5 * pow(u, 0.3e1) - 0.6400e4 * t * u - 0.15712e5 * u * u - 0.1536e4 * u) * pow(q3, 0.5e1) + (0.1824e4 * pow(t, 0.4e1) * u + 0.22368e5 * pow(t, 0.3e1) * u * u + 0.67152e5 * t * t * pow(u, 0.3e1) + 0.74656e5 * t * pow(u, 0.4e1) + 0.28560e5 * pow(u, 0.5e1) + 0.3984e4 * pow(t, 0.3e1) * u + 0.40080e5 * t * t * u * u + 0.82416e5 * t * pow(u, 0.3e1) + 0.45904e5 * pow(u, 0.4e1) + 0.3320e4 * t * t * u + 0.25188e5 * t * u * u + 0.26172e5 * pow(u, 0.3e1) + 0.1296e4 * t * u + 0.5616e4 * u * u + 0.192e3 * u) * pow(q3, 0.4e1) + (-0.380e3 * pow(t, 0.5e1) * u - 0.8586e4 * pow(t, 0.4e1) * u * u - 0.40080e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.72124e5 * t * t * pow(u, 0.4e1) - 0.57668e5 * t * pow(u, 0.5e1) - 0.17418e5 * pow(u, 0.6e1) - 0.760e3 * pow(t, 0.4e1) * u - 0.16464e5 * pow(t, 0.3e1) * u * u - 0.62460e5 * t * t * pow(u, 0.3e1) - 0.76904e5 * t * pow(u, 0.4e1) - 0.31028e5 * pow(u, 0.5e1) - 0.480e3 * pow(t, 0.3e1) * u - 0.12340e5 * t * t * u * u - 0.34224e5 * t * pow(u, 0.3e1) - 0.21244e5 * pow(u, 0.4e1) - 0.96e2 * t * t * u - 0.4532e4 * t * u * u - 0.6708e4 * pow(u, 0.3e1) - 0.768e3 * u * u) * pow(q3, 0.3e1) + (0.32e2 * pow(t, 0.6e1) * u + 0.1741e4 * pow(t, 0.5e1) * u * u + 0.12751e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.33634e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.42382e5 * t * t * pow(u, 0.5e1) + 0.26353e5 * t * pow(u, 0.6e1) + 0.6563e4 * pow(u, 0.7e1) + 0.48e2 * pow(t, 0.5e1) * u + 0.2938e4 * pow(t, 0.4e1) * u * u + 0.20552e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.43124e5 * t * t * pow(u, 0.4e1) + 0.37224e5 * t * pow(u, 0.5e1) + 0.11762e5 * pow(u, 0.6e1) + 0.12e2 * pow(t, 0.4e1) * u + 0.1672e4 * pow(t, 0.3e1) * u * u + 0.12738e5 * t * t * pow(u, 0.3e1) + 0.19008e5 * t * pow(u, 0.4e1) + 0.8298e4 * pow(u, 0.5e1) + 0.384e3 * t * t * u * u + 0.3848e4 * t * pow(u, 0.3e1) + 0.2952e4 * pow(u, 0.4e1) + 0.512e3 * pow(u, 0.3e1)) * q3 * q3 + (-0.147e3 * pow(t, 0.6e1) * u * u - 0.2007e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.7550e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.13470e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.12975e5 * t * t * pow(u, 0.6e1) - 0.6587e4 * t * pow(u, 0.7e1) - 0.1392e4 * pow(u, 0.8e1) - 0.155e3 * pow(t, 0.5e1) * u * u - 0.2765e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.9142e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.12822e5 * t * t * pow(u, 0.5e1) - 0.8503e4 * t * pow(u, 0.6e1) - 0.2213e4 * pow(u, 0.7e1) - 0.48e2 * pow(t, 0.4e1) * u * u - 0.1368e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.3824e4 * t * t * pow(u, 0.4e1) - 0.3784e4 * t * pow(u, 0.5e1) - 0.1280e4 * pow(u, 0.6e1) - 0.256e3 * t * t * pow(u, 0.3e1) - 0.548e3 * t * pow(u, 0.4e1) - 0.292e3 * pow(u, 0.5e1)) * q3 + (0.148e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.592e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.888e3 * t * t * pow(u, 0.5e1) + 0.592e3 * t * pow(u, 0.6e1) + 0.148e3 * pow(u, 0.7e1)) * q4 * q4 + (-0.231e3 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.1163e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.2366e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.2430e4 * t * t * pow(u, 0.6e1) - 0.1259e4 * t * pow(u, 0.7e1) - 0.263e3 * pow(u, 0.8e1) - 0.128e3 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.536e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.852e3 * t * t * pow(u, 0.5e1) - 0.608e3 * t * pow(u, 0.6e1) - 0.164e3 * pow(u, 0.7e1)) * q4 + 0.50e2 * pow(u, 0.7e1) + 0.143e3 * pow(u, 0.8e1) + 0.127e3 * pow(u, 0.9e1)) * pow(u, -0.2e1) * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) * pow(q3 - u, -0.2e1) / t);
}
#include <math.h>

double GstarVVCoeffsC3e1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0.8e1 / 0.27e2 * (0.152e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.626e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.481e3 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.2256e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.4406e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.4492e4 * t * t * pow(u, 0.6e1) + 0.1029e4 * t * t * pow(u, 0.5e1) + 0.788e3 * t * pow(u, 0.6e1) + 0.2385e4 * t * pow(u, 0.7e1) + 0.481e3 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.2605e4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.6058e4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.7802e4 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.5893e4 * t * t * pow(u, 0.7e1) + 0.2473e4 * t * pow(u, 0.8e1) + (-0.3408e4 * pow(t, 0.3e1) + 0.6208e4 * t * t * u + 0.82720e5 * t * u * u + 0.81216e5 * pow(u, 0.3e1) - 0.4544e4 * t * t + 0.25152e5 * t * u + 0.85024e5 * u * u - 0.2272e4 * t + 0.19424e5 * u) * pow(q3, 0.5e1) * q4 + (0.7584e4 * t * t * u + 0.40576e5 * t * u * u + 0.40640e5 * pow(u, 0.3e1) + 0.10112e5 * t * u + 0.35520e5 * u * u + 0.5056e4 * u) * pow(q3, 0.4e1) * q4 * q4 + (0.1136e4 * pow(t, 0.4e1) - 0.1672e4 * pow(t, 0.3e1) * u - 0.79032e5 * t * t * u * u - 0.180232e6 * t * pow(u, 0.3e1) - 0.101400e6 * pow(u, 0.4e1) + 0.1136e4 * pow(t, 0.3e1) - 0.13504e5 * t * t * u - 0.137608e6 * t * u * u - 0.146328e6 * pow(u, 0.3e1) - 0.14432e5 * t * u - 0.63552e5 * u * u - 0.6336e4 * u) * pow(q3, 0.4e1) * q4 + (-0.2528e4 * pow(t, 0.3e1) * u - 0.26640e5 * t * t * u * u - 0.60992e5 * t * pow(u, 0.3e1) - 0.36880e5 * pow(u, 0.4e1) - 0.2528e4 * t * t * u - 0.30464e5 * t * u * u - 0.43232e5 * pow(u, 0.3e1) - 0.12704e5 * u * u) * pow(q3, 0.3e1) * q4 * q4 + (-0.142e3 * pow(t, 0.5e1) + 0.266e3 * pow(t, 0.4e1) * u + 0.38804e5 * pow(t, 0.3e1) * u * u + 0.155276e6 * t * t * pow(u, 0.3e1) + 0.190794e6 * t * pow(u, 0.4e1) + 0.74682e5 * pow(u, 0.5e1) + 0.3736e4 * pow(t, 0.3e1) * u + 0.78800e5 * t * t * u * u + 0.207752e6 * t * pow(u, 0.3e1) + 0.126320e6 * pow(u, 0.4e1) + 0.3168e4 * t * t * u + 0.53448e5 * t * u * u + 0.73240e5 * pow(u, 0.3e1) + 0.14304e5 * u * u) * pow(q3, 0.3e1) * q4 + (0.316e3 * pow(t, 0.4e1) * u + 0.7616e4 * pow(t, 0.3e1) * u * u + 0.32424e5 * t * t * pow(u, 0.3e1) + 0.43264e5 * t * pow(u, 0.4e1) + 0.18140e5 * pow(u, 0.5e1) + 0.6352e4 * t * t * u * u + 0.28000e5 * t * pow(u, 0.3e1) + 0.21648e5 * pow(u, 0.4e1) + 0.7648e4 * pow(u, 0.3e1)) * q3 * q3 * q4 * q4 + (-0.32e2 * pow(t, 0.5e1) * u - 0.9710e4 * pow(t, 0.4e1) * u * u - 0.63888e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.129956e6 * t * t * pow(u, 0.4e1) - 0.108080e6 * t * pow(u, 0.5e1) - 0.32334e5 * pow(u, 0.6e1) - 0.396e3 * pow(t, 0.4e1) * u - 0.17286e5 * pow(t, 0.3e1) * u * u - 0.93954e5 * t * t * pow(u, 0.3e1) - 0.131674e6 * t * pow(u, 0.4e1) - 0.55570e5 * pow(u, 0.5e1) - 0.7152e4 * t * t * u * u - 0.44512e5 * t * pow(u, 0.3e1) - 0.33600e5 * pow(u, 0.4e1) - 0.7712e4 * pow(u, 0.3e1)) * q3 * q3 * q4 + (-0.794e3 * pow(t, 0.4e1) * u * u - 0.7000e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.16236e5 * t * t * pow(u, 0.4e1) - 0.14648e5 * t * pow(u, 0.5e1) - 0.4618e4 * pow(u, 0.6e1) - 0.3824e4 * t * t * pow(u, 0.3e1) - 0.7648e4 * t * pow(u, 0.4e1) - 0.3824e4 * pow(u, 0.5e1)) * q3 * q4 * q4 + (0.981e3 * pow(t, 0.5e1) * u * u + 0.12192e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.37726e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.50412e5 * t * t * pow(u, 0.5e1) + 0.31509e5 * t * pow(u, 0.6e1) + 0.7612e4 * pow(u, 0.7e1) + 0.894e3 * pow(t, 0.4e1) * u * u + 0.14356e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.36472e5 * t * t * pow(u, 0.4e1) + 0.34028e5 * t * pow(u, 0.5e1) + 0.11018e5 * pow(u, 0.6e1) + 0.3856e4 * t * t * pow(u, 0.3e1) + 0.8024e4 * t * pow(u, 0.4e1) + 0.4360e4 * pow(u, 0.5e1)) * q3 * q4 + (-0.2272e4 * t + 0.6752e4 * u) * pow(q3, 0.7e1) * q4 + (0.4544e4 * t * t - 0.10720e5 * t * u - 0.35776e5 * u * u + 0.4544e4 * t - 0.19840e5 * u) * pow(q3, 0.6e1) * q4 + (-0.10112e5 * t * u - 0.22816e5 * u * u - 0.10112e5 * u) * pow(q3, 0.5e1) * q4 * q4 + 0.5056e4 * u * pow(q3, 0.6e1) * q4 * q4 + 0.2464e4 * pow(q3, 0.8e1) * u + 0.233e3 * pow(u, 0.7e1) + 0.524e3 * pow(u, 0.8e1) + 0.448e3 * pow(u, 0.9e1) + (-0.10224e5 * t * u - 0.14640e5 * u * u - 0.8672e4 * u) * pow(q3, 0.7e1) + (0.16840e5 * t * t * u + 0.58272e5 * t * u * u + 0.41576e5 * pow(u, 0.3e1) + 0.29176e5 * t * u + 0.43960e5 * u * u + 0.12736e5 * u) * pow(q3, 0.6e1) + (-0.14220e5 * pow(t, 0.3e1) * u - 0.90980e5 * t * t * u * u - 0.146564e6 * t * pow(u, 0.3e1) - 0.70716e5 * pow(u, 0.4e1) - 0.34844e5 * t * t * u - 0.137504e6 * t * u * u - 0.100884e6 * pow(u, 0.3e1) - 0.30688e5 * t * u - 0.52384e5 * u * u - 0.9312e4 * u) * pow(q3, 0.5e1) + (0.6540e4 * pow(t, 0.4e1) * u + 0.72336e5 * pow(t, 0.3e1) * u * u + 0.199056e6 * t * t * pow(u, 0.3e1) + 0.206224e6 * t * pow(u, 0.4e1) + 0.75684e5 * pow(u, 0.5e1) + 0.18456e5 * pow(t, 0.3e1) * u + 0.149736e6 * t * t * u * u + 0.264216e6 * t * pow(u, 0.3e1) + 0.130168e6 * pow(u, 0.4e1) + 0.20900e5 * t * t * u + 0.110886e6 * t * u * u + 0.89010e5 * pow(u, 0.3e1) + 0.11736e5 * t * u + 0.28440e5 * u * u + 0.2784e4 * u) * pow(q3, 0.4e1) + (-0.1562e4 * pow(t, 0.5e1) * u - 0.31194e5 * pow(t, 0.4e1) * u * u - 0.134220e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.225940e6 * t * t * pow(u, 0.4e1) - 0.172250e6 * t * pow(u, 0.5e1) - 0.50898e5 * pow(u, 0.6e1) - 0.4294e4 * pow(t, 0.4e1) * u - 0.70878e5 * pow(t, 0.3e1) * u * u - 0.233118e6 * t * t * pow(u, 0.3e1) - 0.258770e6 * t * pow(u, 0.4e1) - 0.97100e5 * pow(u, 0.5e1) - 0.4152e4 * pow(t, 0.3e1) * u - 0.64582e5 * t * t * u * u - 0.143880e6 * t * pow(u, 0.3e1) - 0.76330e5 * pow(u, 0.4e1) - 0.1392e4 * t * t * u - 0.28646e5 * t * u * u - 0.30630e5 * pow(u, 0.3e1) - 0.5376e4 * u * u) * pow(q3, 0.3e1) + (0.152e3 * pow(t, 0.6e1) * u + 0.6967e4 * pow(t, 0.5e1) * u * u + 0.47164e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.116962e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.140308e6 * t * t * pow(u, 0.5e1) + 0.84463e5 * t * pow(u, 0.6e1) + 0.20768e5 * pow(u, 0.7e1) + 0.336e3 * pow(t, 0.5e1) * u + 0.14158e5 * pow(t, 0.4e1) * u * u + 0.85004e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.163088e6 * t * t * pow(u, 0.4e1) + 0.131868e6 * t * pow(u, 0.5e1) + 0.39962e5 * pow(u, 0.6e1) + 0.174e3 * pow(t, 0.4e1) * u + 0.10210e5 * pow(t, 0.3e1) * u * u + 0.59241e5 * t * t * pow(u, 0.3e1) + 0.78930e5 * t * pow(u, 0.4e1) + 0.31869e5 * pow(u, 0.5e1) + 0.2688e4 * t * t * u * u + 0.19124e5 * t * pow(u, 0.3e1) + 0.12996e5 * pow(u, 0.4e1) + 0.2432e4 * pow(u, 0.3e1)) * q3 * q3 + (-0.633e3 * pow(t, 0.6e1) * u * u - 0.8010e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.28568e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.48660e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.45177e5 * t * t * pow(u, 0.6e1) - 0.22394e5 * t * pow(u, 0.7e1) - 0.4686e4 * pow(u, 0.8e1) - 0.833e3 * pow(t, 0.5e1) * u * u - 0.12056e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.37084e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.49290e5 * t * t * pow(u, 0.5e1) - 0.31387e5 * t * pow(u, 0.6e1) - 0.7958e4 * pow(u, 0.7e1) - 0.336e3 * pow(t, 0.4e1) * u * u - 0.6516e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.16904e5 * t * t * pow(u, 0.4e1) - 0.15868e5 * t * pow(u, 0.5e1) - 0.5144e4 * pow(u, 0.6e1) - 0.1216e4 * t * t * pow(u, 0.3e1) - 0.2630e4 * t * pow(u, 0.4e1) - 0.1414e4 * pow(u, 0.5e1)) * q3 + (0.478e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1912e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.2868e4 * t * t * pow(u, 0.5e1) + 0.1912e4 * t * pow(u, 0.6e1) + 0.478e3 * pow(u, 0.7e1)) * q4 * q4 + (-0.807e3 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.3884e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.7562e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.7452e4 * t * t * pow(u, 0.6e1) - 0.3719e4 * t * pow(u, 0.7e1) - 0.752e3 * pow(u, 0.8e1) - 0.482e3 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.2006e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.3174e4 * t * t * pow(u, 0.5e1) - 0.2258e4 * t * pow(u, 0.6e1) - 0.608e3 * pow(u, 0.7e1)) * q4) * pow(u, -0.2e1) * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) * pow(q3 - u, -0.2e1) / t);
}
#include <math.h>

double GstarVVCoeffsC3e2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.4e1 / 0.81e2 * ((-0.17696e5 * t + 0.23968e5 * u) * pow(q3, 0.7e1) * q4 + (0.35392e5 * t * t + 0.16960e5 * t * u - 0.119552e6 * u * u + 0.35392e5 * t - 0.62336e5 * u) * pow(q3, 0.6e1) * q4 + (-0.21760e5 * t * u - 0.43520e5 * u * u - 0.21760e5 * u) * pow(q3, 0.5e1) * q4 * q4 + (-0.26544e5 * pow(t, 0.3e1) - 0.73648e5 * t * t * u + 0.129200e6 * t * u * u + 0.264816e6 * pow(u, 0.3e1) - 0.35392e5 * t * t - 0.17664e5 * t * u + 0.254336e6 * u * u - 0.17696e5 * t + 0.52768e5 * u) * pow(q3, 0.5e1) * q4 + (0.16320e5 * t * t * u + 0.76160e5 * t * u * u + 0.70720e5 * pow(u, 0.3e1) + 0.21760e5 * t * u + 0.65280e5 * u * u + 0.10880e5 * u) * pow(q3, 0.4e1) * q4 * q4 + (0.8848e4 * pow(t, 0.4e1) + 0.55072e5 * pow(t, 0.3e1) * u - 0.36384e5 * t * t * u * u - 0.380672e6 * t * pow(u, 0.3e1) - 0.327504e6 * pow(u, 0.4e1) + 0.8848e4 * pow(t, 0.3e1) + 0.40624e5 * t * t * u - 0.209456e6 * t * u * u - 0.435504e6 * pow(u, 0.3e1) + 0.704e3 * t * u - 0.169152e6 * u * u - 0.14400e5 * u) * pow(q3, 0.4e1) * q4 + (-0.5440e4 * pow(t, 0.3e1) * u - 0.48960e5 * t * t * u * u - 0.103360e6 * t * pow(u, 0.3e1) - 0.59840e5 * pow(u, 0.4e1) - 0.5440e4 * t * t * u - 0.54400e5 * t * u * u - 0.70720e5 * pow(u, 0.3e1) - 0.21760e5 * u * u) * pow(q3, 0.3e1) * q4 * q4 + (-0.1106e4 * pow(t, 0.5e1) - 0.15806e5 * pow(t, 0.4e1) * u + 0.1708e4 * pow(t, 0.3e1) * u * u + 0.231556e6 * t * t * pow(u, 0.3e1) + 0.453606e6 * t * pow(u, 0.4e1) + 0.238842e6 * pow(u, 0.5e1) - 0.6304e4 * pow(t, 0.3e1) * u + 0.83968e5 * t * t * u * u + 0.408832e6 * t * pow(u, 0.3e1) + 0.376864e6 * pow(u, 0.4e1) + 0.7200e4 * t * t * u + 0.81696e5 * t * u * u + 0.197792e6 * pow(u, 0.3e1) + 0.34368e5 * u * u) * pow(q3, 0.3e1) * q4 + (0.680e3 * pow(t, 0.4e1) * u + 0.13600e5 * pow(t, 0.3e1) * u * u + 0.53040e5 * t * t * pow(u, 0.3e1) + 0.68000e5 * t * pow(u, 0.4e1) + 0.27880e5 * pow(u, 0.5e1) + 0.10880e5 * t * t * u * u + 0.43520e5 * t * pow(u, 0.3e1) + 0.32640e5 * pow(u, 0.4e1) + 0.10880e5 * pow(u, 0.3e1)) * q3 * q3 * q4 * q4 + (0.1532e4 * pow(t, 0.5e1) * u - 0.1660e4 * pow(t, 0.4e1) * u * u - 0.79464e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.248920e6 * t * t * pow(u, 0.4e1) - 0.274324e6 * t * pow(u, 0.5e1) - 0.101676e6 * pow(u, 0.6e1) - 0.900e3 * pow(t, 0.4e1) * u - 0.22872e5 * pow(t, 0.3e1) * u * u - 0.151656e6 * t * t * pow(u, 0.3e1) - 0.289784e6 * t * pow(u, 0.4e1) - 0.160580e6 * pow(u, 0.5e1) - 0.17184e5 * t * t * u * u - 0.78560e5 * t * pow(u, 0.3e1) - 0.90240e5 * pow(u, 0.4e1) - 0.17536e5 * pow(u, 0.3e1)) * q3 * q3 * q4 + (-0.1360e4 * pow(t, 0.4e1) * u * u - 0.10880e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.24480e5 * t * t * pow(u, 0.4e1) - 0.21760e5 * t * pow(u, 0.5e1) - 0.6800e4 * pow(u, 0.6e1) - 0.5440e4 * t * t * pow(u, 0.3e1) - 0.10880e5 * t * pow(u, 0.4e1) - 0.5440e4 * pow(u, 0.5e1)) * q3 * q4 * q4 + (0.612e3 * pow(t, 0.5e1) * u * u + 0.14952e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.64232e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.109392e6 * t * t * pow(u, 0.5e1) + 0.82836e5 * t * pow(u, 0.6e1) + 0.23336e5 * pow(u, 0.7e1) + 0.2148e4 * pow(t, 0.4e1) * u * u + 0.23792e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.69032e5 * t * t * pow(u, 0.4e1) + 0.75568e5 * t * pow(u, 0.5e1) + 0.28180e5 * pow(u, 0.6e1) + 0.8768e4 * t * t * pow(u, 0.3e1) + 0.16288e5 * t * pow(u, 0.4e1) + 0.7616e4 * pow(u, 0.5e1)) * q3 * q4 + 0.472e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1816e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.830e3 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.5286e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.12940e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.15404e5 * t * t * pow(u, 0.6e1) + 0.2661e4 * t * t * pow(u, 0.5e1) + 0.1762e4 * t * pow(u, 0.6e1) + 0.8982e4 * t * pow(u, 0.7e1) + 0.830e3 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.6320e4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.19670e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.32080e5 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.28970e5 * t * t * pow(u, 0.7e1) + 0.13760e5 * t * pow(u, 0.8e1) + 0.10880e5 * u * pow(q3, 0.6e1) * q4 * q4 + 0.22112e5 * pow(q3, 0.8e1) * u + (0.472e3 * pow(t, 0.6e1) * u + 0.17006e5 * pow(t, 0.5e1) * u * u + 0.133238e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.430604e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.667052e6 * t * t * pow(u, 0.5e1) + 0.493046e6 * t * pow(u, 0.6e1) + 0.139894e6 * pow(u, 0.7e1) + 0.600e3 * pow(t, 0.5e1) * u + 0.29552e5 * pow(t, 0.4e1) * u * u + 0.222232e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.599800e6 * t * t * pow(u, 0.4e1) + 0.662904e6 * t * pow(u, 0.5e1) + 0.256384e6 * pow(u, 0.6e1) + 0.762e3 * pow(t, 0.4e1) * u + 0.25040e5 * pow(t, 0.3e1) * u * u + 0.153969e6 * t * t * pow(u, 0.3e1) + 0.304308e6 * t * pow(u, 0.4e1) + 0.181593e6 * pow(u, 0.5e1) + 0.9984e4 * t * t * u * u + 0.47164e5 * t * pow(u, 0.3e1) + 0.59580e5 * pow(u, 0.4e1) + 0.7552e4 * pow(u, 0.3e1)) * q3 * q3 + (-0.1302e4 * pow(t, 0.6e1) * u * u - 0.18180e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.85366e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.189732e6 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.219270e6 * t * t * pow(u, 0.6e1) - 0.127720e6 * t * pow(u, 0.7e1) - 0.29694e5 * pow(u, 0.8e1) - 0.1582e4 * pow(t, 0.5e1) * u * u - 0.24676e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.104708e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.185916e6 * t * t * pow(u, 0.5e1) - 0.148502e6 * t * pow(u, 0.6e1) - 0.44200e5 * pow(u, 0.7e1) - 0.1248e4 * pow(t, 0.4e1) * u * u - 0.14976e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.47836e5 * t * t * pow(u, 0.4e1) - 0.55760e5 * t * pow(u, 0.5e1) - 0.21652e5 * pow(u, 0.6e1) - 0.3776e4 * t * t * pow(u, 0.3e1) - 0.7354e4 * t * pow(u, 0.4e1) - 0.3578e4 * pow(u, 0.5e1)) * q3 + (0.680e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.2720e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.4080e4 * t * t * pow(u, 0.5e1) + 0.2720e4 * t * pow(u, 0.6e1) + 0.680e3 * pow(u, 0.7e1)) * q4 * q4 + (-0.1038e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.6334e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.15004e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.17388e5 * t * t * pow(u, 0.6e1) - 0.9910e4 * t * pow(u, 0.7e1) - 0.2230e4 * pow(u, 0.8e1) - 0.1096e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.4072e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.5664e4 * t * t * pow(u, 0.5e1) - 0.3496e4 * t * pow(u, 0.6e1) - 0.808e3 * pow(u, 0.7e1)) * q4 + (-0.64944e5 * t * u - 0.135408e6 * u * u - 0.69856e5 * u) * pow(q3, 0.7e1) + (0.82760e5 * t * t * u + 0.363504e6 * t * u * u + 0.373480e6 * pow(u, 0.3e1) + 0.145736e6 * t * u + 0.366536e6 * u * u + 0.85568e5 * u) * pow(q3, 0.6e1) + (-0.58140e5 * pow(t, 0.3e1) * u - 0.416596e6 * t * t * u * u - 0.901876e6 * t * pow(u, 0.3e1) - 0.595068e6 * pow(u, 0.4e1) - 0.122740e6 * t * t * u - 0.687016e6 * t * u * u - 0.823668e6 * pow(u, 0.3e1) - 0.113984e6 * t * u - 0.364160e6 * u * u - 0.50016e5 * u) * pow(q3, 0.5e1) + (0.23520e5 * pow(t, 0.4e1) * u + 0.258864e6 * pow(t, 0.3e1) * u * u + 0.904128e6 * t * t * pow(u, 0.3e1) + 0.1250864e7 * t * pow(u, 0.4e1) + 0.589344e6 * pow(u, 0.5e1) + 0.50376e5 * pow(t, 0.3e1) * u + 0.510216e6 * t * t * u * u + 0.1336200e7 * t * pow(u, 0.3e1) + 0.1001480e7 * pow(u, 0.4e1) + 0.54748e5 * t * t * u + 0.416514e6 * t * u * u + 0.610182e6 * pow(u, 0.3e1) + 0.33192e5 * t * u + 0.153000e6 * u * u + 0.12192e5 * u) * pow(q3, 0.4e1) + (-0.5146e4 * pow(t, 0.5e1) * u - 0.91062e5 * pow(t, 0.4e1) * u * u - 0.473676e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1047044e7 * t * t * pow(u, 0.4e1) - 0.1026634e7 * t * pow(u, 0.5e1) - 0.367350e6 * pow(u, 0.6e1) - 0.9554e4 * pow(t, 0.4e1) * u - 0.181752e6 * pow(t, 0.3e1) * u * u - 0.816156e6 * t * t * pow(u, 0.3e1) - 0.1318456e7 * t * pow(u, 0.4e1) - 0.688738e6 * pow(u, 0.5e1) - 0.10608e5 * pow(t, 0.3e1) * u - 0.166058e6 * t * t * u * u - 0.551568e6 * t * pow(u, 0.3e1) - 0.491990e6 * pow(u, 0.4e1) - 0.6096e4 * t * t * u - 0.75658e5 * t * u * u - 0.158874e6 * pow(u, 0.3e1) - 0.19968e5 * u * u) * pow(q3, 0.3e1) + 0.445e3 * pow(u, 0.7e1) + 0.2062e4 * pow(u, 0.8e1) + 0.2690e4 * pow(u, 0.9e1)) * pow(u, -0.2e1) * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) * pow(q3 - u, -0.2e1) / t);
}
double GstarVVCoeffsC4em2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0);
}
#include <math.h>

double GstarVVCoeffsC4em1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0.8e1 / 0.3e1 * (0.4e1 * q4 * q4 * t - 0.14e2 * q4 * t * t + 0.10e2 * pow(t, 0.3e1)) * pow(q4 - t, -0.2e1) * pow(t, -0.2e1) / u * q3 * q3 + 0.8e1 / 0.3e1 * ((0.8e1 * t - 0.4e1 * u) * pow(q4, 0.3e1) + (-0.36e2 * t * t + 0.4e1 * t * u) * q4 * q4 + (0.48e2 * pow(t, 0.3e1) + 0.15e2 * t * t * u + 0.6e1 * t * t) * q4 - 0.20e2 * pow(t, 0.4e1) - 0.15e2 * pow(t, 0.3e1) * u - 0.8e1 * pow(t, 0.3e1)) * pow(q4 - t, -0.2e1) * pow(t, -0.2e1) / u * q3 + 0.8e1 / 0.3e1 * (0.4e1 * t * pow(q4, 0.4e1) + (-0.22e2 * t * t - 0.4e1 * t * u) * pow(q4, 0.3e1) + (0.42e2 * pow(t, 0.3e1) + 0.23e2 * t * t * u + 0.2e1 * t * u * u + 0.6e1 * t * t) * q4 * q4 + (-0.34e2 * pow(t, 0.4e1) - 0.34e2 * pow(t, 0.3e1) * u - 0.9e1 * t * t * u * u - 0.14e2 * pow(t, 0.3e1) - 0.5e1 * t * t * u) * q4 + 0.10e2 * pow(t, 0.5e1) + 0.15e2 * pow(t, 0.4e1) * u + 0.7e1 * pow(t, 0.3e1) * u * u + 0.8e1 * pow(t, 0.4e1) + 0.7e1 * pow(t, 0.3e1) * u + 0.2e1 * pow(t, 0.3e1)) * pow(q4 - t, -0.2e1) * pow(t, -0.2e1) / u);
}
#include <math.h>

double GstarVVCoeffsC4e0 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.8e1 / 0.9e1 * (0.1216e4 * t * pow(q4, 0.6e1) + (-0.6016e4 * t * t - 0.2432e4 * t * u - 0.2432e4 * t) * pow(q4, 0.5e1) + (0.11360e5 * pow(t, 0.3e1) + 0.10816e5 * t * t * u + 0.1824e4 * t * u * u + 0.9600e4 * t * t + 0.2432e4 * t * u + 0.1216e4 * t) * pow(q4, 0.4e1) + (-0.10720e5 * pow(t, 0.4e1) - 0.17312e5 * pow(t, 0.3e1) * u - 0.7200e4 * t * t * u * u - 0.608e3 * t * pow(u, 0.3e1) - 0.12512e5 * pow(t, 0.3e1) - 0.8384e4 * t * t * u - 0.608e3 * t * u * u - 0.3584e4 * t * t) * pow(q4, 0.3e1) + (0.5420e4 * pow(t, 0.5e1) + 0.12784e5 * pow(t, 0.4e1) * u + 0.9384e4 * pow(t, 0.3e1) * u * u + 0.2096e4 * t * t * pow(u, 0.3e1) + 0.76e2 * t * pow(u, 0.4e1) + 0.6528e4 * pow(t, 0.4e1) + 0.8320e4 * pow(t, 0.3e1) * u + 0.1792e4 * t * t * u * u + 0.2368e4 * pow(t, 0.3e1)) * q4 * q4 + (-0.1408e4 * pow(t, 0.6e1) - 0.4448e4 * pow(t, 0.5e1) * u - 0.4896e4 * pow(t, 0.4e1) * u * u - 0.2080e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.224e3 * t * t * pow(u, 0.4e1) - 0.1184e4 * pow(t, 0.5e1) - 0.2368e4 * pow(t, 0.4e1) * u - 0.1184e4 * pow(t, 0.3e1) * u * u) * q4 + 0.148e3 * pow(t, 0.7e1) + 0.592e3 * pow(t, 0.6e1) * u + 0.888e3 * pow(t, 0.5e1) * u * u + 0.592e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.148e3 * pow(t, 0.3e1) * pow(u, 0.4e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - t, -0.2e1) * q3 * q3 - 0.8e1 / 0.9e1 * ((0.2240e4 * t - 0.448e3 * u) * pow(q4, 0.7e1) + (-0.12640e5 * t * t - 0.4288e4 * t * u + 0.896e3 * u * u - 0.5632e4 * t + 0.896e3 * u) * pow(q4, 0.6e1) + (0.29520e5 * pow(t, 0.3e1) + 0.28912e5 * t * t * u + 0.3232e4 * t * u * u - 0.672e3 * pow(u, 0.3e1) + 0.26176e5 * t * t + 0.7296e4 * t * u - 0.896e3 * u * u + 0.4544e4 * t - 0.448e3 * u) * pow(q4, 0.5e1) + (-0.37104e5 * pow(t, 0.4e1) - 0.62416e5 * pow(t, 0.3e1) * u - 0.26688e5 * t * t * u * u - 0.1216e4 * t * pow(u, 0.3e1) + 0.224e3 * pow(u, 0.4e1) - 0.46896e5 * pow(t, 0.3e1) - 0.39808e5 * t * t * u - 0.3616e4 * t * u * u + 0.224e3 * pow(u, 0.3e1) - 0.16608e5 * t * t - 0.3008e4 * t * u - 0.1152e4 * t) * pow(q4, 0.4e1) + (0.27180e5 * pow(t, 0.5e1) + 0.65892e5 * pow(t, 0.4e1) * u + 0.51080e5 * pow(t, 0.3e1) * u * u + 0.12440e5 * t * t * pow(u, 0.3e1) + 0.236e3 * t * pow(u, 0.4e1) - 0.28e2 * pow(u, 0.5e1) + 0.40880e5 * pow(t, 0.4e1) + 0.61616e5 * pow(t, 0.3e1) * u + 0.21152e5 * t * t * u * u + 0.832e3 * t * pow(u, 0.3e1) + 0.20512e5 * pow(t, 0.3e1) + 0.12624e5 * t * t * u + 0.576e3 * t * u * u + 0.3072e4 * t * t) * pow(q4, 0.3e1) + (-0.11634e5 * pow(t, 0.6e1) - 0.37148e5 * pow(t, 0.5e1) * u - 0.42572e5 * pow(t, 0.4e1) * u * u - 0.19968e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.2930e4 * t * t * pow(u, 0.4e1) - 0.20e2 * t * pow(u, 0.5e1) - 0.17764e5 * pow(t, 0.5e1) - 0.39400e5 * pow(t, 0.4e1) * u - 0.26076e5 * pow(t, 0.3e1) * u * u - 0.4272e4 * t * t * pow(u, 0.3e1) - 0.72e2 * t * pow(u, 0.4e1) - 0.9552e4 * pow(t, 0.4e1) - 0.11440e5 * pow(t, 0.3e1) * u - 0.1536e4 * t * t * u * u - 0.2048e4 * pow(t, 0.3e1)) * q4 * q4 + (0.2701e4 * pow(t, 0.7e1) + 0.10755e5 * pow(t, 0.6e1) * u + 0.16482e5 * pow(t, 0.5e1) * u * u + 0.11782e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.3633e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.279e3 * t * t * pow(u, 0.5e1) + 0.3392e4 * pow(t, 0.6e1) + 0.10040e5 * pow(t, 0.5e1) * u + 0.10240e5 * pow(t, 0.4e1) * u * u + 0.3784e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.192e3 * t * t * pow(u, 0.4e1) + 0.1168e4 * pow(t, 0.5e1) + 0.2144e4 * pow(t, 0.4e1) * u + 0.1024e4 * pow(t, 0.3e1) * u * u) * q4 - 0.263e3 * pow(t, 0.8e1) - 0.1259e4 * pow(t, 0.7e1) * u - 0.2430e4 * pow(t, 0.6e1) * u * u - 0.2366e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.1163e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.231e3 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.164e3 * pow(t, 0.7e1) - 0.608e3 * pow(t, 0.6e1) * u - 0.852e3 * pow(t, 0.5e1) * u * u - 0.536e3 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.128e3 * pow(t, 0.3e1) * pow(u, 0.4e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - t, -0.2e1) * q3 - 0.8e1 / 0.9e1 * (0.50e2 * pow(t, 0.7e1) + 0.143e3 * pow(t, 0.8e1) + 0.127e3 * pow(t, 0.9e1) + 0.2084e4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.1561e4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.646e3 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.115e3 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.694e3 * pow(t, 0.8e1) * u + 0.1621e4 * pow(t, 0.7e1) * u * u + 0.1216e4 * t * pow(q4, 0.8e1) + (-0.7296e4 * t * t - 0.4320e4 * t * u - 0.3584e4 * t) * pow(q4, 0.7e1) + (0.19424e5 * pow(t, 0.3e1) + 0.24144e5 * t * t * u + 0.6160e4 * t * u * u + 0.18160e5 * t * t + 0.9424e4 * t * u + 0.3712e4 * t) * pow(q4, 0.6e1) + (-0.29784e5 * pow(t, 0.4e1) - 0.57272e5 * pow(t, 0.3e1) * u - 0.32216e5 * t * t * u * u - 0.4536e4 * t * pow(u, 0.3e1) - 0.39144e5 * pow(t, 0.3e1) - 0.44288e5 * t * t * u - 0.9128e4 * t * u * u - 0.15712e5 * t * t - 0.6400e4 * t * u - 0.1536e4 * t) * pow(q4, 0.5e1) + (0.28560e5 * pow(t, 0.5e1) + 0.74656e5 * pow(t, 0.4e1) * u + 0.67152e5 * pow(t, 0.3e1) * u * u + 0.22368e5 * t * t * pow(u, 0.3e1) + 0.1824e4 * t * pow(u, 0.4e1) + 0.45904e5 * pow(t, 0.4e1) + 0.82416e5 * pow(t, 0.3e1) * u + 0.40080e5 * t * t * u * u + 0.3984e4 * t * pow(u, 0.3e1) + 0.26172e5 * pow(t, 0.3e1) + 0.25188e5 * t * t * u + 0.3320e4 * t * u * u + 0.5616e4 * t * t + 0.1296e4 * t * u + 0.192e3 * t) * pow(q4, 0.4e1) + (-0.17418e5 * pow(t, 0.6e1) - 0.57668e5 * pow(t, 0.5e1) * u - 0.72124e5 * pow(t, 0.4e1) * u * u - 0.40080e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.8586e4 * t * t * pow(u, 0.4e1) - 0.380e3 * t * pow(u, 0.5e1) - 0.31028e5 * pow(t, 0.5e1) - 0.76904e5 * pow(t, 0.4e1) * u - 0.62460e5 * pow(t, 0.3e1) * u * u - 0.16464e5 * t * t * pow(u, 0.3e1) - 0.760e3 * t * pow(u, 0.4e1) - 0.21244e5 * pow(t, 0.4e1) - 0.34224e5 * pow(t, 0.3e1) * u - 0.12340e5 * t * t * u * u - 0.480e3 * t * pow(u, 0.3e1) - 0.6708e4 * pow(t, 0.3e1) - 0.4532e4 * t * t * u - 0.96e2 * t * u * u - 0.768e3 * t * t) * pow(q4, 0.3e1) + (0.6563e4 * pow(t, 0.7e1) + 0.26353e5 * pow(t, 0.6e1) * u + 0.42382e5 * pow(t, 0.5e1) * u * u + 0.33634e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.12751e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.1741e4 * t * t * pow(u, 0.5e1) + 0.32e2 * t * pow(u, 0.6e1) + 0.11762e5 * pow(t, 0.6e1) + 0.37224e5 * pow(t, 0.5e1) * u + 0.43124e5 * pow(t, 0.4e1) * u * u + 0.20552e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.2938e4 * t * t * pow(u, 0.4e1) + 0.48e2 * t * pow(u, 0.5e1) + 0.8298e4 * pow(t, 0.5e1) + 0.19008e5 * pow(t, 0.4e1) * u + 0.12738e5 * pow(t, 0.3e1) * u * u + 0.1672e4 * t * t * pow(u, 0.3e1) + 0.12e2 * t * pow(u, 0.4e1) + 0.2952e4 * pow(t, 0.4e1) + 0.3848e4 * pow(t, 0.3e1) * u + 0.384e3 * t * t * u * u + 0.512e3 * pow(t, 0.3e1)) * q4 * q4 + (-0.1392e4 * pow(t, 0.8e1) - 0.6587e4 * pow(t, 0.7e1) * u - 0.12975e5 * pow(t, 0.6e1) * u * u - 0.13470e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.7550e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.2007e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.147e3 * t * t * pow(u, 0.6e1) - 0.2213e4 * pow(t, 0.7e1) - 0.8503e4 * pow(t, 0.6e1) * u - 0.12822e5 * pow(t, 0.5e1) * u * u - 0.9142e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.2765e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.155e3 * t * t * pow(u, 0.5e1) - 0.1280e4 * pow(t, 0.6e1) - 0.3784e4 * pow(t, 0.5e1) * u - 0.3824e4 * pow(t, 0.4e1) * u * u - 0.1368e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.48e2 * t * t * pow(u, 0.4e1) - 0.292e3 * pow(t, 0.5e1) - 0.548e3 * pow(t, 0.4e1) * u - 0.256e3 * pow(t, 0.3e1) * u * u) * q4 + 0.164e3 * pow(t, 0.6e1) * u + 0.210e3 * pow(t, 0.5e1) * u * u + 0.128e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.32e2 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.639e3 * pow(t, 0.7e1) * u + 0.1174e4 * pow(t, 0.6e1) * u * u + 0.1118e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.555e3 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.115e3 * pow(t, 0.3e1) * pow(u, 0.5e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - t, -0.2e1));
}
#include <math.h>

double GstarVVCoeffsC4e1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0.8e1 / 0.27e2 * (0.5056e4 * t * pow(q4, 0.6e1) + (-0.22816e5 * t * t - 0.10112e5 * t * u - 0.10112e5 * t) * pow(q4, 0.5e1) + (0.40640e5 * pow(t, 0.3e1) + 0.40576e5 * t * t * u + 0.7584e4 * t * u * u + 0.35520e5 * t * t + 0.10112e5 * t * u + 0.5056e4 * t) * pow(q4, 0.4e1) + (-0.36880e5 * pow(t, 0.4e1) - 0.60992e5 * pow(t, 0.3e1) * u - 0.26640e5 * t * t * u * u - 0.2528e4 * t * pow(u, 0.3e1) - 0.43232e5 * pow(t, 0.3e1) - 0.30464e5 * t * t * u - 0.2528e4 * t * u * u - 0.12704e5 * t * t) * pow(q4, 0.3e1) + (0.18140e5 * pow(t, 0.5e1) + 0.43264e5 * pow(t, 0.4e1) * u + 0.32424e5 * pow(t, 0.3e1) * u * u + 0.7616e4 * t * t * pow(u, 0.3e1) + 0.316e3 * t * pow(u, 0.4e1) + 0.21648e5 * pow(t, 0.4e1) + 0.28000e5 * pow(t, 0.3e1) * u + 0.6352e4 * t * t * u * u + 0.7648e4 * pow(t, 0.3e1)) * q4 * q4 + (-0.4618e4 * pow(t, 0.6e1) - 0.14648e5 * pow(t, 0.5e1) * u - 0.16236e5 * pow(t, 0.4e1) * u * u - 0.7000e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.794e3 * t * t * pow(u, 0.4e1) - 0.3824e4 * pow(t, 0.5e1) - 0.7648e4 * pow(t, 0.4e1) * u - 0.3824e4 * pow(t, 0.3e1) * u * u) * q4 + 0.478e3 * pow(t, 0.7e1) + 0.1912e4 * pow(t, 0.6e1) * u + 0.2868e4 * pow(t, 0.5e1) * u * u + 0.1912e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.478e3 * pow(t, 0.3e1) * pow(u, 0.4e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - t, -0.2e1) * q3 * q3 + 0.8e1 / 0.27e2 * ((0.6752e4 * t - 0.2272e4 * u) * pow(q4, 0.7e1) + (-0.35776e5 * t * t - 0.10720e5 * t * u + 0.4544e4 * u * u - 0.19840e5 * t + 0.4544e4 * u) * pow(q4, 0.6e1) + (0.81216e5 * pow(t, 0.3e1) + 0.82720e5 * t * t * u + 0.6208e4 * t * u * u - 0.3408e4 * pow(u, 0.3e1) + 0.85024e5 * t * t + 0.25152e5 * t * u - 0.4544e4 * u * u + 0.19424e5 * t - 0.2272e4 * u) * pow(q4, 0.5e1) + (-0.101400e6 * pow(t, 0.4e1) - 0.180232e6 * pow(t, 0.3e1) * u - 0.79032e5 * t * t * u * u - 0.1672e4 * t * pow(u, 0.3e1) + 0.1136e4 * pow(u, 0.4e1) - 0.146328e6 * pow(t, 0.3e1) - 0.137608e6 * t * t * u - 0.13504e5 * t * u * u + 0.1136e4 * pow(u, 0.3e1) - 0.63552e5 * t * t - 0.14432e5 * t * u - 0.6336e4 * t) * pow(q4, 0.4e1) + (0.74682e5 * pow(t, 0.5e1) + 0.190794e6 * pow(t, 0.4e1) * u + 0.155276e6 * pow(t, 0.3e1) * u * u + 0.38804e5 * t * t * pow(u, 0.3e1) + 0.266e3 * t * pow(u, 0.4e1) - 0.142e3 * pow(u, 0.5e1) + 0.126320e6 * pow(t, 0.4e1) + 0.207752e6 * pow(t, 0.3e1) * u + 0.78800e5 * t * t * u * u + 0.3736e4 * t * pow(u, 0.3e1) + 0.73240e5 * pow(t, 0.3e1) + 0.53448e5 * t * t * u + 0.3168e4 * t * u * u + 0.14304e5 * t * t) * pow(q4, 0.3e1) + (-0.32334e5 * pow(t, 0.6e1) - 0.108080e6 * pow(t, 0.5e1) * u - 0.129956e6 * pow(t, 0.4e1) * u * u - 0.63888e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.9710e4 * t * t * pow(u, 0.4e1) - 0.32e2 * t * pow(u, 0.5e1) - 0.55570e5 * pow(t, 0.5e1) - 0.131674e6 * pow(t, 0.4e1) * u - 0.93954e5 * pow(t, 0.3e1) * u * u - 0.17286e5 * t * t * pow(u, 0.3e1) - 0.396e3 * t * pow(u, 0.4e1) - 0.33600e5 * pow(t, 0.4e1) - 0.44512e5 * pow(t, 0.3e1) * u - 0.7152e4 * t * t * u * u - 0.7712e4 * pow(t, 0.3e1)) * q4 * q4 + (0.7612e4 * pow(t, 0.7e1) + 0.31509e5 * pow(t, 0.6e1) * u + 0.50412e5 * pow(t, 0.5e1) * u * u + 0.37726e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.12192e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.981e3 * t * t * pow(u, 0.5e1) + 0.11018e5 * pow(t, 0.6e1) + 0.34028e5 * pow(t, 0.5e1) * u + 0.36472e5 * pow(t, 0.4e1) * u * u + 0.14356e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.894e3 * t * t * pow(u, 0.4e1) + 0.4360e4 * pow(t, 0.5e1) + 0.8024e4 * pow(t, 0.4e1) * u + 0.3856e4 * pow(t, 0.3e1) * u * u) * q4 - 0.752e3 * pow(t, 0.8e1) - 0.3719e4 * pow(t, 0.7e1) * u - 0.7452e4 * pow(t, 0.6e1) * u * u - 0.7562e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.3884e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.807e3 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.608e3 * pow(t, 0.7e1) - 0.2258e4 * pow(t, 0.6e1) * u - 0.3174e4 * pow(t, 0.5e1) * u * u - 0.2006e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.482e3 * pow(t, 0.3e1) * pow(u, 0.4e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - t, -0.2e1) * q3 + 0.8e1 / 0.27e2 * ((-0.14640e5 * t * t - 0.10224e5 * t * u - 0.8672e4 * t) * pow(q4, 0.7e1) + (0.41576e5 * pow(t, 0.3e1) + 0.58272e5 * t * t * u + 0.16840e5 * t * u * u + 0.43960e5 * t * t + 0.29176e5 * t * u + 0.12736e5 * t) * pow(q4, 0.6e1) + (-0.70716e5 * pow(t, 0.4e1) - 0.146564e6 * pow(t, 0.3e1) * u - 0.90980e5 * t * t * u * u - 0.14220e5 * t * pow(u, 0.3e1) - 0.100884e6 * pow(t, 0.3e1) - 0.137504e6 * t * t * u - 0.34844e5 * t * u * u - 0.52384e5 * t * t - 0.30688e5 * t * u - 0.9312e4 * t) * pow(q4, 0.5e1) + (0.75684e5 * pow(t, 0.5e1) + 0.206224e6 * pow(t, 0.4e1) * u + 0.199056e6 * pow(t, 0.3e1) * u * u + 0.72336e5 * t * t * pow(u, 0.3e1) + 0.6540e4 * t * pow(u, 0.4e1) + 0.130168e6 * pow(t, 0.4e1) + 0.264216e6 * pow(t, 0.3e1) * u + 0.149736e6 * t * t * u * u + 0.18456e5 * t * pow(u, 0.3e1) + 0.89010e5 * pow(t, 0.3e1) + 0.110886e6 * t * t * u + 0.20900e5 * t * u * u + 0.28440e5 * t * t + 0.11736e5 * t * u + 0.2784e4 * t) * pow(q4, 0.4e1) + (-0.50898e5 * pow(t, 0.6e1) - 0.172250e6 * pow(t, 0.5e1) * u - 0.225940e6 * pow(t, 0.4e1) * u * u - 0.134220e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.31194e5 * t * t * pow(u, 0.4e1) - 0.1562e4 * t * pow(u, 0.5e1) - 0.97100e5 * pow(t, 0.5e1) - 0.258770e6 * pow(t, 0.4e1) * u - 0.233118e6 * pow(t, 0.3e1) * u * u - 0.70878e5 * t * t * pow(u, 0.3e1) - 0.4294e4 * t * pow(u, 0.4e1) - 0.76330e5 * pow(t, 0.4e1) - 0.143880e6 * pow(t, 0.3e1) * u - 0.64582e5 * t * t * u * u - 0.4152e4 * t * pow(u, 0.3e1) - 0.30630e5 * pow(t, 0.3e1) - 0.28646e5 * t * t * u - 0.1392e4 * t * u * u - 0.5376e4 * t * t) * pow(q4, 0.3e1) + (0.20768e5 * pow(t, 0.7e1) + 0.84463e5 * pow(t, 0.6e1) * u + 0.140308e6 * pow(t, 0.5e1) * u * u + 0.116962e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.47164e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.6967e4 * t * t * pow(u, 0.5e1) + 0.152e3 * t * pow(u, 0.6e1) + 0.39962e5 * pow(t, 0.6e1) + 0.131868e6 * pow(t, 0.5e1) * u + 0.163088e6 * pow(t, 0.4e1) * u * u + 0.85004e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.14158e5 * t * t * pow(u, 0.4e1) + 0.336e3 * t * pow(u, 0.5e1) + 0.31869e5 * pow(t, 0.5e1) + 0.78930e5 * pow(t, 0.4e1) * u + 0.59241e5 * pow(t, 0.3e1) * u * u + 0.10210e5 * t * t * pow(u, 0.3e1) + 0.174e3 * t * pow(u, 0.4e1) + 0.12996e5 * pow(t, 0.4e1) + 0.19124e5 * pow(t, 0.3e1) * u + 0.2688e4 * t * t * u * u + 0.2432e4 * pow(t, 0.3e1)) * q4 * q4 + (-0.4686e4 * pow(t, 0.8e1) - 0.22394e5 * pow(t, 0.7e1) * u - 0.45177e5 * pow(t, 0.6e1) * u * u - 0.48660e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.28568e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.8010e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.633e3 * t * t * pow(u, 0.6e1) - 0.7958e4 * pow(t, 0.7e1) - 0.31387e5 * pow(t, 0.6e1) * u - 0.49290e5 * pow(t, 0.5e1) * u * u - 0.37084e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.12056e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.833e3 * t * t * pow(u, 0.5e1) - 0.5144e4 * pow(t, 0.6e1) - 0.15868e5 * pow(t, 0.5e1) * u - 0.16904e5 * pow(t, 0.4e1) * u * u - 0.6516e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.336e3 * t * t * pow(u, 0.4e1) - 0.1414e4 * pow(t, 0.5e1) - 0.2630e4 * pow(t, 0.4e1) * u - 0.1216e4 * pow(t, 0.3e1) * u * u) * q4 + 0.233e3 * pow(t, 0.7e1) + 0.524e3 * pow(t, 0.8e1) + 0.448e3 * pow(t, 0.9e1) + 0.7802e4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.6058e4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.2605e4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.481e3 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.2473e4 * pow(t, 0.8e1) * u + 0.5893e4 * pow(t, 0.7e1) * u * u + 0.2464e4 * t * pow(q4, 0.8e1) + 0.788e3 * pow(t, 0.6e1) * u + 0.1029e4 * pow(t, 0.5e1) * u * u + 0.626e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.152e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.2385e4 * pow(t, 0.7e1) * u + 0.4492e4 * pow(t, 0.6e1) * u * u + 0.4406e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.2256e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.481e3 * pow(t, 0.3e1) * pow(u, 0.5e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - t, -0.2e1));
}
#include <math.h>

double GstarVVCoeffsC4e2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.4e1 / 0.81e2 * (0.10880e5 * t * pow(q4, 0.6e1) + (-0.43520e5 * t * t - 0.21760e5 * t * u - 0.21760e5 * t) * pow(q4, 0.5e1) + (0.70720e5 * pow(t, 0.3e1) + 0.76160e5 * t * t * u + 0.16320e5 * t * u * u + 0.65280e5 * t * t + 0.21760e5 * t * u + 0.10880e5 * t) * pow(q4, 0.4e1) + (-0.59840e5 * pow(t, 0.4e1) - 0.103360e6 * pow(t, 0.3e1) * u - 0.48960e5 * t * t * u * u - 0.5440e4 * t * pow(u, 0.3e1) - 0.70720e5 * pow(t, 0.3e1) - 0.54400e5 * t * t * u - 0.5440e4 * t * u * u - 0.21760e5 * t * t) * pow(q4, 0.3e1) + (0.27880e5 * pow(t, 0.5e1) + 0.68000e5 * pow(t, 0.4e1) * u + 0.53040e5 * pow(t, 0.3e1) * u * u + 0.13600e5 * t * t * pow(u, 0.3e1) + 0.680e3 * t * pow(u, 0.4e1) + 0.32640e5 * pow(t, 0.4e1) + 0.43520e5 * pow(t, 0.3e1) * u + 0.10880e5 * t * t * u * u + 0.10880e5 * pow(t, 0.3e1)) * q4 * q4 + (-0.6800e4 * pow(t, 0.6e1) - 0.21760e5 * pow(t, 0.5e1) * u - 0.24480e5 * pow(t, 0.4e1) * u * u - 0.10880e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1360e4 * t * t * pow(u, 0.4e1) - 0.5440e4 * pow(t, 0.5e1) - 0.10880e5 * pow(t, 0.4e1) * u - 0.5440e4 * pow(t, 0.3e1) * u * u) * q4 + 0.680e3 * pow(t, 0.7e1) + 0.2720e4 * pow(t, 0.6e1) * u + 0.4080e4 * pow(t, 0.5e1) * u * u + 0.2720e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.680e3 * pow(t, 0.3e1) * pow(u, 0.4e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - t, -0.2e1) * q3 * q3 - 0.4e1 / 0.81e2 * ((0.23968e5 * t - 0.17696e5 * u) * pow(q4, 0.7e1) + (-0.119552e6 * t * t + 0.16960e5 * t * u + 0.35392e5 * u * u - 0.62336e5 * t + 0.35392e5 * u) * pow(q4, 0.6e1) + (0.264816e6 * pow(t, 0.3e1) + 0.129200e6 * t * t * u - 0.73648e5 * t * u * u - 0.26544e5 * pow(u, 0.3e1) + 0.254336e6 * t * t - 0.17664e5 * t * u - 0.35392e5 * u * u + 0.52768e5 * t - 0.17696e5 * u) * pow(q4, 0.5e1) + (-0.327504e6 * pow(t, 0.4e1) - 0.380672e6 * pow(t, 0.3e1) * u - 0.36384e5 * t * t * u * u + 0.55072e5 * t * pow(u, 0.3e1) + 0.8848e4 * pow(u, 0.4e1) - 0.435504e6 * pow(t, 0.3e1) - 0.209456e6 * t * t * u + 0.40624e5 * t * u * u + 0.8848e4 * pow(u, 0.3e1) - 0.169152e6 * t * t + 0.704e3 * t * u - 0.14400e5 * t) * pow(q4, 0.4e1) + (0.238842e6 * pow(t, 0.5e1) + 0.453606e6 * pow(t, 0.4e1) * u + 0.231556e6 * pow(t, 0.3e1) * u * u + 0.1708e4 * t * t * pow(u, 0.3e1) - 0.15806e5 * t * pow(u, 0.4e1) - 0.1106e4 * pow(u, 0.5e1) + 0.376864e6 * pow(t, 0.4e1) + 0.408832e6 * pow(t, 0.3e1) * u + 0.83968e5 * t * t * u * u - 0.6304e4 * t * pow(u, 0.3e1) + 0.197792e6 * pow(t, 0.3e1) + 0.81696e5 * t * t * u + 0.7200e4 * t * u * u + 0.34368e5 * t * t) * pow(q4, 0.3e1) + (-0.101676e6 * pow(t, 0.6e1) - 0.274324e6 * pow(t, 0.5e1) * u - 0.248920e6 * pow(t, 0.4e1) * u * u - 0.79464e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1660e4 * t * t * pow(u, 0.4e1) + 0.1532e4 * t * pow(u, 0.5e1) - 0.160580e6 * pow(t, 0.5e1) - 0.289784e6 * pow(t, 0.4e1) * u - 0.151656e6 * pow(t, 0.3e1) * u * u - 0.22872e5 * t * t * pow(u, 0.3e1) - 0.900e3 * t * pow(u, 0.4e1) - 0.90240e5 * pow(t, 0.4e1) - 0.78560e5 * pow(t, 0.3e1) * u - 0.17184e5 * t * t * u * u - 0.17536e5 * pow(t, 0.3e1)) * q4 * q4 + (0.23336e5 * pow(t, 0.7e1) + 0.82836e5 * pow(t, 0.6e1) * u + 0.109392e6 * pow(t, 0.5e1) * u * u + 0.64232e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.14952e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.612e3 * t * t * pow(u, 0.5e1) + 0.28180e5 * pow(t, 0.6e1) + 0.75568e5 * pow(t, 0.5e1) * u + 0.69032e5 * pow(t, 0.4e1) * u * u + 0.23792e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.2148e4 * t * t * pow(u, 0.4e1) + 0.7616e4 * pow(t, 0.5e1) + 0.16288e5 * pow(t, 0.4e1) * u + 0.8768e4 * pow(t, 0.3e1) * u * u) * q4 - 0.2230e4 * pow(t, 0.8e1) - 0.9910e4 * pow(t, 0.7e1) * u - 0.17388e5 * pow(t, 0.6e1) * u * u - 0.15004e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.6334e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.1038e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.808e3 * pow(t, 0.7e1) - 0.3496e4 * pow(t, 0.6e1) * u - 0.5664e4 * pow(t, 0.5e1) * u * u - 0.4072e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.1096e4 * pow(t, 0.3e1) * pow(u, 0.4e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - t, -0.2e1) * q3 - 0.4e1 / 0.81e2 * (0.445e3 * pow(t, 0.7e1) + 0.2062e4 * pow(t, 0.8e1) + 0.2690e4 * pow(t, 0.9e1) + (-0.135408e6 * t * t - 0.64944e5 * t * u - 0.69856e5 * t) * pow(q4, 0.7e1) + (0.373480e6 * pow(t, 0.3e1) + 0.363504e6 * t * t * u + 0.82760e5 * t * u * u + 0.366536e6 * t * t + 0.145736e6 * t * u + 0.85568e5 * t) * pow(q4, 0.6e1) + (-0.595068e6 * pow(t, 0.4e1) - 0.901876e6 * pow(t, 0.3e1) * u - 0.416596e6 * t * t * u * u - 0.58140e5 * t * pow(u, 0.3e1) - 0.823668e6 * pow(t, 0.3e1) - 0.687016e6 * t * t * u - 0.122740e6 * t * u * u - 0.364160e6 * t * t - 0.113984e6 * t * u - 0.50016e5 * t) * pow(q4, 0.5e1) + (0.589344e6 * pow(t, 0.5e1) + 0.1250864e7 * pow(t, 0.4e1) * u + 0.904128e6 * pow(t, 0.3e1) * u * u + 0.258864e6 * t * t * pow(u, 0.3e1) + 0.23520e5 * t * pow(u, 0.4e1) + 0.1001480e7 * pow(t, 0.4e1) + 0.1336200e7 * pow(t, 0.3e1) * u + 0.510216e6 * t * t * u * u + 0.50376e5 * t * pow(u, 0.3e1) + 0.610182e6 * pow(t, 0.3e1) + 0.416514e6 * t * t * u + 0.54748e5 * t * u * u + 0.153000e6 * t * t + 0.33192e5 * t * u + 0.12192e5 * t) * pow(q4, 0.4e1) + (-0.367350e6 * pow(t, 0.6e1) - 0.1026634e7 * pow(t, 0.5e1) * u - 0.1047044e7 * pow(t, 0.4e1) * u * u - 0.473676e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.91062e5 * t * t * pow(u, 0.4e1) - 0.5146e4 * t * pow(u, 0.5e1) - 0.688738e6 * pow(t, 0.5e1) - 0.1318456e7 * pow(t, 0.4e1) * u - 0.816156e6 * pow(t, 0.3e1) * u * u - 0.181752e6 * t * t * pow(u, 0.3e1) - 0.9554e4 * t * pow(u, 0.4e1) - 0.491990e6 * pow(t, 0.4e1) - 0.551568e6 * pow(t, 0.3e1) * u - 0.166058e6 * t * t * u * u - 0.10608e5 * t * pow(u, 0.3e1) - 0.158874e6 * pow(t, 0.3e1) - 0.75658e5 * t * t * u - 0.6096e4 * t * u * u - 0.19968e5 * t * t) * pow(q4, 0.3e1) + (0.139894e6 * pow(t, 0.7e1) + 0.493046e6 * pow(t, 0.6e1) * u + 0.667052e6 * pow(t, 0.5e1) * u * u + 0.430604e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.133238e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.17006e5 * t * t * pow(u, 0.5e1) + 0.472e3 * t * pow(u, 0.6e1) + 0.256384e6 * pow(t, 0.6e1) + 0.662904e6 * pow(t, 0.5e1) * u + 0.599800e6 * pow(t, 0.4e1) * u * u + 0.222232e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.29552e5 * t * t * pow(u, 0.4e1) + 0.600e3 * t * pow(u, 0.5e1) + 0.181593e6 * pow(t, 0.5e1) + 0.304308e6 * pow(t, 0.4e1) * u + 0.153969e6 * pow(t, 0.3e1) * u * u + 0.25040e5 * t * t * pow(u, 0.3e1) + 0.762e3 * t * pow(u, 0.4e1) + 0.59580e5 * pow(t, 0.4e1) + 0.47164e5 * pow(t, 0.3e1) * u + 0.9984e4 * t * t * u * u + 0.7552e4 * pow(t, 0.3e1)) * q4 * q4 + (-0.29694e5 * pow(t, 0.8e1) - 0.127720e6 * pow(t, 0.7e1) * u - 0.219270e6 * pow(t, 0.6e1) * u * u - 0.189732e6 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.85366e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.18180e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.1302e4 * t * t * pow(u, 0.6e1) - 0.44200e5 * pow(t, 0.7e1) - 0.148502e6 * pow(t, 0.6e1) * u - 0.185916e6 * pow(t, 0.5e1) * u * u - 0.104708e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.24676e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.1582e4 * t * t * pow(u, 0.5e1) - 0.21652e5 * pow(t, 0.6e1) - 0.55760e5 * pow(t, 0.5e1) * u - 0.47836e5 * pow(t, 0.4e1) * u * u - 0.14976e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1248e4 * t * t * pow(u, 0.4e1) - 0.3578e4 * pow(t, 0.5e1) - 0.7354e4 * pow(t, 0.4e1) * u - 0.3776e4 * pow(t, 0.3e1) * u * u) * q4 + 0.32080e5 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.19670e5 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.6320e4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.830e3 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.13760e5 * pow(t, 0.8e1) * u + 0.28970e5 * pow(t, 0.7e1) * u * u + 0.22112e5 * t * pow(q4, 0.8e1) + 0.1762e4 * pow(t, 0.6e1) * u + 0.2661e4 * pow(t, 0.5e1) * u * u + 0.1816e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.472e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.8982e4 * pow(t, 0.7e1) * u + 0.15404e5 * pow(t, 0.6e1) * u * u + 0.12940e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.5286e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.830e3 * pow(t, 0.3e1) * pow(u, 0.5e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - t, -0.2e1));
}
double GstarVVCoeffsC5em2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0);
}
#include <math.h>

double GstarVVCoeffsC5em1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.8e1 / 0.3e1 * (0.6e1 * u * q3 * q3 * pow(q4, 0.3e1) + (-0.2e1 * t + 0.10e2 * u) * pow(q3, 0.4e1) * q4 + (-0.6e1 * t + 0.14e2 * u) * pow(q3, 0.3e1) * q4 * q4 + (0.6e1 * t * t - 0.26e2 * t * u - 0.40e2 * u * u + 0.6e1 * t - 0.24e2 * u) * pow(q3, 0.3e1) * q4 + (0.12e2 * t * t - 0.36e2 * t * u - 0.24e2 * u * u + 0.12e2 * t - 0.30e2 * u) * q3 * q3 * q4 * q4 + (-0.6e1 * pow(t, 0.3e1) + 0.27e2 * t * t * u + 0.108e3 * t * u * u + 0.30e2 * pow(u, 0.3e1) - 0.12e2 * t * t + 0.42e2 * t * u + 0.78e2 * u * u - 0.6e1 * t + 0.18e2 * u) * q3 * q3 * q4 + (-0.12e2 * t * u - 0.12e2 * u) * q3 * pow(q4, 0.3e1) + (-0.6e1 * pow(t, 0.3e1) + 0.30e2 * t * t * u + 0.48e2 * t * u * u - 0.12e2 * t * t + 0.48e2 * t * u + 0.42e2 * u * u - 0.6e1 * t + 0.18e2 * u) * q3 * q4 * q4 + (0.2e1 * pow(t, 0.4e1) - 0.16e2 * pow(t, 0.3e1) * u - 0.96e2 * t * t * u * u - 0.60e2 * t * pow(u, 0.3e1) + 0.6e1 * pow(t, 0.3e1) - 0.30e2 * t * t * u - 0.133e3 * t * u * u - 0.46e2 * pow(u, 0.3e1) + 0.6e1 * t * t - 0.18e2 * t * u - 0.42e2 * u * u + 0.2e1 * t - 0.4e1 * u) * q3 * q4 - 0.2e1 * pow(u, 0.3e1) - 0.6e1 * pow(u, 0.4e1) - t * t * u - 0.3e1 * t * u * u - 0.3e1 * pow(t, 0.3e1) * u - 0.17e2 * t * t * u * u - 0.3e1 * pow(t, 0.4e1) * u - 0.25e2 * pow(t, 0.3e1) * u * u + 0.2e1 * pow(q3, 0.5e1) * u + (-0.8e1 * t * u - 0.16e2 * u * u - 0.6e1 * u) * pow(q3, 0.4e1) + (0.13e2 * t * t * u + 0.56e2 * t * u * u + 0.26e2 * pow(u, 0.3e1) + 0.18e2 * t * u + 0.36e2 * u * u + 0.6e1 * u) * pow(q3, 0.3e1) + (-0.11e2 * pow(t, 0.3e1) * u - 0.75e2 * t * t * u * u - 0.72e2 * t * pow(u, 0.3e1) - 0.12e2 * pow(u, 0.4e1) - 0.21e2 * t * t * u - 0.91e2 * t * u * u - 0.46e2 * pow(u, 0.3e1) - 0.12e2 * t * u - 0.24e2 * u * u - 0.2e1 * u) * q3 * q3 + (0.5e1 * pow(t, 0.4e1) * u + 0.46e2 * pow(t, 0.3e1) * u * u + 0.66e2 * t * t * pow(u, 0.3e1) + 0.24e2 * t * pow(u, 0.4e1) + 0.12e2 * pow(t, 0.3e1) * u + 0.80e2 * t * t * u * u + 0.81e2 * t * pow(u, 0.3e1) + 0.16e2 * pow(u, 0.4e1) + 0.9e1 * t * t * u + 0.38e2 * t * u * u + 0.22e2 * pow(u, 0.3e1) + 0.2e1 * t * u + 0.4e1 * u * u) * q3 + (0.6e1 * t * t * u + 0.12e2 * t * u + 0.6e1 * u) * pow(q4, 0.3e1) + (-0.8e1 * pow(t, 0.3e1) * u - 0.24e2 * t * t * u * u - 0.18e2 * t * t * u - 0.42e2 * t * u * u - 0.12e2 * t * u - 0.18e2 * u * u - 0.2e1 * u) * q4 * q4 + (0.5e1 * pow(t, 0.4e1) * u + 0.28e2 * pow(t, 0.3e1) * u * u + 0.30e2 * t * t * pow(u, 0.3e1) + 0.12e2 * pow(t, 0.3e1) * u + 0.55e2 * t * t * u * u + 0.46e2 * t * pow(u, 0.3e1) + 0.9e1 * t * t * u + 0.31e2 * t * u * u + 0.18e2 * pow(u, 0.3e1) + 0.2e1 * t * u + 0.4e1 * u * u) * q4 - 0.17e2 * t * pow(u, 0.3e1) - 0.35e2 * t * t * pow(u, 0.3e1) - 0.16e2 * t * pow(u, 0.4e1) - pow(t, 0.5e1) * u - 0.11e2 * pow(t, 0.4e1) * u * u - 0.20e2 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.12e2 * t * t * pow(u, 0.4e1)) * pow(-0.1e1 - t + q3, -0.3e1) / t * pow(u, -0.2e1));
}
#include <math.h>

double GstarVVCoeffsC5e0 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.8e1 / 0.9e1 * ((0.3852e4 * pow(t, 0.5e1) + 0.10368e5 * pow(t, 0.4e1) * u - 0.31872e5 * pow(t, 0.3e1) * u * u - 0.79416e5 * t * t * pow(u, 0.3e1) - 0.50364e5 * t * pow(u, 0.4e1) - 0.9016e4 * pow(u, 0.5e1) + 0.13440e5 * pow(t, 0.4e1) + 0.28640e5 * pow(t, 0.3e1) * u - 0.74408e5 * t * t * u * u - 0.123008e6 * t * pow(u, 0.3e1) - 0.39912e5 * pow(u, 0.4e1) + 0.18240e5 * pow(t, 0.3e1) + 0.27032e5 * t * t * u - 0.62796e5 * t * u * u - 0.50084e5 * pow(u, 0.3e1) + 0.11520e5 * t * t + 0.9120e4 * t * u - 0.19232e5 * u * u + 0.2880e4 * t + 0.320e3 * u) * pow(q3, 0.5e1) + (0.10848e5 * u * u - 0.1152e4 * t - 0.64e2 * u - 0.2160e4 * pow(t, 0.6e1) + 0.39904e5 * pow(u, 0.3e1) + 0.52380e5 * pow(u, 0.4e1) + 0.26868e5 * pow(u, 0.5e1) - 0.19408e5 * t * t * u + 0.47792e5 * t * u * u - 0.4480e4 * t * u - 0.32848e5 * pow(t, 0.3e1) * u + 0.87072e5 * t * t * u * u - 0.24920e5 * pow(t, 0.4e1) * u + 0.77848e5 * pow(t, 0.3e1) * u * u + 0.151164e6 * t * pow(u, 0.3e1) + 0.203228e6 * t * t * pow(u, 0.3e1) + 0.137184e6 * t * pow(u, 0.4e1) - 0.7080e4 * pow(t, 0.5e1) * u + 0.28446e5 * pow(t, 0.4e1) * u * u + 0.95448e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.92980e5 * t * t * pow(u, 0.4e1) + 0.34720e5 * t * pow(u, 0.5e1) + 0.3950e4 * pow(u, 0.6e1) - 0.12480e5 * pow(t, 0.3e1) - 0.5760e4 * t * t - 0.14400e5 * pow(t, 0.4e1) - 0.8688e4 * pow(t, 0.5e1)) * pow(q3, 0.4e1) + (-0.3088e4 * u * u + 0.192e3 * t + 0.744e3 * pow(t, 0.7e1) + 0.3216e4 * pow(t, 0.6e1) - 0.15368e5 * pow(u, 0.3e1) - 0.30548e5 * pow(u, 0.4e1) - 0.27502e5 * pow(u, 0.5e1) + 0.6512e4 * t * t * u - 0.17080e5 * t * u * u + 0.976e3 * t * u + 0.16704e5 * pow(t, 0.3e1) * u - 0.42240e5 * t * t * u * u + 0.20596e5 * pow(t, 0.4e1) * u - 0.59944e5 * pow(t, 0.3e1) * u * u - 0.80708e5 * t * pow(u, 0.3e1) - 0.172870e6 * t * t * pow(u, 0.3e1) - 0.127040e6 * t * pow(u, 0.4e1) + 0.12308e5 * pow(t, 0.5e1) * u - 0.48166e5 * pow(t, 0.4e1) * u * u - 0.174948e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.184020e6 * t * t * pow(u, 0.4e1) - 0.76072e5 * t * pow(u, 0.5e1) - 0.52785e5 * t * t * pow(u, 0.5e1) - 0.12775e5 * t * pow(u, 0.6e1) + 0.2855e4 * pow(t, 0.6e1) * u - 0.16683e5 * pow(t, 0.5e1) * u * u - 0.68832e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.90950e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.10046e5 * pow(u, 0.6e1) - 0.902e3 * pow(u, 0.7e1) + 0.3360e4 * pow(t, 0.3e1) + 0.1152e4 * t * t + 0.5760e4 * pow(t, 0.4e1) + 0.5832e4 * pow(t, 0.5e1)) * pow(q3, 0.3e1) + (0.336e3 * u * u - 0.624e3 * pow(t, 0.7e1) - 0.144e3 * pow(t, 0.8e1) - 0.1104e4 * pow(t, 0.6e1) + 0.2312e4 * pow(u, 0.3e1) + 0.7164e4 * pow(u, 0.4e1) + 0.10866e5 * pow(u, 0.5e1) - 0.968e3 * t * t * u + 0.2064e4 * t * u * u - 0.48e2 * t * u - 0.4104e4 * pow(t, 0.3e1) * u + 0.5816e4 * t * t * u * u - 0.7596e4 * pow(t, 0.4e1) * u + 0.11968e5 * pow(t, 0.3e1) * u * u + 0.16076e5 * t * pow(u, 0.3e1) + 0.51134e5 * t * t * pow(u, 0.3e1) + 0.43972e5 * t * pow(u, 0.4e1) - 0.7208e4 * pow(t, 0.5e1) * u + 0.18642e5 * pow(t, 0.4e1) * u * u + 0.89310e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.107436e6 * t * t * pow(u, 0.4e1) + 0.50578e5 * t * pow(u, 0.5e1) + 0.78233e5 * t * t * pow(u, 0.5e1) + 0.22400e5 * t * pow(u, 0.6e1) + 0.15210e5 * t * t * pow(u, 0.6e1) + 0.2361e4 * t * pow(u, 0.7e1) - 0.3417e4 * pow(t, 0.6e1) * u + 0.16920e5 * pow(t, 0.5e1) * u * u + 0.81267e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.119424e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.621e3 * pow(t, 0.7e1) * u + 0.6226e4 * pow(t, 0.6e1) * u * u + 0.29691e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.49680e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.39625e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.7882e4 * pow(u, 0.6e1) + 0.2037e4 * pow(u, 0.7e1) + 0.84e2 * pow(u, 0.8e1) - 0.96e2 * pow(t, 0.3e1) - 0.480e3 * pow(t, 0.4e1) - 0.1008e4 * pow(t, 0.5e1)) * q3 * q3 + (0.72e2 * pow(t, 0.7e1) + 0.48e2 * pow(t, 0.8e1) + 0.12e2 * pow(t, 0.9e1) + 0.48e2 * pow(t, 0.6e1) - 0.36e2 * pow(u, 0.3e1) - 0.372e3 * pow(u, 0.4e1) - 0.1234e4 * pow(u, 0.5e1) + 0.120e3 * t * t * u + 0.84e2 * t * u * u + 0.672e3 * pow(t, 0.3e1) * u + 0.744e3 * t * t * u * u + 0.1564e4 * pow(t, 0.4e1) * u + 0.2072e4 * pow(t, 0.3e1) * u * u - 0.7070e4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.14338e5 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.14695e5 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.7895e4 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.53e2 * pow(t, 0.8e1) * u - 0.1339e4 * pow(t, 0.7e1) * u * u - 0.300e3 * t * pow(u, 0.3e1) - 0.1986e4 * t * t * pow(u, 0.3e1) - 0.3740e4 * t * pow(u, 0.4e1) + 0.1988e4 * pow(t, 0.5e1) * u + 0.1910e4 * pow(t, 0.4e1) * u * u - 0.8492e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.16360e5 * t * t * pow(u, 0.4e1) - 0.9820e4 * t * pow(u, 0.5e1) - 0.28241e5 * t * t * pow(u, 0.5e1) - 0.2016e4 * t * t * pow(u, 0.7e1) - 0.168e3 * t * pow(u, 0.8e1) - 0.9915e4 * t * pow(u, 0.6e1) - 0.16002e5 * t * t * pow(u, 0.6e1) - 0.3309e4 * t * pow(u, 0.7e1) + 0.1425e4 * pow(t, 0.6e1) * u - 0.1043e4 * pow(t, 0.5e1) * u * u - 0.18372e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.35518e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.502e3 * pow(t, 0.7e1) * u - 0.2880e4 * pow(t, 0.6e1) * u * u - 0.18665e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.36849e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.34392e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.1922e4 * pow(u, 0.6e1) - 0.1216e4 * pow(u, 0.7e1) - 0.181e3 * pow(u, 0.8e1) + 0.12e2 * pow(t, 0.5e1)) * q3 + (-0.72e2 * pow(t, 0.6e1) * u - 0.288e3 * pow(t, 0.5e1) * u * u - 0.432e3 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.288e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.72e2 * t * t * pow(u, 0.5e1) - 0.144e3 * pow(t, 0.5e1) * u - 0.576e3 * pow(t, 0.4e1) * u * u - 0.864e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.576e3 * t * t * pow(u, 0.4e1) - 0.144e3 * t * pow(u, 0.5e1) - 0.72e2 * pow(t, 0.4e1) * u - 0.288e3 * pow(t, 0.3e1) * u * u - 0.432e3 * t * t * pow(u, 0.3e1) - 0.288e3 * t * pow(u, 0.4e1) - 0.72e2 * pow(u, 0.5e1)) * pow(q4, 0.3e1) + (0.104e3 * pow(t, 0.7e1) * u + 0.632e3 * pow(t, 0.6e1) * u * u + 0.1488e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.1712e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.968e3 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.216e3 * t * t * pow(u, 0.6e1) + 0.276e3 * pow(t, 0.6e1) * u + 0.1554e4 * pow(t, 0.5e1) * u * u + 0.3456e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.3804e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.2076e4 * t * t * pow(u, 0.5e1) + 0.450e3 * t * pow(u, 0.6e1) + 0.240e3 * pow(t, 0.5e1) * u + 0.1194e4 * pow(t, 0.4e1) * u * u + 0.2376e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.2364e4 * t * t * pow(u, 0.4e1) + 0.1176e4 * t * pow(u, 0.5e1) + 0.234e3 * pow(u, 0.6e1) + 0.68e2 * pow(t, 0.4e1) * u + 0.272e3 * pow(t, 0.3e1) * u * u + 0.408e3 * t * t * pow(u, 0.3e1) + 0.272e3 * t * pow(u, 0.4e1) + 0.68e2 * pow(u, 0.5e1)) * q4 * q4 + (-0.48e2 * pow(u, 0.5e1) + 0.36e2 * pow(t, 0.4e1) * u + 0.96e2 * pow(t, 0.3e1) * u * u - 0.1678e4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.2978e4 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.2721e4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.1249e4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.29e2 * pow(t, 0.8e1) * u - 0.429e3 * pow(t, 0.7e1) * u * u + 0.36e2 * t * t * pow(u, 0.3e1) - 0.72e2 * t * pow(u, 0.4e1) + 0.100e3 * pow(t, 0.5e1) * u + 0.90e2 * pow(t, 0.4e1) * u * u - 0.628e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1316e4 * t * t * pow(u, 0.4e1) - 0.888e3 * t * pow(u, 0.5e1) - 0.4519e4 * t * t * pow(u, 0.5e1) - 0.228e3 * t * t * pow(u, 0.7e1) - 0.1738e4 * t * pow(u, 0.6e1) - 0.2813e4 * t * t * pow(u, 0.6e1) - 0.487e3 * t * pow(u, 0.7e1) + 0.63e2 * pow(t, 0.6e1) * u - 0.538e3 * pow(t, 0.5e1) * u * u - 0.3073e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.5508e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.30e2 * pow(t, 0.7e1) * u - 0.961e3 * pow(t, 0.6e1) * u * u - 0.4091e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.7258e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.6424e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.190e3 * pow(u, 0.6e1) - 0.255e3 * pow(u, 0.7e1)) * q4 + (0.192e3 * t + 0.64e2 * u) * pow(q3, 0.9e1) + (-0.1152e4 * t * t - 0.1056e4 * t * u + 0.1856e4 * u * u - 0.1152e4 * t - 0.320e3 * u) * pow(q3, 0.8e1) + (0.2976e4 * pow(t, 0.3e1) + 0.4480e4 * t * t * u - 0.9776e4 * t * u * u - 0.7312e4 * pow(u, 0.3e1) + 0.5760e4 * t * t + 0.5008e4 * t * u - 0.9168e4 * u * u + 0.2880e4 * t + 0.640e3 * u) * pow(q3, 0.7e1) + (-0.4320e4 * pow(t, 0.4e1) - 0.9064e4 * pow(t, 0.3e1) * u + 0.23016e5 * t * t * u * u + 0.36776e5 * t * pow(u, 0.3e1) + 0.11288e5 * pow(u, 0.4e1) - 0.12000e5 * pow(t, 0.3e1) - 0.17768e5 * t * t * u + 0.39712e5 * t * u * u + 0.30584e5 * pow(u, 0.3e1) - 0.11520e5 * t * t - 0.9520e4 * t * u + 0.18448e5 * u * u - 0.3840e4 * t - 0.640e3 * u) * pow(q3, 0.6e1) + (-0.7920e4 * pow(t, 0.4e1) + 0.7872e4 * pow(t, 0.3e1) * u + 0.46176e5 * t * t * u * u + 0.34752e5 * t * pow(u, 0.3e1) + 0.6160e4 * pow(u, 0.4e1) - 0.19440e5 * pow(t, 0.3e1) + 0.31792e5 * t * t * u + 0.84176e5 * t * u * u + 0.29776e5 * pow(u, 0.3e1) - 0.17280e5 * t * t + 0.37824e5 * t * u + 0.39840e5 * u * u - 0.5760e4 * t + 0.14336e5 * u) * pow(q3, 0.4e1) * q4 * q4 + (0.9546e4 * pow(t, 0.5e1) + 0.14454e5 * pow(t, 0.4e1) * u - 0.55212e5 * pow(t, 0.3e1) * u * u - 0.110932e6 * t * t * pow(u, 0.3e1) - 0.58926e5 * t * pow(u, 0.4e1) - 0.8370e4 * pow(u, 0.5e1) + 0.30784e5 * pow(t, 0.4e1) + 0.26688e5 * pow(t, 0.3e1) * u - 0.150160e6 * t * t * u * u - 0.184624e6 * t * pow(u, 0.3e1) - 0.48496e5 * pow(u, 0.4e1) + 0.39072e5 * pow(t, 0.3e1) + 0.7776e4 * t * t * u - 0.140880e6 * t * u * u - 0.79280e5 * pow(u, 0.3e1) + 0.23680e5 * t * t - 0.10368e5 * t * u - 0.45504e5 * u * u + 0.5920e4 * t - 0.5792e4 * u) * pow(q3, 0.4e1) * q4 + (0.6336e4 * pow(t, 0.3e1) * u + 0.10944e5 * t * t * u * u + 0.5184e4 * t * pow(u, 0.3e1) + 0.576e3 * pow(u, 0.4e1) + 0.15552e5 * t * t * u + 0.17280e5 * t * u * u + 0.4032e4 * pow(u, 0.3e1) + 0.13824e5 * t * u + 0.6912e4 * u * u + 0.4608e4 * u) * pow(q3, 0.3e1) * pow(q4, 0.3e1) + (0.3690e4 * pow(t, 0.5e1) - 0.5154e4 * pow(t, 0.4e1) * u - 0.39996e5 * pow(t, 0.3e1) * u * u - 0.48036e5 * t * t * pow(u, 0.3e1) - 0.18734e5 * t * pow(u, 0.4e1) - 0.1850e4 * pow(u, 0.5e1) + 0.10080e5 * pow(t, 0.4e1) - 0.23392e5 * pow(t, 0.3e1) * u - 0.98256e5 * t * t * u * u - 0.76224e5 * t * pow(u, 0.3e1) - 0.15024e5 * pow(u, 0.4e1) + 0.10800e5 * pow(t, 0.3e1) - 0.36336e5 * t * t * u - 0.83472e5 * t * u * u - 0.30576e5 * pow(u, 0.3e1) + 0.5760e4 * t * t - 0.24640e5 * t * u - 0.25120e5 * u * u + 0.1440e4 * t - 0.6304e4 * u) * pow(q3, 0.3e1) * q4 * q4 + (0.18496e5 * u * u - 0.1184e4 * t + 0.1696e4 * u - 0.3774e4 * pow(t, 0.6e1) + 0.47472e5 * pow(u, 0.3e1) + 0.49904e5 * pow(u, 0.4e1) + 0.21042e5 * pow(u, 0.5e1) + 0.4192e4 * t * t * u + 0.81552e5 * t * u * u + 0.6080e4 * t * u - 0.9632e4 * pow(t, 0.3e1) * u + 0.141696e6 * t * t * u * u - 0.16402e5 * pow(t, 0.4e1) * u + 0.114876e6 * pow(t, 0.3e1) * u * u + 0.176384e6 * t * pow(u, 0.3e1) + 0.227848e6 * t * t * pow(u, 0.3e1) + 0.129914e6 * t * pow(u, 0.4e1) - 0.7020e4 * pow(t, 0.5e1) * u + 0.36456e5 * pow(t, 0.4e1) * u * u + 0.100848e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.84986e5 * t * t * pow(u, 0.4e1) + 0.26220e5 * t * pow(u, 0.5e1) + 0.2188e4 * pow(u, 0.6e1) - 0.14208e5 * pow(t, 0.3e1) - 0.5920e4 * t * t - 0.18944e5 * pow(t, 0.4e1) - 0.13246e5 * pow(t, 0.5e1)) * pow(q3, 0.3e1) * q4 + (-0.2952e4 * pow(t, 0.4e1) * u - 0.7200e4 * pow(t, 0.3e1) * u * u - 0.5616e4 * t * t * pow(u, 0.3e1) - 0.1440e4 * t * pow(u, 0.4e1) - 0.72e2 * pow(u, 0.5e1) - 0.8064e4 * pow(t, 0.3e1) * u - 0.14976e5 * t * t * u * u - 0.8064e4 * t * pow(u, 0.3e1) - 0.1152e4 * pow(u, 0.4e1) - 0.8640e4 * t * t * u - 0.10368e5 * t * u * u - 0.2880e4 * pow(u, 0.3e1) - 0.4608e4 * t * u - 0.2304e4 * u * u - 0.1152e4 * u) * q3 * q3 * pow(q4, 0.3e1) + (0.5920e4 * u * u + 0.1088e4 * u - 0.900e3 * pow(t, 0.6e1) + 0.11184e5 * pow(u, 0.3e1) + 0.11280e5 * pow(u, 0.4e1) + 0.3912e4 * pow(u, 0.5e1) + 0.14352e5 * t * t * u + 0.29040e5 * t * u * u + 0.6016e4 * t * u + 0.17984e5 * pow(t, 0.3e1) * u + 0.59424e5 * t * t * u * u + 0.11128e5 * pow(t, 0.4e1) * u + 0.55864e5 * pow(t, 0.3e1) * u * u + 0.48768e5 * t * pow(u, 0.3e1) + 0.69312e5 * t * t * pow(u, 0.3e1) + 0.30828e5 * t * pow(u, 0.4e1) + 0.2604e4 * pow(t, 0.5e1) * u + 0.19920e5 * pow(t, 0.4e1) * u * u + 0.32664e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.20700e5 * t * t * pow(u, 0.4e1) + 0.4668e4 * t * pow(u, 0.5e1) + 0.216e3 * pow(u, 0.6e1) - 0.720e3 * pow(t, 0.3e1) - 0.2160e4 * pow(t, 0.4e1) - 0.2340e4 * pow(t, 0.5e1)) * q3 * q3 * q4 * q4 + (-0.2848e4 * u * u - 0.192e3 * u + 0.814e3 * pow(t, 0.7e1) + 0.2812e4 * pow(t, 0.6e1) - 0.10816e5 * pow(u, 0.3e1) - 0.19088e5 * pow(u, 0.4e1) - 0.16238e5 * pow(u, 0.5e1) - 0.3424e4 * t * t * u - 0.17296e5 * t * u * u - 0.1472e4 * t * u - 0.2432e4 * pow(t, 0.3e1) * u - 0.46416e5 * t * t * u * u + 0.1894e4 * pow(t, 0.4e1) * u - 0.66884e5 * pow(t, 0.3e1) * u * u - 0.60656e5 * t * pow(u, 0.3e1) - 0.135040e6 * t * t * pow(u, 0.3e1) - 0.85154e5 * t * pow(u, 0.4e1) + 0.3668e4 * pow(t, 0.5e1) * u - 0.50222e5 * pow(t, 0.4e1) * u * u - 0.136332e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.125088e6 * t * t * pow(u, 0.4e1) - 0.45008e5 * t * pow(u, 0.5e1) - 0.30051e5 * t * t * pow(u, 0.5e1) - 0.5625e4 * t * pow(u, 0.6e1) + 0.1465e4 * pow(t, 0.6e1) * u - 0.15513e5 * pow(t, 0.5e1) * u * u - 0.51938e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.60428e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.4838e4 * pow(u, 0.6e1) - 0.228e3 * pow(u, 0.7e1) + 0.592e3 * pow(t, 0.3e1) + 0.2368e4 * pow(t, 0.4e1) + 0.3774e4 * pow(t, 0.5e1)) * q3 * q3 * q4 + (0.720e3 * pow(t, 0.5e1) * u + 0.2304e4 * pow(t, 0.4e1) * u * u + 0.2592e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.1152e4 * t * t * pow(u, 0.4e1) + 0.144e3 * t * pow(u, 0.5e1) + 0.1872e4 * pow(t, 0.4e1) * u + 0.5184e4 * pow(t, 0.3e1) * u * u + 0.4896e4 * t * t * pow(u, 0.3e1) + 0.1728e4 * t * pow(u, 0.4e1) + 0.144e3 * pow(u, 0.5e1) + 0.1728e4 * pow(t, 0.3e1) * u + 0.4032e4 * t * t * u * u + 0.2880e4 * t * pow(u, 0.3e1) + 0.576e3 * pow(u, 0.4e1) + 0.576e3 * t * t * u + 0.1152e4 * t * u * u + 0.576e3 * pow(u, 0.3e1)) * q3 * pow(q4, 0.3e1) + (0.90e2 * pow(t, 0.7e1) + 0.180e3 * pow(t, 0.6e1) - 0.544e3 * pow(u, 0.3e1) - 0.2416e4 * pow(u, 0.4e1) - 0.2130e4 * pow(u, 0.5e1) - 0.544e3 * t * t * u - 0.1088e4 * t * u * u - 0.2464e4 * pow(t, 0.3e1) * u - 0.7344e4 * t * t * u * u - 0.4026e4 * pow(t, 0.4e1) * u - 0.16140e5 * pow(t, 0.3e1) * u * u - 0.7296e4 * t * pow(u, 0.3e1) - 0.21972e5 * t * t * pow(u, 0.3e1) - 0.12078e5 * t * pow(u, 0.4e1) - 0.2908e4 * pow(t, 0.5e1) * u - 0.15338e5 * pow(t, 0.4e1) * u * u - 0.26320e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.19608e5 * t * t * pow(u, 0.4e1) - 0.5988e4 * t * pow(u, 0.5e1) - 0.3786e4 * t * t * pow(u, 0.5e1) - 0.432e3 * t * pow(u, 0.6e1) - 0.802e3 * pow(t, 0.6e1) * u - 0.5436e4 * pow(t, 0.5e1) * u * u - 0.11028e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.9838e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.450e3 * pow(u, 0.6e1) + 0.90e2 * pow(t, 0.5e1)) * q3 * q4 * q4 + (-0.222e3 * pow(t, 0.7e1) - 0.74e2 * pow(t, 0.8e1) - 0.222e3 * pow(t, 0.6e1) + 0.240e3 * pow(u, 0.3e1) + 0.1616e4 * pow(u, 0.4e1) + 0.3678e4 * pow(u, 0.5e1) - 0.96e2 * t * t * u - 0.224e3 * pow(t, 0.3e1) * u + 0.1504e4 * t * t * u * u - 0.174e3 * pow(t, 0.4e1) * u + 0.7124e4 * pow(t, 0.3e1) * u * u + 0.3776e4 * t * pow(u, 0.3e1) + 0.18728e5 * t * t * pow(u, 0.3e1) + 0.14750e5 * t * pow(u, 0.4e1) - 0.108e3 * pow(t, 0.5e1) * u + 0.13180e5 * pow(t, 0.4e1) * u * u + 0.39744e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.42618e5 * t * t * pow(u, 0.4e1) + 0.18892e5 * t * pow(u, 0.5e1) + 0.30390e5 * t * t * pow(u, 0.5e1) + 0.7651e4 * t * pow(u, 0.6e1) + 0.4686e4 * t * t * pow(u, 0.6e1) + 0.456e3 * t * pow(u, 0.7e1) - 0.68e2 * pow(t, 0.6e1) * u + 0.11443e5 * pow(t, 0.5e1) * u * u + 0.38991e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.50928e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.6e1 * pow(t, 0.7e1) * u + 0.3882e4 * pow(t, 0.6e1) * u * u + 0.14404e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.21282e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.14922e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.2808e4 * pow(u, 0.6e1) + 0.487e3 * pow(u, 0.7e1) - 0.74e2 * pow(t, 0.5e1)) * q3 * q4 - 0.1152e4 * u * pow(q3, 0.6e1) * pow(q4, 0.3e1) + (0.1184e4 * t - 0.928e3 * u) * pow(q3, 0.8e1) * q4 + (0.1440e4 * t - 0.1952e4 * u) * pow(q3, 0.7e1) * q4 * q4 + (-0.5920e4 * t * t + 0.960e3 * t * u + 0.7104e4 * u * u - 0.5920e4 * t + 0.4640e4 * u) * pow(q3, 0.7e1) * q4 + (-0.5760e4 * t * t + 0.6592e4 * t * u + 0.7360e4 * u * u - 0.5760e4 * t + 0.8896e4 * u) * pow(q3, 0.6e1) * q4 * q4 + (0.12432e5 * pow(t, 0.3e1) + 0.5504e4 * t * t * u - 0.29664e5 * t * u * u - 0.15824e5 * pow(u, 0.3e1) + 0.23680e5 * t * t - 0.4544e4 * t * u - 0.31264e5 * u * u + 0.11840e5 * t - 0.9472e4 * u) * pow(q3, 0.6e1) * q4 + (0.4608e4 * t * u + 0.2304e4 * u * u + 0.4608e4 * u) * pow(q3, 0.5e1) * pow(q4, 0.3e1) + (0.9360e4 * pow(t, 0.3e1) - 0.9264e4 * t * t * u - 0.28656e5 * t * u * u - 0.9840e4 * pow(u, 0.3e1) + 0.17280e5 * t * t - 0.25792e5 * t * u - 0.28000e5 * u * u + 0.8640e4 * t - 0.16064e5 * u) * pow(q3, 0.5e1) * q4 * q4 + (-0.14208e5 * pow(t, 0.4e1) - 0.14400e5 * pow(t, 0.3e1) * u + 0.53376e5 * t * t * u * u + 0.65120e5 * t * pow(u, 0.3e1) + 0.16064e5 * pow(u, 0.4e1) - 0.37888e5 * pow(t, 0.3e1) - 0.13952e5 * t * t * u + 0.106288e6 * t * u * u + 0.58208e5 * pow(u, 0.3e1) - 0.35520e5 * t * t + 0.9344e4 * t * u + 0.54016e5 * u * u - 0.11840e5 * t + 0.10048e5 * u) * pow(q3, 0.5e1) * q4 + (-0.7488e4 * t * t * u - 0.8064e4 * t * u * u - 0.1728e4 * pow(u, 0.3e1) - 0.13824e5 * t * u - 0.6912e4 * u * u - 0.6912e4 * u) * pow(q3, 0.4e1) * pow(q4, 0.3e1) + 0.18e2 * pow(u, 0.5e1) - 0.12e2 * pow(t, 0.4e1) * u - 0.72e2 * pow(t, 0.3e1) * u * u + 0.1542e4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.4173e4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.5363e4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.3648e4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.33e2 * pow(t, 0.8e1) * u + 0.142e3 * pow(t, 0.7e1) * u * u - 0.90e2 * t * t * pow(u, 0.3e1) - 0.12e2 * t * pow(u, 0.4e1) - 0.72e2 * pow(t, 0.5e1) * u - 0.384e3 * pow(t, 0.4e1) * u * u - 0.486e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.36e2 * t * t * pow(u, 0.4e1) + 0.210e3 * t * pow(u, 0.5e1) + 0.1417e4 * t * t * pow(u, 0.5e1) + 0.1272e4 * t * t * pow(u, 0.7e1) + 0.181e3 * t * pow(u, 0.8e1) + 0.722e3 * t * pow(u, 0.6e1) + 0.2764e4 * t * t * pow(u, 0.6e1) + pow(t, 0.9e1) * u + 0.126e3 * pow(t, 0.8e1) * u * u + 0.715e3 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.1704e4 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.2151e4 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.1510e4 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.557e3 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.84e2 * t * t * pow(u, 0.8e1) + 0.812e3 * t * pow(u, 0.7e1) - 0.143e3 * pow(t, 0.6e1) * u - 0.662e3 * pow(t, 0.5e1) * u * u - 0.583e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.744e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.117e3 * pow(t, 0.7e1) * u - 0.334e3 * pow(t, 0.6e1) * u * u + 0.640e3 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.3233e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.4421e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.72e2 * pow(u, 0.6e1) + 0.113e3 * pow(u, 0.7e1) + 0.93e2 * pow(u, 0.8e1)) * pow(u, -0.2e1) * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / t * pow(-0.1e1 - t + q3, -0.3e1));
}
#include <math.h>

double GstarVVCoeffsC5e1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0.8e1 / 0.27e2 * ((0.5984e4 * t - 0.2176e4 * u) * pow(q3, 0.8e1) * q4 + (0.6048e4 * t - 0.4448e4 * u) * pow(q3, 0.7e1) * q4 * q4 + (-0.29920e5 * t * t - 0.6240e4 * t * u + 0.12000e5 * u * u - 0.29920e5 * t + 0.10592e5 * u) * pow(q3, 0.7e1) * q4 + (-0.24192e5 * t * t + 0.11008e5 * t * u + 0.14080e5 * u * u - 0.24192e5 * t + 0.20512e5 * u) * pow(q3, 0.6e1) * q4 * q4 + (0.62832e5 * pow(t, 0.3e1) + 0.46736e5 * t * t * u - 0.40752e5 * t * u * u - 0.25952e5 * pow(u, 0.3e1) + 0.119680e6 * t * t + 0.20320e5 * t * u - 0.51520e5 * u * u + 0.59840e5 * t - 0.22240e5 * u) * pow(q3, 0.6e1) * q4 + (0.10368e5 * t * u + 0.5184e4 * u * u + 0.10368e5 * u) * pow(q3, 0.5e1) * pow(q4, 0.3e1) + (0.39312e5 * pow(t, 0.3e1) - 0.7824e4 * t * t * u - 0.53424e5 * t * u * u - 0.17040e5 * pow(u, 0.3e1) + 0.72576e5 * t * t - 0.49216e5 * t * u - 0.52864e5 * u * u + 0.36288e5 * t - 0.37568e5 * u) * pow(q3, 0.5e1) * q4 * q4 + (-0.71808e5 * pow(t, 0.4e1) - 0.86904e5 * pow(t, 0.3e1) * u + 0.62952e5 * t * t * u * u + 0.105848e6 * t * pow(u, 0.3e1) + 0.26840e5 * pow(u, 0.4e1) - 0.191488e6 * pow(t, 0.3e1) - 0.119552e6 * t * t * u + 0.156856e6 * t * u * u + 0.93896e5 * pow(u, 0.3e1) - 0.179520e6 * t * t - 0.11200e5 * t * u + 0.89248e5 * u * u - 0.59840e5 * t + 0.26560e5 * u) * pow(q3, 0.5e1) * q4 + (-0.16848e5 * t * t * u - 0.18144e5 * t * u * u - 0.3888e4 * pow(u, 0.3e1) - 0.31104e5 * t * u - 0.15552e5 * u * u - 0.15552e5 * u) * pow(q3, 0.4e1) * pow(q4, 0.3e1) + (-0.33264e5 * pow(t, 0.4e1) + 0.1536e4 * pow(t, 0.3e1) * u + 0.85920e5 * t * t * u * u + 0.61248e5 * t * pow(u, 0.3e1) + 0.10000e5 * pow(u, 0.4e1) - 0.81648e5 * pow(t, 0.3e1) + 0.50752e5 * t * t * u + 0.158672e6 * t * u * u + 0.50752e5 * pow(u, 0.3e1) - 0.72576e5 * t * t + 0.81600e5 * t * u + 0.74112e5 * u * u - 0.24192e5 * t + 0.34112e5 * u) * pow(q3, 0.4e1) * q4 * q4 + (0.48246e5 * pow(t, 0.5e1) + 0.74412e5 * pow(t, 0.4e1) * u - 0.69468e5 * pow(t, 0.3e1) * u * u - 0.186376e6 * t * t * pow(u, 0.3e1) - 0.101082e6 * t * pow(u, 0.4e1) - 0.14292e5 * pow(u, 0.5e1) + 0.155584e6 * pow(t, 0.4e1) + 0.146496e6 * pow(t, 0.3e1) * u - 0.227152e6 * t * t * u * u - 0.306472e6 * t * pow(u, 0.3e1) - 0.78472e5 * pow(u, 0.4e1) + 0.197472e6 * pow(t, 0.3e1) + 0.66528e5 * t * t * u - 0.236496e6 * t * u * u - 0.127712e6 * pow(u, 0.3e1) + 0.119680e6 * t * t - 0.25920e5 * t * u - 0.78624e5 * u * u + 0.29920e5 * t - 0.19520e5 * u) * pow(q3, 0.4e1) * q4 + (0.14256e5 * pow(t, 0.3e1) * u + 0.24624e5 * t * t * u * u + 0.11664e5 * t * pow(u, 0.3e1) + 0.1296e4 * pow(u, 0.4e1) + 0.34992e5 * t * t * u + 0.38880e5 * t * u * u + 0.9072e4 * pow(u, 0.3e1) + 0.31104e5 * t * u + 0.15552e5 * u * u + 0.10368e5 * u) * pow(q3, 0.3e1) * pow(q4, 0.3e1) + (0.15498e5 * pow(t, 0.5e1) - 0.2814e4 * pow(t, 0.4e1) * u - 0.77292e5 * pow(t, 0.3e1) * u * u - 0.87276e5 * t * t * pow(u, 0.3e1) - 0.31166e5 * t * pow(u, 0.4e1) - 0.2870e4 * pow(u, 0.5e1) + 0.42336e5 * pow(t, 0.4e1) - 0.39184e5 * pow(t, 0.3e1) * u - 0.190992e6 * t * t * u * u - 0.133680e6 * t * pow(u, 0.3e1) - 0.23952e5 * pow(u, 0.4e1) + 0.45360e5 * pow(t, 0.3e1) - 0.79392e5 * t * t * u - 0.159792e6 * t * u * u - 0.51744e5 * pow(u, 0.3e1) + 0.24192e5 * t * t - 0.59584e5 * t * u - 0.45952e5 * u * u + 0.6048e4 * t - 0.15328e5 * u) * pow(q3, 0.3e1) * q4 * q4 + (0.35584e5 * u * u - 0.5984e4 * t + 0.8416e4 * u - 0.19074e5 * pow(t, 0.6e1) + 0.78864e5 * pow(u, 0.3e1) + 0.78968e5 * pow(u, 0.4e1) + 0.33768e5 * pow(u, 0.5e1) + 0.38848e5 * t * t * u + 0.166368e6 * t * u * u + 0.35360e5 * t * u - 0.22064e5 * pow(t, 0.3e1) * u + 0.284256e6 * t * t * u * u - 0.64018e5 * pow(t, 0.4e1) * u + 0.216270e6 * pow(t, 0.3e1) * u * u + 0.308264e6 * t * pow(u, 0.3e1) + 0.409978e6 * t * t * pow(u, 0.3e1) + 0.220772e6 * t * pow(u, 0.4e1) - 0.30276e5 * pow(t, 0.5e1) * u + 0.62448e5 * pow(t, 0.4e1) * u * u + 0.184584e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.152462e6 * t * t * pow(u, 0.4e1) + 0.46092e5 * t * pow(u, 0.5e1) + 0.3796e4 * pow(u, 0.6e1) - 0.71808e5 * pow(t, 0.3e1) - 0.29920e5 * t * t - 0.95744e5 * pow(t, 0.4e1) - 0.66946e5 * pow(t, 0.5e1)) * pow(q3, 0.3e1) * q4 + (-0.6642e4 * pow(t, 0.4e1) * u - 0.16200e5 * pow(t, 0.3e1) * u * u - 0.12636e5 * t * t * pow(u, 0.3e1) - 0.3240e4 * t * pow(u, 0.4e1) - 0.162e3 * pow(u, 0.5e1) - 0.18144e5 * pow(t, 0.3e1) * u - 0.33696e5 * t * t * u * u - 0.18144e5 * t * pow(u, 0.3e1) - 0.2592e4 * pow(u, 0.4e1) - 0.19440e5 * t * t * u - 0.23328e5 * t * u * u - 0.6480e4 * pow(u, 0.3e1) - 0.10368e5 * t * u - 0.5184e4 * u * u - 0.2592e4 * u) * q3 * q3 * pow(q4, 0.3e1) + (0.10624e5 * u * u + 0.2720e4 * u - 0.3780e4 * pow(t, 0.6e1) + 0.19392e5 * pow(u, 0.3e1) + 0.17904e5 * pow(u, 0.4e1) + 0.5910e4 * pow(u, 0.5e1) + 0.37824e5 * t * t * u + 0.57264e5 * t * u * u + 0.16192e5 * t * u + 0.44384e5 * pow(t, 0.3e1) * u + 0.122496e6 * t * t * u * u + 0.24166e5 * pow(t, 0.4e1) * u + 0.116656e6 * pow(t, 0.3e1) * u * u + 0.87072e5 * t * pow(u, 0.3e1) + 0.127668e6 * t * t * pow(u, 0.3e1) + 0.50916e5 * t * pow(u, 0.4e1) + 0.4296e4 * pow(t, 0.5e1) * u + 0.41772e5 * pow(t, 0.4e1) * u * u + 0.62256e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.35604e5 * t * t * pow(u, 0.4e1) + 0.7368e4 * t * pow(u, 0.5e1) + 0.324e3 * pow(u, 0.6e1) - 0.3024e4 * pow(t, 0.3e1) - 0.9072e4 * pow(t, 0.4e1) - 0.9828e4 * pow(t, 0.5e1)) * q3 * q3 * q4 * q4 + (-0.6688e4 * u * u - 0.1632e4 * u + 0.4114e4 * pow(t, 0.7e1) + 0.14212e5 * pow(t, 0.6e1) - 0.20416e5 * pow(u, 0.3e1) - 0.30872e5 * pow(u, 0.4e1) - 0.25016e5 * pow(u, 0.5e1) - 0.32752e5 * t * t * u - 0.46912e5 * t * u * u - 0.12320e5 * t * u - 0.40064e5 * pow(t, 0.3e1) * u - 0.129360e6 * t * t * u * u - 0.19466e5 * pow(t, 0.4e1) * u - 0.181898e6 * pow(t, 0.3e1) * u * u - 0.119672e6 * t * pow(u, 0.3e1) - 0.273574e6 * t * t * pow(u, 0.3e1) - 0.147824e6 * t * pow(u, 0.4e1) + 0.2276e4 * pow(t, 0.5e1) * u - 0.130316e6 * pow(t, 0.4e1) * u * u - 0.280890e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.229506e6 * t * t * pow(u, 0.4e1) - 0.75962e5 * t * pow(u, 0.5e1) - 0.54936e5 * t * t * pow(u, 0.5e1) - 0.9954e4 * t * pow(u, 0.6e1) + 0.3658e4 * pow(t, 0.6e1) * u - 0.38274e5 * pow(t, 0.5e1) * u * u - 0.108443e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.116006e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.7622e4 * pow(u, 0.6e1) - 0.399e3 * pow(u, 0.7e1) + 0.2992e4 * pow(t, 0.3e1) + 0.11968e5 * pow(t, 0.4e1) + 0.19074e5 * pow(t, 0.5e1)) * q3 * q3 * q4 + (0.1620e4 * pow(t, 0.5e1) * u + 0.5184e4 * pow(t, 0.4e1) * u * u + 0.5832e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.2592e4 * t * t * pow(u, 0.4e1) + 0.324e3 * t * pow(u, 0.5e1) + 0.4212e4 * pow(t, 0.4e1) * u + 0.11664e5 * pow(t, 0.3e1) * u * u + 0.11016e5 * t * t * pow(u, 0.3e1) + 0.3888e4 * t * pow(u, 0.4e1) + 0.324e3 * pow(u, 0.5e1) + 0.3888e4 * pow(t, 0.3e1) * u + 0.9072e4 * t * t * u * u + 0.6480e4 * t * pow(u, 0.3e1) + 0.1296e4 * pow(u, 0.4e1) + 0.1296e4 * t * t * u + 0.2592e4 * t * u * u + 0.1296e4 * pow(u, 0.3e1)) * q3 * pow(q4, 0.3e1) + (0.378e3 * pow(t, 0.7e1) + 0.756e3 * pow(t, 0.6e1) - 0.1360e4 * pow(u, 0.3e1) - 0.3952e4 * pow(u, 0.4e1) - 0.3210e4 * pow(u, 0.5e1) - 0.1360e4 * t * t * u - 0.2720e4 * t * u * u - 0.6736e4 * pow(t, 0.3e1) * u - 0.17424e5 * t * t * u * u - 0.11154e5 * pow(t, 0.4e1) * u - 0.37452e5 * pow(t, 0.3e1) * u * u - 0.14640e5 * t * pow(u, 0.3e1) - 0.43140e5 * t * t * pow(u, 0.3e1) - 0.20430e5 * t * pow(u, 0.4e1) - 0.7864e4 * pow(t, 0.5e1) * u - 0.35456e5 * pow(t, 0.4e1) * u * u - 0.52336e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.34188e5 * t * t * pow(u, 0.4e1) - 0.9336e4 * t * pow(u, 0.5e1) - 0.6126e4 * t * t * pow(u, 0.5e1) - 0.648e3 * t * pow(u, 0.6e1) - 0.2086e4 * pow(t, 0.6e1) * u - 0.12708e5 * pow(t, 0.5e1) * u * u - 0.22476e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.17710e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.648e3 * pow(u, 0.6e1) + 0.378e3 * pow(t, 0.5e1)) * q3 * q4 * q4 + (-0.1122e4 * pow(t, 0.7e1) - 0.374e3 * pow(t, 0.8e1) - 0.1122e4 * pow(t, 0.6e1) + 0.1320e4 * pow(u, 0.3e1) + 0.3536e4 * pow(u, 0.4e1) + 0.5928e4 * pow(u, 0.5e1) + 0.192e3 * t * t * u + 0.936e3 * t * u * u + 0.2536e4 * pow(t, 0.3e1) * u + 0.9304e4 * t * t * u * u + 0.7098e4 * pow(t, 0.4e1) * u + 0.31850e5 * pow(t, 0.3e1) * u * u + 0.12032e5 * t * pow(u, 0.3e1) + 0.49790e5 * t * t * pow(u, 0.3e1) + 0.29612e5 * t * pow(u, 0.4e1) + 0.8244e4 * pow(t, 0.5e1) * u + 0.50878e5 * pow(t, 0.4e1) * u * u + 0.99396e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.85350e5 * t * t * pow(u, 0.4e1) + 0.32128e5 * t * pow(u, 0.5e1) + 0.55104e5 * t * t * pow(u, 0.5e1) + 0.12571e5 * t * pow(u, 0.6e1) + 0.8520e4 * t * t * pow(u, 0.6e1) + 0.798e3 * t * pow(u, 0.7e1) + 0.4546e4 * pow(t, 0.6e1) * u + 0.40285e5 * pow(t, 0.5e1) * u * u + 0.95628e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.104298e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.1056e4 * pow(t, 0.7e1) * u + 0.12828e5 * pow(t, 0.6e1) * u * u + 0.35110e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.44754e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.28764e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.4086e4 * pow(u, 0.6e1) + 0.754e3 * pow(u, 0.7e1) - 0.374e3 * pow(t, 0.5e1)) * q3 * q4 - 0.2592e4 * u * pow(q3, 0.6e1) * pow(q4, 0.3e1) + 0.117e3 * pow(u, 0.5e1) - 0.102e3 * pow(t, 0.4e1) * u - 0.378e3 * pow(t, 0.3e1) * u * u + 0.6978e4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.13560e5 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.14852e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.9219e4 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.228e3 * pow(t, 0.8e1) * u + 0.1903e4 * pow(t, 0.7e1) * u * u - 0.333e3 * t * t * pow(u, 0.3e1) + 0.60e2 * t * pow(u, 0.4e1) - 0.396e3 * pow(t, 0.5e1) * u - 0.1536e4 * pow(t, 0.4e1) * u * u - 0.1395e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.504e3 * t * t * pow(u, 0.4e1) + 0.1029e4 * t * pow(u, 0.5e1) + 0.4465e4 * t * t * pow(u, 0.5e1) + 0.3054e4 * t * t * pow(u, 0.7e1) + 0.430e3 * t * pow(u, 0.8e1) + 0.1751e4 * t * pow(u, 0.6e1) + 0.6658e4 * t * t * pow(u, 0.6e1) + 0.106e3 * pow(t, 0.9e1) * u + 0.828e3 * pow(t, 0.8e1) * u * u + 0.2791e4 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.5241e4 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.5904e4 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.3982e4 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.1487e4 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.237e3 * t * t * pow(u, 0.8e1) + 0.1706e4 * t * pow(u, 0.7e1) - 0.470e3 * pow(t, 0.6e1) * u - 0.1691e4 * pow(t, 0.5e1) * u * u - 0.472e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.3642e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.54e2 * pow(t, 0.7e1) * u + 0.542e3 * pow(t, 0.6e1) * u * u + 0.4777e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.11507e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.12461e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + (0.2208e4 * t + 0.448e3 * u) * pow(q3, 0.9e1) + (-0.13248e5 * t * t - 0.9552e4 * t * u + 0.3056e4 * u * u - 0.13248e5 * t - 0.3104e4 * u) * pow(q3, 0.8e1) + (0.34224e5 * pow(t, 0.3e1) + 0.41656e5 * t * t * u - 0.9104e4 * t * u * u - 0.13384e5 * pow(u, 0.3e1) + 0.66240e5 * t * t + 0.48952e5 * t * u - 0.13416e5 * u * u + 0.33120e5 * t + 0.8800e4 * u) * pow(q3, 0.7e1) + (-0.49680e5 * pow(t, 0.4e1) - 0.83068e5 * pow(t, 0.3e1) * u + 0.11748e5 * t * t * u * u + 0.64940e5 * t * pow(u, 0.3e1) + 0.22172e5 * pow(u, 0.4e1) - 0.138000e6 * pow(t, 0.3e1) - 0.167828e6 * t * t * u + 0.33544e5 * t * u * u + 0.53708e5 * pow(u, 0.3e1) - 0.132480e6 * t * t - 0.99400e5 * t * u + 0.24088e5 * u * u - 0.44160e5 * t - 0.13120e5 * u) * pow(q3, 0.6e1) + (0.44298e5 * pow(t, 0.5e1) + 0.90774e5 * pow(t, 0.4e1) * u - 0.17688e5 * pow(t, 0.3e1) * u * u - 0.144144e6 * t * t * pow(u, 0.3e1) - 0.100818e6 * t * pow(u, 0.4e1) - 0.19318e5 * pow(u, 0.5e1) + 0.154560e6 * pow(t, 0.4e1) + 0.253688e6 * pow(t, 0.3e1) * u - 0.46340e5 * t * t * u * u - 0.217016e6 * t * pow(u, 0.3e1) - 0.76812e5 * pow(u, 0.4e1) + 0.209760e6 * pow(t, 0.3e1) + 0.251252e6 * t * t * u - 0.54210e5 * t * u * u - 0.84854e5 * pow(u, 0.3e1) + 0.132480e6 * t * t + 0.99120e5 * t * u - 0.23312e5 * u * u + 0.33120e5 * t + 0.10880e5 * u) * pow(q3, 0.5e1) + (0.13728e5 * u * u - 0.13248e5 * t - 0.4768e4 * u - 0.24840e5 * pow(t, 0.6e1) + 0.66496e5 * pow(u, 0.3e1) + 0.98946e5 * pow(u, 0.4e1) + 0.55362e5 * pow(u, 0.5e1) - 0.164008e6 * t * t * u + 0.52088e5 * t * u * u - 0.47200e5 * t * u - 0.261400e6 * pow(t, 0.3e1) * u + 0.83616e5 * t * t * u * u - 0.196256e6 * pow(t, 0.4e1) * u + 0.75658e5 * pow(t, 0.3e1) * u * u + 0.274410e6 * t * pow(u, 0.3e1) + 0.388910e6 * t * t * pow(u, 0.3e1) + 0.276702e6 * t * pow(u, 0.4e1) - 0.56472e5 * pow(t, 0.5e1) * u + 0.32370e5 * pow(t, 0.4e1) * u * u + 0.190416e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.194524e6 * t * t * pow(u, 0.4e1) + 0.76216e5 * t * pow(u, 0.5e1) + 0.9290e4 * pow(u, 0.6e1) - 0.143520e6 * pow(t, 0.3e1) - 0.66240e5 * t * t - 0.165600e6 * pow(t, 0.4e1) - 0.99912e5 * pow(t, 0.5e1)) * pow(q3, 0.4e1) + (-0.5128e4 * u * u + 0.2208e4 * t + 0.864e3 * u + 0.8556e4 * pow(t, 0.7e1) + 0.36984e5 * pow(t, 0.6e1) - 0.26684e5 * pow(u, 0.3e1) - 0.57686e5 * pow(u, 0.4e1) - 0.54103e5 * pow(u, 0.5e1) + 0.37952e5 * t * t * u - 0.29884e5 * t * u * u + 0.7192e4 * t * u + 0.96912e5 * pow(t, 0.3e1) * u - 0.73200e5 * t * t * u * u + 0.123058e6 * pow(t, 0.4e1) * u - 0.107056e6 * pow(t, 0.3e1) * u * u - 0.159974e6 * t * pow(u, 0.3e1) - 0.366871e6 * t * t * pow(u, 0.3e1) - 0.262232e6 * t * pow(u, 0.4e1) + 0.76418e5 * pow(t, 0.5e1) * u - 0.94540e5 * pow(t, 0.4e1) * u * u - 0.389526e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.400902e6 * t * t * pow(u, 0.4e1) - 0.164404e6 * t * pow(u, 0.5e1) - 0.120096e6 * t * t * pow(u, 0.5e1) - 0.30574e5 * t * pow(u, 0.6e1) + 0.18554e5 * pow(t, 0.6e1) * u - 0.36618e5 * pow(t, 0.5e1) * u * u - 0.158859e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.204092e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.21614e5 * pow(u, 0.6e1) - 0.2327e4 * pow(u, 0.7e1) + 0.38640e5 * pow(t, 0.3e1) + 0.13248e5 * t * t + 0.66240e5 * pow(t, 0.4e1) + 0.67068e5 * pow(t, 0.5e1)) * pow(q3, 0.3e1) + (0.984e3 * u * u - 0.7176e4 * pow(t, 0.7e1) - 0.1656e4 * pow(t, 0.8e1) - 0.12696e5 * pow(t, 0.6e1) + 0.5060e4 * pow(u, 0.3e1) + 0.14922e5 * pow(u, 0.4e1) + 0.20757e5 * pow(u, 0.5e1) + 0.316e3 * t * t * u + 0.7248e4 * t * u * u + 0.888e3 * t * u - 0.9036e4 * pow(t, 0.3e1) * u + 0.22172e5 * t * t * u * u - 0.22626e5 * pow(t, 0.4e1) * u + 0.46120e5 * pow(t, 0.3e1) * u * u + 0.40082e5 * t * pow(u, 0.3e1) + 0.132695e6 * t * t * pow(u, 0.3e1) + 0.97690e5 * t * pow(u, 0.4e1) - 0.23600e5 * pow(t, 0.5e1) * u + 0.69762e5 * pow(t, 0.4e1) * u * u + 0.238143e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.251886e6 * t * t * pow(u, 0.4e1) + 0.108661e6 * t * pow(u, 0.5e1) + 0.180188e6 * t * t * pow(u, 0.5e1) + 0.50231e5 * t * pow(u, 0.6e1) + 0.37260e5 * t * t * pow(u, 0.6e1) + 0.6141e4 * t * pow(u, 0.7e1) - 0.11436e5 * pow(t, 0.6e1) * u + 0.61569e5 * pow(t, 0.5e1) * u * u + 0.220893e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.289560e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.1998e4 * pow(t, 0.7e1) * u + 0.22198e5 * pow(t, 0.6e1) * u * u + 0.81441e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.122265e6 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.94720e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.15628e5 * pow(u, 0.6e1) + 0.4539e4 * pow(u, 0.7e1) + 0.237e3 * pow(u, 0.8e1) - 0.1104e4 * pow(t, 0.3e1) - 0.5520e4 * pow(t, 0.4e1) - 0.11592e5 * pow(t, 0.5e1)) * q3 * q3 + (0.828e3 * pow(t, 0.7e1) + 0.552e3 * pow(t, 0.8e1) + 0.138e3 * pow(t, 0.9e1) + 0.552e3 * pow(t, 0.6e1) - 0.342e3 * pow(u, 0.3e1) - 0.1542e4 * pow(u, 0.4e1) - 0.2815e4 * pow(u, 0.5e1) + 0.660e3 * t * t * u + 0.318e3 * t * u * u + 0.2904e4 * pow(t, 0.3e1) * u + 0.2004e4 * t * t * u * u + 0.5152e4 * pow(t, 0.4e1) * u + 0.3344e4 * pow(t, 0.3e1) * u * u - 0.23201e5 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.39292e5 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.37426e5 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.19958e5 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.448e3 * pow(t, 0.8e1) * u - 0.6790e4 * pow(t, 0.7e1) * u * u - 0.2442e4 * t * pow(u, 0.3e1) - 0.10257e5 * t * t * pow(u, 0.3e1) - 0.11402e5 * t * pow(u, 0.4e1) + 0.4466e4 * pow(t, 0.5e1) * u - 0.3208e4 * pow(t, 0.4e1) * u * u - 0.34118e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.46012e5 * t * t * pow(u, 0.4e1) - 0.22750e5 * t * pow(u, 0.5e1) - 0.68141e5 * t * t * pow(u, 0.5e1) - 0.5301e4 * t * t * pow(u, 0.7e1) - 0.474e3 * t * pow(u, 0.8e1) - 0.21408e5 * t * pow(u, 0.6e1) - 0.37836e5 * t * t * pow(u, 0.6e1) - 0.7593e4 * t * pow(u, 0.7e1) + 0.1344e4 * pow(t, 0.6e1) * u - 0.16454e5 * pow(t, 0.5e1) * u * u - 0.66630e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.98704e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.662e3 * pow(t, 0.7e1) * u - 0.18378e5 * pow(t, 0.6e1) * u * u - 0.63947e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.102108e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.85998e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.3734e4 * pow(u, 0.6e1) - 0.2311e4 * pow(u, 0.7e1) - 0.430e3 * pow(u, 0.8e1) + 0.138e3 * pow(t, 0.5e1)) * q3 + (-0.162e3 * pow(t, 0.6e1) * u - 0.648e3 * pow(t, 0.5e1) * u * u - 0.972e3 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.648e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.162e3 * t * t * pow(u, 0.5e1) - 0.324e3 * pow(t, 0.5e1) * u - 0.1296e4 * pow(t, 0.4e1) * u * u - 0.1944e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1296e4 * t * t * pow(u, 0.4e1) - 0.324e3 * t * pow(u, 0.5e1) - 0.162e3 * pow(t, 0.4e1) * u - 0.648e3 * pow(t, 0.3e1) * u * u - 0.972e3 * t * t * pow(u, 0.3e1) - 0.648e3 * t * pow(u, 0.4e1) - 0.162e3 * pow(u, 0.5e1)) * pow(q4, 0.3e1) + (0.332e3 * pow(t, 0.7e1) * u + 0.1652e4 * pow(t, 0.6e1) * u * u + 0.3288e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.3272e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.1628e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.324e3 * t * t * pow(u, 0.6e1) + 0.834e3 * pow(t, 0.6e1) * u + 0.3984e4 * pow(t, 0.5e1) * u * u + 0.7596e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.7224e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.3426e4 * t * t * pow(u, 0.5e1) + 0.648e3 * t * pow(u, 0.6e1) + 0.672e3 * pow(t, 0.5e1) * u + 0.3012e4 * pow(t, 0.4e1) * u * u + 0.5328e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.4632e4 * t * t * pow(u, 0.4e1) + 0.1968e4 * t * pow(u, 0.5e1) + 0.324e3 * pow(u, 0.6e1) + 0.170e3 * pow(t, 0.4e1) * u + 0.680e3 * pow(t, 0.3e1) * u * u + 0.1020e4 * t * t * pow(u, 0.3e1) + 0.680e3 * t * pow(u, 0.4e1) + 0.170e3 * pow(u, 0.5e1)) * q4 * q4 + (-0.228e3 * pow(u, 0.5e1) + 0.54e2 * pow(t, 0.4e1) * u + 0.78e2 * pow(t, 0.3e1) * u * u - 0.4771e4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.6968e4 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.5628e4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.2362e4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.266e3 * pow(t, 0.8e1) * u - 0.1734e4 * pow(t, 0.7e1) * u * u - 0.234e3 * t * t * pow(u, 0.3e1) - 0.486e3 * t * pow(u, 0.4e1) - 0.20e2 * pow(t, 0.5e1) * u - 0.738e3 * pow(t, 0.4e1) * u * u - 0.2866e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.3938e4 * t * t * pow(u, 0.4e1) - 0.2130e4 * t * pow(u, 0.5e1) - 0.9124e4 * t * t * pow(u, 0.5e1) - 0.399e3 * t * t * pow(u, 0.7e1) - 0.2887e4 * t * pow(u, 0.6e1) - 0.4949e4 * t * t * pow(u, 0.6e1) - 0.754e3 * t * pow(u, 0.7e1) - 0.468e3 * pow(t, 0.6e1) * u - 0.3505e4 * pow(t, 0.5e1) * u * u - 0.9991e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.13536e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.660e3 * pow(t, 0.7e1) * u - 0.4423e4 * pow(t, 0.6e1) * u * u - 0.12140e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.17092e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.12910e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.340e3 * pow(u, 0.6e1) - 0.345e3 * pow(u, 0.7e1)) * q4 + 0.270e3 * pow(u, 0.6e1) + 0.179e3 * pow(u, 0.7e1) + 0.183e3 * pow(u, 0.8e1)) * pow(u, -0.2e1) * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / t * pow(-0.1e1 - t + q3, -0.3e1));
}
#include <math.h>

double GstarVVCoeffsC5e2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.4e1 / 0.81e2 * ((0.15552e5 * t + 0.26432e5 * u) * pow(q3, 0.7e1) * q4 * q4 + (-0.27200e5 * t * t - 0.181536e6 * t * u - 0.105888e6 * u * u - 0.27200e5 * t - 0.148640e6 * u) * pow(q3, 0.7e1) * q4 + (-0.62208e5 * t * t - 0.147712e6 * t * u - 0.52864e5 * u * u - 0.62208e5 * t - 0.116608e6 * u) * pow(q3, 0.6e1) * q4 * q4 + (0.57120e5 * pow(t, 0.3e1) + 0.481792e6 * t * t * u + 0.533664e6 * t * u * u + 0.121088e6 * pow(u, 0.3e1) + 0.108800e6 * t * t + 0.802592e6 * t * u + 0.462688e6 * u * u + 0.54400e5 * t + 0.328288e6 * u) * pow(q3, 0.6e1) * q4 + (0.101088e6 * pow(t, 0.3e1) + 0.324192e6 * t * t * u + 0.230112e6 * t * u * u + 0.39648e5 * pow(u, 0.3e1) + 0.186624e6 * t * t + 0.497536e6 * t * u + 0.180352e6 * u * u + 0.93312e5 * t + 0.202112e6 * u) * pow(q3, 0.5e1) * q4 * q4 + (-0.65280e5 * pow(t, 0.4e1) - 0.668448e6 * pow(t, 0.3e1) * u - 0.1090752e7 * t * t * u * u - 0.495104e6 * t * pow(u, 0.3e1) - 0.43424e5 * pow(u, 0.4e1) - 0.174080e6 * pow(t, 0.3e1) - 0.1636000e7 * t * t * u - 0.1805920e7 * t * u * u - 0.386816e6 * pow(u, 0.3e1) - 0.163200e6 * t * t - 0.1346240e7 * t * u - 0.763072e6 * u * u - 0.54400e5 * t - 0.363712e6 * u) * pow(q3, 0.5e1) * q4 + (-0.85536e5 * pow(t, 0.4e1) - 0.363840e6 * pow(t, 0.3e1) * u - 0.397248e6 * t * t * u * u - 0.143040e6 * t * pow(u, 0.3e1) - 0.13216e5 * pow(u, 0.4e1) - 0.209952e6 * pow(t, 0.3e1) - 0.791392e6 * t * t * u - 0.592352e6 * t * u * u - 0.108832e6 * pow(u, 0.3e1) - 0.186624e6 * t * t - 0.606336e6 * t * u - 0.223872e6 * u * u - 0.62208e5 * t - 0.171008e6 * u) * pow(q3, 0.4e1) * q4 * q4 + (0.43860e5 * pow(t, 0.5e1) + 0.532278e6 * pow(t, 0.4e1) * u + 0.1161312e7 * pow(t, 0.3e1) * u * u + 0.797236e6 * t * t * pow(u, 0.3e1) + 0.136380e6 * t * pow(u, 0.4e1) - 0.9306e4 * pow(u, 0.5e1) + 0.141440e6 * pow(t, 0.4e1) + 0.1643568e7 * pow(t, 0.3e1) * u + 0.2713072e7 * t * t * u * u + 0.1184848e7 * t * pow(u, 0.3e1) + 0.83632e5 * pow(u, 0.4e1) + 0.179520e6 * pow(t, 0.3e1) + 0.1942704e7 * t * t * u + 0.2130528e7 * t * u * u + 0.415376e6 * pow(u, 0.3e1) + 0.108800e6 * t * t + 0.1038528e7 * t * u + 0.571968e6 * u * u + 0.27200e5 * t + 0.205088e6 * u) * pow(q3, 0.4e1) * q4 + (0.39852e5 * pow(t, 0.5e1) + 0.224772e6 * pow(t, 0.4e1) * u + 0.344376e6 * pow(t, 0.3e1) * u * u + 0.197256e6 * t * t * pow(u, 0.3e1) + 0.39452e5 * t * pow(u, 0.4e1) + 0.1652e4 * pow(u, 0.5e1) + 0.108864e6 * pow(t, 0.4e1) + 0.593920e6 * pow(t, 0.3e1) * u + 0.719040e6 * t * t * u * u + 0.287616e6 * t * pow(u, 0.3e1) + 0.31872e5 * pow(u, 0.4e1) + 0.116640e6 * pow(t, 0.3e1) + 0.615648e6 * t * t * u + 0.505248e6 * t * u * u + 0.104160e6 * pow(u, 0.3e1) + 0.62208e5 * t * t + 0.310912e6 * t * u + 0.118144e6 * u * u + 0.15552e5 * t + 0.69952e5 * u) * pow(q3, 0.3e1) * q4 * q4 + (-0.176032e6 * u * u - 0.5440e4 * t - 0.50080e5 * u - 0.17340e5 * pow(t, 0.6e1) - 0.156912e6 * pow(u, 0.3e1) - 0.39392e5 * pow(u, 0.4e1) + 0.36378e5 * pow(u, 0.5e1) - 0.903184e6 * t * t * u - 0.979104e6 * t * u * u - 0.341024e6 * t * u - 0.1234528e7 * pow(t, 0.3e1) * u - 0.2089152e7 * t * t * u * u - 0.867398e6 * pow(t, 0.4e1) * u - 0.1965384e7 * pow(t, 0.3e1) * u * u - 0.868448e6 * t * pow(u, 0.3e1) - 0.1329844e7 * t * t * pow(u, 0.3e1) - 0.178172e6 * t * pow(u, 0.4e1) - 0.246798e6 * pow(t, 0.5e1) * u - 0.684870e6 * pow(t, 0.4e1) * u * u - 0.633036e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.150632e6 * t * t * pow(u, 0.4e1) + 0.36762e5 * t * pow(u, 0.5e1) + 0.9386e4 * pow(u, 0.6e1) - 0.65280e5 * pow(t, 0.3e1) - 0.27200e5 * t * t - 0.87040e5 * pow(t, 0.4e1) - 0.60860e5 * pow(t, 0.5e1)) * pow(q3, 0.3e1) * q4 + (-0.9720e4 * pow(t, 0.6e1) - 0.75504e5 * pow(t, 0.5e1) * u - 0.155856e6 * pow(t, 0.4e1) * u * u - 0.128064e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.41976e5 * t * t * pow(u, 0.4e1) - 0.3984e4 * t * pow(u, 0.5e1) - 0.25272e5 * pow(t, 0.5e1) - 0.216976e6 * pow(t, 0.4e1) * u - 0.394480e6 * pow(t, 0.3e1) * u * u - 0.264864e6 * t * t * pow(u, 0.3e1) - 0.66072e5 * t * pow(u, 0.4e1) - 0.3984e4 * pow(u, 0.5e1) - 0.23328e5 * pow(t, 0.4e1) - 0.251840e6 * pow(t, 0.3e1) * u - 0.370752e6 * t * t * u * u - 0.177216e6 * t * pow(u, 0.3e1) - 0.24096e5 * pow(u, 0.4e1) - 0.7776e4 * pow(t, 0.3e1) - 0.153888e6 * t * t * u - 0.153888e6 * t * u * u - 0.40416e5 * pow(u, 0.3e1) - 0.54400e5 * t * u - 0.21760e5 * u * u - 0.10880e5 * u) * q3 * q3 * q4 * q4 + (0.10336e5 * u * u + 0.2208e4 * u + 0.3740e4 * pow(t, 0.7e1) + 0.12920e5 * pow(t, 0.6e1) + 0.9520e4 * pow(u, 0.3e1) + 0.5552e4 * pow(u, 0.4e1) - 0.36556e5 * pow(u, 0.5e1) + 0.113296e6 * t * t * u + 0.121984e6 * t * u * u + 0.27680e5 * t * u + 0.260912e6 * pow(t, 0.3e1) * u + 0.488496e6 * t * t * u * u + 0.340628e6 * pow(t, 0.4e1) * u + 0.856112e6 * pow(t, 0.3e1) * u * u + 0.204368e6 * t * pow(u, 0.3e1) + 0.597928e6 * t * t * pow(u, 0.3e1) + 0.51620e5 * t * pow(u, 0.4e1) + 0.231142e6 * pow(t, 0.5e1) * u + 0.698978e6 * pow(t, 0.4e1) * u * u + 0.659916e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.114180e6 * t * t * pow(u, 0.4e1) - 0.88354e5 * t * pow(u, 0.5e1) - 0.53415e5 * t * t * pow(u, 0.5e1) - 0.24822e5 * t * pow(u, 0.6e1) + 0.63047e5 * pow(t, 0.6e1) * u + 0.216978e6 * pow(t, 0.5e1) * u * u + 0.250577e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.62696e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.22702e5 * pow(u, 0.6e1) - 0.1617e4 * pow(u, 0.7e1) + 0.2720e4 * pow(t, 0.3e1) + 0.10880e5 * pow(t, 0.4e1) + 0.17340e5 * pow(t, 0.5e1)) * q3 * q3 * q4 + (0.972e3 * pow(t, 0.7e1) + 0.1944e4 * pow(t, 0.6e1) + 0.5440e4 * pow(u, 0.3e1) + 0.5440e4 * pow(u, 0.4e1) + 0.3012e4 * pow(u, 0.5e1) + 0.5440e4 * t * t * u + 0.10880e5 * t * u * u + 0.21760e5 * pow(t, 0.3e1) * u + 0.48960e5 * t * t * u * u + 0.39540e5 * pow(t, 0.4e1) * u + 0.99480e5 * pow(t, 0.3e1) * u * u + 0.32640e5 * t * pow(u, 0.3e1) + 0.87240e5 * t * t * pow(u, 0.3e1) + 0.29340e5 * t * pow(u, 0.4e1) + 0.35560e5 * pow(t, 0.5e1) * u + 0.95600e5 * pow(t, 0.4e1) * u * u + 0.98320e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.42360e5 * t * t * pow(u, 0.4e1) + 0.6024e4 * t * pow(u, 0.5e1) + 0.3012e4 * t * t * pow(u, 0.5e1) + 0.12340e5 * pow(t, 0.6e1) * u + 0.34200e5 * pow(t, 0.5e1) * u * u + 0.38280e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.18460e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.972e3 * pow(t, 0.5e1)) * q3 * q4 * q4 + (-0.1020e4 * pow(t, 0.7e1) - 0.340e3 * pow(t, 0.8e1) - 0.1020e4 * pow(t, 0.6e1) - 0.2256e4 * pow(u, 0.3e1) - 0.6368e4 * pow(u, 0.4e1) + 0.9282e4 * pow(u, 0.5e1) + 0.1392e4 * t * t * u - 0.1152e4 * t * u * u - 0.1504e4 * pow(t, 0.3e1) * u - 0.21664e5 * t * t * u * u - 0.17214e5 * pow(t, 0.4e1) * u - 0.79880e5 * pow(t, 0.3e1) * u * u - 0.25664e5 * t * pow(u, 0.3e1) - 0.86084e5 * t * t * pow(u, 0.3e1) - 0.14660e5 * t * pow(u, 0.4e1) - 0.32814e5 * pow(t, 0.5e1) * u - 0.136174e6 * pow(t, 0.4e1) * u * u - 0.158364e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.27768e5 * t * t * pow(u, 0.4e1) + 0.39050e5 * t * pow(u, 0.5e1) + 0.67728e5 * t * t * pow(u, 0.5e1) + 0.36656e5 * t * pow(u, 0.6e1) + 0.21486e5 * t * t * pow(u, 0.6e1) + 0.3234e4 * t * pow(u, 0.7e1) - 0.25852e5 * pow(t, 0.6e1) * u - 0.108328e6 * pow(t, 0.5e1) * u * u - 0.136758e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.18348e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.7356e4 * pow(t, 0.7e1) * u - 0.31602e5 * pow(t, 0.6e1) * u * u - 0.41998e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.1896e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.33768e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.12546e5 * pow(u, 0.6e1) + 0.3842e4 * pow(u, 0.7e1) - 0.340e3 * pow(t, 0.5e1)) * q3 * q4 + (0.5440e4 * t + 0.26848e5 * u) * pow(q3, 0.8e1) * q4 - 0.63e2 * pow(u, 0.5e1) + 0.138e3 * pow(t, 0.4e1) * u + 0.216e3 * pow(t, 0.3e1) * u * u + 0.7701e4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.30162e5 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.50887e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.44988e5 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.291e3 * pow(t, 0.8e1) * u - 0.160e3 * pow(t, 0.7e1) * u * u - 0.45e2 * t * t * pow(u, 0.3e1) - 0.186e3 * t * pow(u, 0.4e1) + 0.504e3 * pow(t, 0.5e1) * u + 0.636e3 * pow(t, 0.4e1) * u * u - 0.819e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1638e4 * t * t * pow(u, 0.4e1) - 0.795e3 * t * pow(u, 0.5e1) + 0.5792e4 * t * t * pow(u, 0.5e1) + 0.20535e5 * t * t * pow(u, 0.7e1) + 0.3842e4 * t * pow(u, 0.8e1) + 0.4390e4 * t * pow(u, 0.6e1) + 0.31499e5 * t * t * pow(u, 0.6e1) - 0.127e3 * pow(t, 0.9e1) * u + 0.9e1 * pow(t, 0.8e1) * u * u + 0.3227e4 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.11895e5 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.19935e5 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.17903e5 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.8389e4 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.1617e4 * t * t * pow(u, 0.8e1) + 0.13183e5 * t * pow(u, 0.7e1) + 0.557e3 * pow(t, 0.6e1) * u + 0.446e3 * pow(t, 0.5e1) * u * u - 0.488e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.2118e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.27e2 * pow(t, 0.7e1) * u - 0.143e3 * pow(t, 0.6e1) * u * u + 0.4760e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.21823e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.37420e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.108e3 * pow(u, 0.6e1) + 0.1093e4 * pow(u, 0.7e1) + 0.2211e4 * pow(u, 0.8e1) + (0.54856e5 * u * u + 0.7584e4 * t + 0.12960e5 * u + 0.29388e5 * pow(t, 0.7e1) + 0.127032e6 * pow(t, 0.6e1) + 0.42908e5 * pow(u, 0.3e1) - 0.107026e6 * pow(u, 0.4e1) - 0.191531e6 * pow(u, 0.5e1) + 0.469840e6 * t * t * u + 0.383164e6 * t * u * u + 0.122216e6 * t * u + 0.963648e6 * pow(t, 0.3e1) * u + 0.1126560e7 * t * t * u * u + 0.1113620e7 * pow(t, 0.4e1) * u + 0.1666876e7 * pow(t, 0.3e1) * u * u + 0.292622e6 * t * pow(u, 0.3e1) + 0.680731e6 * t * t * pow(u, 0.3e1) - 0.330772e6 * t * pow(u, 0.4e1) + 0.685120e6 * pow(t, 0.5e1) * u + 0.1222990e7 * pow(t, 0.4e1) * u * u + 0.650040e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.404004e6 * t * t * pow(u, 0.4e1) - 0.479840e6 * t * pow(u, 0.5e1) - 0.301563e6 * t * t * pow(u, 0.5e1) - 0.121946e6 * t * pow(u, 0.6e1) + 0.174643e6 * pow(t, 0.6e1) * u + 0.354534e6 * pow(t, 0.5e1) * u * u + 0.219393e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.182200e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.103786e6 * pow(u, 0.6e1) - 0.12697e5 * pow(u, 0.7e1) + 0.132720e6 * pow(t, 0.3e1) + 0.45504e5 * t * t + 0.227520e6 * pow(t, 0.4e1) + 0.230364e6 * pow(t, 0.5e1)) * pow(q3, 0.3e1) + (-0.263136e6 * u * u - 0.45504e5 * t - 0.74240e5 * u - 0.85320e5 * pow(t, 0.6e1) - 0.254320e6 * pow(u, 0.3e1) + 0.52470e5 * pow(u, 0.4e1) + 0.140838e6 * pow(u, 0.5e1) - 0.1511960e7 * t * t * u - 0.1314920e7 * t * u * u - 0.536960e6 * t * u - 0.2120312e7 * pow(t, 0.3e1) * u - 0.2560992e7 * t * t * u * u - 0.1490698e7 * pow(t, 0.4e1) * u - 0.2260888e7 * pow(t, 0.3e1) * u * u - 0.946386e6 * t * pow(u, 0.3e1) - 0.1199132e7 * t * t * pow(u, 0.3e1) + 0.84864e5 * t * pow(u, 0.4e1) - 0.420492e6 * pow(t, 0.5e1) * u - 0.754908e6 * pow(t, 0.4e1) * u * u - 0.505488e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.46376e5 * t * t * pow(u, 0.4e1) + 0.160940e6 * t * pow(u, 0.5e1) + 0.35308e5 * pow(u, 0.6e1) - 0.492960e6 * pow(t, 0.3e1) - 0.227520e6 * t * t - 0.568800e6 * pow(t, 0.4e1) - 0.343176e6 * pow(t, 0.5e1)) * pow(q3, 0.4e1) + (0.168e3 * u * u - 0.24648e5 * pow(t, 0.7e1) - 0.5688e4 * pow(t, 0.8e1) - 0.43608e5 * pow(t, 0.6e1) + 0.9460e4 * pow(u, 0.3e1) + 0.45126e5 * pow(u, 0.4e1) + 0.90933e5 * pow(u, 0.5e1) - 0.32476e5 * t * t * u - 0.16248e5 * t * u * u - 0.3768e4 * t * u - 0.121212e6 * pow(t, 0.3e1) * u - 0.126164e6 * t * t * u * u - 0.244512e6 * pow(t, 0.4e1) * u - 0.357496e6 * pow(t, 0.3e1) * u * u + 0.14686e5 * t * pow(u, 0.3e1) - 0.44159e5 * t * t * pow(u, 0.3e1) + 0.213878e6 * t * pow(u, 0.4e1) - 0.277660e6 * pow(t, 0.5e1) * u - 0.492348e6 * pow(t, 0.4e1) * u * u - 0.120945e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.456180e6 * t * t * pow(u, 0.4e1) + 0.404705e6 * t * pow(u, 0.5e1) + 0.581917e6 * t * t * pow(u, 0.5e1) + 0.246574e6 * t * pow(u, 0.6e1) + 0.155871e6 * t * t * pow(u, 0.6e1) + 0.33783e5 * t * pow(u, 0.7e1) - 0.167097e6 * pow(t, 0.6e1) * u - 0.334890e6 * pow(t, 0.5e1) * u * u - 0.96495e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.462516e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.41445e5 * pow(t, 0.7e1) * u - 0.90115e5 * pow(t, 0.6e1) * u * u - 0.23283e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.179595e6 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.272225e6 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.92468e5 * pow(u, 0.6e1) + 0.31227e5 * pow(u, 0.7e1) + 0.1617e4 * pow(u, 0.8e1) - 0.3792e4 * pow(t, 0.3e1) - 0.18960e5 * pow(t, 0.4e1) - 0.39816e5 * pow(t, 0.5e1)) * q3 * q3 + (0.2844e4 * pow(t, 0.7e1) + 0.1896e4 * pow(t, 0.8e1) + 0.474e3 * pow(t, 0.9e1) + 0.1896e4 * pow(t, 0.6e1) + 0.342e3 * pow(u, 0.3e1) + 0.822e3 * pow(u, 0.4e1) - 0.7181e4 * pow(u, 0.5e1) - 0.372e3 * t * t * u - 0.30e2 * t * u * u - 0.816e3 * pow(t, 0.3e1) * u + 0.2028e4 * t * t * u * u + 0.3476e4 * pow(t, 0.4e1) * u + 0.13300e5 * pow(t, 0.3e1) * u * u - 0.12793e5 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.75788e5 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.118541e6 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.87136e5 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.4681e4 * pow(t, 0.8e1) * u + 0.9556e4 * pow(t, 0.7e1) * u * u + 0.3666e4 * t * pow(u, 0.3e1) + 0.6657e4 * t * t * pow(u, 0.3e1) - 0.10822e5 * t * pow(u, 0.4e1) + 0.16048e5 * pow(t, 0.5e1) * u + 0.37294e5 * pow(t, 0.4e1) * u * u - 0.4036e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.86546e5 * t * t * pow(u, 0.4e1) - 0.83474e5 * t * pow(u, 0.5e1) - 0.247618e6 * t * t * pow(u, 0.5e1) - 0.29475e5 * t * t * pow(u, 0.7e1) - 0.3234e4 * t * pow(u, 0.8e1) - 0.119946e6 * t * pow(u, 0.6e1) - 0.187776e6 * t * t * pow(u, 0.6e1) - 0.51762e5 * t * pow(u, 0.7e1) + 0.24945e5 * pow(t, 0.6e1) * u + 0.52856e5 * pow(t, 0.5e1) * u * u - 0.24702e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.202640e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.17498e5 * pow(t, 0.7e1) * u + 0.36360e5 * pow(t, 0.6e1) * u * u - 0.30358e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.205062e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.293802e6 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.24106e5 * pow(u, 0.6e1) - 0.19511e5 * pow(u, 0.7e1) - 0.3842e4 * pow(u, 0.8e1) + 0.474e3 * pow(t, 0.5e1)) * q3 + (-0.680e3 * pow(t, 0.7e1) * u - 0.2720e4 * pow(t, 0.6e1) * u * u - 0.4080e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.2720e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.680e3 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.2040e4 * pow(t, 0.6e1) * u - 0.8160e4 * pow(t, 0.5e1) * u * u - 0.12240e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.8160e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.2040e4 * t * t * pow(u, 0.5e1) - 0.2040e4 * pow(t, 0.5e1) * u - 0.8160e4 * pow(t, 0.4e1) * u * u - 0.12240e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.8160e4 * t * t * pow(u, 0.4e1) - 0.2040e4 * t * pow(u, 0.5e1) - 0.680e3 * pow(t, 0.4e1) * u - 0.2720e4 * pow(t, 0.3e1) * u * u - 0.4080e4 * t * t * pow(u, 0.3e1) - 0.2720e4 * t * pow(u, 0.4e1) - 0.680e3 * pow(u, 0.5e1)) * q4 * q4 + (0.426e3 * pow(u, 0.5e1) - 0.486e3 * pow(t, 0.4e1) * u - 0.960e3 * pow(t, 0.3e1) * u * u + 0.1237e4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.3124e4 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.7809e4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.6050e4 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.173e3 * pow(t, 0.8e1) * u + 0.1158e4 * pow(t, 0.7e1) * u * u - 0.36e2 * t * t * pow(u, 0.3e1) + 0.864e3 * t * pow(u, 0.4e1) - 0.730e3 * pow(t, 0.5e1) * u + 0.738e3 * pow(t, 0.4e1) * u * u + 0.7036e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.9596e4 * t * t * pow(u, 0.4e1) + 0.4686e4 * t * pow(u, 0.5e1) - 0.3599e4 * t * t * pow(u, 0.5e1) - 0.1617e4 * t * t * pow(u, 0.7e1) - 0.7190e4 * t * pow(u, 0.6e1) - 0.13954e5 * t * t * pow(u, 0.6e1) - 0.3842e4 * t * pow(u, 0.7e1) + 0.171e3 * pow(t, 0.6e1) * u + 0.5434e4 * pow(t, 0.5e1) * u * u + 0.14503e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.10620e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.588e3 * pow(t, 0.7e1) * u + 0.4894e4 * pow(t, 0.6e1) * u * u + 0.8654e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.1292e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.15752e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.658e3 * pow(u, 0.6e1) - 0.2211e4 * pow(u, 0.7e1)) * q4 + (0.7584e4 * t + 0.9440e4 * u) * pow(q3, 0.9e1) + (-0.45504e5 * t * t - 0.85776e5 * t * u - 0.42032e5 * u * u - 0.45504e5 * t - 0.60160e5 * u) * pow(q3, 0.8e1) + (0.117552e6 * pow(t, 0.3e1) + 0.301016e6 * t * t * u + 0.263216e6 * t * u * u + 0.65416e5 * pow(u, 0.3e1) + 0.227520e6 * t * t + 0.450248e6 * t * u + 0.223656e6 * u * u + 0.113760e6 * t + 0.159200e6 * u) * pow(q3, 0.7e1) + (-0.170640e6 * pow(t, 0.4e1) - 0.559916e6 * pow(t, 0.3e1) * u - 0.678252e6 * t * t * u * u - 0.302420e6 * t * pow(u, 0.3e1) - 0.22916e5 * pow(u, 0.4e1) - 0.474000e6 * pow(t, 0.3e1) - 0.1273228e7 * t * t * u - 0.1123888e7 * t * u * u - 0.269588e6 * pow(u, 0.3e1) - 0.455040e6 * t * t - 0.947000e6 * t * u - 0.474136e6 * u * u - 0.151680e6 * t - 0.224000e6 * u) * pow(q3, 0.6e1) + (0.152154e6 * pow(t, 0.5e1) + 0.617976e6 * pow(t, 0.4e1) * u + 0.937992e6 * pow(t, 0.3e1) * u * u + 0.555948e6 * t * t * pow(u, 0.3e1) + 0.43038e5 * t * pow(u, 0.4e1) - 0.32996e5 * pow(u, 0.5e1) + 0.530880e6 * pow(t, 0.4e1) + 0.1838608e7 * pow(t, 0.3e1) * u + 0.2236820e7 * t * t * u * u + 0.937832e6 * t * pow(u, 0.3e1) + 0.31524e5 * pow(u, 0.4e1) + 0.720480e6 * pow(t, 0.3e1) + 0.2047180e7 * t * t * u + 0.1808706e7 * t * u * u + 0.405782e6 * pow(u, 0.3e1) + 0.455040e6 * t * t + 0.1001040e7 * t * u + 0.500624e6 * u * u + 0.113760e6 * t + 0.176800e6 * u) * pow(q3, 0.5e1)) * pow(u, -0.2e1) * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / t * pow(-0.1e1 - t + q3, -0.3e1));
}
double GstarVVCoeffsC6em2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0);
}
#include <math.h>

double GstarVVCoeffsC6em1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.8e1 / 0.3e1 * (0.6e1 * t * q4 * q4 + (-0.12e2 * t * u - 0.12e2 * t) * q4 + 0.6e1 * t * u * u + 0.12e2 * t * u + 0.6e1 * t) * pow(q4 - u - 0.1e1, -0.3e1) * pow(t, -0.2e1) / u * pow(q3, 0.3e1) - 0.8e1 / 0.3e1 * ((0.14e2 * t - 0.6e1 * u) * pow(q4, 0.3e1) + (-0.24e2 * t * t - 0.36e2 * t * u + 0.12e2 * u * u - 0.30e2 * t + 0.12e2 * u) * q4 * q4 + (0.48e2 * t * t * u + 0.30e2 * t * u * u - 0.6e1 * pow(u, 0.3e1) + 0.42e2 * t * t + 0.48e2 * t * u - 0.12e2 * u * u + 0.18e2 * t - 0.6e1 * u) * q4 - 0.24e2 * t * t * u * u - 0.8e1 * t * pow(u, 0.3e1) - 0.42e2 * t * t * u - 0.18e2 * t * u * u - 0.18e2 * t * t - 0.12e2 * t * u - 0.2e1 * t) * pow(q4 - u - 0.1e1, -0.3e1) * pow(t, -0.2e1) / u * q3 * q3 - 0.8e1 / 0.3e1 * ((0.10e2 * t - 0.2e1 * u) * pow(q4, 0.4e1) + (-0.40e2 * t * t - 0.26e2 * t * u + 0.6e1 * u * u - 0.24e2 * t + 0.6e1 * u) * pow(q4, 0.3e1) + (0.30e2 * pow(t, 0.3e1) + 0.108e3 * t * t * u + 0.27e2 * t * u * u - 0.6e1 * pow(u, 0.3e1) + 0.78e2 * t * t + 0.42e2 * t * u - 0.12e2 * u * u + 0.18e2 * t - 0.6e1 * u) * q4 * q4 + (-0.60e2 * pow(t, 0.3e1) * u - 0.96e2 * t * t * u * u - 0.16e2 * t * pow(u, 0.3e1) + 0.2e1 * pow(u, 0.4e1) - 0.46e2 * pow(t, 0.3e1) - 0.133e3 * t * t * u - 0.30e2 * t * u * u + 0.6e1 * pow(u, 0.3e1) - 0.42e2 * t * t - 0.18e2 * t * u + 0.6e1 * u * u - 0.4e1 * t + 0.2e1 * u) * q4 + 0.30e2 * pow(t, 0.3e1) * u * u + 0.28e2 * t * t * pow(u, 0.3e1) + 0.5e1 * t * pow(u, 0.4e1) + 0.46e2 * pow(t, 0.3e1) * u + 0.55e2 * t * t * u * u + 0.12e2 * t * pow(u, 0.3e1) + 0.18e2 * pow(t, 0.3e1) + 0.31e2 * t * t * u + 0.9e1 * t * u * u + 0.4e1 * t * t + 0.2e1 * t * u) * pow(q4 - u - 0.1e1, -0.3e1) * pow(t, -0.2e1) / u * q3 - 0.8e1 / 0.3e1 * (0.2e1 * t * pow(q4, 0.5e1) + (-0.16e2 * t * t - 0.8e1 * t * u - 0.6e1 * t) * pow(q4, 0.4e1) + (0.26e2 * pow(t, 0.3e1) + 0.56e2 * t * t * u + 0.13e2 * t * u * u + 0.36e2 * t * t + 0.18e2 * t * u + 0.6e1 * t) * pow(q4, 0.3e1) + (-0.12e2 * pow(t, 0.4e1) - 0.72e2 * pow(t, 0.3e1) * u - 0.75e2 * t * t * u * u - 0.11e2 * t * pow(u, 0.3e1) - 0.46e2 * pow(t, 0.3e1) - 0.91e2 * t * t * u - 0.21e2 * t * u * u - 0.24e2 * t * t - 0.12e2 * t * u - 0.2e1 * t) * q4 * q4 + (0.24e2 * pow(t, 0.4e1) * u + 0.66e2 * pow(t, 0.3e1) * u * u + 0.46e2 * t * t * pow(u, 0.3e1) + 0.5e1 * t * pow(u, 0.4e1) + 0.16e2 * pow(t, 0.4e1) + 0.81e2 * pow(t, 0.3e1) * u + 0.80e2 * t * t * u * u + 0.12e2 * t * pow(u, 0.3e1) + 0.22e2 * pow(t, 0.3e1) + 0.38e2 * t * t * u + 0.9e1 * t * u * u + 0.4e1 * t * t + 0.2e1 * t * u) * q4 - 0.12e2 * pow(t, 0.4e1) * u * u - 0.20e2 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.11e2 * t * t * pow(u, 0.4e1) - t * pow(u, 0.5e1) - 0.16e2 * pow(t, 0.4e1) * u - 0.35e2 * pow(t, 0.3e1) * u * u - 0.25e2 * t * t * pow(u, 0.3e1) - 0.3e1 * t * pow(u, 0.4e1) - 0.6e1 * pow(t, 0.4e1) - 0.17e2 * pow(t, 0.3e1) * u - 0.17e2 * t * t * u * u - 0.3e1 * t * pow(u, 0.3e1) - 0.2e1 * pow(t, 0.3e1) - 0.3e1 * t * t * u - t * u * u) * pow(q4 - u - 0.1e1, -0.3e1) * pow(t, -0.2e1) / u);
}
#include <math.h>

double GstarVVCoeffsC6e0 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0.8e1 / 0.9e1 * (0.1152e4 * t * pow(q4, 0.6e1) + (-0.2304e4 * t * t - 0.4608e4 * t * u - 0.4608e4 * t) * pow(q4, 0.5e1) + (0.1728e4 * pow(t, 0.3e1) + 0.8064e4 * t * t * u + 0.7488e4 * t * u * u + 0.6912e4 * t * t + 0.13824e5 * t * u + 0.6912e4 * t) * pow(q4, 0.4e1) + (-0.576e3 * pow(t, 0.4e1) - 0.5184e4 * pow(t, 0.3e1) * u - 0.10944e5 * t * t * u * u - 0.6336e4 * t * pow(u, 0.3e1) - 0.4032e4 * pow(t, 0.3e1) - 0.17280e5 * t * t * u - 0.15552e5 * t * u * u - 0.6912e4 * t * t - 0.13824e5 * t * u - 0.4608e4 * t) * pow(q4, 0.3e1) + (0.72e2 * pow(t, 0.5e1) + 0.1440e4 * pow(t, 0.4e1) * u + 0.5616e4 * pow(t, 0.3e1) * u * u + 0.7200e4 * t * t * pow(u, 0.3e1) + 0.2952e4 * t * pow(u, 0.4e1) + 0.1152e4 * pow(t, 0.4e1) + 0.8064e4 * pow(t, 0.3e1) * u + 0.14976e5 * t * t * u * u + 0.8064e4 * t * pow(u, 0.3e1) + 0.2880e4 * pow(t, 0.3e1) + 0.10368e5 * t * t * u + 0.8640e4 * t * u * u + 0.2304e4 * t * t + 0.4608e4 * t * u + 0.1152e4 * t) * q4 * q4 + (-0.144e3 * pow(t, 0.5e1) * u - 0.1152e4 * pow(t, 0.4e1) * u * u - 0.2592e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.2304e4 * t * t * pow(u, 0.4e1) - 0.720e3 * t * pow(u, 0.5e1) - 0.144e3 * pow(t, 0.5e1) - 0.1728e4 * pow(t, 0.4e1) * u - 0.4896e4 * pow(t, 0.3e1) * u * u - 0.5184e4 * t * t * pow(u, 0.3e1) - 0.1872e4 * t * pow(u, 0.4e1) - 0.576e3 * pow(t, 0.4e1) - 0.2880e4 * pow(t, 0.3e1) * u - 0.4032e4 * t * t * u * u - 0.1728e4 * t * pow(u, 0.3e1) - 0.576e3 * pow(t, 0.3e1) - 0.1152e4 * t * t * u - 0.576e3 * t * u * u) * q4 + 0.72e2 * pow(t, 0.5e1) * u * u + 0.288e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.432e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.288e3 * t * t * pow(u, 0.5e1) + 0.72e2 * t * pow(u, 0.6e1) + 0.144e3 * pow(t, 0.5e1) * u + 0.576e3 * pow(t, 0.4e1) * u * u + 0.864e3 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.576e3 * t * t * pow(u, 0.4e1) + 0.144e3 * t * pow(u, 0.5e1) + 0.72e2 * pow(t, 0.5e1) + 0.288e3 * pow(t, 0.4e1) * u + 0.432e3 * pow(t, 0.3e1) * u * u + 0.288e3 * t * t * pow(u, 0.3e1) + 0.72e2 * t * pow(u, 0.4e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - u - 0.1e1, -0.3e1) * pow(q3, 0.3e1) + 0.8e1 / 0.9e1 * (-0.234e3 * pow(t, 0.6e1) - 0.272e3 * pow(t, 0.4e1) * u - 0.408e3 * pow(t, 0.3e1) * u * u - 0.272e3 * t * t * pow(u, 0.3e1) - 0.68e2 * t * pow(u, 0.4e1) - 0.1176e4 * pow(t, 0.5e1) * u - 0.2364e4 * pow(t, 0.4e1) * u * u - 0.2376e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1194e4 * t * t * pow(u, 0.4e1) - 0.240e3 * t * pow(u, 0.5e1) - 0.1554e4 * t * t * pow(u, 0.5e1) + (0.1952e4 * t - 0.1440e4 * u) * pow(q4, 0.7e1) + (-0.7360e4 * t * t - 0.6592e4 * t * u + 0.5760e4 * u * u - 0.8896e4 * t + 0.5760e4 * u) * pow(q4, 0.6e1) + (0.9840e4 * pow(t, 0.3e1) + 0.28656e5 * t * t * u + 0.9264e4 * t * u * u - 0.9360e4 * pow(u, 0.3e1) + 0.28000e5 * t * t + 0.25792e5 * t * u - 0.17280e5 * u * u + 0.16064e5 * t - 0.8640e4 * u) * pow(q4, 0.5e1) + (-0.6160e4 * pow(t, 0.4e1) - 0.34752e5 * pow(t, 0.3e1) * u - 0.46176e5 * t * t * u * u - 0.7872e4 * t * pow(u, 0.3e1) + 0.7920e4 * pow(u, 0.4e1) - 0.29776e5 * pow(t, 0.3e1) - 0.84176e5 * t * t * u - 0.31792e5 * t * u * u + 0.19440e5 * pow(u, 0.3e1) - 0.39840e5 * t * t - 0.37824e5 * t * u + 0.17280e5 * u * u - 0.14336e5 * t + 0.5760e4 * u) * pow(q4, 0.4e1) + (0.1850e4 * pow(t, 0.5e1) + 0.18734e5 * pow(t, 0.4e1) * u + 0.48036e5 * pow(t, 0.3e1) * u * u + 0.39996e5 * t * t * pow(u, 0.3e1) + 0.5154e4 * t * pow(u, 0.4e1) - 0.3690e4 * pow(u, 0.5e1) + 0.15024e5 * pow(t, 0.4e1) + 0.76224e5 * pow(t, 0.3e1) * u + 0.98256e5 * t * t * u * u + 0.23392e5 * t * pow(u, 0.3e1) - 0.10080e5 * pow(u, 0.4e1) + 0.30576e5 * pow(t, 0.3e1) + 0.83472e5 * t * t * u + 0.36336e5 * t * u * u - 0.10800e5 * pow(u, 0.3e1) + 0.25120e5 * t * t + 0.24640e5 * t * u - 0.5760e4 * u * u + 0.6304e4 * t - 0.1440e4 * u) * pow(q4, 0.3e1) + (-0.1088e4 * t - 0.216e3 * pow(t, 0.6e1) + 0.720e3 * pow(u, 0.3e1) + 0.2160e4 * pow(u, 0.4e1) + 0.2340e4 * pow(u, 0.5e1) - 0.29040e5 * t * t * u - 0.14352e5 * t * u * u - 0.6016e4 * t * u - 0.48768e5 * pow(t, 0.3e1) * u - 0.59424e5 * t * t * u * u - 0.30828e5 * pow(t, 0.4e1) * u - 0.69312e5 * pow(t, 0.3e1) * u * u - 0.17984e5 * t * pow(u, 0.3e1) - 0.55864e5 * t * t * pow(u, 0.3e1) - 0.11128e5 * t * pow(u, 0.4e1) - 0.4668e4 * pow(t, 0.5e1) * u - 0.20700e5 * pow(t, 0.4e1) * u * u - 0.32664e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.19920e5 * t * t * pow(u, 0.4e1) - 0.2604e4 * t * pow(u, 0.5e1) + 0.900e3 * pow(u, 0.6e1) - 0.11184e5 * pow(t, 0.3e1) - 0.5920e4 * t * t - 0.11280e5 * pow(t, 0.4e1) - 0.3912e4 * pow(t, 0.5e1)) * q4 * q4 + (0.450e3 * pow(t, 0.6e1) - 0.90e2 * pow(u, 0.5e1) + 0.1088e4 * t * t * u + 0.544e3 * t * u * u + 0.7296e4 * pow(t, 0.3e1) * u + 0.7344e4 * t * t * u * u + 0.12078e5 * pow(t, 0.4e1) * u + 0.21972e5 * pow(t, 0.3e1) * u * u + 0.2464e4 * t * pow(u, 0.3e1) + 0.16140e5 * t * t * pow(u, 0.3e1) + 0.4026e4 * t * pow(u, 0.4e1) + 0.5988e4 * pow(t, 0.5e1) * u + 0.19608e5 * pow(t, 0.4e1) * u * u + 0.26320e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.15338e5 * t * t * pow(u, 0.4e1) + 0.2908e4 * t * pow(u, 0.5e1) + 0.5436e4 * t * t * pow(u, 0.5e1) + 0.802e3 * t * pow(u, 0.6e1) + 0.432e3 * pow(t, 0.6e1) * u + 0.3786e4 * pow(t, 0.5e1) * u * u + 0.9838e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.11028e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.180e3 * pow(u, 0.6e1) - 0.90e2 * pow(u, 0.7e1) + 0.544e3 * pow(t, 0.3e1) + 0.2416e4 * pow(t, 0.4e1) + 0.2130e4 * pow(t, 0.5e1)) * q4 - 0.276e3 * t * pow(u, 0.6e1) - 0.632e3 * t * t * pow(u, 0.6e1) - 0.104e3 * t * pow(u, 0.7e1) - 0.450e3 * pow(t, 0.6e1) * u - 0.2076e4 * pow(t, 0.5e1) * u * u - 0.3804e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.3456e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.216e3 * pow(t, 0.6e1) * u * u - 0.968e3 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.1712e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.1488e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.68e2 * pow(t, 0.5e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - u - 0.1e1, -0.3e1) * q3 * q3 + 0.8e1 / 0.9e1 * (0.255e3 * pow(t, 0.7e1) + 0.190e3 * pow(t, 0.6e1) + 0.72e2 * pow(t, 0.4e1) * u - 0.36e2 * pow(t, 0.3e1) * u * u + 0.1249e4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.2721e4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.2978e4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.1678e4 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.228e3 * pow(t, 0.7e1) * u * u - 0.96e2 * t * t * pow(u, 0.3e1) - 0.36e2 * t * pow(u, 0.4e1) + 0.888e3 * pow(t, 0.5e1) * u + 0.1316e4 * pow(t, 0.4e1) * u * u + 0.628e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.90e2 * t * t * pow(u, 0.4e1) - 0.100e3 * t * pow(u, 0.5e1) + 0.538e3 * t * t * pow(u, 0.5e1) + (0.928e3 * t - 0.1184e4 * u) * pow(q4, 0.8e1) + (-0.7104e4 * t * t - 0.960e3 * t * u + 0.5920e4 * u * u - 0.4640e4 * t + 0.5920e4 * u) * pow(q4, 0.7e1) + (0.15824e5 * pow(t, 0.3e1) + 0.29664e5 * t * t * u - 0.5504e4 * t * u * u - 0.12432e5 * pow(u, 0.3e1) + 0.31264e5 * t * t + 0.4544e4 * t * u - 0.23680e5 * u * u + 0.9472e4 * t - 0.11840e5 * u) * pow(q4, 0.6e1) + (-0.16064e5 * pow(t, 0.4e1) - 0.65120e5 * pow(t, 0.3e1) * u - 0.53376e5 * t * t * u * u + 0.14400e5 * t * pow(u, 0.3e1) + 0.14208e5 * pow(u, 0.4e1) - 0.58208e5 * pow(t, 0.3e1) - 0.106288e6 * t * t * u + 0.13952e5 * t * u * u + 0.37888e5 * pow(u, 0.3e1) - 0.54016e5 * t * t - 0.9344e4 * t * u + 0.35520e5 * u * u - 0.10048e5 * t + 0.11840e5 * u) * pow(q4, 0.5e1) + (0.8370e4 * pow(t, 0.5e1) + 0.58926e5 * pow(t, 0.4e1) * u + 0.110932e6 * pow(t, 0.3e1) * u * u + 0.55212e5 * t * t * pow(u, 0.3e1) - 0.14454e5 * t * pow(u, 0.4e1) - 0.9546e4 * pow(u, 0.5e1) + 0.48496e5 * pow(t, 0.4e1) + 0.184624e6 * pow(t, 0.3e1) * u + 0.150160e6 * t * t * u * u - 0.26688e5 * t * pow(u, 0.3e1) - 0.30784e5 * pow(u, 0.4e1) + 0.79280e5 * pow(t, 0.3e1) + 0.140880e6 * t * t * u - 0.7776e4 * t * u * u - 0.39072e5 * pow(u, 0.3e1) + 0.45504e5 * t * t + 0.10368e5 * t * u - 0.23680e5 * u * u + 0.5792e4 * t - 0.5920e4 * u) * pow(q4, 0.4e1) + (0.5920e4 * u * u - 0.1696e4 * t + 0.1184e4 * u - 0.2188e4 * pow(t, 0.6e1) + 0.14208e5 * pow(u, 0.3e1) + 0.18944e5 * pow(u, 0.4e1) + 0.13246e5 * pow(u, 0.5e1) - 0.81552e5 * t * t * u - 0.4192e4 * t * u * u - 0.6080e4 * t * u - 0.176384e6 * pow(t, 0.3e1) * u - 0.141696e6 * t * t * u * u - 0.129914e6 * pow(t, 0.4e1) * u - 0.227848e6 * pow(t, 0.3e1) * u * u + 0.9632e4 * t * pow(u, 0.3e1) - 0.114876e6 * t * t * pow(u, 0.3e1) + 0.16402e5 * t * pow(u, 0.4e1) - 0.26220e5 * pow(t, 0.5e1) * u - 0.84986e5 * pow(t, 0.4e1) * u * u - 0.100848e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.36456e5 * t * t * pow(u, 0.4e1) + 0.7020e4 * t * pow(u, 0.5e1) + 0.3774e4 * pow(u, 0.6e1) - 0.47472e5 * pow(t, 0.3e1) - 0.18496e5 * t * t - 0.49904e5 * pow(t, 0.4e1) - 0.21042e5 * pow(t, 0.5e1)) * pow(q4, 0.3e1) + (0.192e3 * t + 0.228e3 * pow(t, 0.7e1) + 0.4838e4 * pow(t, 0.6e1) - 0.592e3 * pow(u, 0.3e1) - 0.2368e4 * pow(u, 0.4e1) - 0.3774e4 * pow(u, 0.5e1) + 0.17296e5 * t * t * u + 0.3424e4 * t * u * u + 0.1472e4 * t * u + 0.60656e5 * pow(t, 0.3e1) * u + 0.46416e5 * t * t * u * u + 0.85154e5 * pow(t, 0.4e1) * u + 0.135040e6 * pow(t, 0.3e1) * u * u + 0.2432e4 * t * pow(u, 0.3e1) + 0.66884e5 * t * t * pow(u, 0.3e1) - 0.1894e4 * t * pow(u, 0.4e1) + 0.45008e5 * pow(t, 0.5e1) * u + 0.125088e6 * pow(t, 0.4e1) * u * u + 0.136332e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.50222e5 * t * t * pow(u, 0.4e1) - 0.3668e4 * t * pow(u, 0.5e1) + 0.15513e5 * t * t * pow(u, 0.5e1) - 0.1465e4 * t * pow(u, 0.6e1) + 0.5625e4 * pow(t, 0.6e1) * u + 0.30051e5 * pow(t, 0.5e1) * u * u + 0.60428e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.51938e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.2812e4 * pow(u, 0.6e1) - 0.814e3 * pow(u, 0.7e1) + 0.10816e5 * pow(t, 0.3e1) + 0.2848e4 * t * t + 0.19088e5 * pow(t, 0.4e1) + 0.16238e5 * pow(t, 0.5e1)) * q4 * q4 + (-0.487e3 * pow(t, 0.7e1) - 0.2808e4 * pow(t, 0.6e1) + 0.74e2 * pow(u, 0.5e1) + 0.96e2 * t * u * u - 0.3776e4 * pow(t, 0.3e1) * u - 0.1504e4 * t * t * u * u - 0.14750e5 * pow(t, 0.4e1) * u - 0.18728e5 * pow(t, 0.3e1) * u * u + 0.224e3 * t * pow(u, 0.3e1) - 0.7124e4 * t * t * pow(u, 0.3e1) + 0.174e3 * t * pow(u, 0.4e1) - 0.18892e5 * pow(t, 0.5e1) * u - 0.42618e5 * pow(t, 0.4e1) * u * u - 0.39744e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.13180e5 * t * t * pow(u, 0.4e1) + 0.108e3 * t * pow(u, 0.5e1) - 0.11443e5 * t * t * pow(u, 0.5e1) + 0.68e2 * t * pow(u, 0.6e1) - 0.3882e4 * t * t * pow(u, 0.6e1) + 0.6e1 * t * pow(u, 0.7e1) - 0.7651e4 * pow(t, 0.6e1) * u - 0.30390e5 * pow(t, 0.5e1) * u * u - 0.50928e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.38991e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.456e3 * pow(t, 0.7e1) * u - 0.4686e4 * pow(t, 0.6e1) * u * u - 0.14922e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.21282e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.14404e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.222e3 * pow(u, 0.6e1) + 0.222e3 * pow(u, 0.7e1) + 0.74e2 * pow(u, 0.8e1) - 0.240e3 * pow(t, 0.3e1) - 0.1616e4 * pow(t, 0.4e1) - 0.3678e4 * pow(t, 0.5e1)) * q4 + 0.429e3 * t * t * pow(u, 0.7e1) + 0.29e2 * t * pow(u, 0.8e1) - 0.63e2 * t * pow(u, 0.6e1) + 0.961e3 * t * t * pow(u, 0.6e1) + 0.30e2 * t * pow(u, 0.7e1) + 0.1738e4 * pow(t, 0.6e1) * u + 0.4519e4 * pow(t, 0.5e1) * u * u + 0.5508e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.3073e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.487e3 * pow(t, 0.7e1) * u + 0.2813e4 * pow(t, 0.6e1) * u * u + 0.6424e4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.7258e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.4091e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.48e2 * pow(t, 0.5e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - u - 0.1e1, -0.3e1) * q3 + 0.8e1 / 0.9e1 * (-0.113e3 * pow(t, 0.7e1) - 0.93e2 * pow(t, 0.8e1) - 0.72e2 * pow(t, 0.6e1) + 0.12e2 * pow(t, 0.4e1) * u + 0.90e2 * pow(t, 0.3e1) * u * u - 0.3648e4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.5363e4 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.4173e4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.1542e4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.181e3 * pow(t, 0.8e1) * u - 0.1272e4 * pow(t, 0.7e1) * u * u + 0.72e2 * t * t * pow(u, 0.3e1) + 0.12e2 * t * pow(u, 0.4e1) - 0.210e3 * pow(t, 0.5e1) * u + 0.36e2 * pow(t, 0.4e1) * u * u + 0.486e3 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.384e3 * t * t * pow(u, 0.4e1) + 0.72e2 * t * pow(u, 0.5e1) + 0.662e3 * t * t * pow(u, 0.5e1) + (-0.64e2 * t - 0.192e3 * u) * pow(q4, 0.9e1) + (-0.1856e4 * t * t + 0.1056e4 * t * u + 0.1152e4 * u * u + 0.320e3 * t + 0.1152e4 * u) * pow(q4, 0.8e1) + (0.7312e4 * pow(t, 0.3e1) + 0.9776e4 * t * t * u - 0.4480e4 * t * u * u - 0.2976e4 * pow(u, 0.3e1) + 0.9168e4 * t * t - 0.5008e4 * t * u - 0.5760e4 * u * u - 0.640e3 * t - 0.2880e4 * u) * pow(q4, 0.7e1) + (-0.11288e5 * pow(t, 0.4e1) - 0.36776e5 * pow(t, 0.3e1) * u - 0.23016e5 * t * t * u * u + 0.9064e4 * t * pow(u, 0.3e1) + 0.4320e4 * pow(u, 0.4e1) - 0.30584e5 * pow(t, 0.3e1) - 0.39712e5 * t * t * u + 0.17768e5 * t * u * u + 0.12000e5 * pow(u, 0.3e1) - 0.18448e5 * t * t + 0.9520e4 * t * u + 0.11520e5 * u * u + 0.640e3 * t + 0.3840e4 * u) * pow(q4, 0.6e1) + (0.9016e4 * pow(t, 0.5e1) + 0.50364e5 * pow(t, 0.4e1) * u + 0.79416e5 * pow(t, 0.3e1) * u * u + 0.31872e5 * t * t * pow(u, 0.3e1) - 0.10368e5 * t * pow(u, 0.4e1) - 0.3852e4 * pow(u, 0.5e1) + 0.39912e5 * pow(t, 0.4e1) + 0.123008e6 * pow(t, 0.3e1) * u + 0.74408e5 * t * t * u * u - 0.28640e5 * t * pow(u, 0.3e1) - 0.13440e5 * pow(u, 0.4e1) + 0.50084e5 * pow(t, 0.3e1) + 0.62796e5 * t * t * u - 0.27032e5 * t * u * u - 0.18240e5 * pow(u, 0.3e1) + 0.19232e5 * t * t - 0.9120e4 * t * u - 0.11520e5 * u * u - 0.320e3 * t - 0.2880e4 * u) * pow(q4, 0.5e1) + (0.5760e4 * u * u + 0.64e2 * t + 0.1152e4 * u - 0.3950e4 * pow(t, 0.6e1) + 0.12480e5 * pow(u, 0.3e1) + 0.14400e5 * pow(u, 0.4e1) + 0.8688e4 * pow(u, 0.5e1) - 0.47792e5 * t * t * u + 0.19408e5 * t * u * u + 0.4480e4 * t * u - 0.151164e6 * pow(t, 0.3e1) * u - 0.87072e5 * t * t * u * u - 0.137184e6 * pow(t, 0.4e1) * u - 0.203228e6 * pow(t, 0.3e1) * u * u + 0.32848e5 * t * pow(u, 0.3e1) - 0.77848e5 * t * t * pow(u, 0.3e1) + 0.24920e5 * t * pow(u, 0.4e1) - 0.34720e5 * pow(t, 0.5e1) * u - 0.92980e5 * pow(t, 0.4e1) * u * u - 0.95448e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.28446e5 * t * t * pow(u, 0.4e1) + 0.7080e4 * t * pow(u, 0.5e1) + 0.2160e4 * pow(u, 0.6e1) - 0.39904e5 * pow(t, 0.3e1) - 0.10848e5 * t * t - 0.52380e5 * pow(t, 0.4e1) - 0.26868e5 * pow(t, 0.5e1)) * pow(q4, 0.4e1) + (-0.1152e4 * u * u - 0.192e3 * u + 0.902e3 * pow(t, 0.7e1) + 0.10046e5 * pow(t, 0.6e1) - 0.3360e4 * pow(u, 0.3e1) - 0.5760e4 * pow(u, 0.4e1) - 0.5832e4 * pow(u, 0.5e1) + 0.17080e5 * t * t * u - 0.6512e4 * t * u * u - 0.976e3 * t * u + 0.80708e5 * pow(t, 0.3e1) * u + 0.42240e5 * t * t * u * u + 0.127040e6 * pow(t, 0.4e1) * u + 0.172870e6 * pow(t, 0.3e1) * u * u - 0.16704e5 * t * pow(u, 0.3e1) + 0.59944e5 * t * t * pow(u, 0.3e1) - 0.20596e5 * t * pow(u, 0.4e1) + 0.76072e5 * pow(t, 0.5e1) * u + 0.184020e6 * pow(t, 0.4e1) * u * u + 0.174948e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.48166e5 * t * t * pow(u, 0.4e1) - 0.12308e5 * t * pow(u, 0.5e1) + 0.16683e5 * t * t * pow(u, 0.5e1) - 0.2855e4 * t * pow(u, 0.6e1) + 0.12775e5 * pow(t, 0.6e1) * u + 0.52785e5 * pow(t, 0.5e1) * u * u + 0.90950e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.68832e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.3216e4 * pow(u, 0.6e1) - 0.744e3 * pow(u, 0.7e1) + 0.15368e5 * pow(t, 0.3e1) + 0.3088e4 * t * t + 0.30548e5 * pow(t, 0.4e1) + 0.27502e5 * pow(t, 0.5e1)) * pow(q4, 0.3e1) + (-0.2037e4 * pow(t, 0.7e1) - 0.84e2 * pow(t, 0.8e1) - 0.7882e4 * pow(t, 0.6e1) + 0.96e2 * pow(u, 0.3e1) + 0.480e3 * pow(u, 0.4e1) + 0.1008e4 * pow(u, 0.5e1) - 0.2064e4 * t * t * u + 0.968e3 * t * u * u + 0.48e2 * t * u - 0.16076e5 * pow(t, 0.3e1) * u - 0.5816e4 * t * t * u * u - 0.43972e5 * pow(t, 0.4e1) * u - 0.51134e5 * pow(t, 0.3e1) * u * u + 0.4104e4 * t * pow(u, 0.3e1) - 0.11968e5 * t * t * pow(u, 0.3e1) + 0.7596e4 * t * pow(u, 0.4e1) - 0.50578e5 * pow(t, 0.5e1) * u - 0.107436e6 * pow(t, 0.4e1) * u * u - 0.89310e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.18642e5 * t * t * pow(u, 0.4e1) + 0.7208e4 * t * pow(u, 0.5e1) - 0.16920e5 * t * t * pow(u, 0.5e1) + 0.3417e4 * t * pow(u, 0.6e1) - 0.6226e4 * t * t * pow(u, 0.6e1) + 0.621e3 * t * pow(u, 0.7e1) - 0.22400e5 * pow(t, 0.6e1) * u - 0.78233e5 * pow(t, 0.5e1) * u * u - 0.119424e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.81267e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.2361e4 * pow(t, 0.7e1) * u - 0.15210e5 * pow(t, 0.6e1) * u * u - 0.39625e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.49680e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.29691e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.1104e4 * pow(u, 0.6e1) + 0.624e3 * pow(u, 0.7e1) + 0.144e3 * pow(u, 0.8e1) - 0.2312e4 * pow(t, 0.3e1) - 0.336e3 * t * t - 0.7164e4 * pow(t, 0.4e1) - 0.10866e5 * pow(t, 0.5e1)) * q4 * q4 + (0.1216e4 * pow(t, 0.7e1) + 0.181e3 * pow(t, 0.8e1) + 0.1922e4 * pow(t, 0.6e1) - 0.12e2 * pow(u, 0.5e1) - 0.12e2 * pow(u, 0.9e1) - 0.84e2 * t * t * u - 0.120e3 * t * u * u + 0.300e3 * pow(t, 0.3e1) * u - 0.744e3 * t * t * u * u + 0.3740e4 * pow(t, 0.4e1) * u + 0.1986e4 * pow(t, 0.3e1) * u * u + 0.7895e4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.14695e5 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.14338e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.7070e4 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.168e3 * pow(t, 0.8e1) * u + 0.2016e4 * pow(t, 0.7e1) * u * u - 0.672e3 * t * pow(u, 0.3e1) - 0.2072e4 * t * t * pow(u, 0.3e1) - 0.1564e4 * t * pow(u, 0.4e1) + 0.9820e4 * pow(t, 0.5e1) * u + 0.16360e5 * pow(t, 0.4e1) * u * u + 0.8492e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1910e4 * t * t * pow(u, 0.4e1) - 0.1988e4 * t * pow(u, 0.5e1) + 0.1043e4 * t * t * pow(u, 0.5e1) + 0.1339e4 * t * t * pow(u, 0.7e1) - 0.53e2 * t * pow(u, 0.8e1) - 0.1425e4 * t * pow(u, 0.6e1) + 0.2880e4 * t * t * pow(u, 0.6e1) - 0.502e3 * t * pow(u, 0.7e1) + 0.9915e4 * pow(t, 0.6e1) * u + 0.28241e5 * pow(t, 0.5e1) * u * u + 0.35518e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.18372e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.3309e4 * pow(t, 0.7e1) * u + 0.16002e5 * pow(t, 0.6e1) * u * u + 0.34392e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.36849e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.18665e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.48e2 * pow(u, 0.6e1) - 0.72e2 * pow(u, 0.7e1) - 0.48e2 * pow(u, 0.8e1) + 0.36e2 * pow(t, 0.3e1) + 0.372e3 * pow(t, 0.4e1) + 0.1234e4 * pow(t, 0.5e1)) * q4 - t * pow(u, 0.9e1) - 0.142e3 * t * t * pow(u, 0.7e1) + 0.33e2 * t * pow(u, 0.8e1) + 0.143e3 * t * pow(u, 0.6e1) + 0.334e3 * t * t * pow(u, 0.6e1) - 0.84e2 * pow(t, 0.8e1) * u * u - 0.557e3 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.1510e4 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.2151e4 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.1704e4 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.715e3 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.126e3 * t * t * pow(u, 0.8e1) + 0.117e3 * t * pow(u, 0.7e1) - 0.722e3 * pow(t, 0.6e1) * u - 0.1417e4 * pow(t, 0.5e1) * u * u - 0.744e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.583e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.812e3 * pow(t, 0.7e1) * u - 0.2764e4 * pow(t, 0.6e1) * u * u - 0.4421e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.3233e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.640e3 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.18e2 * pow(t, 0.5e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - u - 0.1e1, -0.3e1));
}
#include <math.h>

double GstarVVCoeffsC6e1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.8e1 / 0.27e2 * (0.2592e4 * t * pow(q4, 0.6e1) + (-0.5184e4 * t * t - 0.10368e5 * t * u - 0.10368e5 * t) * pow(q4, 0.5e1) + (0.3888e4 * pow(t, 0.3e1) + 0.18144e5 * t * t * u + 0.16848e5 * t * u * u + 0.15552e5 * t * t + 0.31104e5 * t * u + 0.15552e5 * t) * pow(q4, 0.4e1) + (-0.1296e4 * pow(t, 0.4e1) - 0.11664e5 * pow(t, 0.3e1) * u - 0.24624e5 * t * t * u * u - 0.14256e5 * t * pow(u, 0.3e1) - 0.9072e4 * pow(t, 0.3e1) - 0.38880e5 * t * t * u - 0.34992e5 * t * u * u - 0.15552e5 * t * t - 0.31104e5 * t * u - 0.10368e5 * t) * pow(q4, 0.3e1) + (0.162e3 * pow(t, 0.5e1) + 0.3240e4 * pow(t, 0.4e1) * u + 0.12636e5 * pow(t, 0.3e1) * u * u + 0.16200e5 * t * t * pow(u, 0.3e1) + 0.6642e4 * t * pow(u, 0.4e1) + 0.2592e4 * pow(t, 0.4e1) + 0.18144e5 * pow(t, 0.3e1) * u + 0.33696e5 * t * t * u * u + 0.18144e5 * t * pow(u, 0.3e1) + 0.6480e4 * pow(t, 0.3e1) + 0.23328e5 * t * t * u + 0.19440e5 * t * u * u + 0.5184e4 * t * t + 0.10368e5 * t * u + 0.2592e4 * t) * q4 * q4 + (-0.324e3 * pow(t, 0.5e1) * u - 0.2592e4 * pow(t, 0.4e1) * u * u - 0.5832e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.5184e4 * t * t * pow(u, 0.4e1) - 0.1620e4 * t * pow(u, 0.5e1) - 0.324e3 * pow(t, 0.5e1) - 0.3888e4 * pow(t, 0.4e1) * u - 0.11016e5 * pow(t, 0.3e1) * u * u - 0.11664e5 * t * t * pow(u, 0.3e1) - 0.4212e4 * t * pow(u, 0.4e1) - 0.1296e4 * pow(t, 0.4e1) - 0.6480e4 * pow(t, 0.3e1) * u - 0.9072e4 * t * t * u * u - 0.3888e4 * t * pow(u, 0.3e1) - 0.1296e4 * pow(t, 0.3e1) - 0.2592e4 * t * t * u - 0.1296e4 * t * u * u) * q4 + 0.162e3 * pow(t, 0.5e1) * u * u + 0.648e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.972e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.648e3 * t * t * pow(u, 0.5e1) + 0.162e3 * t * pow(u, 0.6e1) + 0.324e3 * pow(t, 0.5e1) * u + 0.1296e4 * pow(t, 0.4e1) * u * u + 0.1944e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.1296e4 * t * t * pow(u, 0.4e1) + 0.324e3 * t * pow(u, 0.5e1) + 0.162e3 * pow(t, 0.5e1) + 0.648e3 * pow(t, 0.4e1) * u + 0.972e3 * pow(t, 0.3e1) * u * u + 0.648e3 * t * t * pow(u, 0.3e1) + 0.162e3 * t * pow(u, 0.4e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - u - 0.1e1, -0.3e1) * pow(q3, 0.3e1) - 0.8e1 / 0.27e2 * (-0.324e3 * pow(t, 0.6e1) + (0.4448e4 * t - 0.6048e4 * u) * pow(q4, 0.7e1) + (-0.14080e5 * t * t - 0.11008e5 * t * u + 0.24192e5 * u * u - 0.20512e5 * t + 0.24192e5 * u) * pow(q4, 0.6e1) + (0.17040e5 * pow(t, 0.3e1) + 0.53424e5 * t * t * u + 0.7824e4 * t * u * u - 0.39312e5 * pow(u, 0.3e1) + 0.52864e5 * t * t + 0.49216e5 * t * u - 0.72576e5 * u * u + 0.37568e5 * t - 0.36288e5 * u) * pow(q4, 0.5e1) + (-0.10000e5 * pow(t, 0.4e1) - 0.61248e5 * pow(t, 0.3e1) * u - 0.85920e5 * t * t * u * u - 0.1536e4 * t * pow(u, 0.3e1) + 0.33264e5 * pow(u, 0.4e1) - 0.50752e5 * pow(t, 0.3e1) - 0.158672e6 * t * t * u - 0.50752e5 * t * u * u + 0.81648e5 * pow(u, 0.3e1) - 0.74112e5 * t * t - 0.81600e5 * t * u + 0.72576e5 * u * u - 0.34112e5 * t + 0.24192e5 * u) * pow(q4, 0.4e1) + (0.2870e4 * pow(t, 0.5e1) + 0.31166e5 * pow(t, 0.4e1) * u + 0.87276e5 * pow(t, 0.3e1) * u * u + 0.77292e5 * t * t * pow(u, 0.3e1) + 0.2814e4 * t * pow(u, 0.4e1) - 0.15498e5 * pow(u, 0.5e1) + 0.23952e5 * pow(t, 0.4e1) + 0.133680e6 * pow(t, 0.3e1) * u + 0.190992e6 * t * t * u * u + 0.39184e5 * t * pow(u, 0.3e1) - 0.42336e5 * pow(u, 0.4e1) + 0.51744e5 * pow(t, 0.3e1) + 0.159792e6 * t * t * u + 0.79392e5 * t * u * u - 0.45360e5 * pow(u, 0.3e1) + 0.45952e5 * t * t + 0.59584e5 * t * u - 0.24192e5 * u * u + 0.15328e5 * t - 0.6048e4 * u) * pow(q4, 0.3e1) + (-0.2720e4 * t - 0.324e3 * pow(t, 0.6e1) + 0.3024e4 * pow(u, 0.3e1) + 0.9072e4 * pow(u, 0.4e1) + 0.9828e4 * pow(u, 0.5e1) - 0.57264e5 * t * t * u - 0.37824e5 * t * u * u - 0.16192e5 * t * u - 0.87072e5 * pow(t, 0.3e1) * u - 0.122496e6 * t * t * u * u - 0.50916e5 * pow(t, 0.4e1) * u - 0.127668e6 * pow(t, 0.3e1) * u * u - 0.44384e5 * t * pow(u, 0.3e1) - 0.116656e6 * t * t * pow(u, 0.3e1) - 0.24166e5 * t * pow(u, 0.4e1) - 0.7368e4 * pow(t, 0.5e1) * u - 0.35604e5 * pow(t, 0.4e1) * u * u - 0.62256e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.41772e5 * t * t * pow(u, 0.4e1) - 0.4296e4 * t * pow(u, 0.5e1) + 0.3780e4 * pow(u, 0.6e1) - 0.19392e5 * pow(t, 0.3e1) - 0.10624e5 * t * t - 0.17904e5 * pow(t, 0.4e1) - 0.5910e4 * pow(t, 0.5e1)) * q4 * q4 + (0.648e3 * pow(t, 0.6e1) - 0.378e3 * pow(u, 0.5e1) + 0.2720e4 * t * t * u + 0.1360e4 * t * u * u + 0.14640e5 * pow(t, 0.3e1) * u + 0.17424e5 * t * t * u * u + 0.20430e5 * pow(t, 0.4e1) * u + 0.43140e5 * pow(t, 0.3e1) * u * u + 0.6736e4 * t * pow(u, 0.3e1) + 0.37452e5 * t * t * pow(u, 0.3e1) + 0.11154e5 * t * pow(u, 0.4e1) + 0.9336e4 * pow(t, 0.5e1) * u + 0.34188e5 * pow(t, 0.4e1) * u * u + 0.52336e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.35456e5 * t * t * pow(u, 0.4e1) + 0.7864e4 * t * pow(u, 0.5e1) + 0.12708e5 * t * t * pow(u, 0.5e1) + 0.2086e4 * t * pow(u, 0.6e1) + 0.648e3 * pow(t, 0.6e1) * u + 0.6126e4 * pow(t, 0.5e1) * u * u + 0.17710e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.22476e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.756e3 * pow(u, 0.6e1) - 0.378e3 * pow(u, 0.7e1) + 0.1360e4 * pow(t, 0.3e1) + 0.3952e4 * pow(t, 0.4e1) + 0.3210e4 * pow(t, 0.5e1)) * q4 - 0.680e3 * pow(t, 0.4e1) * u - 0.1020e4 * pow(t, 0.3e1) * u * u - 0.680e3 * t * t * pow(u, 0.3e1) - 0.170e3 * t * pow(u, 0.4e1) - 0.1968e4 * pow(t, 0.5e1) * u - 0.4632e4 * pow(t, 0.4e1) * u * u - 0.5328e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.3012e4 * t * t * pow(u, 0.4e1) - 0.672e3 * t * pow(u, 0.5e1) - 0.3984e4 * t * t * pow(u, 0.5e1) - 0.834e3 * t * pow(u, 0.6e1) - 0.1652e4 * t * t * pow(u, 0.6e1) - 0.332e3 * t * pow(u, 0.7e1) - 0.648e3 * pow(t, 0.6e1) * u - 0.3426e4 * pow(t, 0.5e1) * u * u - 0.7224e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.7596e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.324e3 * pow(t, 0.6e1) * u * u - 0.1628e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.3272e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.3288e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.170e3 * pow(t, 0.5e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - u - 0.1e1, -0.3e1) * q3 * q3 - 0.8e1 / 0.27e2 * (0.345e3 * pow(t, 0.7e1) + 0.340e3 * pow(t, 0.6e1) + (0.2176e4 * t - 0.5984e4 * u) * pow(q4, 0.8e1) + (-0.12000e5 * t * t + 0.6240e4 * t * u + 0.29920e5 * u * u - 0.10592e5 * t + 0.29920e5 * u) * pow(q4, 0.7e1) + (0.25952e5 * pow(t, 0.3e1) + 0.40752e5 * t * t * u - 0.46736e5 * t * u * u - 0.62832e5 * pow(u, 0.3e1) + 0.51520e5 * t * t - 0.20320e5 * t * u - 0.119680e6 * u * u + 0.22240e5 * t - 0.59840e5 * u) * pow(q4, 0.6e1) + (-0.26840e5 * pow(t, 0.4e1) - 0.105848e6 * pow(t, 0.3e1) * u - 0.62952e5 * t * t * u * u + 0.86904e5 * t * pow(u, 0.3e1) + 0.71808e5 * pow(u, 0.4e1) - 0.93896e5 * pow(t, 0.3e1) - 0.156856e6 * t * t * u + 0.119552e6 * t * u * u + 0.191488e6 * pow(u, 0.3e1) - 0.89248e5 * t * t + 0.11200e5 * t * u + 0.179520e6 * u * u - 0.26560e5 * t + 0.59840e5 * u) * pow(q4, 0.5e1) + (0.14292e5 * pow(t, 0.5e1) + 0.101082e6 * pow(t, 0.4e1) * u + 0.186376e6 * pow(t, 0.3e1) * u * u + 0.69468e5 * t * t * pow(u, 0.3e1) - 0.74412e5 * t * pow(u, 0.4e1) - 0.48246e5 * pow(u, 0.5e1) + 0.78472e5 * pow(t, 0.4e1) + 0.306472e6 * pow(t, 0.3e1) * u + 0.227152e6 * t * t * u * u - 0.146496e6 * t * pow(u, 0.3e1) - 0.155584e6 * pow(u, 0.4e1) + 0.127712e6 * pow(t, 0.3e1) + 0.236496e6 * t * t * u - 0.66528e5 * t * u * u - 0.197472e6 * pow(u, 0.3e1) + 0.78624e5 * t * t + 0.25920e5 * t * u - 0.119680e6 * u * u + 0.19520e5 * t - 0.29920e5 * u) * pow(q4, 0.4e1) + (0.29920e5 * u * u - 0.8416e4 * t + 0.5984e4 * u - 0.3796e4 * pow(t, 0.6e1) + 0.71808e5 * pow(u, 0.3e1) + 0.95744e5 * pow(u, 0.4e1) + 0.66946e5 * pow(u, 0.5e1) - 0.166368e6 * t * t * u - 0.38848e5 * t * u * u - 0.35360e5 * t * u - 0.308264e6 * pow(t, 0.3e1) * u - 0.284256e6 * t * t * u * u - 0.220772e6 * pow(t, 0.4e1) * u - 0.409978e6 * pow(t, 0.3e1) * u * u + 0.22064e5 * t * pow(u, 0.3e1) - 0.216270e6 * t * t * pow(u, 0.3e1) + 0.64018e5 * t * pow(u, 0.4e1) - 0.46092e5 * pow(t, 0.5e1) * u - 0.152462e6 * pow(t, 0.4e1) * u * u - 0.184584e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.62448e5 * t * t * pow(u, 0.4e1) + 0.30276e5 * t * pow(u, 0.5e1) + 0.19074e5 * pow(u, 0.6e1) - 0.78864e5 * pow(t, 0.3e1) - 0.35584e5 * t * t - 0.78968e5 * pow(t, 0.4e1) - 0.33768e5 * pow(t, 0.5e1)) * pow(q4, 0.3e1) + (0.1632e4 * t + 0.399e3 * pow(t, 0.7e1) + 0.7622e4 * pow(t, 0.6e1) - 0.2992e4 * pow(u, 0.3e1) - 0.11968e5 * pow(u, 0.4e1) - 0.19074e5 * pow(u, 0.5e1) + 0.46912e5 * t * t * u + 0.32752e5 * t * u * u + 0.12320e5 * t * u + 0.119672e6 * pow(t, 0.3e1) * u + 0.129360e6 * t * t * u * u + 0.147824e6 * pow(t, 0.4e1) * u + 0.273574e6 * pow(t, 0.3e1) * u * u + 0.40064e5 * t * pow(u, 0.3e1) + 0.181898e6 * t * t * pow(u, 0.3e1) + 0.19466e5 * t * pow(u, 0.4e1) + 0.75962e5 * pow(t, 0.5e1) * u + 0.229506e6 * pow(t, 0.4e1) * u * u + 0.280890e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.130316e6 * t * t * pow(u, 0.4e1) - 0.2276e4 * t * pow(u, 0.5e1) + 0.38274e5 * t * t * pow(u, 0.5e1) - 0.3658e4 * t * pow(u, 0.6e1) + 0.9954e4 * pow(t, 0.6e1) * u + 0.54936e5 * pow(t, 0.5e1) * u * u + 0.116006e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.108443e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.14212e5 * pow(u, 0.6e1) - 0.4114e4 * pow(u, 0.7e1) + 0.20416e5 * pow(t, 0.3e1) + 0.6688e4 * t * t + 0.30872e5 * pow(t, 0.4e1) + 0.25016e5 * pow(t, 0.5e1)) * q4 * q4 + (-0.754e3 * pow(t, 0.7e1) - 0.4086e4 * pow(t, 0.6e1) + 0.374e3 * pow(u, 0.5e1) - 0.936e3 * t * t * u - 0.192e3 * t * u * u - 0.12032e5 * pow(t, 0.3e1) * u - 0.9304e4 * t * t * u * u - 0.29612e5 * pow(t, 0.4e1) * u - 0.49790e5 * pow(t, 0.3e1) * u * u - 0.2536e4 * t * pow(u, 0.3e1) - 0.31850e5 * t * t * pow(u, 0.3e1) - 0.7098e4 * t * pow(u, 0.4e1) - 0.32128e5 * pow(t, 0.5e1) * u - 0.85350e5 * pow(t, 0.4e1) * u * u - 0.99396e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.50878e5 * t * t * pow(u, 0.4e1) - 0.8244e4 * t * pow(u, 0.5e1) - 0.40285e5 * t * t * pow(u, 0.5e1) - 0.4546e4 * t * pow(u, 0.6e1) - 0.12828e5 * t * t * pow(u, 0.6e1) - 0.1056e4 * t * pow(u, 0.7e1) - 0.12571e5 * pow(t, 0.6e1) * u - 0.55104e5 * pow(t, 0.5e1) * u * u - 0.104298e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.95628e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.798e3 * pow(t, 0.7e1) * u - 0.8520e4 * pow(t, 0.6e1) * u * u - 0.28764e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.44754e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.35110e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.1122e4 * pow(u, 0.6e1) + 0.1122e4 * pow(u, 0.7e1) + 0.374e3 * pow(u, 0.8e1) - 0.1320e4 * pow(t, 0.3e1) - 0.3536e4 * pow(t, 0.4e1) - 0.5928e4 * pow(t, 0.5e1)) * q4 + 0.486e3 * pow(t, 0.4e1) * u + 0.234e3 * pow(t, 0.3e1) * u * u + 0.2362e4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.5628e4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.6968e4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.4771e4 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.399e3 * pow(t, 0.7e1) * u * u - 0.78e2 * t * t * pow(u, 0.3e1) - 0.54e2 * t * pow(u, 0.4e1) + 0.2130e4 * pow(t, 0.5e1) * u + 0.3938e4 * pow(t, 0.4e1) * u * u + 0.2866e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.738e3 * t * t * pow(u, 0.4e1) + 0.20e2 * t * pow(u, 0.5e1) + 0.3505e4 * t * t * pow(u, 0.5e1) + 0.1734e4 * t * t * pow(u, 0.7e1) + 0.266e3 * t * pow(u, 0.8e1) + 0.468e3 * t * pow(u, 0.6e1) + 0.4423e4 * t * t * pow(u, 0.6e1) + 0.660e3 * t * pow(u, 0.7e1) + 0.2887e4 * pow(t, 0.6e1) * u + 0.9124e4 * pow(t, 0.5e1) * u * u + 0.13536e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.9991e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.754e3 * pow(t, 0.7e1) * u + 0.4949e4 * pow(t, 0.6e1) * u * u + 0.12910e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.17092e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.12140e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.228e3 * pow(t, 0.5e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - u - 0.1e1, -0.3e1) * q3 - 0.8e1 / 0.27e2 * ((-0.448e3 * t - 0.2208e4 * u) * pow(q4, 0.9e1) + (-0.3056e4 * t * t + 0.9552e4 * t * u + 0.13248e5 * u * u + 0.3104e4 * t + 0.13248e5 * u) * pow(q4, 0.8e1) + (0.13384e5 * pow(t, 0.3e1) + 0.9104e4 * t * t * u - 0.41656e5 * t * u * u - 0.34224e5 * pow(u, 0.3e1) + 0.13416e5 * t * t - 0.48952e5 * t * u - 0.66240e5 * u * u - 0.8800e4 * t - 0.33120e5 * u) * pow(q4, 0.7e1) + (-0.22172e5 * pow(t, 0.4e1) - 0.64940e5 * pow(t, 0.3e1) * u - 0.11748e5 * t * t * u * u + 0.83068e5 * t * pow(u, 0.3e1) + 0.49680e5 * pow(u, 0.4e1) - 0.53708e5 * pow(t, 0.3e1) - 0.33544e5 * t * t * u + 0.167828e6 * t * u * u + 0.138000e6 * pow(u, 0.3e1) - 0.24088e5 * t * t + 0.99400e5 * t * u + 0.132480e6 * u * u + 0.13120e5 * t + 0.44160e5 * u) * pow(q4, 0.6e1) + (0.19318e5 * pow(t, 0.5e1) + 0.100818e6 * pow(t, 0.4e1) * u + 0.144144e6 * pow(t, 0.3e1) * u * u + 0.17688e5 * t * t * pow(u, 0.3e1) - 0.90774e5 * t * pow(u, 0.4e1) - 0.44298e5 * pow(u, 0.5e1) + 0.76812e5 * pow(t, 0.4e1) + 0.217016e6 * pow(t, 0.3e1) * u + 0.46340e5 * t * t * u * u - 0.253688e6 * t * pow(u, 0.3e1) - 0.154560e6 * pow(u, 0.4e1) + 0.84854e5 * pow(t, 0.3e1) + 0.54210e5 * t * t * u - 0.251252e6 * t * u * u - 0.209760e6 * pow(u, 0.3e1) + 0.23312e5 * t * t - 0.99120e5 * t * u - 0.132480e6 * u * u - 0.10880e5 * t - 0.33120e5 * u) * pow(q4, 0.5e1) + (0.66240e5 * u * u + 0.4768e4 * t + 0.13248e5 * u - 0.9290e4 * pow(t, 0.6e1) + 0.143520e6 * pow(u, 0.3e1) + 0.165600e6 * pow(u, 0.4e1) + 0.99912e5 * pow(u, 0.5e1) - 0.52088e5 * t * t * u + 0.164008e6 * t * u * u + 0.47200e5 * t * u - 0.274410e6 * pow(t, 0.3e1) * u - 0.83616e5 * t * t * u * u - 0.276702e6 * pow(t, 0.4e1) * u - 0.388910e6 * pow(t, 0.3e1) * u * u + 0.261400e6 * t * pow(u, 0.3e1) - 0.75658e5 * t * t * pow(u, 0.3e1) + 0.196256e6 * t * pow(u, 0.4e1) - 0.76216e5 * pow(t, 0.5e1) * u - 0.194524e6 * pow(t, 0.4e1) * u * u - 0.190416e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.32370e5 * t * t * pow(u, 0.4e1) + 0.56472e5 * t * pow(u, 0.5e1) + 0.24840e5 * pow(u, 0.6e1) - 0.66496e5 * pow(t, 0.3e1) - 0.13728e5 * t * t - 0.98946e5 * pow(t, 0.4e1) - 0.55362e5 * pow(t, 0.5e1)) * pow(q4, 0.4e1) + (-0.13248e5 * u * u - 0.864e3 * t - 0.2208e4 * u + 0.2327e4 * pow(t, 0.7e1) + 0.21614e5 * pow(t, 0.6e1) - 0.38640e5 * pow(u, 0.3e1) - 0.66240e5 * pow(u, 0.4e1) - 0.67068e5 * pow(u, 0.5e1) + 0.29884e5 * t * t * u - 0.37952e5 * t * u * u - 0.7192e4 * t * u + 0.159974e6 * pow(t, 0.3e1) * u + 0.73200e5 * t * t * u * u + 0.262232e6 * pow(t, 0.4e1) * u + 0.366871e6 * pow(t, 0.3e1) * u * u - 0.96912e5 * t * pow(u, 0.3e1) + 0.107056e6 * t * t * pow(u, 0.3e1) - 0.123058e6 * t * pow(u, 0.4e1) + 0.164404e6 * pow(t, 0.5e1) * u + 0.400902e6 * pow(t, 0.4e1) * u * u + 0.389526e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.94540e5 * t * t * pow(u, 0.4e1) - 0.76418e5 * t * pow(u, 0.5e1) + 0.36618e5 * t * t * pow(u, 0.5e1) - 0.18554e5 * t * pow(u, 0.6e1) + 0.30574e5 * pow(t, 0.6e1) * u + 0.120096e6 * pow(t, 0.5e1) * u * u + 0.204092e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.158859e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.36984e5 * pow(u, 0.6e1) - 0.8556e4 * pow(u, 0.7e1) + 0.26684e5 * pow(t, 0.3e1) + 0.5128e4 * t * t + 0.57686e5 * pow(t, 0.4e1) + 0.54103e5 * pow(t, 0.5e1)) * pow(q4, 0.3e1) + (-0.4539e4 * pow(t, 0.7e1) - 0.237e3 * pow(t, 0.8e1) - 0.15628e5 * pow(t, 0.6e1) + 0.1104e4 * pow(u, 0.3e1) + 0.5520e4 * pow(u, 0.4e1) + 0.11592e5 * pow(u, 0.5e1) - 0.7248e4 * t * t * u - 0.316e3 * t * u * u - 0.888e3 * t * u - 0.40082e5 * pow(t, 0.3e1) * u - 0.22172e5 * t * t * u * u - 0.97690e5 * pow(t, 0.4e1) * u - 0.132695e6 * pow(t, 0.3e1) * u * u + 0.9036e4 * t * pow(u, 0.3e1) - 0.46120e5 * t * t * pow(u, 0.3e1) + 0.22626e5 * t * pow(u, 0.4e1) - 0.108661e6 * pow(t, 0.5e1) * u - 0.251886e6 * pow(t, 0.4e1) * u * u - 0.238143e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.69762e5 * t * t * pow(u, 0.4e1) + 0.23600e5 * t * pow(u, 0.5e1) - 0.61569e5 * t * t * pow(u, 0.5e1) + 0.11436e5 * t * pow(u, 0.6e1) - 0.22198e5 * t * t * pow(u, 0.6e1) + 0.1998e4 * t * pow(u, 0.7e1) - 0.50231e5 * pow(t, 0.6e1) * u - 0.180188e6 * pow(t, 0.5e1) * u * u - 0.289560e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.220893e6 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.6141e4 * pow(t, 0.7e1) * u - 0.37260e5 * pow(t, 0.6e1) * u * u - 0.94720e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.122265e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.81441e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.12696e5 * pow(u, 0.6e1) + 0.7176e4 * pow(u, 0.7e1) + 0.1656e4 * pow(u, 0.8e1) - 0.5060e4 * pow(t, 0.3e1) - 0.984e3 * t * t - 0.14922e5 * pow(t, 0.4e1) - 0.20757e5 * pow(t, 0.5e1)) * q4 * q4 + (0.2311e4 * pow(t, 0.7e1) + 0.430e3 * pow(t, 0.8e1) + 0.3734e4 * pow(t, 0.6e1) - 0.138e3 * pow(u, 0.5e1) - 0.138e3 * pow(u, 0.9e1) - 0.318e3 * t * t * u - 0.660e3 * t * u * u + 0.2442e4 * pow(t, 0.3e1) * u - 0.2004e4 * t * t * u * u + 0.11402e5 * pow(t, 0.4e1) * u + 0.10257e5 * pow(t, 0.3e1) * u * u + 0.19958e5 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.37426e5 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.39292e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.23201e5 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.474e3 * pow(t, 0.8e1) * u + 0.5301e4 * pow(t, 0.7e1) * u * u - 0.2904e4 * t * pow(u, 0.3e1) - 0.3344e4 * t * t * pow(u, 0.3e1) - 0.5152e4 * t * pow(u, 0.4e1) + 0.22750e5 * pow(t, 0.5e1) * u + 0.46012e5 * pow(t, 0.4e1) * u * u + 0.34118e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.3208e4 * t * t * pow(u, 0.4e1) - 0.4466e4 * t * pow(u, 0.5e1) + 0.16454e5 * t * t * pow(u, 0.5e1) + 0.6790e4 * t * t * pow(u, 0.7e1) + 0.448e3 * t * pow(u, 0.8e1) - 0.1344e4 * t * pow(u, 0.6e1) + 0.18378e5 * t * t * pow(u, 0.6e1) + 0.662e3 * t * pow(u, 0.7e1) + 0.21408e5 * pow(t, 0.6e1) * u + 0.68141e5 * pow(t, 0.5e1) * u * u + 0.98704e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.66630e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.7593e4 * pow(t, 0.7e1) * u + 0.37836e5 * pow(t, 0.6e1) * u * u + 0.85998e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.102108e6 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.63947e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.552e3 * pow(u, 0.6e1) - 0.828e3 * pow(u, 0.7e1) - 0.552e3 * pow(u, 0.8e1) + 0.342e3 * pow(t, 0.3e1) + 0.1542e4 * pow(t, 0.4e1) + 0.2815e4 * pow(t, 0.5e1)) * q4 - 0.179e3 * pow(t, 0.7e1) - 0.183e3 * pow(t, 0.8e1) - 0.270e3 * pow(t, 0.6e1) - 0.60e2 * pow(t, 0.4e1) * u + 0.333e3 * pow(t, 0.3e1) * u * u - 0.9219e4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.14852e5 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.13560e5 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.6978e4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.430e3 * pow(t, 0.8e1) * u - 0.3054e4 * pow(t, 0.7e1) * u * u + 0.378e3 * t * t * pow(u, 0.3e1) + 0.102e3 * t * pow(u, 0.4e1) - 0.1029e4 * pow(t, 0.5e1) * u - 0.504e3 * pow(t, 0.4e1) * u * u + 0.1395e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.1536e4 * t * t * pow(u, 0.4e1) + 0.396e3 * t * pow(u, 0.5e1) + 0.1691e4 * t * t * pow(u, 0.5e1) - 0.106e3 * t * pow(u, 0.9e1) - 0.1903e4 * t * t * pow(u, 0.7e1) - 0.228e3 * t * pow(u, 0.8e1) + 0.470e3 * t * pow(u, 0.6e1) - 0.542e3 * t * t * pow(u, 0.6e1) - 0.237e3 * pow(t, 0.8e1) * u * u - 0.1487e4 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.3982e4 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.5904e4 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.5241e4 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.2791e4 * pow(t, 0.3e1) * pow(u, 0.7e1) - 0.828e3 * t * t * pow(u, 0.8e1) + 0.54e2 * t * pow(u, 0.7e1) - 0.1751e4 * pow(t, 0.6e1) * u - 0.4465e4 * pow(t, 0.5e1) * u * u - 0.3642e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.472e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.1706e4 * pow(t, 0.7e1) * u - 0.6658e4 * pow(t, 0.6e1) * u * u - 0.12461e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.11507e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.4777e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.117e3 * pow(t, 0.5e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - u - 0.1e1, -0.3e1));
}
#include <math.h>

double GstarVVCoeffsC6e2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.4e1 / 0.81e2 * ((0.26432e5 * t + 0.15552e5 * u) * pow(q4, 0.7e1) + (-0.52864e5 * t * t - 0.147712e6 * t * u - 0.62208e5 * u * u - 0.116608e6 * t - 0.62208e5 * u) * pow(q4, 0.6e1) + (0.39648e5 * pow(t, 0.3e1) + 0.230112e6 * t * t * u + 0.324192e6 * t * u * u + 0.101088e6 * pow(u, 0.3e1) + 0.180352e6 * t * t + 0.497536e6 * t * u + 0.186624e6 * u * u + 0.202112e6 * t + 0.93312e5 * u) * pow(q4, 0.5e1) + (-0.13216e5 * pow(t, 0.4e1) - 0.143040e6 * pow(t, 0.3e1) * u - 0.397248e6 * t * t * u * u - 0.363840e6 * t * pow(u, 0.3e1) - 0.85536e5 * pow(u, 0.4e1) - 0.108832e6 * pow(t, 0.3e1) - 0.592352e6 * t * t * u - 0.791392e6 * t * u * u - 0.209952e6 * pow(u, 0.3e1) - 0.223872e6 * t * t - 0.606336e6 * t * u - 0.186624e6 * u * u - 0.171008e6 * t - 0.62208e5 * u) * pow(q4, 0.4e1) + (0.1652e4 * pow(t, 0.5e1) + 0.39452e5 * pow(t, 0.4e1) * u + 0.197256e6 * pow(t, 0.3e1) * u * u + 0.344376e6 * t * t * pow(u, 0.3e1) + 0.224772e6 * t * pow(u, 0.4e1) + 0.39852e5 * pow(u, 0.5e1) + 0.31872e5 * pow(t, 0.4e1) + 0.287616e6 * pow(t, 0.3e1) * u + 0.719040e6 * t * t * u * u + 0.593920e6 * t * pow(u, 0.3e1) + 0.108864e6 * pow(u, 0.4e1) + 0.104160e6 * pow(t, 0.3e1) + 0.505248e6 * t * t * u + 0.615648e6 * t * u * u + 0.116640e6 * pow(u, 0.3e1) + 0.118144e6 * t * t + 0.310912e6 * t * u + 0.62208e5 * u * u + 0.69952e5 * t + 0.15552e5 * u) * pow(q4, 0.3e1) + (-0.3984e4 * pow(t, 0.5e1) * u - 0.41976e5 * pow(t, 0.4e1) * u * u - 0.128064e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.155856e6 * t * t * pow(u, 0.4e1) - 0.75504e5 * t * pow(u, 0.5e1) - 0.9720e4 * pow(u, 0.6e1) - 0.3984e4 * pow(t, 0.5e1) - 0.66072e5 * pow(t, 0.4e1) * u - 0.264864e6 * pow(t, 0.3e1) * u * u - 0.394480e6 * t * t * pow(u, 0.3e1) - 0.216976e6 * t * pow(u, 0.4e1) - 0.25272e5 * pow(u, 0.5e1) - 0.24096e5 * pow(t, 0.4e1) - 0.177216e6 * pow(t, 0.3e1) * u - 0.370752e6 * t * t * u * u - 0.251840e6 * t * pow(u, 0.3e1) - 0.23328e5 * pow(u, 0.4e1) - 0.40416e5 * pow(t, 0.3e1) - 0.153888e6 * t * t * u - 0.153888e6 * t * u * u - 0.7776e4 * pow(u, 0.3e1) - 0.21760e5 * t * t - 0.54400e5 * t * u - 0.10880e5 * t) * q4 * q4 + (0.972e3 * pow(u, 0.5e1) + 0.10880e5 * t * t * u + 0.5440e4 * t * u * u + 0.32640e5 * pow(t, 0.3e1) * u + 0.48960e5 * t * t * u * u + 0.29340e5 * pow(t, 0.4e1) * u + 0.87240e5 * pow(t, 0.3e1) * u * u + 0.21760e5 * t * pow(u, 0.3e1) + 0.99480e5 * t * t * pow(u, 0.3e1) + 0.39540e5 * t * pow(u, 0.4e1) + 0.6024e4 * pow(t, 0.5e1) * u + 0.42360e5 * pow(t, 0.4e1) * u * u + 0.98320e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.95600e5 * t * t * pow(u, 0.4e1) + 0.35560e5 * t * pow(u, 0.5e1) + 0.34200e5 * t * t * pow(u, 0.5e1) + 0.12340e5 * t * pow(u, 0.6e1) + 0.3012e4 * pow(t, 0.5e1) * u * u + 0.18460e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.38280e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.1944e4 * pow(u, 0.6e1) + 0.972e3 * pow(u, 0.7e1) + 0.5440e4 * pow(t, 0.3e1) + 0.5440e4 * pow(t, 0.4e1) + 0.3012e4 * pow(t, 0.5e1)) * q4 - 0.2720e4 * pow(t, 0.4e1) * u - 0.4080e4 * pow(t, 0.3e1) * u * u - 0.2720e4 * t * t * pow(u, 0.3e1) - 0.680e3 * t * pow(u, 0.4e1) - 0.2040e4 * pow(t, 0.5e1) * u - 0.8160e4 * pow(t, 0.4e1) * u * u - 0.12240e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.8160e4 * t * t * pow(u, 0.4e1) - 0.2040e4 * t * pow(u, 0.5e1) - 0.8160e4 * t * t * pow(u, 0.5e1) - 0.2040e4 * t * pow(u, 0.6e1) - 0.2720e4 * t * t * pow(u, 0.6e1) - 0.680e3 * t * pow(u, 0.7e1) - 0.2040e4 * pow(t, 0.5e1) * u * u - 0.8160e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.12240e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.680e3 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.2720e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.4080e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.680e3 * pow(t, 0.5e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - u - 0.1e1, -0.3e1) * q3 * q3 - 0.4e1 / 0.81e2 * (-0.2211e4 * pow(t, 0.7e1) + 0.658e3 * pow(t, 0.6e1) + (0.26848e5 * t + 0.5440e4 * u) * pow(q4, 0.8e1) + (-0.105888e6 * t * t - 0.181536e6 * t * u - 0.27200e5 * u * u - 0.148640e6 * t - 0.27200e5 * u) * pow(q4, 0.7e1) + (0.121088e6 * pow(t, 0.3e1) + 0.533664e6 * t * t * u + 0.481792e6 * t * u * u + 0.57120e5 * pow(u, 0.3e1) + 0.462688e6 * t * t + 0.802592e6 * t * u + 0.108800e6 * u * u + 0.328288e6 * t + 0.54400e5 * u) * pow(q4, 0.6e1) + (-0.43424e5 * pow(t, 0.4e1) - 0.495104e6 * pow(t, 0.3e1) * u - 0.1090752e7 * t * t * u * u - 0.668448e6 * t * pow(u, 0.3e1) - 0.65280e5 * pow(u, 0.4e1) - 0.386816e6 * pow(t, 0.3e1) - 0.1805920e7 * t * t * u - 0.1636000e7 * t * u * u - 0.174080e6 * pow(u, 0.3e1) - 0.763072e6 * t * t - 0.1346240e7 * t * u - 0.163200e6 * u * u - 0.363712e6 * t - 0.54400e5 * u) * pow(q4, 0.5e1) + (-0.9306e4 * pow(t, 0.5e1) + 0.136380e6 * pow(t, 0.4e1) * u + 0.797236e6 * pow(t, 0.3e1) * u * u + 0.1161312e7 * t * t * pow(u, 0.3e1) + 0.532278e6 * t * pow(u, 0.4e1) + 0.43860e5 * pow(u, 0.5e1) + 0.83632e5 * pow(t, 0.4e1) + 0.1184848e7 * pow(t, 0.3e1) * u + 0.2713072e7 * t * t * u * u + 0.1643568e7 * t * pow(u, 0.3e1) + 0.141440e6 * pow(u, 0.4e1) + 0.415376e6 * pow(t, 0.3e1) + 0.2130528e7 * t * t * u + 0.1942704e7 * t * u * u + 0.179520e6 * pow(u, 0.3e1) + 0.571968e6 * t * t + 0.1038528e7 * t * u + 0.108800e6 * u * u + 0.205088e6 * t + 0.27200e5 * u) * pow(q4, 0.4e1) + (-0.27200e5 * u * u - 0.50080e5 * t - 0.5440e4 * u + 0.9386e4 * pow(t, 0.6e1) - 0.65280e5 * pow(u, 0.3e1) - 0.87040e5 * pow(u, 0.4e1) - 0.60860e5 * pow(u, 0.5e1) - 0.979104e6 * t * t * u - 0.903184e6 * t * u * u - 0.341024e6 * t * u - 0.868448e6 * pow(t, 0.3e1) * u - 0.2089152e7 * t * t * u * u - 0.178172e6 * pow(t, 0.4e1) * u - 0.1329844e7 * pow(t, 0.3e1) * u * u - 0.1234528e7 * t * pow(u, 0.3e1) - 0.1965384e7 * t * t * pow(u, 0.3e1) - 0.867398e6 * t * pow(u, 0.4e1) + 0.36762e5 * pow(t, 0.5e1) * u - 0.150632e6 * pow(t, 0.4e1) * u * u - 0.633036e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.684870e6 * t * t * pow(u, 0.4e1) - 0.246798e6 * t * pow(u, 0.5e1) - 0.17340e5 * pow(u, 0.6e1) - 0.156912e6 * pow(t, 0.3e1) - 0.176032e6 * t * t - 0.39392e5 * pow(t, 0.4e1) + 0.36378e5 * pow(t, 0.5e1)) * pow(q4, 0.3e1) + (0.2208e4 * t - 0.1617e4 * pow(t, 0.7e1) - 0.22702e5 * pow(t, 0.6e1) + 0.2720e4 * pow(u, 0.3e1) + 0.10880e5 * pow(u, 0.4e1) + 0.17340e5 * pow(u, 0.5e1) + 0.121984e6 * t * t * u + 0.113296e6 * t * u * u + 0.27680e5 * t * u + 0.204368e6 * pow(t, 0.3e1) * u + 0.488496e6 * t * t * u * u + 0.51620e5 * pow(t, 0.4e1) * u + 0.597928e6 * pow(t, 0.3e1) * u * u + 0.260912e6 * t * pow(u, 0.3e1) + 0.856112e6 * t * t * pow(u, 0.3e1) + 0.340628e6 * t * pow(u, 0.4e1) - 0.88354e5 * pow(t, 0.5e1) * u + 0.114180e6 * pow(t, 0.4e1) * u * u + 0.659916e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.698978e6 * t * t * pow(u, 0.4e1) + 0.231142e6 * t * pow(u, 0.5e1) + 0.216978e6 * t * t * pow(u, 0.5e1) + 0.63047e5 * t * pow(u, 0.6e1) - 0.24822e5 * pow(t, 0.6e1) * u - 0.53415e5 * pow(t, 0.5e1) * u * u + 0.62696e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.250577e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.12920e5 * pow(u, 0.6e1) + 0.3740e4 * pow(u, 0.7e1) + 0.9520e4 * pow(t, 0.3e1) + 0.10336e5 * t * t + 0.5552e4 * pow(t, 0.4e1) - 0.36556e5 * pow(t, 0.5e1)) * q4 * q4 + (0.3842e4 * pow(t, 0.7e1) + 0.12546e5 * pow(t, 0.6e1) - 0.340e3 * pow(u, 0.5e1) - 0.1152e4 * t * t * u + 0.1392e4 * t * u * u - 0.25664e5 * pow(t, 0.3e1) * u - 0.21664e5 * t * t * u * u - 0.14660e5 * pow(t, 0.4e1) * u - 0.86084e5 * pow(t, 0.3e1) * u * u - 0.1504e4 * t * pow(u, 0.3e1) - 0.79880e5 * t * t * pow(u, 0.3e1) - 0.17214e5 * t * pow(u, 0.4e1) + 0.39050e5 * pow(t, 0.5e1) * u - 0.27768e5 * pow(t, 0.4e1) * u * u - 0.158364e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.136174e6 * t * t * pow(u, 0.4e1) - 0.32814e5 * t * pow(u, 0.5e1) - 0.108328e6 * t * t * pow(u, 0.5e1) - 0.25852e5 * t * pow(u, 0.6e1) - 0.31602e5 * t * t * pow(u, 0.6e1) - 0.7356e4 * t * pow(u, 0.7e1) + 0.36656e5 * pow(t, 0.6e1) * u + 0.67728e5 * pow(t, 0.5e1) * u * u - 0.18348e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.136758e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.3234e4 * pow(t, 0.7e1) * u + 0.21486e5 * pow(t, 0.6e1) * u * u + 0.33768e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.1896e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.41998e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.1020e4 * pow(u, 0.6e1) - 0.1020e4 * pow(u, 0.7e1) - 0.340e3 * pow(u, 0.8e1) - 0.2256e4 * pow(t, 0.3e1) - 0.6368e4 * pow(t, 0.4e1) + 0.9282e4 * pow(t, 0.5e1)) * q4 + 0.864e3 * pow(t, 0.4e1) * u - 0.36e2 * pow(t, 0.3e1) * u * u - 0.6050e4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.7809e4 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.3124e4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.1237e4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.1617e4 * pow(t, 0.7e1) * u * u - 0.960e3 * t * t * pow(u, 0.3e1) - 0.486e3 * t * pow(u, 0.4e1) + 0.4686e4 * pow(t, 0.5e1) * u + 0.9596e4 * pow(t, 0.4e1) * u * u + 0.7036e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.738e3 * t * t * pow(u, 0.4e1) - 0.730e3 * t * pow(u, 0.5e1) + 0.5434e4 * t * t * pow(u, 0.5e1) + 0.1158e4 * t * t * pow(u, 0.7e1) + 0.173e3 * t * pow(u, 0.8e1) + 0.171e3 * t * pow(u, 0.6e1) + 0.4894e4 * t * t * pow(u, 0.6e1) + 0.588e3 * t * pow(u, 0.7e1) - 0.7190e4 * pow(t, 0.6e1) * u - 0.3599e4 * pow(t, 0.5e1) * u * u + 0.10620e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.14503e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.3842e4 * pow(t, 0.7e1) * u - 0.13954e5 * pow(t, 0.6e1) * u * u - 0.15752e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.1292e4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.8654e4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.426e3 * pow(t, 0.5e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - u - 0.1e1, -0.3e1) * q3 - 0.4e1 / 0.81e2 * (0.1093e4 * pow(t, 0.7e1) + 0.2211e4 * pow(t, 0.8e1) - 0.108e3 * pow(t, 0.6e1) + (0.9440e4 * t + 0.7584e4 * u) * pow(q4, 0.9e1) + (-0.42032e5 * t * t - 0.85776e5 * t * u - 0.45504e5 * u * u - 0.60160e5 * t - 0.45504e5 * u) * pow(q4, 0.8e1) + (0.65416e5 * pow(t, 0.3e1) + 0.263216e6 * t * t * u + 0.301016e6 * t * u * u + 0.117552e6 * pow(u, 0.3e1) + 0.223656e6 * t * t + 0.450248e6 * t * u + 0.227520e6 * u * u + 0.159200e6 * t + 0.113760e6 * u) * pow(q4, 0.7e1) + (-0.22916e5 * pow(t, 0.4e1) - 0.302420e6 * pow(t, 0.3e1) * u - 0.678252e6 * t * t * u * u - 0.559916e6 * t * pow(u, 0.3e1) - 0.170640e6 * pow(u, 0.4e1) - 0.269588e6 * pow(t, 0.3e1) - 0.1123888e7 * t * t * u - 0.1273228e7 * t * u * u - 0.474000e6 * pow(u, 0.3e1) - 0.474136e6 * t * t - 0.947000e6 * t * u - 0.455040e6 * u * u - 0.224000e6 * t - 0.151680e6 * u) * pow(q4, 0.6e1) + (-0.32996e5 * pow(t, 0.5e1) + 0.43038e5 * pow(t, 0.4e1) * u + 0.555948e6 * pow(t, 0.3e1) * u * u + 0.937992e6 * t * t * pow(u, 0.3e1) + 0.617976e6 * t * pow(u, 0.4e1) + 0.152154e6 * pow(u, 0.5e1) + 0.31524e5 * pow(t, 0.4e1) + 0.937832e6 * pow(t, 0.3e1) * u + 0.2236820e7 * t * t * u * u + 0.1838608e7 * t * pow(u, 0.3e1) + 0.530880e6 * pow(u, 0.4e1) + 0.405782e6 * pow(t, 0.3e1) + 0.1808706e7 * t * t * u + 0.2047180e7 * t * u * u + 0.720480e6 * pow(u, 0.3e1) + 0.500624e6 * t * t + 0.1001040e7 * t * u + 0.455040e6 * u * u + 0.176800e6 * t + 0.113760e6 * u) * pow(q4, 0.5e1) + (-0.227520e6 * u * u - 0.74240e5 * t - 0.45504e5 * u + 0.35308e5 * pow(t, 0.6e1) - 0.492960e6 * pow(u, 0.3e1) - 0.568800e6 * pow(u, 0.4e1) - 0.343176e6 * pow(u, 0.5e1) - 0.1314920e7 * t * t * u - 0.1511960e7 * t * u * u - 0.536960e6 * t * u - 0.946386e6 * pow(t, 0.3e1) * u - 0.2560992e7 * t * t * u * u + 0.84864e5 * pow(t, 0.4e1) * u - 0.1199132e7 * pow(t, 0.3e1) * u * u - 0.2120312e7 * t * pow(u, 0.3e1) - 0.2260888e7 * t * t * pow(u, 0.3e1) - 0.1490698e7 * t * pow(u, 0.4e1) + 0.160940e6 * pow(t, 0.5e1) * u + 0.46376e5 * pow(t, 0.4e1) * u * u - 0.505488e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.754908e6 * t * t * pow(u, 0.4e1) - 0.420492e6 * t * pow(u, 0.5e1) - 0.85320e5 * pow(u, 0.6e1) - 0.254320e6 * pow(t, 0.3e1) - 0.263136e6 * t * t + 0.52470e5 * pow(t, 0.4e1) + 0.140838e6 * pow(t, 0.5e1)) * pow(q4, 0.4e1) + (0.45504e5 * u * u + 0.12960e5 * t + 0.7584e4 * u - 0.12697e5 * pow(t, 0.7e1) - 0.103786e6 * pow(t, 0.6e1) + 0.132720e6 * pow(u, 0.3e1) + 0.227520e6 * pow(u, 0.4e1) + 0.230364e6 * pow(u, 0.5e1) + 0.383164e6 * t * t * u + 0.469840e6 * t * u * u + 0.122216e6 * t * u + 0.292622e6 * pow(t, 0.3e1) * u + 0.1126560e7 * t * t * u * u - 0.330772e6 * pow(t, 0.4e1) * u + 0.680731e6 * pow(t, 0.3e1) * u * u + 0.963648e6 * t * pow(u, 0.3e1) + 0.1666876e7 * t * t * pow(u, 0.3e1) + 0.1113620e7 * t * pow(u, 0.4e1) - 0.479840e6 * pow(t, 0.5e1) * u - 0.404004e6 * pow(t, 0.4e1) * u * u + 0.650040e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.1222990e7 * t * t * pow(u, 0.4e1) + 0.685120e6 * t * pow(u, 0.5e1) + 0.354534e6 * t * t * pow(u, 0.5e1) + 0.174643e6 * t * pow(u, 0.6e1) - 0.121946e6 * pow(t, 0.6e1) * u - 0.301563e6 * pow(t, 0.5e1) * u * u - 0.182200e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.219393e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.127032e6 * pow(u, 0.6e1) + 0.29388e5 * pow(u, 0.7e1) + 0.42908e5 * pow(t, 0.3e1) + 0.54856e5 * t * t - 0.107026e6 * pow(t, 0.4e1) - 0.191531e6 * pow(t, 0.5e1)) * pow(q4, 0.3e1) + (0.31227e5 * pow(t, 0.7e1) + 0.1617e4 * pow(t, 0.8e1) + 0.92468e5 * pow(t, 0.6e1) - 0.3792e4 * pow(u, 0.3e1) - 0.18960e5 * pow(u, 0.4e1) - 0.39816e5 * pow(u, 0.5e1) - 0.16248e5 * t * t * u - 0.32476e5 * t * u * u - 0.3768e4 * t * u + 0.14686e5 * pow(t, 0.3e1) * u - 0.126164e6 * t * t * u * u + 0.213878e6 * pow(t, 0.4e1) * u - 0.44159e5 * pow(t, 0.3e1) * u * u - 0.121212e6 * t * pow(u, 0.3e1) - 0.357496e6 * t * t * pow(u, 0.3e1) - 0.244512e6 * t * pow(u, 0.4e1) + 0.404705e6 * pow(t, 0.5e1) * u + 0.456180e6 * pow(t, 0.4e1) * u * u - 0.120945e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.492348e6 * t * t * pow(u, 0.4e1) - 0.277660e6 * t * pow(u, 0.5e1) - 0.334890e6 * t * t * pow(u, 0.5e1) - 0.167097e6 * t * pow(u, 0.6e1) - 0.90115e5 * t * t * pow(u, 0.6e1) - 0.41445e5 * t * pow(u, 0.7e1) + 0.246574e6 * pow(t, 0.6e1) * u + 0.581917e6 * pow(t, 0.5e1) * u * u + 0.462516e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.96495e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.33783e5 * pow(t, 0.7e1) * u + 0.155871e6 * pow(t, 0.6e1) * u * u + 0.272225e6 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.179595e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.23283e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.43608e5 * pow(u, 0.6e1) - 0.24648e5 * pow(u, 0.7e1) - 0.5688e4 * pow(u, 0.8e1) + 0.9460e4 * pow(t, 0.3e1) + 0.168e3 * t * t + 0.45126e5 * pow(t, 0.4e1) + 0.90933e5 * pow(t, 0.5e1)) * q4 * q4 + (-0.19511e5 * pow(t, 0.7e1) - 0.3842e4 * pow(t, 0.8e1) - 0.24106e5 * pow(t, 0.6e1) + 0.474e3 * pow(u, 0.5e1) + 0.474e3 * pow(u, 0.9e1) - 0.30e2 * t * t * u - 0.372e3 * t * u * u + 0.3666e4 * pow(t, 0.3e1) * u + 0.2028e4 * t * t * u * u - 0.10822e5 * pow(t, 0.4e1) * u + 0.6657e4 * pow(t, 0.3e1) * u * u - 0.87136e5 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.118541e6 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.75788e5 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.12793e5 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.3234e4 * pow(t, 0.8e1) * u - 0.29475e5 * pow(t, 0.7e1) * u * u - 0.816e3 * t * pow(u, 0.3e1) + 0.13300e5 * t * t * pow(u, 0.3e1) + 0.3476e4 * t * pow(u, 0.4e1) - 0.83474e5 * pow(t, 0.5e1) * u - 0.86546e5 * pow(t, 0.4e1) * u * u - 0.4036e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.37294e5 * t * t * pow(u, 0.4e1) + 0.16048e5 * t * pow(u, 0.5e1) + 0.52856e5 * t * t * pow(u, 0.5e1) + 0.9556e4 * t * t * pow(u, 0.7e1) + 0.4681e4 * t * pow(u, 0.8e1) + 0.24945e5 * t * pow(u, 0.6e1) + 0.36360e5 * t * t * pow(u, 0.6e1) + 0.17498e5 * t * pow(u, 0.7e1) - 0.119946e6 * pow(t, 0.6e1) * u - 0.247618e6 * pow(t, 0.5e1) * u * u - 0.202640e6 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.24702e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.51762e5 * pow(t, 0.7e1) * u - 0.187776e6 * pow(t, 0.6e1) * u * u - 0.293802e6 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.205062e6 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.30358e5 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.1896e4 * pow(u, 0.6e1) + 0.2844e4 * pow(u, 0.7e1) + 0.1896e4 * pow(u, 0.8e1) + 0.342e3 * pow(t, 0.3e1) + 0.822e3 * pow(t, 0.4e1) - 0.7181e4 * pow(t, 0.5e1)) * q4 - 0.186e3 * pow(t, 0.4e1) * u - 0.45e2 * pow(t, 0.3e1) * u * u + 0.44988e5 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.50887e5 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.30162e5 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.7701e4 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.3842e4 * pow(t, 0.8e1) * u + 0.20535e5 * pow(t, 0.7e1) * u * u + 0.216e3 * t * t * pow(u, 0.3e1) + 0.138e3 * t * pow(u, 0.4e1) - 0.795e3 * pow(t, 0.5e1) * u - 0.1638e4 * pow(t, 0.4e1) * u * u - 0.819e3 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.636e3 * t * t * pow(u, 0.4e1) + 0.504e3 * t * pow(u, 0.5e1) + 0.446e3 * t * t * pow(u, 0.5e1) - 0.127e3 * t * pow(u, 0.9e1) - 0.160e3 * t * t * pow(u, 0.7e1) - 0.291e3 * t * pow(u, 0.8e1) + 0.557e3 * t * pow(u, 0.6e1) - 0.143e3 * t * t * pow(u, 0.6e1) + 0.1617e4 * pow(t, 0.8e1) * u * u + 0.8389e4 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.17903e5 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.19935e5 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.11895e5 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.3227e4 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.9e1 * t * t * pow(u, 0.8e1) + 0.27e2 * t * pow(u, 0.7e1) + 0.4390e4 * pow(t, 0.6e1) * u + 0.5792e4 * pow(t, 0.5e1) * u * u + 0.2118e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.488e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.13183e5 * pow(t, 0.7e1) * u + 0.31499e5 * pow(t, 0.6e1) * u * u + 0.37420e5 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.21823e5 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.4760e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.63e2 * pow(t, 0.5e1)) * pow(t, -0.2e1) * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q4 - u - 0.1e1, -0.3e1));
}
double GstarVVCoeffsC7em2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0);
}
double GstarVVCoeffsC7em1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0.16e2 / t * q3 * q3 + 0.32e2 / t * q3 * q4 + (0.8e1 * t / u - 0.104e3 / 0.3e1 - 0.32e2 * u / t - 0.16e2 / 0.3e1 / t) * q3 + 0.16e2 / t * q4 * q4 + (0.8e1 * t / u - 0.104e3 / 0.3e1 - 0.32e2 * u / t - 0.16e2 / 0.3e1 / t) * q4 - 0.8e1 * t * t / u + 0.32e2 / 0.3e1 * t + 0.104e3 / 0.3e1 * u + 0.16e2 / t * u * u - 0.8e1 / 0.3e1 * t / u + 0.8e1 + 0.16e2 / 0.3e1 * u / t);
}
#include <math.h>

double GstarVVCoeffsC7e0 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.8e1 / 0.9e1 * (-0.33e2 * pow(t, 0.7e1) - 0.25e2 * pow(t, 0.6e1) + 0.18e2 * pow(u, 0.4e1) + 0.48e2 * pow(u, 0.5e1) + 0.1728e4 * u * pow(q3, 0.5e1) * q4 + 0.864e3 * u * pow(q3, 0.4e1) * q4 * q4 + (0.528e3 * t * t - 0.5056e4 * t * u - 0.5328e4 * u * u + 0.384e3 * t - 0.4448e4 * u) * pow(q3, 0.4e1) * q4 + (-0.1728e4 * t * u - 0.1728e4 * u * u - 0.1728e4 * u) * pow(q3, 0.3e1) * q4 * q4 + (-0.1056e4 * pow(t, 0.3e1) + 0.4736e4 * t * t * u + 0.12128e5 * t * u * u + 0.6336e4 * pow(u, 0.3e1) - 0.1824e4 * t * t + 0.7872e4 * t * u + 0.9184e4 * u * u - 0.768e3 * t + 0.3712e4 * u) * pow(q3, 0.3e1) * q4 + (0.1296e4 * t * t * u + 0.2592e4 * t * u * u + 0.1296e4 * pow(u, 0.3e1) + 0.1728e4 * t * u + 0.1728e4 * u * u + 0.864e3 * u) * q3 * q3 * q4 * q4 + (0.792e3 * pow(t, 0.4e1) - 0.1680e4 * pow(t, 0.3e1) * u - 0.9408e4 * t * t * u * u - 0.10608e5 * t * pow(u, 0.3e1) - 0.3672e4 * pow(u, 0.4e1) + 0.1632e4 * pow(t, 0.3e1) - 0.3344e4 * t * t * u - 0.11072e5 * t * u * u - 0.6096e4 * pow(u, 0.3e1) + 0.1488e4 * t * t - 0.2624e4 * t * u - 0.4000e4 * u * u + 0.384e3 * t - 0.992e3 * u) * q3 * q3 * q4 + (-0.432e3 * pow(t, 0.3e1) * u - 0.1296e4 * t * t * u * u - 0.1296e4 * t * pow(u, 0.3e1) - 0.432e3 * pow(u, 0.4e1) - 0.432e3 * t * t * u - 0.864e3 * t * u * u - 0.432e3 * pow(u, 0.3e1)) * q3 * q4 * q4 + (-0.264e3 * pow(t, 0.5e1) + 0.116e3 * pow(t, 0.4e1) * u + 0.2976e4 * pow(t, 0.3e1) * u * u + 0.5592e4 * t * t * pow(u, 0.3e1) + 0.4040e4 * t * pow(u, 0.4e1) + 0.1044e4 * pow(u, 0.5e1) - 0.456e3 * pow(t, 0.4e1) + 0.192e3 * pow(t, 0.3e1) * u + 0.3184e4 * t * t * u * u + 0.3968e4 * t * pow(u, 0.3e1) + 0.1432e4 * pow(u, 0.4e1) - 0.384e3 * pow(t, 0.3e1) - 0.272e3 * t * t * u + 0.752e3 * t * u * u + 0.640e3 * pow(u, 0.3e1) - 0.192e3 * t * t - 0.192e3 * t * u + 0.144e3 * u * u) * q3 * q4 - 0.72e2 * pow(t, 0.3e1) * u - 0.90e2 * t * t * u * u - 0.168e3 * pow(t, 0.4e1) * u - 0.240e3 * pow(t, 0.3e1) * u * u - 0.12e2 * t * pow(u, 0.3e1) - 0.72e2 * t * t * pow(u, 0.3e1) + 0.84e2 * t * pow(u, 0.4e1) - 0.70e2 * pow(t, 0.5e1) * u + 0.29e2 * pow(t, 0.4e1) * u * u + 0.316e3 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.449e3 * t * t * pow(u, 0.4e1) + 0.266e3 * t * pow(u, 0.5e1) + 0.827e3 * t * t * pow(u, 0.5e1) + 0.361e3 * t * pow(u, 0.6e1) - 0.119e3 * pow(t, 0.6e1) * u - 0.37e2 * pow(t, 0.5e1) * u * u + 0.445e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.925e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.59e2 * pow(u, 0.6e1) + 0.63e2 * pow(u, 0.7e1) - 0.12e2 * pow(t, 0.4e1) - 0.36e2 * pow(t, 0.5e1) + 0.864e3 * pow(q3, 0.6e1) * u + (0.528e3 * t * t - 0.3328e4 * t * u - 0.3600e4 * u * u + 0.384e3 * t - 0.2720e4 * u) * pow(q3, 0.5e1) + (-0.1584e4 * pow(t, 0.3e1) + 0.3648e4 * t * t * u + 0.11280e5 * t * u * u + 0.6048e4 * pow(u, 0.3e1) - 0.2224e4 * t * t + 0.6624e4 * t * u + 0.8400e4 * u * u - 0.960e3 * t + 0.3040e4 * u) * pow(q3, 0.4e1) + (0.1848e4 * pow(t, 0.4e1) - 0.608e3 * pow(t, 0.3e1) * u - 0.12016e5 * t * t * u * u - 0.14816e5 * t * pow(u, 0.3e1) - 0.5256e4 * pow(u, 0.4e1) + 0.3488e4 * pow(t, 0.3e1) - 0.3488e4 * t * t * u - 0.16544e5 * t * u * u - 0.9568e4 * pow(u, 0.3e1) + 0.2672e4 * t * t - 0.3584e4 * t * u - 0.6272e4 * u * u + 0.768e3 * t - 0.1376e4 * u) * pow(q3, 0.3e1) + (-0.1056e4 * pow(t, 0.5e1) - 0.1210e4 * pow(t, 0.4e1) * u + 0.5208e4 * pow(t, 0.3e1) * u * u + 0.12324e5 * t * t * pow(u, 0.3e1) + 0.9464e4 * t * pow(u, 0.4e1) + 0.2502e4 * pow(u, 0.5e1) - 0.2112e4 * pow(t, 0.4e1) - 0.928e3 * pow(t, 0.3e1) * u + 0.9344e4 * t * t * u * u + 0.13024e5 * t * pow(u, 0.3e1) + 0.4864e4 * pow(u, 0.4e1) - 0.2096e4 * pow(t, 0.3e1) - 0.528e3 * t * t * u + 0.5536e4 * t * u * u + 0.3968e4 * pow(u, 0.3e1) - 0.1096e4 * t * t + 0.204e3 * t * u + 0.1508e4 * u * u - 0.192e3 * t + 0.192e3 * u) * q3 * q3 + (-0.36e2 * u * u + 0.297e3 * pow(t, 0.6e1) - 0.276e3 * pow(u, 0.3e1) - 0.748e3 * pow(u, 0.4e1) - 0.1038e4 * pow(u, 0.5e1) + 0.636e3 * t * t * u + 0.48e2 * t * u * u + 0.84e2 * t * u + 0.928e3 * pow(t, 0.3e1) * u - 0.212e3 * t * t * u * u + 0.818e3 * pow(t, 0.4e1) * u - 0.1512e4 * pow(t, 0.3e1) * u * u - 0.1448e4 * t * pow(u, 0.3e1) - 0.4564e4 * t * t * pow(u, 0.3e1) - 0.3760e4 * t * pow(u, 0.4e1) + 0.720e3 * pow(t, 0.5e1) * u - 0.711e3 * pow(t, 0.4e1) * u * u - 0.4104e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.5301e4 * t * t * pow(u, 0.4e1) - 0.2952e4 * t * pow(u, 0.5e1) - 0.621e3 * pow(u, 0.6e1) + 0.312e3 * pow(t, 0.3e1) + 0.120e3 * t * t + 0.440e3 * pow(t, 0.4e1) + 0.488e3 * pow(t, 0.5e1)) * q3 + (0.54e2 * pow(t, 0.4e1) * u + 0.216e3 * pow(t, 0.3e1) * u * u + 0.324e3 * t * t * pow(u, 0.3e1) + 0.216e3 * t * pow(u, 0.4e1) + 0.54e2 * pow(u, 0.5e1)) * q4 * q4 + (0.33e2 * pow(t, 0.6e1) + 0.32e2 * pow(t, 0.5e1) * u - 0.319e3 * pow(t, 0.4e1) * u * u - 0.936e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1069e4 * t * t * pow(u, 0.4e1) - 0.568e3 * t * pow(u, 0.5e1) - 0.117e3 * pow(u, 0.6e1) + 0.24e2 * pow(t, 0.5e1) + 0.34e2 * pow(t, 0.4e1) * u - 0.104e3 * pow(t, 0.3e1) * u * u - 0.276e3 * t * t * pow(u, 0.3e1) - 0.224e3 * t * pow(u, 0.4e1) - 0.62e2 * pow(u, 0.5e1) + 0.48e2 * pow(t, 0.4e1) + 0.144e3 * pow(t, 0.3e1) * u + 0.108e3 * t * t * u * u - 0.24e2 * t * pow(u, 0.3e1) - 0.36e2 * pow(u, 0.4e1)) * q4) / u * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / t);
}
#include <math.h>

double GstarVVCoeffsC7e1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0.8e1 / 0.27e2 * ((0.1680e4 * t * t + 0.1616e4 * t * u - 0.2592e4 * u * u + 0.384e3 * t - 0.1472e4 * u) * pow(q3, 0.5e1) + (-0.5040e4 * pow(t, 0.3e1) - 0.9888e4 * t * t * u + 0.2928e4 * t * u * u + 0.7776e4 * pow(u, 0.3e1) - 0.3760e4 * t * t - 0.1872e4 * t * u + 0.9408e4 * u * u - 0.1824e4 * t + 0.4000e4 * u) * pow(q3, 0.4e1) + (0.5880e4 * pow(t, 0.4e1) + 0.17416e5 * pow(t, 0.3e1) * u + 0.8120e4 * t * t * u * u - 0.12488e5 * t * pow(u, 0.3e1) - 0.9072e4 * pow(u, 0.4e1) + 0.6560e4 * pow(t, 0.3e1) + 0.13024e5 * t * t * u - 0.8672e4 * t * u * u - 0.15136e5 * pow(u, 0.3e1) + 0.4448e4 * t * t + 0.1768e4 * t * u - 0.10712e5 * u * u + 0.2496e4 * t - 0.3584e4 * u) * pow(q3, 0.3e1) + (-0.3360e4 * pow(t, 0.5e1) - 0.13312e5 * pow(t, 0.4e1) * u - 0.14592e5 * pow(t, 0.3e1) * u * u + 0.2496e4 * t * t * pow(u, 0.3e1) + 0.12320e5 * t * pow(u, 0.4e1) + 0.5184e4 * pow(u, 0.5e1) - 0.3840e4 * pow(t, 0.4e1) - 0.12400e5 * pow(t, 0.3e1) * u - 0.4144e4 * t * t * u * u + 0.13552e5 * t * pow(u, 0.3e1) + 0.9136e4 * pow(u, 0.4e1) - 0.3584e4 * pow(t, 0.3e1) - 0.7872e4 * t * t * u + 0.4192e4 * t * u * u + 0.8480e4 * pow(u, 0.3e1) - 0.3028e4 * t * t - 0.1830e4 * t * u + 0.4238e4 * u * u - 0.1056e4 * t + 0.1056e4 * u) * q3 * q3 + (-0.342e3 * u * u + 0.945e3 * pow(t, 0.6e1) - 0.1374e4 * pow(u, 0.3e1) - 0.1798e4 * pow(u, 0.4e1) - 0.2028e4 * pow(u, 0.5e1) + 0.2634e4 * t * t * u - 0.168e3 * t * u * u + 0.318e3 * t * u + 0.2950e4 * pow(t, 0.3e1) * u + 0.1882e4 * t * t * u * u + 0.3188e4 * pow(t, 0.4e1) * u + 0.3456e4 * pow(t, 0.3e1) * u * u - 0.2126e4 * t * pow(u, 0.3e1) - 0.1960e4 * t * t * pow(u, 0.3e1) - 0.4936e4 * t * pow(u, 0.4e1) + 0.4689e4 * pow(t, 0.5e1) * u + 0.7848e4 * pow(t, 0.4e1) * u * u + 0.3402e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.4167e4 * t * t * pow(u, 0.4e1) - 0.4923e4 * t * pow(u, 0.5e1) - 0.1458e4 * pow(u, 0.6e1) + 0.1428e4 * pow(t, 0.3e1) + 0.660e3 * t * t + 0.740e3 * pow(t, 0.4e1) + 0.680e3 * pow(t, 0.5e1)) * q3 + (0.105e3 * pow(t, 0.6e1) + 0.521e3 * pow(t, 0.5e1) * u + 0.872e3 * pow(t, 0.4e1) * u * u + 0.378e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.463e3 * t * t * pow(u, 0.4e1) - 0.547e3 * t * pow(u, 0.5e1) - 0.162e3 * pow(u, 0.6e1) + 0.24e2 * pow(t, 0.5e1) + 0.4e1 * pow(t, 0.4e1) * u - 0.224e3 * pow(t, 0.3e1) * u * u - 0.456e3 * t * t * pow(u, 0.3e1) - 0.344e3 * t * pow(u, 0.4e1) - 0.92e2 * pow(u, 0.5e1) + 0.156e3 * pow(t, 0.4e1) + 0.486e3 * pow(t, 0.3e1) * u + 0.378e3 * t * t * u * u - 0.78e2 * t * pow(u, 0.3e1) - 0.126e3 * pow(u, 0.4e1)) * q4 - 0.105e3 * pow(t, 0.7e1) + 0.23e2 * pow(t, 0.6e1) + 0.117e3 * pow(u, 0.4e1) + 0.192e3 * pow(u, 0.5e1) - 0.378e3 * pow(t, 0.3e1) * u - 0.333e3 * t * t * u * u - 0.600e3 * pow(t, 0.4e1) * u - 0.852e3 * pow(t, 0.3e1) * u * u + (0.1680e4 * t * t + 0.1616e4 * t * u - 0.2592e4 * u * u + 0.384e3 * t - 0.1472e4 * u) * pow(q3, 0.4e1) * q4 + (-0.3360e4 * pow(t, 0.3e1) - 0.6592e4 * t * t * u + 0.1952e4 * t * u * u + 0.5184e4 * pow(u, 0.3e1) - 0.4128e4 * t * t - 0.1056e4 * t * u + 0.8128e4 * u * u - 0.768e3 * t + 0.2944e4 * u) * pow(q3, 0.3e1) * q4 + (0.2520e4 * pow(t, 0.4e1) + 0.7464e4 * pow(t, 0.3e1) * u + 0.3480e4 * t * t * u * u - 0.5352e4 * t * pow(u, 0.3e1) - 0.3888e4 * pow(u, 0.4e1) + 0.3936e4 * pow(t, 0.3e1) + 0.5536e4 * t * t * u - 0.5792e4 * t * u * u - 0.7392e4 * pow(u, 0.3e1) + 0.3072e4 * t * t + 0.136e3 * t * u - 0.6040e4 * u * u + 0.384e3 * t - 0.1472e4 * u) * q3 * q3 * q4 + (-0.840e3 * pow(t, 0.5e1) - 0.3328e4 * pow(t, 0.4e1) * u - 0.3648e4 * pow(t, 0.3e1) * u * u + 0.624e3 * t * t * pow(u, 0.3e1) + 0.3080e4 * t * pow(u, 0.4e1) + 0.1296e4 * pow(u, 0.5e1) - 0.1032e4 * pow(t, 0.4e1) - 0.2328e4 * pow(t, 0.3e1) * u + 0.472e3 * t * t * u * u + 0.3800e4 * t * pow(u, 0.3e1) + 0.2032e4 * pow(u, 0.4e1) - 0.816e3 * pow(t, 0.3e1) - 0.968e3 * t * t * u + 0.1088e4 * t * u * u + 0.1240e4 * pow(u, 0.3e1) - 0.624e3 * t * t - 0.696e3 * t * u + 0.504e3 * u * u) * q3 * q4 + 0.60e2 * t * pow(u, 0.3e1) - 0.216e3 * t * t * pow(u, 0.3e1) + 0.354e3 * t * pow(u, 0.4e1) + 0.41e2 * pow(t, 0.5e1) * u + 0.14e2 * pow(t, 0.4e1) * u * u + 0.106e3 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.299e3 * t * t * pow(u, 0.4e1) + 0.269e3 * t * pow(u, 0.5e1) + 0.1010e4 * t * t * pow(u, 0.5e1) + 0.709e3 * t * pow(u, 0.6e1) - 0.626e3 * pow(t, 0.6e1) * u - 0.1393e4 * pow(t, 0.5e1) * u * u - 0.1250e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.85e2 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.80e2 * pow(u, 0.6e1) + 0.162e3 * pow(u, 0.7e1) - 0.102e3 * pow(t, 0.4e1) - 0.126e3 * pow(t, 0.5e1)) / u * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / t);
}
#include <math.h>

double GstarVVCoeffsC7e2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.4e1 / 0.81e2 * ((0.13152e5 * t * t - 0.1280e4 * t * u - 0.31968e5 * u * u - 0.1536e4 * t - 0.1024e4 * u) * pow(q3, 0.5e1) + (-0.39456e5 * pow(t, 0.3e1) - 0.35616e5 * t * t * u + 0.99744e5 * t * u * u + 0.95904e5 * pow(u, 0.3e1) - 0.27296e5 * t * t + 0.7488e4 * t * u + 0.80736e5 * u * u + 0.2976e4 * t + 0.2144e4 * u) * pow(q3, 0.4e1) + (0.46032e5 * pow(t, 0.4e1) + 0.87584e5 * pow(t, 0.3e1) * u - 0.74816e5 * t * t * u * u - 0.228256e6 * t * pow(u, 0.3e1) - 0.111888e6 * pow(u, 0.4e1) + 0.58432e5 * pow(t, 0.3e1) + 0.49856e5 * t * t * u - 0.167488e6 * t * u * u - 0.158912e6 * pow(u, 0.3e1) + 0.15904e5 * t * t - 0.7072e4 * t * u - 0.62560e5 * u * u - 0.1344e4 * t - 0.1216e4 * u) * pow(q3, 0.3e1) + (-0.26304e5 * pow(t, 0.5e1) - 0.76352e5 * pow(t, 0.4e1) * u - 0.7296e4 * pow(t, 0.3e1) * u * u + 0.173184e6 * t * t * pow(u, 0.3e1) + 0.194368e6 * t * pow(u, 0.4e1) + 0.63936e5 * pow(u, 0.5e1) - 0.38208e5 * pow(t, 0.4e1) - 0.72224e5 * pow(t, 0.3e1) * u + 0.72736e5 * t * t * u * u + 0.209312e6 * t * pow(u, 0.3e1) + 0.102560e6 * pow(u, 0.4e1) - 0.17200e5 * pow(t, 0.3e1) - 0.13872e5 * t * t * u + 0.64016e5 * t * u * u + 0.60688e5 * pow(u, 0.3e1) - 0.1388e4 * t * t + 0.894e3 * t * u + 0.13450e5 * u * u - 0.96e2 * t + 0.96e2 * u) * q3 * q3 + (0.7398e4 * pow(t, 0.6e1) + 0.28872e5 * pow(t, 0.5e1) * u + 0.23526e5 * pow(t, 0.4e1) * u * u - 0.46656e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.103374e6 * t * t * pow(u, 0.4e1) - 0.72648e5 * t * pow(u, 0.5e1) - 0.17982e5 * pow(u, 0.6e1) + 0.8512e4 * pow(t, 0.5e1) + 0.24832e5 * pow(t, 0.4e1) * u - 0.63872e5 * t * t * pow(u, 0.3e1) - 0.70976e5 * t * pow(u, 0.4e1) - 0.23424e5 * pow(u, 0.5e1) + 0.496e3 * pow(t, 0.4e1) + 0.728e3 * pow(t, 0.3e1) * u - 0.6880e4 * t * t * u * u - 0.13960e5 * t * pow(u, 0.3e1) - 0.6848e4 * pow(u, 0.4e1) - 0.1284e4 * pow(t, 0.3e1) - 0.1410e4 * t * t * u + 0.456e3 * t * u * u + 0.582e3 * pow(u, 0.3e1) - 0.372e3 * t * t - 0.30e2 * t * u + 0.342e3 * u * u) * q3 + (0.822e3 * pow(t, 0.6e1) + 0.3208e4 * pow(t, 0.5e1) * u + 0.2614e4 * pow(t, 0.4e1) * u * u - 0.5184e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.11486e5 * t * t * pow(u, 0.4e1) - 0.8072e4 * t * pow(u, 0.5e1) - 0.1998e4 * pow(u, 0.6e1) - 0.96e2 * pow(t, 0.5e1) - 0.448e3 * pow(t, 0.4e1) * u - 0.832e3 * pow(t, 0.3e1) * u * u - 0.768e3 * t * t * pow(u, 0.3e1) - 0.352e3 * t * pow(u, 0.4e1) - 0.64e2 * pow(u, 0.5e1) - 0.624e3 * pow(t, 0.4e1) - 0.1512e4 * pow(t, 0.3e1) * u - 0.864e3 * t * t * u * u + 0.312e3 * t * pow(u, 0.3e1) + 0.288e3 * pow(u, 0.4e1)) * q4 - 0.822e3 * pow(t, 0.7e1) - 0.254e3 * pow(t, 0.6e1) - 0.63e2 * pow(u, 0.4e1) - 0.66e2 * pow(u, 0.5e1) + 0.216e3 * pow(t, 0.3e1) * u - 0.45e2 * t * t * u * u + 0.726e3 * pow(t, 0.4e1) * u + 0.708e3 * pow(t, 0.3e1) * u * u - 0.186e3 * t * pow(u, 0.3e1) + 0.108e3 * t * t * pow(u, 0.3e1) - 0.174e3 * t * pow(u, 0.4e1) - 0.1028e4 * pow(t, 0.5e1) * u - 0.650e3 * pow(t, 0.4e1) * u * u + 0.2600e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.5230e4 * t * t * pow(u, 0.4e1) + 0.3676e4 * t * pow(u, 0.5e1) + 0.19558e5 * t * t * pow(u, 0.5e1) + (0.19728e5 * pow(t, 0.4e1) + 0.37536e5 * pow(t, 0.3e1) * u - 0.32064e5 * t * t * u * u - 0.97824e5 * t * pow(u, 0.3e1) - 0.47952e5 * pow(u, 0.4e1) + 0.24000e5 * pow(t, 0.3e1) + 0.17600e5 * t * t * u - 0.71872e5 * t * u * u - 0.65472e5 * pow(u, 0.3e1) + 0.7584e4 * t * t - 0.7456e4 * t * u - 0.32864e5 * u * u - 0.1536e4 * t - 0.1024e4 * u) * q3 * q3 * q4 + (-0.6576e4 * pow(t, 0.5e1) - 0.19088e5 * pow(t, 0.4e1) * u - 0.1824e4 * pow(t, 0.3e1) * u * u + 0.43296e5 * t * t * pow(u, 0.3e1) + 0.48592e5 * t * pow(u, 0.4e1) + 0.15984e5 * pow(u, 0.5e1) - 0.5808e4 * pow(t, 0.4e1) - 0.9696e4 * pow(t, 0.3e1) * u + 0.14528e5 * t * t * u * u + 0.34912e5 * t * pow(u, 0.3e1) + 0.16496e5 * pow(u, 0.4e1) + 0.3264e4 * pow(t, 0.3e1) + 0.5600e4 * t * t * u + 0.1696e4 * t * u * u - 0.640e3 * pow(u, 0.3e1) + 0.2496e4 * t * t + 0.1056e4 * t * u - 0.1152e4 * u * u) * q3 * q4 + (0.13152e5 * t * t - 0.1280e4 * t * u - 0.31968e5 * u * u - 0.1536e4 * t - 0.1024e4 * u) * pow(q3, 0.4e1) * q4 + (-0.26304e5 * pow(t, 0.3e1) - 0.23744e5 * t * t * u + 0.66496e5 * t * u * u + 0.63936e5 * pow(u, 0.3e1) - 0.23232e5 * t * t + 0.7680e4 * t * u + 0.65984e5 * u * u + 0.3072e4 * t + 0.2048e4 * u) * pow(q3, 0.3e1) * q4 + 0.10070e5 * t * pow(u, 0.6e1) - 0.4030e4 * pow(t, 0.6e1) * u - 0.5822e4 * pow(t, 0.5e1) * u * u + 0.2570e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.16670e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.922e3 * pow(u, 0.6e1) + 0.1998e4 * pow(u, 0.7e1) + 0.138e3 * pow(t, 0.4e1) + 0.234e3 * pow(t, 0.5e1)) / u * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / t);
}
double GstarVVCoeffsC8em2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0);
}
double GstarVVCoeffsC8em1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0.16e2 / u * q3 * q3 + 0.32e2 / u * q3 * q4 + (-0.32e2 * t / u - 0.104e3 / 0.3e1 + 0.8e1 / t * u - 0.16e2 / 0.3e1 / u) * q3 + 0.16e2 / u * q4 * q4 + (-0.32e2 * t / u - 0.104e3 / 0.3e1 + 0.8e1 / t * u - 0.16e2 / 0.3e1 / u) * q4 + 0.16e2 * t * t / u + 0.104e3 / 0.3e1 * t + 0.32e2 / 0.3e1 * u - 0.8e1 / t * u * u + 0.16e2 / 0.3e1 * t / u + 0.8e1 - 0.8e1 / 0.3e1 / t * u);
}
#include <math.h>

double GstarVVCoeffsC8e0 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.8e1 / 0.9e1 * (0.864e3 * t * pow(q4, 0.4e1) + (-0.1728e4 * t * t - 0.1728e4 * t * u - 0.1728e4 * t) * pow(q4, 0.3e1) + (0.1296e4 * pow(t, 0.3e1) + 0.2592e4 * t * t * u + 0.1296e4 * t * u * u + 0.1728e4 * t * t + 0.1728e4 * t * u + 0.864e3 * t) * q4 * q4 + (-0.432e3 * pow(t, 0.4e1) - 0.1296e4 * pow(t, 0.3e1) * u - 0.1296e4 * t * t * u * u - 0.432e3 * t * pow(u, 0.3e1) - 0.432e3 * pow(t, 0.3e1) - 0.864e3 * t * t * u - 0.432e3 * t * u * u) * q4 + 0.54e2 * pow(t, 0.5e1) + 0.216e3 * pow(t, 0.4e1) * u + 0.324e3 * pow(t, 0.3e1) * u * u + 0.216e3 * t * t * pow(u, 0.3e1) + 0.54e2 * t * pow(u, 0.4e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * q3 * q3 - 0.8e1 / 0.9e1 * (0.1728e4 * t * pow(q4, 0.5e1) + (-0.5328e4 * t * t - 0.5056e4 * t * u + 0.528e3 * u * u - 0.4448e4 * t + 0.384e3 * u) * pow(q4, 0.4e1) + (0.6336e4 * pow(t, 0.3e1) + 0.12128e5 * t * t * u + 0.4736e4 * t * u * u - 0.1056e4 * pow(u, 0.3e1) + 0.9184e4 * t * t + 0.7872e4 * t * u - 0.1824e4 * u * u + 0.3712e4 * t - 0.768e3 * u) * pow(q4, 0.3e1) + (-0.3672e4 * pow(t, 0.4e1) - 0.10608e5 * pow(t, 0.3e1) * u - 0.9408e4 * t * t * u * u - 0.1680e4 * t * pow(u, 0.3e1) + 0.792e3 * pow(u, 0.4e1) - 0.6096e4 * pow(t, 0.3e1) - 0.11072e5 * t * t * u - 0.3344e4 * t * u * u + 0.1632e4 * pow(u, 0.3e1) - 0.4000e4 * t * t - 0.2624e4 * t * u + 0.1488e4 * u * u - 0.992e3 * t + 0.384e3 * u) * q4 * q4 + (0.1044e4 * pow(t, 0.5e1) + 0.4040e4 * pow(t, 0.4e1) * u + 0.5592e4 * pow(t, 0.3e1) * u * u + 0.2976e4 * t * t * pow(u, 0.3e1) + 0.116e3 * t * pow(u, 0.4e1) - 0.264e3 * pow(u, 0.5e1) + 0.1432e4 * pow(t, 0.4e1) + 0.3968e4 * pow(t, 0.3e1) * u + 0.3184e4 * t * t * u * u + 0.192e3 * t * pow(u, 0.3e1) - 0.456e3 * pow(u, 0.4e1) + 0.640e3 * pow(t, 0.3e1) + 0.752e3 * t * t * u - 0.272e3 * t * u * u - 0.384e3 * pow(u, 0.3e1) + 0.144e3 * t * t - 0.192e3 * t * u - 0.192e3 * u * u) * q4 - 0.117e3 * pow(t, 0.6e1) - 0.568e3 * pow(t, 0.5e1) * u - 0.1069e4 * pow(t, 0.4e1) * u * u - 0.936e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.319e3 * t * t * pow(u, 0.4e1) + 0.32e2 * t * pow(u, 0.5e1) + 0.33e2 * pow(u, 0.6e1) - 0.62e2 * pow(t, 0.5e1) - 0.224e3 * pow(t, 0.4e1) * u - 0.276e3 * pow(t, 0.3e1) * u * u - 0.104e3 * t * t * pow(u, 0.3e1) + 0.34e2 * t * pow(u, 0.4e1) + 0.24e2 * pow(u, 0.5e1) - 0.36e2 * pow(t, 0.4e1) - 0.24e2 * pow(t, 0.3e1) * u + 0.108e3 * t * t * u * u + 0.144e3 * t * pow(u, 0.3e1) + 0.48e2 * pow(u, 0.4e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * q3 - 0.8e1 / 0.9e1 * (0.63e2 * pow(t, 0.7e1) + 0.59e2 * pow(t, 0.6e1) - 0.12e2 * pow(u, 0.4e1) - 0.36e2 * pow(u, 0.5e1) - 0.12e2 * pow(t, 0.3e1) * u - 0.90e2 * t * t * u * u + 0.84e2 * pow(t, 0.4e1) * u - 0.72e2 * pow(t, 0.3e1) * u * u - 0.72e2 * t * pow(u, 0.3e1) - 0.240e3 * t * t * pow(u, 0.3e1) - 0.168e3 * t * pow(u, 0.4e1) + 0.266e3 * pow(t, 0.5e1) * u + 0.449e3 * pow(t, 0.4e1) * u * u + 0.316e3 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.29e2 * t * t * pow(u, 0.4e1) - 0.70e2 * t * pow(u, 0.5e1) - 0.37e2 * t * t * pow(u, 0.5e1) + (-0.3600e4 * t * t - 0.3328e4 * t * u + 0.528e3 * u * u - 0.2720e4 * t + 0.384e3 * u) * pow(q4, 0.5e1) + (0.6048e4 * pow(t, 0.3e1) + 0.11280e5 * t * t * u + 0.3648e4 * t * u * u - 0.1584e4 * pow(u, 0.3e1) + 0.8400e4 * t * t + 0.6624e4 * t * u - 0.2224e4 * u * u + 0.3040e4 * t - 0.960e3 * u) * pow(q4, 0.4e1) + (-0.5256e4 * pow(t, 0.4e1) - 0.14816e5 * pow(t, 0.3e1) * u - 0.12016e5 * t * t * u * u - 0.608e3 * t * pow(u, 0.3e1) + 0.1848e4 * pow(u, 0.4e1) - 0.9568e4 * pow(t, 0.3e1) - 0.16544e5 * t * t * u - 0.3488e4 * t * u * u + 0.3488e4 * pow(u, 0.3e1) - 0.6272e4 * t * t - 0.3584e4 * t * u + 0.2672e4 * u * u - 0.1376e4 * t + 0.768e3 * u) * pow(q4, 0.3e1) + (0.2502e4 * pow(t, 0.5e1) + 0.9464e4 * pow(t, 0.4e1) * u + 0.12324e5 * pow(t, 0.3e1) * u * u + 0.5208e4 * t * t * pow(u, 0.3e1) - 0.1210e4 * t * pow(u, 0.4e1) - 0.1056e4 * pow(u, 0.5e1) + 0.4864e4 * pow(t, 0.4e1) + 0.13024e5 * pow(t, 0.3e1) * u + 0.9344e4 * t * t * u * u - 0.928e3 * t * pow(u, 0.3e1) - 0.2112e4 * pow(u, 0.4e1) + 0.3968e4 * pow(t, 0.3e1) + 0.5536e4 * t * t * u - 0.528e3 * t * u * u - 0.2096e4 * pow(u, 0.3e1) + 0.1508e4 * t * t + 0.204e3 * t * u - 0.1096e4 * u * u + 0.192e3 * t - 0.192e3 * u) * q4 * q4 + (0.120e3 * u * u - 0.621e3 * pow(t, 0.6e1) + 0.312e3 * pow(u, 0.3e1) + 0.440e3 * pow(u, 0.4e1) + 0.488e3 * pow(u, 0.5e1) + 0.48e2 * t * t * u + 0.636e3 * t * u * u + 0.84e2 * t * u - 0.1448e4 * pow(t, 0.3e1) * u - 0.212e3 * t * t * u * u - 0.3760e4 * pow(t, 0.4e1) * u - 0.4564e4 * pow(t, 0.3e1) * u * u + 0.928e3 * t * pow(u, 0.3e1) - 0.1512e4 * t * t * pow(u, 0.3e1) + 0.818e3 * t * pow(u, 0.4e1) - 0.2952e4 * pow(t, 0.5e1) * u - 0.5301e4 * pow(t, 0.4e1) * u * u - 0.4104e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.711e3 * t * t * pow(u, 0.4e1) + 0.720e3 * t * pow(u, 0.5e1) + 0.297e3 * pow(u, 0.6e1) - 0.276e3 * pow(t, 0.3e1) - 0.36e2 * t * t - 0.748e3 * pow(t, 0.4e1) - 0.1038e4 * pow(t, 0.5e1)) * q4 + 0.864e3 * t * pow(q4, 0.6e1) - 0.119e3 * t * pow(u, 0.6e1) + 0.361e3 * pow(t, 0.6e1) * u + 0.827e3 * pow(t, 0.5e1) * u * u + 0.925e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.445e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.25e2 * pow(u, 0.6e1) - 0.33e2 * pow(u, 0.7e1) + 0.18e2 * pow(t, 0.4e1) + 0.48e2 * pow(t, 0.5e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u);
}
#include <math.h>

double GstarVVCoeffsC8e1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.8e1 / 0.27e2 * ((0.2592e4 * t * t - 0.1616e4 * t * u - 0.1680e4 * u * u + 0.1472e4 * t - 0.384e3 * u) * pow(q4, 0.4e1) + (-0.5184e4 * pow(t, 0.3e1) - 0.1952e4 * t * t * u + 0.6592e4 * t * u * u + 0.3360e4 * pow(u, 0.3e1) - 0.8128e4 * t * t + 0.1056e4 * t * u + 0.4128e4 * u * u - 0.2944e4 * t + 0.768e3 * u) * pow(q4, 0.3e1) + (0.3888e4 * pow(t, 0.4e1) + 0.5352e4 * pow(t, 0.3e1) * u - 0.3480e4 * t * t * u * u - 0.7464e4 * t * pow(u, 0.3e1) - 0.2520e4 * pow(u, 0.4e1) + 0.7392e4 * pow(t, 0.3e1) + 0.5792e4 * t * t * u - 0.5536e4 * t * u * u - 0.3936e4 * pow(u, 0.3e1) + 0.6040e4 * t * t - 0.136e3 * t * u - 0.3072e4 * u * u + 0.1472e4 * t - 0.384e3 * u) * q4 * q4 + (-0.1296e4 * pow(t, 0.5e1) - 0.3080e4 * pow(t, 0.4e1) * u - 0.624e3 * pow(t, 0.3e1) * u * u + 0.3648e4 * t * t * pow(u, 0.3e1) + 0.3328e4 * t * pow(u, 0.4e1) + 0.840e3 * pow(u, 0.5e1) - 0.2032e4 * pow(t, 0.4e1) - 0.3800e4 * pow(t, 0.3e1) * u - 0.472e3 * t * t * u * u + 0.2328e4 * t * pow(u, 0.3e1) + 0.1032e4 * pow(u, 0.4e1) - 0.1240e4 * pow(t, 0.3e1) - 0.1088e4 * t * t * u + 0.968e3 * t * u * u + 0.816e3 * pow(u, 0.3e1) - 0.504e3 * t * t + 0.696e3 * t * u + 0.624e3 * u * u) * q4 + 0.162e3 * pow(t, 0.6e1) + 0.547e3 * pow(t, 0.5e1) * u + 0.463e3 * pow(t, 0.4e1) * u * u - 0.378e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.872e3 * t * t * pow(u, 0.4e1) - 0.521e3 * t * pow(u, 0.5e1) - 0.105e3 * pow(u, 0.6e1) + 0.92e2 * pow(t, 0.5e1) + 0.344e3 * pow(t, 0.4e1) * u + 0.456e3 * pow(t, 0.3e1) * u * u + 0.224e3 * t * t * pow(u, 0.3e1) - 0.4e1 * t * pow(u, 0.4e1) - 0.24e2 * pow(u, 0.5e1) + 0.126e3 * pow(t, 0.4e1) + 0.78e2 * pow(t, 0.3e1) * u - 0.378e3 * t * t * u * u - 0.486e3 * t * pow(u, 0.3e1) - 0.156e3 * pow(u, 0.4e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * q3 - 0.8e1 / 0.27e2 * (-0.162e3 * pow(t, 0.7e1) - 0.80e2 * pow(t, 0.6e1) + 0.102e3 * pow(u, 0.4e1) + 0.126e3 * pow(u, 0.5e1) - 0.60e2 * pow(t, 0.3e1) * u + 0.333e3 * t * t * u * u - 0.354e3 * pow(t, 0.4e1) * u + 0.216e3 * pow(t, 0.3e1) * u * u + 0.378e3 * t * pow(u, 0.3e1) + 0.852e3 * t * t * pow(u, 0.3e1) + 0.600e3 * t * pow(u, 0.4e1) - 0.269e3 * pow(t, 0.5e1) * u - 0.299e3 * pow(t, 0.4e1) * u * u - 0.106e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.14e2 * t * t * pow(u, 0.4e1) - 0.41e2 * t * pow(u, 0.5e1) + 0.1393e4 * t * t * pow(u, 0.5e1) + (-0.660e3 * u * u + 0.1458e4 * pow(t, 0.6e1) - 0.1428e4 * pow(u, 0.3e1) - 0.740e3 * pow(u, 0.4e1) - 0.680e3 * pow(u, 0.5e1) + 0.168e3 * t * t * u - 0.2634e4 * t * u * u - 0.318e3 * t * u + 0.2126e4 * pow(t, 0.3e1) * u - 0.1882e4 * t * t * u * u + 0.4936e4 * pow(t, 0.4e1) * u + 0.1960e4 * pow(t, 0.3e1) * u * u - 0.2950e4 * t * pow(u, 0.3e1) - 0.3456e4 * t * t * pow(u, 0.3e1) - 0.3188e4 * t * pow(u, 0.4e1) + 0.4923e4 * pow(t, 0.5e1) * u + 0.4167e4 * pow(t, 0.4e1) * u * u - 0.3402e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.7848e4 * t * t * pow(u, 0.4e1) - 0.4689e4 * t * pow(u, 0.5e1) - 0.945e3 * pow(u, 0.6e1) + 0.1374e4 * pow(t, 0.3e1) + 0.342e3 * t * t + 0.1798e4 * pow(t, 0.4e1) + 0.2028e4 * pow(t, 0.5e1)) * q4 + (0.2592e4 * t * t - 0.1616e4 * t * u - 0.1680e4 * u * u + 0.1472e4 * t - 0.384e3 * u) * pow(q4, 0.5e1) + (-0.7776e4 * pow(t, 0.3e1) - 0.2928e4 * t * t * u + 0.9888e4 * t * u * u + 0.5040e4 * pow(u, 0.3e1) - 0.9408e4 * t * t + 0.1872e4 * t * u + 0.3760e4 * u * u - 0.4000e4 * t + 0.1824e4 * u) * pow(q4, 0.4e1) + (0.9072e4 * pow(t, 0.4e1) + 0.12488e5 * pow(t, 0.3e1) * u - 0.8120e4 * t * t * u * u - 0.17416e5 * t * pow(u, 0.3e1) - 0.5880e4 * pow(u, 0.4e1) + 0.15136e5 * pow(t, 0.3e1) + 0.8672e4 * t * t * u - 0.13024e5 * t * u * u - 0.6560e4 * pow(u, 0.3e1) + 0.10712e5 * t * t - 0.1768e4 * t * u - 0.4448e4 * u * u + 0.3584e4 * t - 0.2496e4 * u) * pow(q4, 0.3e1) + (-0.5184e4 * pow(t, 0.5e1) - 0.12320e5 * pow(t, 0.4e1) * u - 0.2496e4 * pow(t, 0.3e1) * u * u + 0.14592e5 * t * t * pow(u, 0.3e1) + 0.13312e5 * t * pow(u, 0.4e1) + 0.3360e4 * pow(u, 0.5e1) - 0.9136e4 * pow(t, 0.4e1) - 0.13552e5 * pow(t, 0.3e1) * u + 0.4144e4 * t * t * u * u + 0.12400e5 * t * pow(u, 0.3e1) + 0.3840e4 * pow(u, 0.4e1) - 0.8480e4 * pow(t, 0.3e1) - 0.4192e4 * t * t * u + 0.7872e4 * t * u * u + 0.3584e4 * pow(u, 0.3e1) - 0.4238e4 * t * t + 0.1830e4 * t * u + 0.3028e4 * u * u - 0.1056e4 * t + 0.1056e4 * u) * q4 * q4 + 0.626e3 * t * pow(u, 0.6e1) - 0.709e3 * pow(t, 0.6e1) * u - 0.1010e4 * pow(t, 0.5e1) * u * u - 0.85e2 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1250e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.23e2 * pow(u, 0.6e1) + 0.105e3 * pow(u, 0.7e1) - 0.117e3 * pow(t, 0.4e1) - 0.192e3 * pow(t, 0.5e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u);
}
#include <math.h>

double GstarVVCoeffsC8e2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0.4e1 / 0.81e2 * ((0.31968e5 * t * t + 0.1280e4 * t * u - 0.13152e5 * u * u + 0.1024e4 * t + 0.1536e4 * u) * pow(q4, 0.4e1) + (-0.63936e5 * pow(t, 0.3e1) - 0.66496e5 * t * t * u + 0.23744e5 * t * u * u + 0.26304e5 * pow(u, 0.3e1) - 0.65984e5 * t * t - 0.7680e4 * t * u + 0.23232e5 * u * u - 0.2048e4 * t - 0.3072e4 * u) * pow(q4, 0.3e1) + (0.47952e5 * pow(t, 0.4e1) + 0.97824e5 * pow(t, 0.3e1) * u + 0.32064e5 * t * t * u * u - 0.37536e5 * t * pow(u, 0.3e1) - 0.19728e5 * pow(u, 0.4e1) + 0.65472e5 * pow(t, 0.3e1) + 0.71872e5 * t * t * u - 0.17600e5 * t * u * u - 0.24000e5 * pow(u, 0.3e1) + 0.32864e5 * t * t + 0.7456e4 * t * u - 0.7584e4 * u * u + 0.1024e4 * t + 0.1536e4 * u) * q4 * q4 + (-0.15984e5 * pow(t, 0.5e1) - 0.48592e5 * pow(t, 0.4e1) * u - 0.43296e5 * pow(t, 0.3e1) * u * u + 0.1824e4 * t * t * pow(u, 0.3e1) + 0.19088e5 * t * pow(u, 0.4e1) + 0.6576e4 * pow(u, 0.5e1) - 0.16496e5 * pow(t, 0.4e1) - 0.34912e5 * pow(t, 0.3e1) * u - 0.14528e5 * t * t * u * u + 0.9696e4 * t * pow(u, 0.3e1) + 0.5808e4 * pow(u, 0.4e1) + 0.640e3 * pow(t, 0.3e1) - 0.1696e4 * t * t * u - 0.5600e4 * t * u * u - 0.3264e4 * pow(u, 0.3e1) + 0.1152e4 * t * t - 0.1056e4 * t * u - 0.2496e4 * u * u) * q4 + 0.1998e4 * pow(t, 0.6e1) + 0.8072e4 * pow(t, 0.5e1) * u + 0.11486e5 * pow(t, 0.4e1) * u * u + 0.5184e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.2614e4 * t * t * pow(u, 0.4e1) - 0.3208e4 * t * pow(u, 0.5e1) - 0.822e3 * pow(u, 0.6e1) + 0.64e2 * pow(t, 0.5e1) + 0.352e3 * pow(t, 0.4e1) * u + 0.768e3 * pow(t, 0.3e1) * u * u + 0.832e3 * t * t * pow(u, 0.3e1) + 0.448e3 * t * pow(u, 0.4e1) + 0.96e2 * pow(u, 0.5e1) - 0.288e3 * pow(t, 0.4e1) - 0.312e3 * pow(t, 0.3e1) * u + 0.864e3 * t * t * u * u + 0.1512e4 * t * pow(u, 0.3e1) + 0.624e3 * pow(u, 0.4e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * q3 + 0.4e1 / 0.81e2 * (-0.1998e4 * pow(t, 0.7e1) - 0.922e3 * pow(t, 0.6e1) - 0.138e3 * pow(u, 0.4e1) - 0.234e3 * pow(u, 0.5e1) + 0.186e3 * pow(t, 0.3e1) * u + 0.45e2 * t * t * u * u + 0.174e3 * pow(t, 0.4e1) * u - 0.108e3 * pow(t, 0.3e1) * u * u + (0.31968e5 * t * t + 0.1280e4 * t * u - 0.13152e5 * u * u + 0.1024e4 * t + 0.1536e4 * u) * pow(q4, 0.5e1) + (-0.95904e5 * pow(t, 0.3e1) - 0.99744e5 * t * t * u + 0.35616e5 * t * u * u + 0.39456e5 * pow(u, 0.3e1) - 0.80736e5 * t * t - 0.7488e4 * t * u + 0.27296e5 * u * u - 0.2144e4 * t - 0.2976e4 * u) * pow(q4, 0.4e1) + (0.111888e6 * pow(t, 0.4e1) + 0.228256e6 * pow(t, 0.3e1) * u + 0.74816e5 * t * t * u * u - 0.87584e5 * t * pow(u, 0.3e1) - 0.46032e5 * pow(u, 0.4e1) + 0.158912e6 * pow(t, 0.3e1) + 0.167488e6 * t * t * u - 0.49856e5 * t * u * u - 0.58432e5 * pow(u, 0.3e1) + 0.62560e5 * t * t + 0.7072e4 * t * u - 0.15904e5 * u * u + 0.1216e4 * t + 0.1344e4 * u) * pow(q4, 0.3e1) + (-0.63936e5 * pow(t, 0.5e1) - 0.194368e6 * pow(t, 0.4e1) * u - 0.173184e6 * pow(t, 0.3e1) * u * u + 0.7296e4 * t * t * pow(u, 0.3e1) + 0.76352e5 * t * pow(u, 0.4e1) + 0.26304e5 * pow(u, 0.5e1) - 0.102560e6 * pow(t, 0.4e1) - 0.209312e6 * pow(t, 0.3e1) * u - 0.72736e5 * t * t * u * u + 0.72224e5 * t * pow(u, 0.3e1) + 0.38208e5 * pow(u, 0.4e1) - 0.60688e5 * pow(t, 0.3e1) - 0.64016e5 * t * t * u + 0.13872e5 * t * u * u + 0.17200e5 * pow(u, 0.3e1) - 0.13450e5 * t * t - 0.894e3 * t * u + 0.1388e4 * u * u - 0.96e2 * t + 0.96e2 * u) * q4 * q4 + (0.17982e5 * pow(t, 0.6e1) + 0.72648e5 * pow(t, 0.5e1) * u + 0.103374e6 * pow(t, 0.4e1) * u * u + 0.46656e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.23526e5 * t * t * pow(u, 0.4e1) - 0.28872e5 * t * pow(u, 0.5e1) - 0.7398e4 * pow(u, 0.6e1) + 0.23424e5 * pow(t, 0.5e1) + 0.70976e5 * pow(t, 0.4e1) * u + 0.63872e5 * pow(t, 0.3e1) * u * u - 0.24832e5 * t * pow(u, 0.4e1) - 0.8512e4 * pow(u, 0.5e1) + 0.6848e4 * pow(t, 0.4e1) + 0.13960e5 * pow(t, 0.3e1) * u + 0.6880e4 * t * t * u * u - 0.728e3 * t * pow(u, 0.3e1) - 0.496e3 * pow(u, 0.4e1) - 0.582e3 * pow(t, 0.3e1) - 0.456e3 * t * t * u + 0.1410e4 * t * u * u + 0.1284e4 * pow(u, 0.3e1) - 0.342e3 * t * t + 0.30e2 * t * u + 0.372e3 * u * u) * q4 - 0.216e3 * t * pow(u, 0.3e1) - 0.708e3 * t * t * pow(u, 0.3e1) - 0.726e3 * t * pow(u, 0.4e1) - 0.3676e4 * pow(t, 0.5e1) * u - 0.5230e4 * pow(t, 0.4e1) * u * u - 0.2600e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.650e3 * t * t * pow(u, 0.4e1) + 0.1028e4 * t * pow(u, 0.5e1) + 0.5822e4 * t * t * pow(u, 0.5e1) + 0.4030e4 * t * pow(u, 0.6e1) - 0.10070e5 * pow(t, 0.6e1) * u - 0.19558e5 * pow(t, 0.5e1) * u * u - 0.16670e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.2570e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.254e3 * pow(u, 0.6e1) + 0.822e3 * pow(u, 0.7e1) + 0.63e2 * pow(t, 0.4e1) + 0.66e2 * pow(t, 0.5e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u);
}
double GstarVVCoeffsC9em2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0);
}
double GstarVVCoeffsC9em1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0);
}
#include <math.h>

double GstarVVCoeffsC9e0 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0.32e2 / 0.3e1 * (0.2e1 * pow(t, 0.7e1) + pow(t, 0.6e1) + 0.2e1 * pow(u, 0.5e1) + (0.48e2 * t + 0.224e3 * u) * pow(q3, 0.5e1) * q4 + (0.48e2 * t + 0.112e3 * u) * pow(q3, 0.4e1) * q4 * q4 + (-0.160e3 * t * t - 0.800e3 * t * u - 0.672e3 * u * u - 0.144e3 * t - 0.512e3 * u) * pow(q3, 0.4e1) * q4 + (-0.96e2 * t * t - 0.320e3 * t * u - 0.224e3 * u * u - 0.96e2 * t - 0.224e3 * u) * pow(q3, 0.3e1) * q4 * q4 + (0.200e3 * pow(t, 0.3e1) + 0.1120e4 * t * t * u + 0.1704e4 * t * u * u + 0.784e3 * pow(u, 0.3e1) + 0.320e3 * t * t + 0.1280e4 * t * u + 0.1024e4 * u * u + 0.144e3 * t + 0.352e3 * u) * pow(q3, 0.3e1) * q4 + (0.72e2 * pow(t, 0.3e1) + 0.312e3 * t * t * u + 0.408e3 * t * u * u + 0.168e3 * pow(u, 0.3e1) + 0.96e2 * t * t + 0.320e3 * t * u + 0.224e3 * u * u + 0.48e2 * t + 0.112e3 * u) * q3 * q3 * q4 * q4 + (-0.120e3 * pow(t, 0.4e1) - 0.760e3 * pow(t, 0.3e1) * u - 0.1608e4 * t * t * u * u - 0.1416e4 * t * pow(u, 0.3e1) - 0.448e3 * pow(u, 0.4e1) - 0.216e3 * pow(t, 0.3e1) - 0.1028e4 * t * t * u - 0.1480e4 * t * u * u - 0.668e3 * pow(u, 0.3e1) - 0.160e3 * t * t - 0.480e3 * t * u - 0.352e3 * u * u - 0.48e2 * t - 0.64e2 * u) * q3 * q3 * q4 + (-0.24e2 * pow(t, 0.4e1) - 0.128e3 * pow(t, 0.3e1) * u - 0.240e3 * t * t * u * u - 0.192e3 * t * pow(u, 0.3e1) - 0.56e2 * pow(u, 0.4e1) - 0.24e2 * pow(t, 0.3e1) - 0.104e3 * t * t * u - 0.136e3 * t * u * u - 0.56e2 * pow(u, 0.3e1)) * q3 * q4 * q4 + (0.35e2 * pow(t, 0.5e1) + 0.250e3 * pow(t, 0.4e1) * u + 0.666e3 * pow(t, 0.3e1) * u * u + 0.848e3 * t * t * pow(u, 0.3e1) + 0.523e3 * t * pow(u, 0.4e1) + 0.126e3 * pow(u, 0.5e1) + 0.48e2 * pow(t, 0.4e1) + 0.276e3 * pow(t, 0.3e1) * u + 0.564e3 * t * t * u * u + 0.492e3 * t * pow(u, 0.3e1) + 0.156e3 * pow(u, 0.4e1) + 0.16e2 * pow(t, 0.3e1) + 0.68e2 * t * t * u + 0.96e2 * t * u * u + 0.44e2 * pow(u, 0.3e1)) * q3 * q4 + 0.2e1 * pow(t, 0.3e1) * u * u + 0.6e1 * t * t * pow(u, 0.3e1) + 0.6e1 * t * pow(u, 0.4e1) + 0.8e1 * pow(t, 0.5e1) * u + 0.29e2 * pow(t, 0.4e1) * u * u + 0.56e2 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.59e2 * t * t * pow(u, 0.4e1) + 0.32e2 * t * pow(u, 0.5e1) + 0.102e3 * t * t * pow(u, 0.5e1) + 0.41e2 * t * pow(u, 0.6e1) + (0.32e2 * t + 0.112e3 * u) * pow(q3, 0.6e1) + (-0.112e3 * t * t - 0.528e3 * t * u - 0.448e3 * u * u - 0.96e2 * t - 0.288e3 * u) * pow(q3, 0.5e1) + (0.176e3 * pow(t, 0.3e1) + 0.968e3 * t * t * u + 0.1520e4 * t * u * u + 0.728e3 * pow(u, 0.3e1) + 0.256e3 * t * t + 0.1056e4 * t * u + 0.864e3 * u * u + 0.108e3 * t + 0.252e3 * u) * pow(q3, 0.4e1) + (-0.152e3 * pow(t, 0.4e1) - 0.928e3 * pow(t, 0.3e1) * u - 0.2016e4 * t * t * u * u - 0.1856e4 * t * pow(u, 0.3e1) - 0.616e3 * pow(u, 0.4e1) - 0.280e3 * pow(t, 0.3e1) - 0.1356e4 * t * t * u - 0.2040e4 * t * u * u - 0.964e3 * pow(u, 0.3e1) - 0.200e3 * t * t - 0.672e3 * t * u - 0.504e3 * u * u - 0.56e2 * t - 0.88e2 * u) * pow(q3, 0.3e1) + (0.74e2 * pow(t, 0.5e1) + 0.495e3 * pow(t, 0.4e1) * u + 0.1328e4 * pow(t, 0.3e1) * u * u + 0.1754e4 * t * t * pow(u, 0.3e1) + 0.1134e4 * t * pow(u, 0.4e1) + 0.287e3 * pow(u, 0.5e1) + 0.140e3 * pow(t, 0.4e1) + 0.772e3 * pow(t, 0.3e1) * u + 0.1612e4 * t * t * u * u + 0.1468e4 * t * pow(u, 0.3e1) + 0.488e3 * pow(u, 0.4e1) + 0.116e3 * pow(t, 0.3e1) + 0.484e3 * t * t * u + 0.672e3 * t * u * u + 0.304e3 * pow(u, 0.3e1) + 0.56e2 * t * t + 0.144e3 * t * u + 0.88e2 * u * u + 0.12e2 * t + 0.12e2 * u) * q3 * q3 + (-0.19e2 * pow(t, 0.6e1) - 0.139e3 * pow(t, 0.5e1) * u - 0.436e3 * pow(t, 0.4e1) * u * u - 0.734e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.691e3 * t * t * pow(u, 0.4e1) - 0.343e3 * t * pow(u, 0.5e1) - 0.70e2 * pow(u, 0.6e1) - 0.28e2 * pow(t, 0.5e1) - 0.177e3 * pow(t, 0.4e1) * u - 0.470e3 * pow(t, 0.3e1) * u * u - 0.628e3 * t * t * pow(u, 0.3e1) - 0.414e3 * t * pow(u, 0.4e1) - 0.107e3 * pow(u, 0.5e1) - 0.12e2 * pow(t, 0.4e1) - 0.76e2 * pow(t, 0.3e1) * u - 0.168e3 * t * t * u * u - 0.156e3 * t * pow(u, 0.3e1) - 0.52e2 * pow(u, 0.4e1) - 0.12e2 * t * t * u - 0.20e2 * t * u * u - 0.8e1 * pow(u, 0.3e1)) * q3 + (0.3e1 * pow(t, 0.5e1) + 0.19e2 * pow(t, 0.4e1) * u + 0.46e2 * pow(t, 0.3e1) * u * u + 0.54e2 * t * t * pow(u, 0.3e1) + 0.31e2 * t * pow(u, 0.4e1) + 0.7e1 * pow(u, 0.5e1)) * q4 * q4 + (-0.4e1 * pow(t, 0.6e1) - 0.32e2 * pow(t, 0.5e1) * u - 0.102e3 * pow(t, 0.4e1) * u * u - 0.168e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.152e3 * t * t * pow(u, 0.4e1) - 0.72e2 * t * pow(u, 0.5e1) - 0.14e2 * pow(u, 0.6e1) - pow(t, 0.5e1) - 0.9e1 * pow(t, 0.4e1) * u - 0.28e2 * pow(t, 0.3e1) * u * u - 0.40e2 * t * t * pow(u, 0.3e1) - 0.27e2 * t * pow(u, 0.4e1) - 0.7e1 * pow(u, 0.5e1)) * q4 + 0.16e2 * pow(t, 0.6e1) * u + 0.57e2 * pow(t, 0.5e1) * u * u + 0.115e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.140e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.7e1 * pow(u, 0.6e1) + 0.7e1 * pow(u, 0.7e1)) / u * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / t);
}
#include <math.h>

double GstarVVCoeffsC9e1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.32e2 / 0.9e1 * (0.8e1 * pow(t, 0.7e1) + pow(t, 0.6e1) + 0.20e2 * pow(u, 0.5e1) + 0.464e3 * u * pow(q3, 0.5e1) * q4 + 0.3e1 * pow(t, 0.4e1) * u + 0.29e2 * pow(t, 0.3e1) * u * u + 0.69e2 * t * t * pow(u, 0.3e1) + 0.63e2 * t * pow(u, 0.4e1) + 0.17e2 * pow(t, 0.5e1) * u + 0.98e2 * pow(t, 0.4e1) * u * u + 0.242e3 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.293e3 * t * t * pow(u, 0.4e1) + 0.173e3 * t * pow(u, 0.5e1) + 0.258e3 * t * t * pow(u, 0.5e1) + 0.107e3 * t * pow(u, 0.6e1) + (0.144e3 * t + 0.352e3 * u) * pow(q3, 0.4e1) * q4 * q4 + (-0.160e3 * t * t - 0.1520e4 * t * u - 0.1488e4 * u * u - 0.216e3 * t - 0.1304e4 * u) * pow(q3, 0.4e1) * q4 + (-0.288e3 * t * t - 0.992e3 * t * u - 0.704e3 * u * u - 0.288e3 * t - 0.704e3 * u) * pow(q3, 0.3e1) * q4 * q4 + (0.320e3 * pow(t, 0.3e1) + 0.2200e4 * t * t * u + 0.3696e4 * t * u * u + 0.1816e4 * pow(u, 0.3e1) + 0.752e3 * t * t + 0.3296e4 * t * u + 0.2800e4 * u * u + 0.432e3 * t + 0.1216e4 * u) * pow(q3, 0.3e1) * q4 + (0.216e3 * pow(t, 0.3e1) + 0.960e3 * t * t * u + 0.1272e4 * t * u * u + 0.528e3 * pow(u, 0.3e1) + 0.288e3 * t * t + 0.992e3 * t * u + 0.704e3 * u * u + 0.144e3 * t + 0.352e3 * u) * q3 * q3 * q4 * q4 + (-0.240e3 * pow(t, 0.4e1) - 0.1600e4 * pow(t, 0.3e1) * u - 0.3552e4 * t * t * u * u - 0.3264e4 * t * pow(u, 0.3e1) - 0.1072e4 * pow(u, 0.4e1) - 0.594e3 * pow(t, 0.3e1) - 0.2870e4 * t * t * u - 0.4270e4 * t * u * u - 0.1994e4 * pow(u, 0.3e1) - 0.592e3 * t * t - 0.1776e4 * t * u - 0.1312e4 * u * u - 0.216e3 * t - 0.376e3 * u) * q3 * q3 * q4 + (-0.72e2 * pow(t, 0.4e1) - 0.392e3 * pow(t, 0.3e1) * u - 0.744e3 * t * t * u * u - 0.600e3 * t * pow(u, 0.3e1) - 0.176e3 * pow(u, 0.4e1) - 0.72e2 * pow(t, 0.3e1) - 0.320e3 * t * t * u - 0.424e3 * t * u * u - 0.176e3 * pow(u, 0.3e1)) * q3 * q4 * q4 + (0.80e2 * pow(t, 0.5e1) + 0.565e3 * pow(t, 0.4e1) * u + 0.1524e4 * pow(t, 0.3e1) * u * u + 0.1982e4 * t * t * pow(u, 0.3e1) + 0.1252e4 * t * pow(u, 0.4e1) + 0.309e3 * pow(u, 0.5e1) + 0.138e3 * pow(t, 0.4e1) + 0.840e3 * pow(t, 0.3e1) * u + 0.1812e4 * t * t * u * u + 0.1656e4 * t * pow(u, 0.3e1) + 0.546e3 * pow(u, 0.4e1) + 0.58e2 * pow(t, 0.3e1) + 0.326e3 * t * t * u + 0.534e3 * t * u * u + 0.266e3 * pow(u, 0.3e1)) * q3 * q4 + 0.52e2 * pow(t, 0.6e1) * u + 0.159e3 * pow(t, 0.5e1) * u * u + 0.295e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.350e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.40e2 * pow(u, 0.6e1) + 0.19e2 * pow(u, 0.7e1) + (0.176e3 * t + 0.400e3 * u) * pow(q3, 0.6e1) + (-0.544e3 * t * t - 0.1824e4 * t * u - 0.1408e4 * u * u - 0.600e3 * t - 0.1224e4 * u) * pow(q3, 0.5e1) + (0.776e3 * pow(t, 0.3e1) + 0.3176e4 * t * t * u + 0.4520e4 * t * u * u + 0.2120e4 * pow(u, 0.3e1) + 0.1336e4 * t * t + 0.4272e4 * t * u + 0.3192e4 * u * u + 0.774e3 * t + 0.1350e4 * u) * pow(q3, 0.4e1) + (-0.632e3 * pow(t, 0.4e1) - 0.2944e4 * pow(t, 0.3e1) * u - 0.5712e4 * t * t * u * u - 0.5120e4 * t * pow(u, 0.3e1) - 0.1720e4 * pow(u, 0.4e1) - 0.1258e4 * pow(t, 0.3e1) - 0.5118e4 * t * t * u - 0.7254e4 * t * u * u - 0.3394e4 * pow(u, 0.3e1) - 0.1100e4 * t * t - 0.3288e4 * t * u - 0.2316e4 * u * u - 0.452e3 * t - 0.628e3 * u) * pow(q3, 0.3e1) + (0.299e3 * pow(t, 0.5e1) + 0.1557e4 * pow(t, 0.4e1) * u + 0.3662e4 * pow(t, 0.3e1) * u * u + 0.4634e4 * t * t * pow(u, 0.3e1) + 0.3015e4 * t * pow(u, 0.4e1) + 0.785e3 * pow(u, 0.5e1) + 0.560e3 * pow(t, 0.4e1) + 0.2740e4 * pow(t, 0.3e1) * u + 0.5572e4 * t * t * u * u + 0.5164e4 * t * pow(u, 0.3e1) + 0.1772e4 * pow(u, 0.4e1) + 0.518e3 * pow(t, 0.3e1) + 0.2188e4 * t * t * u + 0.3108e4 * t * u * u + 0.1438e4 * pow(u, 0.3e1) + 0.308e3 * t * t + 0.840e3 * t * u + 0.532e3 * u * u + 0.102e3 * t + 0.102e3 * u) * q3 * q3 + (-0.76e2 * pow(t, 0.6e1) - 0.442e3 * pow(t, 0.5e1) * u - 0.1198e4 * pow(t, 0.4e1) * u * u - 0.1892e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1768e4 * t * t * pow(u, 0.4e1) - 0.898e3 * t * pow(u, 0.5e1) - 0.190e3 * pow(u, 0.6e1) - 0.97e2 * pow(t, 0.5e1) - 0.582e3 * pow(t, 0.4e1) * u - 0.1604e4 * pow(t, 0.3e1) * u * u - 0.2290e4 * t * t * pow(u, 0.3e1) - 0.1611e4 * t * pow(u, 0.4e1) - 0.440e3 * pow(u, 0.5e1) - 0.36e2 * pow(t, 0.4e1) - 0.334e3 * pow(t, 0.3e1) * u - 0.888e3 * t * t * u * u - 0.918e3 * t * pow(u, 0.3e1) - 0.328e3 * pow(u, 0.4e1) - 0.6e1 * pow(t, 0.3e1) - 0.108e3 * t * t * u - 0.188e3 * t * u * u - 0.86e2 * pow(u, 0.3e1)) * q3 + (0.9e1 * pow(t, 0.5e1) + 0.58e2 * pow(t, 0.4e1) * u + 0.142e3 * pow(t, 0.3e1) * u * u + 0.168e3 * t * t * pow(u, 0.3e1) + 0.97e2 * t * pow(u, 0.4e1) + 0.22e2 * pow(u, 0.5e1)) * q4 * q4 + (-0.10e2 * pow(t, 0.6e1) - 0.77e2 * pow(t, 0.5e1) * u - 0.243e3 * pow(t, 0.4e1) * u * u - 0.402e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.368e3 * t * t * pow(u, 0.4e1) - 0.177e3 * t * pow(u, 0.5e1) - 0.35e2 * pow(u, 0.6e1) - pow(t, 0.5e1) - 0.33e2 * pow(t, 0.4e1) * u - 0.136e3 * pow(t, 0.3e1) * u * u - 0.220e3 * t * t * pow(u, 0.3e1) - 0.159e3 * t * pow(u, 0.4e1) - 0.43e2 * pow(u, 0.5e1)) * q4) / u * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / t);
}
double GstarVVCoeffsC10em2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0);
}
double GstarVVCoeffsC10em1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0);
}
#include <math.h>

double GstarVVCoeffsC10e0 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0.32e2 / 0.3e1 * ((0.112e3 * t + 0.48e2 * u) * pow(q4, 0.4e1) + (-0.224e3 * t * t - 0.320e3 * t * u - 0.96e2 * u * u - 0.224e3 * t - 0.96e2 * u) * pow(q4, 0.3e1) + (0.168e3 * pow(t, 0.3e1) + 0.408e3 * t * t * u + 0.312e3 * t * u * u + 0.72e2 * pow(u, 0.3e1) + 0.224e3 * t * t + 0.320e3 * t * u + 0.96e2 * u * u + 0.112e3 * t + 0.48e2 * u) * q4 * q4 + (-0.56e2 * pow(t, 0.4e1) - 0.192e3 * pow(t, 0.3e1) * u - 0.240e3 * t * t * u * u - 0.128e3 * t * pow(u, 0.3e1) - 0.24e2 * pow(u, 0.4e1) - 0.56e2 * pow(t, 0.3e1) - 0.136e3 * t * t * u - 0.104e3 * t * u * u - 0.24e2 * pow(u, 0.3e1)) * q4 + 0.7e1 * pow(t, 0.5e1) + 0.31e2 * pow(t, 0.4e1) * u + 0.54e2 * pow(t, 0.3e1) * u * u + 0.46e2 * t * t * pow(u, 0.3e1) + 0.19e2 * t * pow(u, 0.4e1) + 0.3e1 * pow(u, 0.5e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * q3 * q3 + 0.32e2 / 0.3e1 * ((0.224e3 * t + 0.48e2 * u) * pow(q4, 0.5e1) + (-0.672e3 * t * t - 0.800e3 * t * u - 0.160e3 * u * u - 0.512e3 * t - 0.144e3 * u) * pow(q4, 0.4e1) + (0.784e3 * pow(t, 0.3e1) + 0.1704e4 * t * t * u + 0.1120e4 * t * u * u + 0.200e3 * pow(u, 0.3e1) + 0.1024e4 * t * t + 0.1280e4 * t * u + 0.320e3 * u * u + 0.352e3 * t + 0.144e3 * u) * pow(q4, 0.3e1) + (-0.448e3 * pow(t, 0.4e1) - 0.1416e4 * pow(t, 0.3e1) * u - 0.1608e4 * t * t * u * u - 0.760e3 * t * pow(u, 0.3e1) - 0.120e3 * pow(u, 0.4e1) - 0.668e3 * pow(t, 0.3e1) - 0.1480e4 * t * t * u - 0.1028e4 * t * u * u - 0.216e3 * pow(u, 0.3e1) - 0.352e3 * t * t - 0.480e3 * t * u - 0.160e3 * u * u - 0.64e2 * t - 0.48e2 * u) * q4 * q4 + (0.126e3 * pow(t, 0.5e1) + 0.523e3 * pow(t, 0.4e1) * u + 0.848e3 * pow(t, 0.3e1) * u * u + 0.666e3 * t * t * pow(u, 0.3e1) + 0.250e3 * t * pow(u, 0.4e1) + 0.35e2 * pow(u, 0.5e1) + 0.156e3 * pow(t, 0.4e1) + 0.492e3 * pow(t, 0.3e1) * u + 0.564e3 * t * t * u * u + 0.276e3 * t * pow(u, 0.3e1) + 0.48e2 * pow(u, 0.4e1) + 0.44e2 * pow(t, 0.3e1) + 0.96e2 * t * t * u + 0.68e2 * t * u * u + 0.16e2 * pow(u, 0.3e1)) * q4 - 0.14e2 * pow(t, 0.6e1) - 0.72e2 * pow(t, 0.5e1) * u - 0.152e3 * pow(t, 0.4e1) * u * u - 0.168e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.102e3 * t * t * pow(u, 0.4e1) - 0.32e2 * t * pow(u, 0.5e1) - 0.4e1 * pow(u, 0.6e1) - 0.7e1 * pow(t, 0.5e1) - 0.27e2 * pow(t, 0.4e1) * u - 0.40e2 * pow(t, 0.3e1) * u * u - 0.28e2 * t * t * pow(u, 0.3e1) - 0.9e1 * t * pow(u, 0.4e1) - pow(u, 0.5e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * q3 + 0.32e2 / 0.3e1 * (0.7e1 * pow(t, 0.7e1) + 0.7e1 * pow(t, 0.6e1) + 0.6e1 * pow(t, 0.4e1) * u + 0.6e1 * pow(t, 0.3e1) * u * u + 0.2e1 * t * t * pow(u, 0.3e1) + 0.32e2 * pow(t, 0.5e1) * u + 0.59e2 * pow(t, 0.4e1) * u * u + 0.56e2 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.29e2 * t * t * pow(u, 0.4e1) + 0.8e1 * t * pow(u, 0.5e1) + 0.57e2 * t * t * pow(u, 0.5e1) + 0.16e2 * t * pow(u, 0.6e1) + 0.41e2 * pow(t, 0.6e1) * u + 0.102e3 * pow(t, 0.5e1) * u * u + 0.140e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.115e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + (-0.70e2 * pow(t, 0.6e1) - 0.343e3 * pow(t, 0.5e1) * u - 0.691e3 * pow(t, 0.4e1) * u * u - 0.734e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.436e3 * t * t * pow(u, 0.4e1) - 0.139e3 * t * pow(u, 0.5e1) - 0.19e2 * pow(u, 0.6e1) - 0.107e3 * pow(t, 0.5e1) - 0.414e3 * pow(t, 0.4e1) * u - 0.628e3 * pow(t, 0.3e1) * u * u - 0.470e3 * t * t * pow(u, 0.3e1) - 0.177e3 * t * pow(u, 0.4e1) - 0.28e2 * pow(u, 0.5e1) - 0.52e2 * pow(t, 0.4e1) - 0.156e3 * pow(t, 0.3e1) * u - 0.168e3 * t * t * u * u - 0.76e2 * t * pow(u, 0.3e1) - 0.12e2 * pow(u, 0.4e1) - 0.8e1 * pow(t, 0.3e1) - 0.20e2 * t * t * u - 0.12e2 * t * u * u) * q4 + pow(u, 0.6e1) + 0.2e1 * pow(u, 0.7e1) + (0.112e3 * t + 0.32e2 * u) * pow(q4, 0.6e1) + (-0.448e3 * t * t - 0.528e3 * t * u - 0.112e3 * u * u - 0.288e3 * t - 0.96e2 * u) * pow(q4, 0.5e1) + (0.728e3 * pow(t, 0.3e1) + 0.1520e4 * t * t * u + 0.968e3 * t * u * u + 0.176e3 * pow(u, 0.3e1) + 0.864e3 * t * t + 0.1056e4 * t * u + 0.256e3 * u * u + 0.252e3 * t + 0.108e3 * u) * pow(q4, 0.4e1) + (-0.616e3 * pow(t, 0.4e1) - 0.1856e4 * pow(t, 0.3e1) * u - 0.2016e4 * t * t * u * u - 0.928e3 * t * pow(u, 0.3e1) - 0.152e3 * pow(u, 0.4e1) - 0.964e3 * pow(t, 0.3e1) - 0.2040e4 * t * t * u - 0.1356e4 * t * u * u - 0.280e3 * pow(u, 0.3e1) - 0.504e3 * t * t - 0.672e3 * t * u - 0.200e3 * u * u - 0.88e2 * t - 0.56e2 * u) * pow(q4, 0.3e1) + (0.287e3 * pow(t, 0.5e1) + 0.1134e4 * pow(t, 0.4e1) * u + 0.1754e4 * pow(t, 0.3e1) * u * u + 0.1328e4 * t * t * pow(u, 0.3e1) + 0.495e3 * t * pow(u, 0.4e1) + 0.74e2 * pow(u, 0.5e1) + 0.488e3 * pow(t, 0.4e1) + 0.1468e4 * pow(t, 0.3e1) * u + 0.1612e4 * t * t * u * u + 0.772e3 * t * pow(u, 0.3e1) + 0.140e3 * pow(u, 0.4e1) + 0.304e3 * pow(t, 0.3e1) + 0.672e3 * t * t * u + 0.484e3 * t * u * u + 0.116e3 * pow(u, 0.3e1) + 0.88e2 * t * t + 0.144e3 * t * u + 0.56e2 * u * u + 0.12e2 * t + 0.12e2 * u) * q4 * q4 + 0.2e1 * pow(t, 0.5e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u);
}
#include <math.h>

double GstarVVCoeffsC10e1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.32e2 / 0.9e1 * ((0.352e3 * t + 0.144e3 * u) * pow(q4, 0.4e1) + (-0.704e3 * t * t - 0.992e3 * t * u - 0.288e3 * u * u - 0.704e3 * t - 0.288e3 * u) * pow(q4, 0.3e1) + (0.528e3 * pow(t, 0.3e1) + 0.1272e4 * t * t * u + 0.960e3 * t * u * u + 0.216e3 * pow(u, 0.3e1) + 0.704e3 * t * t + 0.992e3 * t * u + 0.288e3 * u * u + 0.352e3 * t + 0.144e3 * u) * q4 * q4 + (-0.176e3 * pow(t, 0.4e1) - 0.600e3 * pow(t, 0.3e1) * u - 0.744e3 * t * t * u * u - 0.392e3 * t * pow(u, 0.3e1) - 0.72e2 * pow(u, 0.4e1) - 0.176e3 * pow(t, 0.3e1) - 0.424e3 * t * t * u - 0.320e3 * t * u * u - 0.72e2 * pow(u, 0.3e1)) * q4 + 0.22e2 * pow(t, 0.5e1) + 0.97e2 * pow(t, 0.4e1) * u + 0.168e3 * pow(t, 0.3e1) * u * u + 0.142e3 * t * t * pow(u, 0.3e1) + 0.58e2 * t * pow(u, 0.4e1) + 0.9e1 * pow(u, 0.5e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * q3 * q3 - 0.32e2 / 0.9e1 * (0.464e3 * t * pow(q4, 0.5e1) + (-0.1488e4 * t * t - 0.1520e4 * t * u - 0.160e3 * u * u - 0.1304e4 * t - 0.216e3 * u) * pow(q4, 0.4e1) + (0.1816e4 * pow(t, 0.3e1) + 0.3696e4 * t * t * u + 0.2200e4 * t * u * u + 0.320e3 * pow(u, 0.3e1) + 0.2800e4 * t * t + 0.3296e4 * t * u + 0.752e3 * u * u + 0.1216e4 * t + 0.432e3 * u) * pow(q4, 0.3e1) + (-0.1072e4 * pow(t, 0.4e1) - 0.3264e4 * pow(t, 0.3e1) * u - 0.3552e4 * t * t * u * u - 0.1600e4 * t * pow(u, 0.3e1) - 0.240e3 * pow(u, 0.4e1) - 0.1994e4 * pow(t, 0.3e1) - 0.4270e4 * t * t * u - 0.2870e4 * t * u * u - 0.594e3 * pow(u, 0.3e1) - 0.1312e4 * t * t - 0.1776e4 * t * u - 0.592e3 * u * u - 0.376e3 * t - 0.216e3 * u) * q4 * q4 + (0.309e3 * pow(t, 0.5e1) + 0.1252e4 * pow(t, 0.4e1) * u + 0.1982e4 * pow(t, 0.3e1) * u * u + 0.1524e4 * t * t * pow(u, 0.3e1) + 0.565e3 * t * pow(u, 0.4e1) + 0.80e2 * pow(u, 0.5e1) + 0.546e3 * pow(t, 0.4e1) + 0.1656e4 * pow(t, 0.3e1) * u + 0.1812e4 * t * t * u * u + 0.840e3 * t * pow(u, 0.3e1) + 0.138e3 * pow(u, 0.4e1) + 0.266e3 * pow(t, 0.3e1) + 0.534e3 * t * t * u + 0.326e3 * t * u * u + 0.58e2 * pow(u, 0.3e1)) * q4 - 0.35e2 * pow(t, 0.6e1) - 0.177e3 * pow(t, 0.5e1) * u - 0.368e3 * pow(t, 0.4e1) * u * u - 0.402e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.243e3 * t * t * pow(u, 0.4e1) - 0.77e2 * t * pow(u, 0.5e1) - 0.10e2 * pow(u, 0.6e1) - 0.43e2 * pow(t, 0.5e1) - 0.159e3 * pow(t, 0.4e1) * u - 0.220e3 * pow(t, 0.3e1) * u * u - 0.136e3 * t * t * pow(u, 0.3e1) - 0.33e2 * t * pow(u, 0.4e1) - pow(u, 0.5e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * q3 - 0.32e2 / 0.9e1 * (0.19e2 * pow(t, 0.7e1) + 0.40e2 * pow(t, 0.6e1) + 0.63e2 * pow(t, 0.4e1) * u + 0.69e2 * pow(t, 0.3e1) * u * u + 0.29e2 * t * t * pow(u, 0.3e1) + 0.3e1 * t * pow(u, 0.4e1) + 0.173e3 * pow(t, 0.5e1) * u + 0.293e3 * pow(t, 0.4e1) * u * u + 0.242e3 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.98e2 * t * t * pow(u, 0.4e1) + 0.17e2 * t * pow(u, 0.5e1) + 0.159e3 * t * t * pow(u, 0.5e1) + (0.400e3 * t + 0.176e3 * u) * pow(q4, 0.6e1) + (-0.1408e4 * t * t - 0.1824e4 * t * u - 0.544e3 * u * u - 0.1224e4 * t - 0.600e3 * u) * pow(q4, 0.5e1) + (0.2120e4 * pow(t, 0.3e1) + 0.4520e4 * t * t * u + 0.3176e4 * t * u * u + 0.776e3 * pow(u, 0.3e1) + 0.3192e4 * t * t + 0.4272e4 * t * u + 0.1336e4 * u * u + 0.1350e4 * t + 0.774e3 * u) * pow(q4, 0.4e1) + (-0.1720e4 * pow(t, 0.4e1) - 0.5120e4 * pow(t, 0.3e1) * u - 0.5712e4 * t * t * u * u - 0.2944e4 * t * pow(u, 0.3e1) - 0.632e3 * pow(u, 0.4e1) - 0.3394e4 * pow(t, 0.3e1) - 0.7254e4 * t * t * u - 0.5118e4 * t * u * u - 0.1258e4 * pow(u, 0.3e1) - 0.2316e4 * t * t - 0.3288e4 * t * u - 0.1100e4 * u * u - 0.628e3 * t - 0.452e3 * u) * pow(q4, 0.3e1) + (0.785e3 * pow(t, 0.5e1) + 0.3015e4 * pow(t, 0.4e1) * u + 0.4634e4 * pow(t, 0.3e1) * u * u + 0.3662e4 * t * t * pow(u, 0.3e1) + 0.1557e4 * t * pow(u, 0.4e1) + 0.299e3 * pow(u, 0.5e1) + 0.1772e4 * pow(t, 0.4e1) + 0.5164e4 * pow(t, 0.3e1) * u + 0.5572e4 * t * t * u * u + 0.2740e4 * t * pow(u, 0.3e1) + 0.560e3 * pow(u, 0.4e1) + 0.1438e4 * pow(t, 0.3e1) + 0.3108e4 * t * t * u + 0.2188e4 * t * u * u + 0.518e3 * pow(u, 0.3e1) + 0.532e3 * t * t + 0.840e3 * t * u + 0.308e3 * u * u + 0.102e3 * t + 0.102e3 * u) * q4 * q4 + (-0.190e3 * pow(t, 0.6e1) - 0.898e3 * pow(t, 0.5e1) * u - 0.1768e4 * pow(t, 0.4e1) * u * u - 0.1892e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1198e4 * t * t * pow(u, 0.4e1) - 0.442e3 * t * pow(u, 0.5e1) - 0.76e2 * pow(u, 0.6e1) - 0.440e3 * pow(t, 0.5e1) - 0.1611e4 * pow(t, 0.4e1) * u - 0.2290e4 * pow(t, 0.3e1) * u * u - 0.1604e4 * t * t * pow(u, 0.3e1) - 0.582e3 * t * pow(u, 0.4e1) - 0.97e2 * pow(u, 0.5e1) - 0.328e3 * pow(t, 0.4e1) - 0.918e3 * pow(t, 0.3e1) * u - 0.888e3 * t * t * u * u - 0.334e3 * t * pow(u, 0.3e1) - 0.36e2 * pow(u, 0.4e1) - 0.86e2 * pow(t, 0.3e1) - 0.188e3 * t * t * u - 0.108e3 * t * u * u - 0.6e1 * pow(u, 0.3e1)) * q4 + 0.52e2 * t * pow(u, 0.6e1) + 0.107e3 * pow(t, 0.6e1) * u + 0.258e3 * pow(t, 0.5e1) * u * u + 0.350e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.295e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + pow(u, 0.6e1) + 0.8e1 * pow(u, 0.7e1) + 0.20e2 * pow(t, 0.5e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u);
}
double GstarVVCoeffsC11em2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0);
}
double GstarVVCoeffsC11em1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0);
}
#include <math.h>

double GstarVVCoeffsC11e0 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.32e2 / t * pow(q3, 0.3e1) + (0.32e2 / u - 0.96e2 / t) * q3 * q3 * q4 + (0.64e2 + 0.96e2 / t * u + 0.32e2 / 0.3e1 / t) * q3 * q3 + (0.32e2 / u - 0.96e2 / t) * q3 * q4 * q4 + (-0.32e2 * t / u + 0.96e2 + 0.192e3 / t * u - 0.32e2 / 0.3e1 / u + 0.64e2 / 0.3e1 / t) * q3 * q4 + (-0.48e2 * t - 0.400e3 / 0.3e1 * u - 0.96e2 / t * u * u - 0.32e2 / 0.3e1 - 0.64e2 / 0.3e1 / t * u) * q3 - 0.32e2 / t * pow(q4, 0.3e1) + (0.64e2 + 0.96e2 / t * u + 0.32e2 / 0.3e1 / t) * q4 * q4 + (-0.48e2 * t - 0.400e3 / 0.3e1 * u - 0.96e2 / t * u * u - 0.32e2 / 0.3e1 - 0.64e2 / 0.3e1 / t * u) * q4 + 0.16e2 * t * t + 0.160e3 / 0.3e1 * t * u + 0.208e3 / 0.3e1 * u * u + 0.32e2 / t * pow(u, 0.3e1) + 0.16e2 / 0.3e1 * t + 0.16e2 * u + 0.32e2 / 0.3e1 / t * u * u);
}
#include <math.h>

double GstarVVCoeffsC11e1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.16e2 / 0.9e1 * (-0.18e2 * pow(u, 0.5e1) + (-0.3312e4 * pow(t, 0.3e1) * u - 0.13744e5 * t * t * u * u - 0.17488e5 * t * pow(u, 0.3e1) - 0.7056e4 * pow(u, 0.4e1) + 0.96e2 * pow(t, 0.3e1) - 0.4784e4 * t * t * u - 0.14752e5 * t * u * u - 0.9808e4 * pow(u, 0.3e1) + 0.128e3 * t * t - 0.2464e4 * t * u - 0.4256e4 * u * u + 0.64e2 * t - 0.416e3 * u) * pow(q3, 0.3e1) * q4 + (0.432e3 * t * t * u + 0.864e3 * t * u * u + 0.432e3 * pow(u, 0.3e1) + 0.576e3 * t * u + 0.576e3 * u * u + 0.288e3 * u) * q3 * q3 * pow(q4, 0.3e1) + 0.1152e4 * u * pow(q3, 0.6e1) * q4 + 0.1152e4 * u * pow(q3, 0.5e1) * q4 * q4 + 0.288e3 * u * pow(q3, 0.4e1) * pow(q4, 0.3e1) + (-0.1440e4 * pow(t, 0.3e1) * u - 0.5184e4 * t * t * u * u - 0.6048e4 * t * pow(u, 0.3e1) - 0.2304e4 * pow(u, 0.4e1) - 0.1968e4 * t * t * u - 0.5088e4 * t * u * u - 0.3120e4 * pow(u, 0.3e1) - 0.896e3 * t * u - 0.1472e4 * u * u - 0.160e3 * u) * q3 * q3 * q4 * q4 + (0.1224e4 * pow(t, 0.4e1) * u + 0.7032e4 * pow(t, 0.3e1) * u * u + 0.13704e5 * t * t * pow(u, 0.3e1) + 0.11208e5 * t * pow(u, 0.4e1) + 0.3312e4 * pow(u, 0.5e1) - 0.32e2 * pow(t, 0.4e1) + 0.1648e4 * pow(t, 0.3e1) * u + 0.8176e4 * t * t * u * u + 0.11216e5 * t * pow(u, 0.3e1) + 0.4720e4 * pow(u, 0.4e1) - 0.32e2 * pow(t, 0.3e1) + 0.752e3 * t * t * u + 0.3248e4 * t * u * u + 0.2480e4 * pow(u, 0.3e1) + 0.160e3 * t * u + 0.416e3 * u * u) * q3 * q3 * q4 + (-0.144e3 * pow(t, 0.3e1) * u - 0.432e3 * t * t * u * u - 0.432e3 * t * pow(u, 0.3e1) - 0.144e3 * pow(u, 0.4e1) - 0.144e3 * t * t * u - 0.288e3 * t * u * u - 0.144e3 * pow(u, 0.3e1)) * q3 * pow(q4, 0.3e1) + (0.360e3 * pow(t, 0.4e1) * u + 0.1728e4 * pow(t, 0.3e1) * u * u + 0.3024e4 * t * t * pow(u, 0.3e1) + 0.2304e4 * t * pow(u, 0.4e1) + 0.648e3 * pow(u, 0.5e1) + 0.368e3 * pow(t, 0.3e1) * u + 0.1392e4 * t * t * u * u + 0.1680e4 * t * pow(u, 0.3e1) + 0.656e3 * pow(u, 0.4e1) + 0.80e2 * t * t * u + 0.160e3 * t * u * u + 0.80e2 * pow(u, 0.3e1)) * q3 * q4 * q4 + (-0.234e3 * pow(t, 0.5e1) * u - 0.1762e4 * pow(t, 0.4e1) * u * u - 0.4692e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.5844e4 * t * t * pow(u, 0.4e1) - 0.3490e4 * t * pow(u, 0.5e1) - 0.810e3 * pow(u, 0.6e1) + 0.4e1 * pow(t, 0.5e1) - 0.234e3 * pow(t, 0.4e1) * u - 0.1624e4 * pow(t, 0.3e1) * u * u - 0.3412e4 * t * t * pow(u, 0.3e1) - 0.2908e4 * t * pow(u, 0.4e1) - 0.882e3 * pow(u, 0.5e1) - 0.80e2 * pow(t, 0.3e1) * u - 0.464e3 * t * t * u * u - 0.736e3 * t * pow(u, 0.3e1) - 0.352e3 * pow(u, 0.4e1) - 0.96e2 * t * u * u - 0.144e3 * pow(u, 0.3e1)) * q3 * q4 + (-0.3744e4 * t * u - 0.4896e4 * u * u + 0.64e2 * t - 0.2720e4 * u) * pow(q3, 0.5e1) * q4 + (-0.2880e4 * t * u - 0.3456e4 * u * u - 0.2464e4 * u) * pow(q3, 0.4e1) * q4 * q4 + (0.4896e4 * t * t * u + 0.13136e5 * t * u * u + 0.8208e4 * pow(u, 0.3e1) - 0.128e3 * t * t + 0.6048e4 * t * u + 0.8736e4 * u * u - 0.128e3 * t + 0.1984e4 * u) * pow(q3, 0.4e1) * q4 + (-0.576e3 * t * u - 0.576e3 * u * u - 0.576e3 * u) * pow(q3, 0.3e1) * pow(q4, 0.3e1) + (0.2880e4 * t * t * u + 0.6912e4 * t * u * u + 0.4032e4 * pow(u, 0.3e1) + 0.3776e4 * t * u + 0.4928e4 * u * u + 0.1472e4 * u) * pow(q3, 0.3e1) * q4 * q4 - 0.18e2 * t * t * pow(u, 0.3e1) - 0.36e2 * t * pow(u, 0.4e1) - 0.12e2 * pow(t, 0.4e1) * u * u - 0.72e2 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.144e3 * t * t * pow(u, 0.4e1) - 0.120e3 * t * pow(u, 0.5e1) - 0.200e3 * t * t * pow(u, 0.5e1) - 0.97e2 * t * pow(u, 0.6e1) - 0.2e1 * pow(t, 0.6e1) * u - 0.29e2 * pow(t, 0.5e1) * u * u - 0.115e3 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.210e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.36e2 * pow(u, 0.6e1) - 0.19e2 * pow(u, 0.7e1) + 0.288e3 * pow(q3, 0.7e1) * u - 0.172e3 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.425e3 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.560e3 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.415e3 * t * t * pow(u, 0.6e1) + (-0.1152e4 * t * u - 0.1728e4 * u * u - 0.736e3 * u) * pow(q3, 0.6e1) + (0.1872e4 * t * t * u + 0.5936e4 * t * u * u + 0.4032e4 * pow(u, 0.3e1) + 0.2208e4 * t * u + 0.3616e4 * u * u + 0.608e3 * u) * pow(q3, 0.5e1) + (-0.1584e4 * pow(t, 0.3e1) * u - 0.8160e4 * t * t * u * u - 0.11472e5 * t * pow(u, 0.3e1) - 0.4896e4 * pow(u, 0.4e1) - 0.2464e4 * t * t * u - 0.8944e4 * t * u * u - 0.6416e4 * pow(u, 0.3e1) - 0.1216e4 * t * u - 0.2304e4 * u * u - 0.160e3 * u) * pow(q3, 0.4e1) + (0.738e3 * pow(t, 0.4e1) * u + 0.5728e4 * pow(t, 0.3e1) * u * u + 0.12644e5 * t * t * pow(u, 0.3e1) + 0.11056e5 * t * pow(u, 0.4e1) + 0.3402e4 * pow(u, 0.5e1) + 0.1248e4 * pow(t, 0.3e1) * u + 0.7968e4 * t * t * u * u + 0.12064e5 * t * pow(u, 0.3e1) + 0.5344e4 * pow(u, 0.4e1) + 0.752e3 * t * t * u + 0.3696e4 * t * u * u + 0.2960e4 * pow(u, 0.3e1) + 0.160e3 * t * u + 0.416e3 * u * u) * pow(q3, 0.3e1) + (-0.180e3 * pow(t, 0.5e1) * u - 0.2152e4 * pow(t, 0.4e1) * u * u - 0.6744e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.9120e4 * t * t * pow(u, 0.4e1) - 0.5716e4 * t * pow(u, 0.5e1) - 0.1368e4 * pow(u, 0.6e1) - 0.282e3 * pow(t, 0.4e1) * u - 0.3112e4 * pow(t, 0.3e1) * u * u - 0.7564e4 * t * t * pow(u, 0.3e1) - 0.6920e4 * t * pow(u, 0.4e1) - 0.2186e4 * pow(u, 0.5e1) - 0.144e3 * pow(t, 0.3e1) * u - 0.1712e4 * t * t * u * u - 0.3104e4 * t * pow(u, 0.3e1) - 0.1536e4 * pow(u, 0.4e1) - 0.32e2 * t * t * u - 0.468e3 * t * u * u - 0.484e3 * pow(u, 0.3e1)) * q3 * q3 + (0.18e2 * pow(t, 0.6e1) * u + 0.405e3 * pow(t, 0.5e1) * u * u + 0.1737e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.3258e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.3132e4 * t * t * pow(u, 0.5e1) + 0.1521e4 * t * pow(u, 0.6e1) + 0.297e3 * pow(u, 0.7e1) + 0.26e2 * pow(t, 0.5e1) * u + 0.514e3 * pow(t, 0.4e1) * u * u + 0.1780e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.2516e4 * t * t * pow(u, 0.4e1) + 0.1618e4 * t * pow(u, 0.5e1) + 0.394e3 * pow(u, 0.6e1) + 0.16e2 * pow(t, 0.4e1) * u + 0.272e3 * pow(t, 0.3e1) * u * u + 0.828e3 * t * t * pow(u, 0.3e1) + 0.904e3 * t * pow(u, 0.4e1) + 0.332e3 * pow(u, 0.5e1) + 0.84e2 * t * t * u * u + 0.264e3 * t * pow(u, 0.3e1) + 0.180e3 * pow(u, 0.4e1) + 0.36e2 * t * u * u + 0.36e2 * pow(u, 0.3e1)) * q3 + (0.18e2 * pow(t, 0.4e1) * u + 0.72e2 * pow(t, 0.3e1) * u * u + 0.108e3 * t * t * pow(u, 0.3e1) + 0.72e2 * t * pow(u, 0.4e1) + 0.18e2 * pow(u, 0.5e1)) * pow(q4, 0.3e1) + (-0.36e2 * pow(t, 0.5e1) * u - 0.216e3 * pow(t, 0.4e1) * u * u - 0.504e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.576e3 * t * t * pow(u, 0.4e1) - 0.324e3 * t * pow(u, 0.5e1) - 0.72e2 * pow(u, 0.6e1) - 0.10e2 * pow(t, 0.4e1) * u - 0.40e2 * pow(t, 0.3e1) * u * u - 0.60e2 * t * t * pow(u, 0.3e1) - 0.40e2 * t * pow(u, 0.4e1) - 0.10e2 * pow(u, 0.5e1)) * q4 * q4 + (0.18e2 * pow(t, 0.6e1) * u + 0.173e3 * pow(t, 0.5e1) * u * u + 0.593e3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1002e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.908e3 * t * t * pow(u, 0.5e1) + 0.425e3 * t * pow(u, 0.6e1) + 0.81e2 * pow(u, 0.7e1) + 0.10e2 * pow(t, 0.5e1) * u + 0.66e2 * pow(t, 0.4e1) * u * u + 0.164e3 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.196e3 * t * t * pow(u, 0.4e1) + 0.114e3 * t * pow(u, 0.5e1) + 0.26e2 * pow(u, 0.6e1) + 0.24e2 * pow(t, 0.3e1) * u * u + 0.84e2 * t * t * pow(u, 0.3e1) + 0.96e2 * t * pow(u, 0.4e1) + 0.36e2 * pow(u, 0.5e1)) * q4 - 0.29e2 * pow(t, 0.6e1) * u * u - 0.164e3 * t * pow(u, 0.7e1) - 0.27e2 * pow(u, 0.8e1)) / u * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / t);
}
#include <math.h>

double GstarVVCoeffsC11e2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.16e2 / 0.27e2 * (-0.189e3 * pow(u, 0.5e1) + 0.1728e4 * u * pow(q3, 0.4e1) * pow(q4, 0.3e1) + 0.18e2 * pow(t, 0.3e1) * u * u - 0.27e2 * pow(t, 0.7e1) * u + (-0.6912e4 * t * u - 0.10368e5 * u * u - 0.4352e4 * u) * pow(q3, 0.6e1) + (0.11664e5 * t * t * u + 0.36928e5 * t * u * u + 0.25488e5 * pow(u, 0.3e1) + 0.13056e5 * t * u + 0.21632e5 * u * u + 0.3520e4 * u) * pow(q3, 0.5e1) + (-0.10800e5 * pow(t, 0.3e1) * u - 0.54192e5 * t * t * u * u - 0.76656e5 * t * pow(u, 0.3e1) - 0.33264e5 * pow(u, 0.4e1) - 0.15440e5 * t * t * u - 0.56480e5 * t * u * u - 0.41488e5 * pow(u, 0.3e1) - 0.7040e4 * t * u - 0.13824e5 * u * u - 0.896e3 * u) * pow(q3, 0.4e1) + (0.5940e4 * pow(t, 0.4e1) * u + 0.41984e5 * pow(t, 0.3e1) * u * u + 0.91096e5 * t * t * pow(u, 0.3e1) + 0.80000e5 * t * pow(u, 0.4e1) + 0.24948e5 * pow(u, 0.5e1) + 0.9120e4 * pow(t, 0.3e1) * u + 0.55392e5 * t * t * u * u + 0.84320e5 * t * pow(u, 0.3e1) + 0.38048e5 * pow(u, 0.4e1) + 0.4816e4 * t * t * u + 0.24744e5 * t * u * u + 0.20680e5 * pow(u, 0.3e1) + 0.896e3 * t * u + 0.2560e4 * u * u) * pow(q3, 0.3e1) + (-0.1944e4 * pow(t, 0.5e1) * u - 0.18128e5 * pow(t, 0.4e1) * u * u - 0.53520e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.71232e5 * t * t * pow(u, 0.4e1) - 0.44696e5 * t * pow(u, 0.5e1) - 0.10800e5 * pow(u, 0.6e1) - 0.2760e4 * pow(t, 0.4e1) * u - 0.24656e5 * pow(t, 0.3e1) * u * u - 0.57968e5 * t * t * pow(u, 0.3e1) - 0.53008e5 * t * pow(u, 0.4e1) - 0.16936e5 * pow(u, 0.5e1) - 0.1296e4 * pow(t, 0.3e1) * u - 0.13648e5 * t * t * u * u - 0.25216e5 * t * pow(u, 0.3e1) - 0.12864e5 * pow(u, 0.4e1) - 0.208e3 * t * t * u - 0.3870e4 * t * u * u - 0.4190e4 * pow(u, 0.3e1)) * q3 * q3 + (0.351e3 * pow(t, 0.6e1) * u + 0.4140e4 * pow(t, 0.5e1) * u * u + 0.15561e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.27864e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.26361e5 * t * t * pow(u, 0.5e1) + 0.12780e5 * t * pow(u, 0.6e1) + 0.2511e4 * pow(u, 0.7e1) + 0.376e3 * pow(t, 0.5e1) * u + 0.4592e4 * pow(t, 0.4e1) * u * u + 0.14720e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.20368e5 * t * t * pow(u, 0.4e1) + 0.13064e5 * t * pow(u, 0.5e1) + 0.3200e4 * pow(u, 0.6e1) + 0.104e3 * pow(t, 0.4e1) * u + 0.2290e4 * pow(t, 0.3e1) * u * u + 0.7434e4 * t * t * pow(u, 0.3e1) + 0.8414e4 * t * pow(u, 0.4e1) + 0.3166e4 * pow(u, 0.5e1) + 0.942e3 * t * t * u * u + 0.2940e4 * t * pow(u, 0.3e1) + 0.1998e4 * pow(u, 0.4e1) + 0.342e3 * t * u * u + 0.342e3 * pow(u, 0.3e1)) * q3 + (0.108e3 * pow(t, 0.4e1) * u + 0.432e3 * pow(t, 0.3e1) * u * u + 0.648e3 * t * t * pow(u, 0.3e1) + 0.432e3 * t * pow(u, 0.4e1) + 0.108e3 * pow(u, 0.5e1)) * pow(q4, 0.3e1) + (-0.216e3 * pow(t, 0.5e1) * u - 0.1296e4 * pow(t, 0.4e1) * u * u - 0.3024e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.3456e4 * t * t * pow(u, 0.4e1) - 0.1944e4 * t * pow(u, 0.5e1) - 0.432e3 * pow(u, 0.6e1) - 0.56e2 * pow(t, 0.4e1) * u - 0.224e3 * pow(t, 0.3e1) * u * u - 0.336e3 * t * t * pow(u, 0.3e1) - 0.224e3 * t * pow(u, 0.4e1) - 0.56e2 * pow(u, 0.5e1)) * q4 * q4 + (0.135e3 * pow(t, 0.6e1) * u + 0.1228e4 * pow(t, 0.5e1) * u * u + 0.4129e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.6936e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.6289e4 * t * t * pow(u, 0.5e1) + 0.2956e4 * t * pow(u, 0.6e1) + 0.567e3 * pow(u, 0.7e1) + 0.56e2 * pow(t, 0.5e1) * u + 0.384e3 * pow(t, 0.4e1) * u * u + 0.976e3 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.1184e4 * t * t * pow(u, 0.4e1) + 0.696e3 * t * pow(u, 0.5e1) + 0.160e3 * pow(u, 0.6e1) + 0.282e3 * pow(t, 0.3e1) * u * u + 0.978e3 * t * t * pow(u, 0.3e1) + 0.1110e4 * t * pow(u, 0.4e1) + 0.414e3 * pow(u, 0.5e1)) * q4 + (-0.864e3 * t + 0.6048e4 * u) * pow(q3, 0.6e1) * q4 + (-0.864e3 * t + 0.6048e4 * u) * pow(q3, 0.5e1) * q4 * q4 + (0.2592e4 * t * t - 0.17280e5 * t * u - 0.26784e5 * u * u + 0.2144e4 * t - 0.14368e5 * u) * pow(q3, 0.5e1) * q4 + (0.1728e4 * t * t - 0.13824e5 * t * u - 0.19008e5 * u * u + 0.1728e4 * t - 0.12992e5 * u) * pow(q3, 0.4e1) * q4 * q4 + (-0.3024e4 * pow(t, 0.3e1) + 0.20736e5 * t * t * u + 0.71056e5 * t * u * u + 0.47520e5 * pow(u, 0.3e1) - 0.4288e4 * t * t + 0.28800e5 * t * u + 0.48576e5 * u * u - 0.1696e4 * t + 0.10592e5 * u) * pow(q3, 0.4e1) * q4 + (-0.3456e4 * t * u - 0.3456e4 * u * u - 0.3456e4 * u) * pow(q3, 0.3e1) * pow(q4, 0.3e1) + (-0.1296e4 * pow(t, 0.3e1) + 0.13392e5 * t * t * u + 0.37584e5 * t * u * u + 0.22896e5 * pow(u, 0.3e1) - 0.1728e4 * t * t + 0.19072e5 * t * u + 0.27712e5 * u * u - 0.864e3 * t + 0.7840e4 * u) * pow(q3, 0.3e1) * q4 * q4 + (0.1728e4 * pow(t, 0.4e1) - 0.13824e5 * pow(t, 0.3e1) * u - 0.75584e5 * t * t * u * u - 0.103232e6 * t * pow(u, 0.3e1) - 0.43200e5 * pow(u, 0.4e1) + 0.2784e4 * pow(t, 0.3e1) - 0.22528e5 * t * t * u - 0.83936e5 * t * u * u - 0.59072e5 * pow(u, 0.3e1) + 0.1696e4 * t * t - 0.12416e5 * t * u - 0.24352e5 * u * u + 0.416e3 * t - 0.2272e4 * u) * pow(q3, 0.3e1) * q4 + (0.2592e4 * t * t * u + 0.5184e4 * t * u * u + 0.2592e4 * pow(u, 0.3e1) + 0.3456e4 * t * u + 0.3456e4 * u * u + 0.1728e4 * u) * q3 * q3 * pow(q4, 0.3e1) + (0.432e3 * pow(t, 0.4e1) - 0.6912e4 * pow(t, 0.3e1) * u - 0.28512e5 * t * t * u * u - 0.34560e5 * t * pow(u, 0.3e1) - 0.13392e5 * pow(u, 0.4e1) + 0.432e3 * pow(t, 0.3e1) - 0.10416e5 * t * t * u - 0.29040e5 * t * u * u - 0.18192e5 * pow(u, 0.3e1) - 0.5248e4 * t * u - 0.8704e4 * u * u - 0.896e3 * u) * q3 * q3 * q4 * q4 + (-0.486e3 * pow(t, 0.5e1) + 0.5562e4 * pow(t, 0.4e1) * u + 0.40596e5 * pow(t, 0.3e1) * u * u + 0.83892e5 * t * t * pow(u, 0.3e1) + 0.70674e5 * t * pow(u, 0.4e1) + 0.21330e5 * pow(u, 0.5e1) - 0.640e3 * pow(t, 0.4e1) + 0.8768e4 * pow(t, 0.3e1) * u + 0.49472e5 * t * t * u * u + 0.70528e5 * t * pow(u, 0.3e1) + 0.30464e5 * pow(u, 0.4e1) - 0.208e3 * pow(t, 0.3e1) + 0.4672e4 * t * t * u + 0.21112e5 * t * u * u + 0.16984e5 * pow(u, 0.3e1) + 0.896e3 * t * u + 0.2560e4 * u * u) * q3 * q3 * q4 + (-0.864e3 * pow(t, 0.3e1) * u - 0.2592e4 * t * t * u * u - 0.2592e4 * t * pow(u, 0.3e1) - 0.864e3 * pow(u, 0.4e1) - 0.864e3 * t * t * u - 0.1728e4 * t * u * u - 0.864e3 * pow(u, 0.3e1)) * q3 * pow(q4, 0.3e1) + (-0.54e2 * pow(t, 0.5e1) + 0.1890e4 * pow(t, 0.4e1) * u + 0.9828e4 * pow(t, 0.3e1) * u * u + 0.17604e5 * t * t * pow(u, 0.3e1) + 0.13554e5 * t * pow(u, 0.4e1) + 0.3834e4 * pow(u, 0.5e1) + 0.2176e4 * pow(t, 0.3e1) * u + 0.8256e4 * t * t * u * u + 0.9984e4 * t * pow(u, 0.3e1) + 0.3904e4 * pow(u, 0.4e1) + 0.448e3 * t * t * u + 0.896e3 * t * u * u + 0.448e3 * pow(u, 0.3e1)) * q3 * q4 * q4 + (0.54e2 * pow(t, 0.6e1) - 0.1296e4 * pow(t, 0.5e1) * u - 0.11066e5 * pow(t, 0.4e1) * u * u - 0.30336e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.38382e5 * t * t * pow(u, 0.4e1) - 0.23216e5 * t * pow(u, 0.5e1) - 0.5454e4 * pow(u, 0.6e1) + 0.26e2 * pow(t, 0.5e1) - 0.1566e4 * pow(t, 0.4e1) * u - 0.10700e5 * pow(t, 0.3e1) * u * u - 0.22556e5 * t * t * pow(u, 0.3e1) - 0.19406e5 * t * pow(u, 0.4e1) - 0.5958e4 * pow(u, 0.5e1) - 0.448e3 * pow(t, 0.3e1) * u - 0.3304e4 * t * t * u * u - 0.5792e4 * t * pow(u, 0.3e1) - 0.2936e4 * pow(u, 0.4e1) - 0.1128e4 * t * u * u - 0.1656e4 * pow(u, 0.3e1)) * q3 * q4 - 0.153e3 * t * t * pow(u, 0.3e1) - 0.360e3 * t * pow(u, 0.4e1) - 0.150e3 * pow(t, 0.4e1) * u * u - 0.864e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1692e4 * t * t * pow(u, 0.4e1) - 0.1392e4 * t * pow(u, 0.5e1) - 0.1435e4 * t * t * pow(u, 0.5e1) - 0.698e3 * t * pow(u, 0.6e1) - 0.13e2 * pow(t, 0.6e1) * u - 0.202e3 * pow(t, 0.5e1) * u * u - 0.815e3 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.1500e4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.414e3 * pow(u, 0.6e1) - 0.137e3 * pow(u, 0.7e1) + 0.1728e4 * pow(q3, 0.7e1) * u - 0.1793e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.4045e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.5125e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.3737e4 * t * t * pow(u, 0.6e1) - 0.391e3 * pow(t, 0.6e1) * u * u - 0.1471e4 * t * pow(u, 0.7e1) - 0.243e3 * pow(u, 0.8e1)) / u * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / t);
}
#include <math.h>

double GstarVVCoeffsC11e3 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.8e1 / 0.81e2 * ((-0.2592e4 * pow(t, 0.5e1) * u - 0.15552e5 * pow(t, 0.4e1) * u * u - 0.36288e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.41472e5 * t * t * pow(u, 0.4e1) - 0.23328e5 * t * pow(u, 0.5e1) - 0.5184e4 * pow(u, 0.6e1) - 0.656e3 * pow(t, 0.4e1) * u - 0.2624e4 * pow(t, 0.3e1) * u * u - 0.3936e4 * t * t * pow(u, 0.3e1) - 0.2624e4 * t * pow(u, 0.4e1) - 0.656e3 * pow(u, 0.5e1)) * q4 * q4 + (0.1620e4 * pow(t, 0.6e1) * u + 0.14848e5 * pow(t, 0.5e1) * u * u + 0.50104e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.84336e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.76564e5 * t * t * pow(u, 0.5e1) + 0.36016e5 * t * pow(u, 0.6e1) + 0.6912e4 * pow(u, 0.7e1) + 0.656e3 * pow(t, 0.5e1) * u + 0.4560e4 * pow(t, 0.4e1) * u * u + 0.11680e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.14240e5 * t * t * pow(u, 0.4e1) + 0.8400e4 * t * pow(u, 0.5e1) + 0.1936e4 * pow(u, 0.6e1) + 0.5556e4 * pow(t, 0.3e1) * u * u + 0.19356e5 * t * t * pow(u, 0.3e1) + 0.22044e5 * t * pow(u, 0.4e1) + 0.8244e4 * pow(u, 0.5e1)) * q4 + (0.4212e4 * pow(t, 0.6e1) * u + 0.50688e5 * pow(t, 0.5e1) * u * u + 0.191736e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.344304e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.326196e6 * t * t * pow(u, 0.5e1) + 0.158256e6 * t * pow(u, 0.6e1) + 0.31104e5 * pow(u, 0.7e1) + 0.4528e4 * pow(t, 0.5e1) * u + 0.56816e5 * pow(t, 0.4e1) * u * u + 0.183296e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.254272e6 * t * t * pow(u, 0.4e1) + 0.163280e6 * t * pow(u, 0.5e1) + 0.40016e5 * pow(u, 0.6e1) + 0.1280e4 * pow(t, 0.4e1) * u + 0.35620e5 * pow(t, 0.3e1) * u * u + 0.123372e6 * t * t * pow(u, 0.3e1) + 0.145004e6 * t * pow(u, 0.4e1) + 0.55972e5 * pow(u, 0.5e1) + 0.18510e5 * t * t * u * u + 0.58524e5 * t * pow(u, 0.3e1) + 0.40014e5 * pow(u, 0.4e1) + 0.6174e4 * t * u * u + 0.6174e4 * pow(u, 0.3e1)) * q3 + (0.1296e4 * pow(t, 0.4e1) * u + 0.5184e4 * pow(t, 0.3e1) * u * u + 0.7776e4 * t * t * pow(u, 0.3e1) + 0.5184e4 * t * pow(u, 0.4e1) + 0.1296e4 * pow(u, 0.5e1)) * pow(q4, 0.3e1) + (0.71280e5 * pow(t, 0.4e1) * u + 0.510080e6 * pow(t, 0.3e1) * u * u + 0.1111744e7 * t * t * pow(u, 0.3e1) + 0.978368e6 * t * pow(u, 0.4e1) + 0.305424e6 * pow(u, 0.5e1) + 0.109056e6 * pow(t, 0.3e1) * u + 0.674304e6 * t * t * u * u + 0.1031936e7 * t * pow(u, 0.3e1) + 0.466688e6 * pow(u, 0.4e1) + 0.57280e5 * t * t * u + 0.310224e6 * t * u * u + 0.266320e6 * pow(u, 0.3e1) + 0.10496e5 * t * u + 0.30976e5 * u * u) * pow(q3, 0.3e1) + (-0.23328e5 * pow(t, 0.5e1) * u - 0.221120e6 * pow(t, 0.4e1) * u * u - 0.656448e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.875904e6 * t * t * pow(u, 0.4e1) - 0.550304e6 * t * pow(u, 0.5e1) - 0.133056e6 * pow(u, 0.6e1) - 0.33072e5 * pow(t, 0.4e1) * u - 0.302528e6 * pow(t, 0.3e1) * u * u - 0.715712e6 * t * t * pow(u, 0.3e1) - 0.656128e6 * t * pow(u, 0.4e1) - 0.209872e6 * pow(u, 0.5e1) - 0.15552e5 * pow(t, 0.3e1) * u - 0.182464e6 * t * t * u * u - 0.353152e6 * t * pow(u, 0.3e1) - 0.186240e6 * pow(u, 0.4e1) - 0.2560e4 * t * t * u - 0.58734e5 * t * u * u - 0.66926e5 * pow(u, 0.3e1)) * q3 * q3 + (-0.129600e6 * pow(t, 0.3e1) * u - 0.655680e6 * t * t * u * u - 0.930432e6 * t * pow(u, 0.3e1) - 0.404352e6 * pow(u, 0.4e1) - 0.184448e6 * t * t * u - 0.682112e6 * t * u * u - 0.502912e6 * pow(u, 0.3e1) - 0.83456e5 * t * u - 0.165888e6 * u * u - 0.10496e5 * u) * pow(q3, 0.4e1) + (0.139968e6 * t * t * u + 0.444928e6 * t * u * u + 0.307584e6 * pow(u, 0.3e1) + 0.155904e6 * t * u + 0.259328e6 * u * u + 0.41728e5 * u) * pow(q3, 0.5e1) + (-0.82944e5 * t * u - 0.124416e6 * u * u - 0.51968e5 * u) * pow(q3, 0.6e1) - 0.3699e4 * pow(u, 0.5e1) + 0.20736e5 * u * pow(q3, 0.4e1) * pow(q4, 0.3e1) + 0.612e3 * pow(t, 0.3e1) * u * u - 0.324e3 * pow(t, 0.7e1) * u - 0.2475e4 * t * t * pow(u, 0.3e1) - 0.6786e4 * t * pow(u, 0.4e1) - 0.3084e4 * pow(t, 0.4e1) * u * u - 0.17712e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.34632e5 * t * t * pow(u, 0.4e1) - 0.28464e5 * t * pow(u, 0.5e1) - 0.18160e5 * t * t * pow(u, 0.5e1) - 0.8840e4 * t * pow(u, 0.6e1) - 0.160e3 * pow(t, 0.6e1) * u - 0.2536e4 * pow(t, 0.5e1) * u * u - 0.10280e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.18960e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + (0.20736e5 * pow(t, 0.4e1) - 0.165888e6 * pow(t, 0.3e1) * u - 0.910592e6 * t * t * u * u - 0.1245824e7 * t * pow(u, 0.3e1) - 0.521856e6 * pow(u, 0.4e1) + 0.33600e5 * pow(t, 0.3e1) - 0.268096e6 * t * t * u - 0.1007936e7 * t * u * u - 0.711488e6 * pow(u, 0.3e1) + 0.20608e5 * t * t - 0.146432e6 * t * u - 0.290944e6 * u * u + 0.5120e4 * t - 0.26368e5 * u) * pow(q3, 0.3e1) * q4 + (0.31104e5 * t * t * u + 0.62208e5 * t * u * u + 0.31104e5 * pow(u, 0.3e1) + 0.41472e5 * t * u + 0.41472e5 * u * u + 0.20736e5 * u) * q3 * q3 * pow(q4, 0.3e1) + (0.5184e4 * pow(t, 0.4e1) - 0.82944e5 * pow(t, 0.3e1) * u - 0.342144e6 * t * t * u * u - 0.414720e6 * t * pow(u, 0.3e1) - 0.160704e6 * pow(u, 0.4e1) + 0.5184e4 * pow(t, 0.3e1) - 0.124608e6 * t * t * u - 0.347712e6 * t * u * u - 0.217920e6 * pow(u, 0.3e1) - 0.62464e5 * t * u - 0.103936e6 * u * u - 0.10496e5 * u) * q3 * q3 * q4 * q4 + (-0.5832e4 * pow(t, 0.5e1) + 0.66744e5 * pow(t, 0.4e1) * u + 0.489840e6 * pow(t, 0.3e1) * u * u + 0.1014672e7 * t * t * pow(u, 0.3e1) + 0.855960e6 * t * pow(u, 0.4e1) + 0.258552e6 * pow(u, 0.5e1) - 0.7744e4 * pow(t, 0.4e1) + 0.104192e6 * pow(t, 0.3e1) * u + 0.595328e6 * t * t * u * u + 0.852352e6 * t * pow(u, 0.3e1) + 0.368960e6 * pow(u, 0.4e1) - 0.2560e4 * pow(t, 0.3e1) + 0.54976e5 * t * t * u + 0.262864e6 * t * u * u + 0.218704e6 * pow(u, 0.3e1) + 0.10496e5 * t * u + 0.30976e5 * u * u) * q3 * q3 * q4 + (-0.10368e5 * pow(t, 0.3e1) * u - 0.31104e5 * t * t * u * u - 0.31104e5 * t * pow(u, 0.3e1) - 0.10368e5 * pow(u, 0.4e1) - 0.10368e5 * t * t * u - 0.20736e5 * t * u * u - 0.10368e5 * pow(u, 0.3e1)) * q3 * pow(q4, 0.3e1) + (-0.648e3 * pow(t, 0.5e1) + 0.22680e5 * pow(t, 0.4e1) * u + 0.117936e6 * pow(t, 0.3e1) * u * u + 0.211248e6 * t * t * pow(u, 0.3e1) + 0.162648e6 * t * pow(u, 0.4e1) + 0.46008e5 * pow(u, 0.5e1) + 0.25984e5 * pow(t, 0.3e1) * u + 0.98688e5 * t * t * u * u + 0.119424e6 * t * pow(u, 0.3e1) + 0.46720e5 * pow(u, 0.4e1) + 0.5248e4 * t * t * u + 0.10496e5 * t * u * u + 0.5248e4 * pow(u, 0.3e1)) * q3 * q4 * q4 + (0.648e3 * pow(t, 0.6e1) - 0.15552e5 * pow(t, 0.5e1) * u - 0.133688e6 * pow(t, 0.4e1) * u * u - 0.367584e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.465864e6 * t * t * pow(u, 0.4e1) - 0.282080e6 * t * pow(u, 0.5e1) - 0.66312e5 * pow(u, 0.6e1) + 0.320e3 * pow(t, 0.5e1) - 0.18576e5 * pow(t, 0.4e1) * u - 0.128768e6 * pow(t, 0.3e1) * u * u - 0.272960e6 * t * t * pow(u, 0.3e1) - 0.235520e6 * t * pow(u, 0.4e1) - 0.72432e5 * pow(u, 0.5e1) - 0.5248e4 * pow(t, 0.3e1) * u - 0.48208e5 * t * t * u * u - 0.91424e5 * t * pow(u, 0.3e1) - 0.48464e5 * pow(u, 0.4e1) - 0.22224e5 * t * u * u - 0.32976e5 * pow(u, 0.3e1)) * q3 * q4 + (-0.10368e5 * t + 0.72576e5 * u) * pow(q3, 0.6e1) * q4 + (-0.10368e5 * t + 0.72576e5 * u) * pow(q3, 0.5e1) * q4 * q4 + (0.31104e5 * t * t - 0.207360e6 * t * u - 0.321408e6 * u * u + 0.25856e5 * t - 0.171520e6 * u) * pow(q3, 0.5e1) * q4 + (0.20736e5 * t * t - 0.165888e6 * t * u - 0.228096e6 * u * u + 0.20736e5 * t - 0.155648e6 * u) * pow(q3, 0.4e1) * q4 * q4 + (-0.36288e5 * pow(t, 0.3e1) + 0.248832e6 * t * t * u + 0.854464e6 * t * u * u + 0.571968e6 * pow(u, 0.3e1) - 0.51712e5 * t * t + 0.343296e6 * t * u + 0.581376e6 * u * u - 0.20608e5 * t + 0.125312e6 * u) * pow(q3, 0.4e1) * q4 + (-0.41472e5 * t * u - 0.41472e5 * u * u - 0.41472e5 * u) * pow(q3, 0.3e1) * pow(q4, 0.3e1) + (-0.15552e5 * pow(t, 0.3e1) + 0.160704e6 * t * t * u + 0.451008e6 * t * u * u + 0.274752e6 * pow(u, 0.3e1) - 0.20736e5 * t * t + 0.228352e6 * t * u + 0.332032e6 * u * u - 0.10368e5 * t + 0.93568e5 * u) * pow(q3, 0.3e1) * q4 * q4 - 0.8460e4 * pow(u, 0.6e1) - 0.1736e4 * pow(u, 0.7e1) + 0.20736e5 * pow(q3, 0.7e1) * u - 0.22184e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.50200e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.63700e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.46484e5 * t * t * pow(u, 0.6e1) - 0.4804e4 * pow(t, 0.6e1) * u * u - 0.18304e5 * t * pow(u, 0.7e1) - 0.3024e4 * pow(u, 0.8e1)) / u * pow(0.4e1 * q3 * q3 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q3 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / t);
}
double GstarVVCoeffsC12em2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0);
}
double GstarVVCoeffsC12em1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(0);
}
#include <math.h>

double GstarVVCoeffsC12e0 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.32e2 / u * pow(q3, 0.3e1) + (-0.96e2 / u + 0.32e2 / t) * q3 * q3 * q4 + (0.96e2 * t / u + 0.64e2 + 0.32e2 / 0.3e1 / u) * q3 * q3 + (-0.96e2 / u + 0.32e2 / t) * q3 * q4 * q4 + (0.192e3 * t / u + 0.96e2 - 0.32e2 / t * u + 0.64e2 / 0.3e1 / u - 0.32e2 / 0.3e1 / t) * q3 * q4 + (-0.96e2 * t * t / u - 0.400e3 / 0.3e1 * t - 0.48e2 * u - 0.64e2 / 0.3e1 * t / u - 0.32e2 / 0.3e1) * q3 - 0.32e2 / u * pow(q4, 0.3e1) + (0.96e2 * t / u + 0.64e2 + 0.32e2 / 0.3e1 / u) * q4 * q4 + (-0.96e2 * t * t / u - 0.400e3 / 0.3e1 * t - 0.48e2 * u - 0.64e2 / 0.3e1 * t / u - 0.32e2 / 0.3e1) * q4 + 0.32e2 * pow(t, 0.3e1) / u + 0.208e3 / 0.3e1 * t * t + 0.160e3 / 0.3e1 * t * u + 0.16e2 * u * u + 0.32e2 / 0.3e1 * t * t / u + 0.16e2 * t + 0.16e2 / 0.3e1 * u);
}
#include <math.h>

double GstarVVCoeffsC12e1 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.16e2 / 0.9e1 * (0.288e3 * t * pow(q4, 0.4e1) + (-0.576e3 * t * t - 0.576e3 * t * u - 0.576e3 * t) * pow(q4, 0.3e1) + (0.432e3 * pow(t, 0.3e1) + 0.864e3 * t * t * u + 0.432e3 * t * u * u + 0.576e3 * t * t + 0.576e3 * t * u + 0.288e3 * t) * q4 * q4 + (-0.144e3 * pow(t, 0.4e1) - 0.432e3 * pow(t, 0.3e1) * u - 0.432e3 * t * t * u * u - 0.144e3 * t * pow(u, 0.3e1) - 0.144e3 * pow(t, 0.3e1) - 0.288e3 * t * t * u - 0.144e3 * t * u * u) * q4 + 0.18e2 * pow(t, 0.5e1) + 0.72e2 * pow(t, 0.4e1) * u + 0.108e3 * pow(t, 0.3e1) * u * u + 0.72e2 * t * t * pow(u, 0.3e1) + 0.18e2 * t * pow(u, 0.4e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q3, 0.3e1) - 0.16e2 / 0.9e1 * (0.1152e4 * t * pow(q4, 0.5e1) + (-0.3456e4 * t * t - 0.2880e4 * t * u - 0.2464e4 * t) * pow(q4, 0.4e1) + (0.4032e4 * pow(t, 0.3e1) + 0.6912e4 * t * t * u + 0.2880e4 * t * u * u + 0.4928e4 * t * t + 0.3776e4 * t * u + 0.1472e4 * t) * pow(q4, 0.3e1) + (-0.2304e4 * pow(t, 0.4e1) - 0.6048e4 * pow(t, 0.3e1) * u - 0.5184e4 * t * t * u * u - 0.1440e4 * t * pow(u, 0.3e1) - 0.3120e4 * pow(t, 0.3e1) - 0.5088e4 * t * t * u - 0.1968e4 * t * u * u - 0.1472e4 * t * t - 0.896e3 * t * u - 0.160e3 * t) * q4 * q4 + (0.648e3 * pow(t, 0.5e1) + 0.2304e4 * pow(t, 0.4e1) * u + 0.3024e4 * pow(t, 0.3e1) * u * u + 0.1728e4 * t * t * pow(u, 0.3e1) + 0.360e3 * t * pow(u, 0.4e1) + 0.656e3 * pow(t, 0.4e1) + 0.1680e4 * pow(t, 0.3e1) * u + 0.1392e4 * t * t * u * u + 0.368e3 * t * pow(u, 0.3e1) + 0.80e2 * pow(t, 0.3e1) + 0.160e3 * t * t * u + 0.80e2 * t * u * u) * q4 - 0.72e2 * pow(t, 0.6e1) - 0.324e3 * pow(t, 0.5e1) * u - 0.576e3 * pow(t, 0.4e1) * u * u - 0.504e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.216e3 * t * t * pow(u, 0.4e1) - 0.36e2 * t * pow(u, 0.5e1) - 0.10e2 * pow(t, 0.5e1) - 0.40e2 * pow(t, 0.4e1) * u - 0.60e2 * pow(t, 0.3e1) * u * u - 0.40e2 * t * t * pow(u, 0.3e1) - 0.10e2 * t * pow(u, 0.4e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * q3 * q3 - 0.16e2 / 0.9e1 * (0.1152e4 * t * pow(q4, 0.6e1) + (-0.4896e4 * t * t - 0.3744e4 * t * u - 0.2720e4 * t + 0.64e2 * u) * pow(q4, 0.5e1) + (0.8208e4 * pow(t, 0.3e1) + 0.13136e5 * t * t * u + 0.4896e4 * t * u * u + 0.8736e4 * t * t + 0.6048e4 * t * u - 0.128e3 * u * u + 0.1984e4 * t - 0.128e3 * u) * pow(q4, 0.4e1) + (-0.7056e4 * pow(t, 0.4e1) - 0.17488e5 * pow(t, 0.3e1) * u - 0.13744e5 * t * t * u * u - 0.3312e4 * t * pow(u, 0.3e1) - 0.9808e4 * pow(t, 0.3e1) - 0.14752e5 * t * t * u - 0.4784e4 * t * u * u + 0.96e2 * pow(u, 0.3e1) - 0.4256e4 * t * t - 0.2464e4 * t * u + 0.128e3 * u * u - 0.416e3 * t + 0.64e2 * u) * pow(q4, 0.3e1) + (0.3312e4 * pow(t, 0.5e1) + 0.11208e5 * pow(t, 0.4e1) * u + 0.13704e5 * pow(t, 0.3e1) * u * u + 0.7032e4 * t * t * pow(u, 0.3e1) + 0.1224e4 * t * pow(u, 0.4e1) + 0.4720e4 * pow(t, 0.4e1) + 0.11216e5 * pow(t, 0.3e1) * u + 0.8176e4 * t * t * u * u + 0.1648e4 * t * pow(u, 0.3e1) - 0.32e2 * pow(u, 0.4e1) + 0.2480e4 * pow(t, 0.3e1) + 0.3248e4 * t * t * u + 0.752e3 * t * u * u - 0.32e2 * pow(u, 0.3e1) + 0.416e3 * t * t + 0.160e3 * t * u) * q4 * q4 + (-0.810e3 * pow(t, 0.6e1) - 0.3490e4 * pow(t, 0.5e1) * u - 0.5844e4 * pow(t, 0.4e1) * u * u - 0.4692e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1762e4 * t * t * pow(u, 0.4e1) - 0.234e3 * t * pow(u, 0.5e1) - 0.882e3 * pow(t, 0.5e1) - 0.2908e4 * pow(t, 0.4e1) * u - 0.3412e4 * pow(t, 0.3e1) * u * u - 0.1624e4 * t * t * pow(u, 0.3e1) - 0.234e3 * t * pow(u, 0.4e1) + 0.4e1 * pow(u, 0.5e1) - 0.352e3 * pow(t, 0.4e1) - 0.736e3 * pow(t, 0.3e1) * u - 0.464e3 * t * t * u * u - 0.80e2 * t * pow(u, 0.3e1) - 0.144e3 * pow(t, 0.3e1) - 0.96e2 * t * t * u) * q4 + 0.81e2 * pow(t, 0.7e1) + 0.425e3 * pow(t, 0.6e1) * u + 0.908e3 * pow(t, 0.5e1) * u * u + 0.1002e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.593e3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.173e3 * t * t * pow(u, 0.5e1) + 0.18e2 * t * pow(u, 0.6e1) + 0.26e2 * pow(t, 0.6e1) + 0.114e3 * pow(t, 0.5e1) * u + 0.196e3 * pow(t, 0.4e1) * u * u + 0.164e3 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.66e2 * t * t * pow(u, 0.4e1) + 0.10e2 * t * pow(u, 0.5e1) + 0.36e2 * pow(t, 0.5e1) + 0.96e2 * pow(t, 0.4e1) * u + 0.84e2 * pow(t, 0.3e1) * u * u + 0.24e2 * t * t * pow(u, 0.3e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * q3 - 0.16e2 / 0.9e1 * (-0.36e2 * pow(t, 0.6e1) - 0.36e2 * pow(t, 0.4e1) * u - 0.18e2 * pow(t, 0.3e1) * u * u - 0.164e3 * pow(t, 0.7e1) * u + 0.288e3 * t * pow(q4, 0.7e1) + (-0.1728e4 * t * t - 0.1152e4 * t * u - 0.736e3 * t) * pow(q4, 0.6e1) + (0.4032e4 * pow(t, 0.3e1) + 0.5936e4 * t * t * u + 0.1872e4 * t * u * u + 0.3616e4 * t * t + 0.2208e4 * t * u + 0.608e3 * t) * pow(q4, 0.5e1) + (-0.4896e4 * pow(t, 0.4e1) - 0.11472e5 * pow(t, 0.3e1) * u - 0.8160e4 * t * t * u * u - 0.1584e4 * t * pow(u, 0.3e1) - 0.6416e4 * pow(t, 0.3e1) - 0.8944e4 * t * t * u - 0.2464e4 * t * u * u - 0.2304e4 * t * t - 0.1216e4 * t * u - 0.160e3 * t) * pow(q4, 0.4e1) + (0.3402e4 * pow(t, 0.5e1) + 0.11056e5 * pow(t, 0.4e1) * u + 0.12644e5 * pow(t, 0.3e1) * u * u + 0.5728e4 * t * t * pow(u, 0.3e1) + 0.738e3 * t * pow(u, 0.4e1) + 0.5344e4 * pow(t, 0.4e1) + 0.12064e5 * pow(t, 0.3e1) * u + 0.7968e4 * t * t * u * u + 0.1248e4 * t * pow(u, 0.3e1) + 0.2960e4 * pow(t, 0.3e1) + 0.3696e4 * t * t * u + 0.752e3 * t * u * u + 0.416e3 * t * t + 0.160e3 * t * u) * pow(q4, 0.3e1) + (-0.1368e4 * pow(t, 0.6e1) - 0.5716e4 * pow(t, 0.5e1) * u - 0.9120e4 * pow(t, 0.4e1) * u * u - 0.6744e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.2152e4 * t * t * pow(u, 0.4e1) - 0.180e3 * t * pow(u, 0.5e1) - 0.2186e4 * pow(t, 0.5e1) - 0.6920e4 * pow(t, 0.4e1) * u - 0.7564e4 * pow(t, 0.3e1) * u * u - 0.3112e4 * t * t * pow(u, 0.3e1) - 0.282e3 * t * pow(u, 0.4e1) - 0.1536e4 * pow(t, 0.4e1) - 0.3104e4 * pow(t, 0.3e1) * u - 0.1712e4 * t * t * u * u - 0.144e3 * t * pow(u, 0.3e1) - 0.484e3 * pow(t, 0.3e1) - 0.468e3 * t * t * u - 0.32e2 * t * u * u) * q4 * q4 + (0.297e3 * pow(t, 0.7e1) + 0.1521e4 * pow(t, 0.6e1) * u + 0.3132e4 * pow(t, 0.5e1) * u * u + 0.3258e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1737e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.405e3 * t * t * pow(u, 0.5e1) + 0.18e2 * t * pow(u, 0.6e1) + 0.394e3 * pow(t, 0.6e1) + 0.1618e4 * pow(t, 0.5e1) * u + 0.2516e4 * pow(t, 0.4e1) * u * u + 0.1780e4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.514e3 * t * t * pow(u, 0.4e1) + 0.26e2 * t * pow(u, 0.5e1) + 0.332e3 * pow(t, 0.5e1) + 0.904e3 * pow(t, 0.4e1) * u + 0.828e3 * pow(t, 0.3e1) * u * u + 0.272e3 * t * t * pow(u, 0.3e1) + 0.16e2 * t * pow(u, 0.4e1) + 0.180e3 * pow(t, 0.4e1) + 0.264e3 * pow(t, 0.3e1) * u + 0.84e2 * t * t * u * u + 0.36e2 * pow(t, 0.3e1) + 0.36e2 * t * t * u) * q4 - 0.120e3 * pow(t, 0.5e1) * u - 0.144e3 * pow(t, 0.4e1) * u * u - 0.72e2 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.12e2 * t * t * pow(u, 0.4e1) - 0.29e2 * t * t * pow(u, 0.5e1) - 0.19e2 * pow(t, 0.7e1) - 0.27e2 * pow(t, 0.8e1) - 0.2e1 * t * pow(u, 0.6e1) - 0.97e2 * pow(t, 0.6e1) * u - 0.200e3 * pow(t, 0.5e1) * u * u - 0.210e3 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.115e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.560e3 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.425e3 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.172e3 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.29e2 * t * t * pow(u, 0.6e1) - 0.415e3 * pow(t, 0.6e1) * u * u - 0.18e2 * pow(t, 0.5e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u);
}
#include <math.h>

double GstarVVCoeffsC12e2 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.16e2 / 0.27e2 * (0.1728e4 * t * pow(q4, 0.4e1) + (-0.3456e4 * t * t - 0.3456e4 * t * u - 0.3456e4 * t) * pow(q4, 0.3e1) + (0.2592e4 * pow(t, 0.3e1) + 0.5184e4 * t * t * u + 0.2592e4 * t * u * u + 0.3456e4 * t * t + 0.3456e4 * t * u + 0.1728e4 * t) * q4 * q4 + (-0.864e3 * pow(t, 0.4e1) - 0.2592e4 * pow(t, 0.3e1) * u - 0.2592e4 * t * t * u * u - 0.864e3 * t * pow(u, 0.3e1) - 0.864e3 * pow(t, 0.3e1) - 0.1728e4 * t * t * u - 0.864e3 * t * u * u) * q4 + 0.108e3 * pow(t, 0.5e1) + 0.432e3 * pow(t, 0.4e1) * u + 0.648e3 * pow(t, 0.3e1) * u * u + 0.432e3 * t * t * pow(u, 0.3e1) + 0.108e3 * t * pow(u, 0.4e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q3, 0.3e1) - 0.16e2 / 0.27e2 * ((0.6048e4 * t - 0.864e3 * u) * pow(q4, 0.5e1) + (-0.19008e5 * t * t - 0.13824e5 * t * u + 0.1728e4 * u * u - 0.12992e5 * t + 0.1728e4 * u) * pow(q4, 0.4e1) + (0.22896e5 * pow(t, 0.3e1) + 0.37584e5 * t * t * u + 0.13392e5 * t * u * u - 0.1296e4 * pow(u, 0.3e1) + 0.27712e5 * t * t + 0.19072e5 * t * u - 0.1728e4 * u * u + 0.7840e4 * t - 0.864e3 * u) * pow(q4, 0.3e1) + (-0.13392e5 * pow(t, 0.4e1) - 0.34560e5 * pow(t, 0.3e1) * u - 0.28512e5 * t * t * u * u - 0.6912e4 * t * pow(u, 0.3e1) + 0.432e3 * pow(u, 0.4e1) - 0.18192e5 * pow(t, 0.3e1) - 0.29040e5 * t * t * u - 0.10416e5 * t * u * u + 0.432e3 * pow(u, 0.3e1) - 0.8704e4 * t * t - 0.5248e4 * t * u - 0.896e3 * t) * q4 * q4 + (0.3834e4 * pow(t, 0.5e1) + 0.13554e5 * pow(t, 0.4e1) * u + 0.17604e5 * pow(t, 0.3e1) * u * u + 0.9828e4 * t * t * pow(u, 0.3e1) + 0.1890e4 * t * pow(u, 0.4e1) - 0.54e2 * pow(u, 0.5e1) + 0.3904e4 * pow(t, 0.4e1) + 0.9984e4 * pow(t, 0.3e1) * u + 0.8256e4 * t * t * u * u + 0.2176e4 * t * pow(u, 0.3e1) + 0.448e3 * pow(t, 0.3e1) + 0.896e3 * t * t * u + 0.448e3 * t * u * u) * q4 - 0.432e3 * pow(t, 0.6e1) - 0.1944e4 * pow(t, 0.5e1) * u - 0.3456e4 * pow(t, 0.4e1) * u * u - 0.3024e4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.1296e4 * t * t * pow(u, 0.4e1) - 0.216e3 * t * pow(u, 0.5e1) - 0.56e2 * pow(t, 0.5e1) - 0.224e3 * pow(t, 0.4e1) * u - 0.336e3 * pow(t, 0.3e1) * u * u - 0.224e3 * t * t * pow(u, 0.3e1) - 0.56e2 * t * pow(u, 0.4e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * q3 * q3 - 0.16e2 / 0.27e2 * ((0.6048e4 * t - 0.864e3 * u) * pow(q4, 0.6e1) + (-0.26784e5 * t * t - 0.17280e5 * t * u + 0.2592e4 * u * u - 0.14368e5 * t + 0.2144e4 * u) * pow(q4, 0.5e1) + (0.47520e5 * pow(t, 0.3e1) + 0.71056e5 * t * t * u + 0.20736e5 * t * u * u - 0.3024e4 * pow(u, 0.3e1) + 0.48576e5 * t * t + 0.28800e5 * t * u - 0.4288e4 * u * u + 0.10592e5 * t - 0.1696e4 * u) * pow(q4, 0.4e1) + (-0.43200e5 * pow(t, 0.4e1) - 0.103232e6 * pow(t, 0.3e1) * u - 0.75584e5 * t * t * u * u - 0.13824e5 * t * pow(u, 0.3e1) + 0.1728e4 * pow(u, 0.4e1) - 0.59072e5 * pow(t, 0.3e1) - 0.83936e5 * t * t * u - 0.22528e5 * t * u * u + 0.2784e4 * pow(u, 0.3e1) - 0.24352e5 * t * t - 0.12416e5 * t * u + 0.1696e4 * u * u - 0.2272e4 * t + 0.416e3 * u) * pow(q4, 0.3e1) + (0.21330e5 * pow(t, 0.5e1) + 0.70674e5 * pow(t, 0.4e1) * u + 0.83892e5 * pow(t, 0.3e1) * u * u + 0.40596e5 * t * t * pow(u, 0.3e1) + 0.5562e4 * t * pow(u, 0.4e1) - 0.486e3 * pow(u, 0.5e1) + 0.30464e5 * pow(t, 0.4e1) + 0.70528e5 * pow(t, 0.3e1) * u + 0.49472e5 * t * t * u * u + 0.8768e4 * t * pow(u, 0.3e1) - 0.640e3 * pow(u, 0.4e1) + 0.16984e5 * pow(t, 0.3e1) + 0.21112e5 * t * t * u + 0.4672e4 * t * u * u - 0.208e3 * pow(u, 0.3e1) + 0.2560e4 * t * t + 0.896e3 * t * u) * q4 * q4 + (-0.5454e4 * pow(t, 0.6e1) - 0.23216e5 * pow(t, 0.5e1) * u - 0.38382e5 * pow(t, 0.4e1) * u * u - 0.30336e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.11066e5 * t * t * pow(u, 0.4e1) - 0.1296e4 * t * pow(u, 0.5e1) + 0.54e2 * pow(u, 0.6e1) - 0.5958e4 * pow(t, 0.5e1) - 0.19406e5 * pow(t, 0.4e1) * u - 0.22556e5 * pow(t, 0.3e1) * u * u - 0.10700e5 * t * t * pow(u, 0.3e1) - 0.1566e4 * t * pow(u, 0.4e1) + 0.26e2 * pow(u, 0.5e1) - 0.2936e4 * pow(t, 0.4e1) - 0.5792e4 * pow(t, 0.3e1) * u - 0.3304e4 * t * t * u * u - 0.448e3 * t * pow(u, 0.3e1) - 0.1656e4 * pow(t, 0.3e1) - 0.1128e4 * t * t * u) * q4 + 0.567e3 * pow(t, 0.7e1) + 0.2956e4 * pow(t, 0.6e1) * u + 0.6289e4 * pow(t, 0.5e1) * u * u + 0.6936e4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.4129e4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.1228e4 * t * t * pow(u, 0.5e1) + 0.135e3 * t * pow(u, 0.6e1) + 0.160e3 * pow(t, 0.6e1) + 0.696e3 * pow(t, 0.5e1) * u + 0.1184e4 * pow(t, 0.4e1) * u * u + 0.976e3 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.384e3 * t * t * pow(u, 0.4e1) + 0.56e2 * t * pow(u, 0.5e1) + 0.414e3 * pow(t, 0.5e1) + 0.1110e4 * pow(t, 0.4e1) * u + 0.978e3 * pow(t, 0.3e1) * u * u + 0.282e3 * t * t * pow(u, 0.3e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * q3 - 0.16e2 / 0.27e2 * ((-0.10368e5 * t * t - 0.6912e4 * t * u - 0.4352e4 * t) * pow(q4, 0.6e1) + (0.25488e5 * pow(t, 0.3e1) + 0.36928e5 * t * t * u + 0.11664e5 * t * u * u + 0.21632e5 * t * t + 0.13056e5 * t * u + 0.3520e4 * t) * pow(q4, 0.5e1) + (-0.33264e5 * pow(t, 0.4e1) - 0.76656e5 * pow(t, 0.3e1) * u - 0.54192e5 * t * t * u * u - 0.10800e5 * t * pow(u, 0.3e1) - 0.41488e5 * pow(t, 0.3e1) - 0.56480e5 * t * t * u - 0.15440e5 * t * u * u - 0.13824e5 * t * t - 0.7040e4 * t * u - 0.896e3 * t) * pow(q4, 0.4e1) + (0.24948e5 * pow(t, 0.5e1) + 0.80000e5 * pow(t, 0.4e1) * u + 0.91096e5 * pow(t, 0.3e1) * u * u + 0.41984e5 * t * t * pow(u, 0.3e1) + 0.5940e4 * t * pow(u, 0.4e1) + 0.38048e5 * pow(t, 0.4e1) + 0.84320e5 * pow(t, 0.3e1) * u + 0.55392e5 * t * t * u * u + 0.9120e4 * t * pow(u, 0.3e1) + 0.20680e5 * pow(t, 0.3e1) + 0.24744e5 * t * t * u + 0.4816e4 * t * u * u + 0.2560e4 * t * t + 0.896e3 * t * u) * pow(q4, 0.3e1) + (-0.10800e5 * pow(t, 0.6e1) - 0.44696e5 * pow(t, 0.5e1) * u - 0.71232e5 * pow(t, 0.4e1) * u * u - 0.53520e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.18128e5 * t * t * pow(u, 0.4e1) - 0.1944e4 * t * pow(u, 0.5e1) - 0.16936e5 * pow(t, 0.5e1) - 0.53008e5 * pow(t, 0.4e1) * u - 0.57968e5 * pow(t, 0.3e1) * u * u - 0.24656e5 * t * t * pow(u, 0.3e1) - 0.2760e4 * t * pow(u, 0.4e1) - 0.12864e5 * pow(t, 0.4e1) - 0.25216e5 * pow(t, 0.3e1) * u - 0.13648e5 * t * t * u * u - 0.1296e4 * t * pow(u, 0.3e1) - 0.4190e4 * pow(t, 0.3e1) - 0.3870e4 * t * t * u - 0.208e3 * t * u * u) * q4 * q4 + (0.2511e4 * pow(t, 0.7e1) + 0.12780e5 * pow(t, 0.6e1) * u + 0.26361e5 * pow(t, 0.5e1) * u * u + 0.27864e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.15561e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.4140e4 * t * t * pow(u, 0.5e1) + 0.351e3 * t * pow(u, 0.6e1) + 0.3200e4 * pow(t, 0.6e1) + 0.13064e5 * pow(t, 0.5e1) * u + 0.20368e5 * pow(t, 0.4e1) * u * u + 0.14720e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.4592e4 * t * t * pow(u, 0.4e1) + 0.376e3 * t * pow(u, 0.5e1) + 0.3166e4 * pow(t, 0.5e1) + 0.8414e4 * pow(t, 0.4e1) * u + 0.7434e4 * pow(t, 0.3e1) * u * u + 0.2290e4 * t * t * pow(u, 0.3e1) + 0.104e3 * t * pow(u, 0.4e1) + 0.1998e4 * pow(t, 0.4e1) + 0.2940e4 * pow(t, 0.3e1) * u + 0.942e3 * t * t * u * u + 0.342e3 * pow(t, 0.3e1) + 0.342e3 * t * t * u) * q4 - 0.414e3 * pow(t, 0.6e1) - 0.360e3 * pow(t, 0.4e1) * u - 0.153e3 * pow(t, 0.3e1) * u * u - 0.1471e4 * pow(t, 0.7e1) * u + 0.1728e4 * t * pow(q4, 0.7e1) + 0.18e2 * t * t * pow(u, 0.3e1) - 0.1392e4 * pow(t, 0.5e1) * u - 0.1692e4 * pow(t, 0.4e1) * u * u - 0.864e3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.150e3 * t * t * pow(u, 0.4e1) - 0.202e3 * t * t * pow(u, 0.5e1) - 0.137e3 * pow(t, 0.7e1) - 0.243e3 * pow(t, 0.8e1) - 0.13e2 * t * pow(u, 0.6e1) - 0.698e3 * pow(t, 0.6e1) * u - 0.1435e4 * pow(t, 0.5e1) * u * u - 0.1500e4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.815e3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.5125e4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.4045e4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.1793e4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.391e3 * t * t * pow(u, 0.6e1) - 0.3737e4 * pow(t, 0.6e1) * u * u - 0.27e2 * t * pow(u, 0.7e1) - 0.189e3 * pow(t, 0.5e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u);
}
#include <math.h>

double GstarVVCoeffsC12e3 (
  const vector<double>& kk)
{
  const double q3 = kk[0];const double q4 = kk[1];const double u = kk[2];const double t = kk[3];
  return(-0.8e1 / 0.81e2 * (0.20736e5 * t * pow(q4, 0.4e1) + (-0.41472e5 * t * t - 0.41472e5 * t * u - 0.41472e5 * t) * pow(q4, 0.3e1) + (0.31104e5 * pow(t, 0.3e1) + 0.62208e5 * t * t * u + 0.31104e5 * t * u * u + 0.41472e5 * t * t + 0.41472e5 * t * u + 0.20736e5 * t) * q4 * q4 + (-0.10368e5 * pow(t, 0.4e1) - 0.31104e5 * pow(t, 0.3e1) * u - 0.31104e5 * t * t * u * u - 0.10368e5 * t * pow(u, 0.3e1) - 0.10368e5 * pow(t, 0.3e1) - 0.20736e5 * t * t * u - 0.10368e5 * t * u * u) * q4 + 0.1296e4 * pow(t, 0.5e1) + 0.5184e4 * pow(t, 0.4e1) * u + 0.7776e4 * pow(t, 0.3e1) * u * u + 0.5184e4 * t * t * pow(u, 0.3e1) + 0.1296e4 * t * pow(u, 0.4e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * pow(q3, 0.3e1) - 0.8e1 / 0.81e2 * ((0.72576e5 * t - 0.10368e5 * u) * pow(q4, 0.5e1) + (-0.228096e6 * t * t - 0.165888e6 * t * u + 0.20736e5 * u * u - 0.155648e6 * t + 0.20736e5 * u) * pow(q4, 0.4e1) + (0.274752e6 * pow(t, 0.3e1) + 0.451008e6 * t * t * u + 0.160704e6 * t * u * u - 0.15552e5 * pow(u, 0.3e1) + 0.332032e6 * t * t + 0.228352e6 * t * u - 0.20736e5 * u * u + 0.93568e5 * t - 0.10368e5 * u) * pow(q4, 0.3e1) + (-0.160704e6 * pow(t, 0.4e1) - 0.414720e6 * pow(t, 0.3e1) * u - 0.342144e6 * t * t * u * u - 0.82944e5 * t * pow(u, 0.3e1) + 0.5184e4 * pow(u, 0.4e1) - 0.217920e6 * pow(t, 0.3e1) - 0.347712e6 * t * t * u - 0.124608e6 * t * u * u + 0.5184e4 * pow(u, 0.3e1) - 0.103936e6 * t * t - 0.62464e5 * t * u - 0.10496e5 * t) * q4 * q4 + (0.46008e5 * pow(t, 0.5e1) + 0.162648e6 * pow(t, 0.4e1) * u + 0.211248e6 * pow(t, 0.3e1) * u * u + 0.117936e6 * t * t * pow(u, 0.3e1) + 0.22680e5 * t * pow(u, 0.4e1) - 0.648e3 * pow(u, 0.5e1) + 0.46720e5 * pow(t, 0.4e1) + 0.119424e6 * pow(t, 0.3e1) * u + 0.98688e5 * t * t * u * u + 0.25984e5 * t * pow(u, 0.3e1) + 0.5248e4 * pow(t, 0.3e1) + 0.10496e5 * t * t * u + 0.5248e4 * t * u * u) * q4 - 0.5184e4 * pow(t, 0.6e1) - 0.23328e5 * pow(t, 0.5e1) * u - 0.41472e5 * pow(t, 0.4e1) * u * u - 0.36288e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.15552e5 * t * t * pow(u, 0.4e1) - 0.2592e4 * t * pow(u, 0.5e1) - 0.656e3 * pow(t, 0.5e1) - 0.2624e4 * pow(t, 0.4e1) * u - 0.3936e4 * pow(t, 0.3e1) * u * u - 0.2624e4 * t * t * pow(u, 0.3e1) - 0.656e3 * t * pow(u, 0.4e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * q3 * q3 - 0.8e1 / 0.81e2 * ((0.72576e5 * t - 0.10368e5 * u) * pow(q4, 0.6e1) + (-0.321408e6 * t * t - 0.207360e6 * t * u + 0.31104e5 * u * u - 0.171520e6 * t + 0.25856e5 * u) * pow(q4, 0.5e1) + (0.571968e6 * pow(t, 0.3e1) + 0.854464e6 * t * t * u + 0.248832e6 * t * u * u - 0.36288e5 * pow(u, 0.3e1) + 0.581376e6 * t * t + 0.343296e6 * t * u - 0.51712e5 * u * u + 0.125312e6 * t - 0.20608e5 * u) * pow(q4, 0.4e1) + (-0.521856e6 * pow(t, 0.4e1) - 0.1245824e7 * pow(t, 0.3e1) * u - 0.910592e6 * t * t * u * u - 0.165888e6 * t * pow(u, 0.3e1) + 0.20736e5 * pow(u, 0.4e1) - 0.711488e6 * pow(t, 0.3e1) - 0.1007936e7 * t * t * u - 0.268096e6 * t * u * u + 0.33600e5 * pow(u, 0.3e1) - 0.290944e6 * t * t - 0.146432e6 * t * u + 0.20608e5 * u * u - 0.26368e5 * t + 0.5120e4 * u) * pow(q4, 0.3e1) + (0.258552e6 * pow(t, 0.5e1) + 0.855960e6 * pow(t, 0.4e1) * u + 0.1014672e7 * pow(t, 0.3e1) * u * u + 0.489840e6 * t * t * pow(u, 0.3e1) + 0.66744e5 * t * pow(u, 0.4e1) - 0.5832e4 * pow(u, 0.5e1) + 0.368960e6 * pow(t, 0.4e1) + 0.852352e6 * pow(t, 0.3e1) * u + 0.595328e6 * t * t * u * u + 0.104192e6 * t * pow(u, 0.3e1) - 0.7744e4 * pow(u, 0.4e1) + 0.218704e6 * pow(t, 0.3e1) + 0.262864e6 * t * t * u + 0.54976e5 * t * u * u - 0.2560e4 * pow(u, 0.3e1) + 0.30976e5 * t * t + 0.10496e5 * t * u) * q4 * q4 + (-0.66312e5 * pow(t, 0.6e1) - 0.282080e6 * pow(t, 0.5e1) * u - 0.465864e6 * pow(t, 0.4e1) * u * u - 0.367584e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.133688e6 * t * t * pow(u, 0.4e1) - 0.15552e5 * t * pow(u, 0.5e1) + 0.648e3 * pow(u, 0.6e1) - 0.72432e5 * pow(t, 0.5e1) - 0.235520e6 * pow(t, 0.4e1) * u - 0.272960e6 * pow(t, 0.3e1) * u * u - 0.128768e6 * t * t * pow(u, 0.3e1) - 0.18576e5 * t * pow(u, 0.4e1) + 0.320e3 * pow(u, 0.5e1) - 0.48464e5 * pow(t, 0.4e1) - 0.91424e5 * pow(t, 0.3e1) * u - 0.48208e5 * t * t * u * u - 0.5248e4 * t * pow(u, 0.3e1) - 0.32976e5 * pow(t, 0.3e1) - 0.22224e5 * t * t * u) * q4 + 0.6912e4 * pow(t, 0.7e1) + 0.36016e5 * pow(t, 0.6e1) * u + 0.76564e5 * pow(t, 0.5e1) * u * u + 0.84336e5 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.50104e5 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.14848e5 * t * t * pow(u, 0.5e1) + 0.1620e4 * t * pow(u, 0.6e1) + 0.1936e4 * pow(t, 0.6e1) + 0.8400e4 * pow(t, 0.5e1) * u + 0.14240e5 * pow(t, 0.4e1) * u * u + 0.11680e5 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.4560e4 * t * t * pow(u, 0.4e1) + 0.656e3 * t * pow(u, 0.5e1) + 0.8244e4 * pow(t, 0.5e1) + 0.22044e5 * pow(t, 0.4e1) * u + 0.19356e5 * pow(t, 0.3e1) * u * u + 0.5556e4 * t * t * pow(u, 0.3e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u * q3 - 0.8e1 / 0.81e2 * ((-0.124416e6 * t * t - 0.82944e5 * t * u - 0.51968e5 * t) * pow(q4, 0.6e1) + (0.307584e6 * pow(t, 0.3e1) + 0.444928e6 * t * t * u + 0.139968e6 * t * u * u + 0.259328e6 * t * t + 0.155904e6 * t * u + 0.41728e5 * t) * pow(q4, 0.5e1) + (-0.404352e6 * pow(t, 0.4e1) - 0.930432e6 * pow(t, 0.3e1) * u - 0.655680e6 * t * t * u * u - 0.129600e6 * t * pow(u, 0.3e1) - 0.502912e6 * pow(t, 0.3e1) - 0.682112e6 * t * t * u - 0.184448e6 * t * u * u - 0.165888e6 * t * t - 0.83456e5 * t * u - 0.10496e5 * t) * pow(q4, 0.4e1) + (0.305424e6 * pow(t, 0.5e1) + 0.978368e6 * pow(t, 0.4e1) * u + 0.1111744e7 * pow(t, 0.3e1) * u * u + 0.510080e6 * t * t * pow(u, 0.3e1) + 0.71280e5 * t * pow(u, 0.4e1) + 0.466688e6 * pow(t, 0.4e1) + 0.1031936e7 * pow(t, 0.3e1) * u + 0.674304e6 * t * t * u * u + 0.109056e6 * t * pow(u, 0.3e1) + 0.266320e6 * pow(t, 0.3e1) + 0.310224e6 * t * t * u + 0.57280e5 * t * u * u + 0.30976e5 * t * t + 0.10496e5 * t * u) * pow(q4, 0.3e1) + (-0.133056e6 * pow(t, 0.6e1) - 0.550304e6 * pow(t, 0.5e1) * u - 0.875904e6 * pow(t, 0.4e1) * u * u - 0.656448e6 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.221120e6 * t * t * pow(u, 0.4e1) - 0.23328e5 * t * pow(u, 0.5e1) - 0.209872e6 * pow(t, 0.5e1) - 0.656128e6 * pow(t, 0.4e1) * u - 0.715712e6 * pow(t, 0.3e1) * u * u - 0.302528e6 * t * t * pow(u, 0.3e1) - 0.33072e5 * t * pow(u, 0.4e1) - 0.186240e6 * pow(t, 0.4e1) - 0.353152e6 * pow(t, 0.3e1) * u - 0.182464e6 * t * t * u * u - 0.15552e5 * t * pow(u, 0.3e1) - 0.66926e5 * pow(t, 0.3e1) - 0.58734e5 * t * t * u - 0.2560e4 * t * u * u) * q4 * q4 + (0.31104e5 * pow(t, 0.7e1) + 0.158256e6 * pow(t, 0.6e1) * u + 0.326196e6 * pow(t, 0.5e1) * u * u + 0.344304e6 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.191736e6 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.50688e5 * t * t * pow(u, 0.5e1) + 0.4212e4 * t * pow(u, 0.6e1) + 0.40016e5 * pow(t, 0.6e1) + 0.163280e6 * pow(t, 0.5e1) * u + 0.254272e6 * pow(t, 0.4e1) * u * u + 0.183296e6 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.56816e5 * t * t * pow(u, 0.4e1) + 0.4528e4 * t * pow(u, 0.5e1) + 0.55972e5 * pow(t, 0.5e1) + 0.145004e6 * pow(t, 0.4e1) * u + 0.123372e6 * pow(t, 0.3e1) * u * u + 0.35620e5 * t * t * pow(u, 0.3e1) + 0.1280e4 * t * pow(u, 0.4e1) + 0.40014e5 * pow(t, 0.4e1) + 0.58524e5 * pow(t, 0.3e1) * u + 0.18510e5 * t * t * u * u + 0.6174e4 * pow(t, 0.3e1) + 0.6174e4 * t * t * u) * q4 - 0.8460e4 * pow(t, 0.6e1) - 0.6786e4 * pow(t, 0.4e1) * u - 0.2475e4 * pow(t, 0.3e1) * u * u - 0.18304e5 * pow(t, 0.7e1) * u + 0.20736e5 * t * pow(q4, 0.7e1) + 0.612e3 * t * t * pow(u, 0.3e1) - 0.28464e5 * pow(t, 0.5e1) * u - 0.34632e5 * pow(t, 0.4e1) * u * u - 0.17712e5 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.3084e4 * t * t * pow(u, 0.4e1) - 0.2536e4 * t * t * pow(u, 0.5e1) - 0.1736e4 * pow(t, 0.7e1) - 0.3024e4 * pow(t, 0.8e1) - 0.160e3 * t * pow(u, 0.6e1) - 0.8840e4 * pow(t, 0.6e1) * u - 0.18160e5 * pow(t, 0.5e1) * u * u - 0.18960e5 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.10280e5 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.63700e5 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.50200e5 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.22184e5 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.4804e4 * t * t * pow(u, 0.6e1) - 0.46484e5 * pow(t, 0.6e1) * u * u - 0.324e3 * t * pow(u, 0.7e1) - 0.3699e4 * pow(t, 0.5e1)) / t * pow(0.4e1 * q4 * q4 + (-0.4e1 * t - 0.4e1 * u - 0.4e1) * q4 + t * t + 0.2e1 * t * u + u * u, -0.2e1) / u);
}
