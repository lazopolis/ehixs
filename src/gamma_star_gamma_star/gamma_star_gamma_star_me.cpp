#include "gamma_star_gamma_star_me.h"
#include "chaplin.h"

GstarGstarMe::GstarGstarMe(EventBox& event_box):NewMatrixElement(event_box)
{
    info_ = new NewMeExternalInfo;
    dimension_ = 4;
    info_->name = "Born";
    info_->ISF = InitialStateFlavors("u","ub");
    pdf_selection_ = "same flavor";
    info_->alpha_power = 0;
    info_->epsilon_power_min = 0;
    info_->epsilon_power_max = 2;
    alpha_em = 1.0/137.0 ;
    const double m3=20.0;
    const double m4=30.0;
    kk_.s3=m3*m3;
    kk_.s4=m4*m4;
    smin = (m3+m4)*(m3+m4);
}
void GstarGstarMe::consolidate()
{
    kk_.tau = smin/smax; // smax is a protected member of the base class
    kk_.smax = smax;
    const double averaging_factor = 1.0/6.0 * 1.0/6.0 ;
    const double color_factor = 3.0;
    
    prefactor_ = averaging_factor*color_factor* pow(alpha_em,2.0)* 0.389379*1e9;
}

void GstarGstarMe::JF(const double& w,const KinematicVariables& kv)
{
    event_box_->AddNewEvent(w);
    event_box_->SetP(1,kv.p1.p[0],kv.p1.p[1],kv.p1.p[2],kv.p1.p[3]);
    event_box_->SetP(2,kv.p2.p[0],kv.p2.p[1],kv.p2.p[2],kv.p2.p[3]);
    event_box_->SetP(3,kv.p3.p[0],kv.p3.p[1],kv.p3.p[2],kv.p3.p[3]);
    event_box_->SetP(4,kv.p4.p[0],kv.p4.p[1],kv.p4.p[2],kv.p4.p[3]);
    event_box_->SetP(5,kv.p5.p[0],kv.p5.p[1],kv.p5.p[2],kv.p5.p[3]);
    event_box_->SetP(6,kv.p6.p[0],kv.p6.p[1],kv.p6.p[2],kv.p6.p[3]);

}

void GstarGstarMe::JF()
{
    event_box_->AddNewEvent(0.0);

}

double GstarGstarMe::PP(const double& x)
{
    return 4.0/3.0 * (1.0+x*x)/(1.0-x*x); 
}

void KinematicVariables::generate_bjorken_xs(double* xx_vegas)
{
    const double y= log(tau) + (1.0-log(tau))*xx_vegas[0];
    const double u = exp(y);
    const double rho = 1.0/2.0*log(u) -  log(u) * xx_vegas[1];
    x1 = sqrt(u)*exp(rho);
    x2 = sqrt(u)*exp(-rho);
    p1.Set(x1*sqrt(smax)/2.0,0.0,0.0,x1*sqrt(smax)/2.0);
    p2.Set(x2*sqrt(smax)/2.0,0.0,0.0,-x2*sqrt(smax)/2.0);
    jacobian = -log(u)*u*(1.0-tau)*(1.0-log(tau));
}


void KinematicVariables::SetLOKinematics(double* xx_vegas)
{
    const double Qsq = z * s12; // z!=1 is a N*LO configuration
    const double costheta = -1.0 + 2.0 * xx_vegas[2];
    const double phi = 2.0 * consts::Pi * xx_vegas[3];
    const double sintheta = sqrt(1.0-costheta*costheta);
    double A = - (Qsq-s3-s4);
    double Kaellen = Qsq*Qsq + s3*s3 + s4*s4
    -2.0*Qsq*s3-2.0*Qsq*s4-2.0*s3*s4;
    
    s13 = A/2.0 + sqrt(Kaellen)/2.0 * costheta;
    s23 = A/2.0 - sqrt(Kaellen)/2.0 * costheta;
    s14 = s23;
    s24 = s13;
    s34 = Qsq;
    // cout<<"\n"<<varying_part_of_jacobian<<" "<<me_sq;
    //Energies and z-momenta at the COM frame
    const double p3 = sqrt(Kaellen)/2.0/sqrt(Qsq);
    p3com.Set((Qsq+s3-s4)/2.0/sqrt(Qsq),
                  p3 * sintheta * sin(phi),
                  p3 * sintheta * cos(phi),
                  p3 * costheta);
    p4com.Set((Qsq+s4-s3)/2.0/sqrt(Qsq),
                  -p3 * sintheta * sin(phi),
                  -p3 * sintheta * cos(phi),
                  -p3 * costheta);
    
       
//    // boost factor for boosting back to LAB frame
//    const double bb = (x2-x1)/(x2+x1);
//    const double gb = 1.0/sqrt(1.0-bb*bb);
//    // boosting to LAB frame (the transverse pieces are invariant)
//    const double E3lab = gb * E3 - bb * gb * p3z;
//    const double p3zlab = gb * p3z -bb * gb * E3;
//    const double E4lab = gb * E4 - bb * gb * p4z;
//    const double p4zlab = gb * p4z -bb * gb * E4;
}

void KinematicVariables::SetNLOKinematics(double* xx_vegas)
{
    z = xx_vegas[4];
    lambda = xx_vegas[5];
    phi = 2.0*consts::Pi*xx_vegas[6];
    const double zbar = 1.0-z;
    const double lambdabar = 1.0-lambda;
    const double eq = zbar*sqrt(s12*lambda*lambdabar);
    s15 = -s12 * zbar * lambda;
    s25 = -s12 * zbar * lambdabar;
    p5com.Set(zbar*lambdabar*p1com[0]+zbar*lambdabar*p2com[0],
              eq*cos(phi),eq*sin(phi),
              zbar*lambdabar*p1com[3]+zbar*lambdabar*p2com[3]);
    SetLOKinematics(xx_vegas);
}

KinematicVariables KinematicVariables::single_collinear(int i)
{
    KinematicVariables kcol;
    kcol.p3=p3;
    kcol.p4=p4;
    kcol.z=z;
    kcol.s3=s3;
    kcol.s4=s4;
    kcol.s13=s13;
    kcol.s23=s23;
    kcol.s14=s14;
    kcol.s24=s24;
    kcol.s34=s34;
    // p5 = null by default
    if (i==1)
        {
        kcol.lambda=0.0;
        kcol.p1.Set(z*p1[0],z*p1[1],z*p1[2],z*p1[3]);
        kcol.p2=p2;
        kcol.s15 = 0.0;
        kcol.s25 = -s12*(1.0-z);
        }
    else if (i==2)
        {
        kcol.lambda=1.0;
        kcol.p2.Set((1.0-z)*p1[0],(1.0-z)*p1[1],(1.0-z)*p1[2],(1.0-z)*p1[3]);
        kcol.p1=p1;
        kcol.s25 = 0.0;
        kcol.s15 = -s12*(1.0-z);
        }
    return kcol;
}

double GstarGstarMe::Born(const KinematicVariables& kk)
{

    return 8.0*(
                kk.s23/kk.s13 - 2.0 * (kk.s3+kk.s4)/kk.s13
                - kk.s3*kk.s4/kk.s13/kk.s13
                +kk.s13/kk.s23 - 2.0 * (kk.s3+kk.s4)/kk.s23
                - kk.s3*kk.s4/kk.s23/kk.s23
                +2.0*pow(kk.s3+kk.s4,2.0)/ (kk.s13*kk.s23)
                );
}

void GstarGstarMeDelta::Evaluate(double* xx_vegas)
{
    kk_.generate_bjorken_xs(xx_vegas);
    const double lumi = LL(kk_.x1,kk_.x2);
    if (lumi!=0.0)
        {
        kk_.SetLOKinematics(xx_vegas);
        double me_sq = eval_me(kk_);
        const double sigma = prefactor_
                        * lumi
                        * 1.0/2.0/kk_.s12
                        * me_sq
                        ;
        JF(sigma,kk_);
        }
    else
        {
        JF();
        }
    
}



double GstarGstarMELO::eval_me(const KinematicVariables& kinvar)
{
    return Born(kinvar);
}



complex<double> GstarGstarMeNLOSoft::polylog(int i,const double& z)
{
    return HPL2(0,1,z);
}

double GstarGstarMeNLOSoft::eval_me(const KinematicVariables& kv)
{
    
    double s= kv.s12;
    double t = kv.s13;
    double u = kv.s23;
    double s3 = kv.s3;
    double s4 = kv.s4;
    double K = sqrt(s*s+t*t+u*u-2.0*u*s-2.0*u*t-2.0*s*t);
    
    double z  = 0.5/s * (t-u+s + K);
    double zp = 0.5/s * (t-u+s - K);
    
    
    
    complex<double> cg2 = -0.2e1 * (0.72e2 * pow(s3, 0.5e1) * pow(s4, 0.3e1) * t * u - 0.68e2 * pow(s3, 0.5e1) * s4 * s4 * t * t * u - 0.68e2 * pow(s3, 0.5e1) * s4 * s4 * t * u * u + 0.64e2 * pow(s3, 0.5e1) * s4 * t * t * u * u - 0.36e2 * pow(s3, 0.4e1) * pow(s4, 0.4e1) * t * t + 0.144e3 * pow(s3, 0.4e1) * pow(s4, 0.4e1) * t * u - 0.36e2 * pow(s3, 0.4e1) * pow(s4, 0.4e1) * u * u + 0.36e2 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * pow(t, 0.3e1) - 0.252e3 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * t * t * u - 0.252e3 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * t * u * u + 0.36e2 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * pow(u, 0.3e1) + 0.86e2 * pow(s3, 0.4e1) * s4 * s4 * pow(t, 0.3e1) * u + 0.372e3 * pow(s3, 0.4e1) * s4 * s4 * t * t * u * u + 0.86e2 * pow(s3, 0.4e1) * s4 * s4 * t * pow(u, 0.3e1) + 0.17e2 * pow(s3, 0.4e1) * s4 * pow(t, 0.4e1) * u - 0.77e2 * pow(s3, 0.4e1) * s4 * pow(t, 0.3e1) * u * u - 0.77e2 * pow(s3, 0.4e1) * s4 * t * t * pow(u, 0.3e1) + 0.17e2 * pow(s3, 0.4e1) * s4 * t * pow(u, 0.4e1) - 0.16e2 * pow(s3, 0.4e1) * pow(t, 0.4e1) * u * u - 0.32e2 * pow(s3, 0.4e1) * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.16e2 * pow(s3, 0.4e1) * t * t * pow(u, 0.4e1) + 0.72e2 * pow(s3, 0.3e1) * pow(s4, 0.5e1) * t * u + 0.36e2 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * pow(t, 0.3e1) - 0.252e3 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * t * t * u - 0.252e3 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * t * u * u + 0.36e2 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * pow(u, 0.3e1) - 0.27e2 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * pow(t, 0.4e1) + 0.238e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * pow(t, 0.3e1) * u + 0.586e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * t * u * u + 0.238e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * pow(u, 0.3e1) - 0.27e2 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * pow(u, 0.4e1) - 0.9e1 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.5e1) - 0.32e2 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.4e1) * u - 0.295e3 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.3e1) * u * u - 0.295e3 * pow(s3, 0.3e1) * s4 * s4 * t * t * pow(u, 0.3e1) - 0.32e2 * pow(s3, 0.3e1) * s4 * s4 * t * pow(u, 0.4e1) - 0.9e1 * pow(s3, 0.3e1) * s4 * s4 * pow(u, 0.5e1) - 0.25e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.5e1) * u - 0.54e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.4e1) * u * u - 0.74e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.54e2 * pow(s3, 0.3e1) * s4 * t * t * pow(u, 0.4e1) - 0.25e2 * pow(s3, 0.3e1) * s4 * t * pow(u, 0.5e1) + 0.31e2 * pow(s3, 0.3e1) * pow(t, 0.5e1) * u * u + 0.97e2 * pow(s3, 0.3e1) * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.97e2 * pow(s3, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.31e2 * pow(s3, 0.3e1) * t * t * pow(u, 0.5e1) - 0.68e2 * s3 * s3 * pow(s4, 0.5e1) * t * t * u - 0.68e2 * s3 * s3 * pow(s4, 0.5e1) * t * u * u + 0.86e2 * s3 * s3 * pow(s4, 0.4e1) * pow(t, 0.3e1) * u + 0.372e3 * s3 * s3 * pow(s4, 0.4e1) * t * t * u * u + 0.86e2 * s3 * s3 * pow(s4, 0.4e1) * t * pow(u, 0.3e1) - 0.9e1 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.5e1) - 0.32e2 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.4e1) * u - 0.295e3 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * u * u - 0.295e3 * s3 * s3 * pow(s4, 0.3e1) * t * t * pow(u, 0.3e1) - 0.32e2 * s3 * s3 * pow(s4, 0.3e1) * t * pow(u, 0.4e1) - 0.9e1 * s3 * s3 * pow(s4, 0.3e1) * pow(u, 0.5e1) + 0.9e1 * s3 * s3 * s4 * s4 * pow(t, 0.6e1) - 0.3e1 * s3 * s3 * s4 * s4 * pow(t, 0.5e1) * u - 0.107e3 * s3 * s3 * s4 * s4 * pow(t, 0.4e1) * u * u - 0.6e1 * s3 * s3 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.107e3 * s3 * s3 * s4 * s4 * t * t * pow(u, 0.4e1) - 0.3e1 * s3 * s3 * s4 * s4 * t * pow(u, 0.5e1) + 0.9e1 * s3 * s3 * s4 * s4 * pow(u, 0.6e1) + 0.17e2 * s3 * s3 * s4 * pow(t, 0.6e1) * u + 0.118e3 * s3 * s3 * s4 * pow(t, 0.5e1) * u * u + 0.293e3 * s3 * s3 * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.293e3 * s3 * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.118e3 * s3 * s3 * s4 * t * t * pow(u, 0.5e1) + 0.17e2 * s3 * s3 * s4 * t * pow(u, 0.6e1) - 0.23e2 * s3 * s3 * pow(t, 0.6e1) * u * u - 0.96e2 * s3 * s3 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.146e3 * s3 * s3 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.96e2 * s3 * s3 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.23e2 * s3 * s3 * t * t * pow(u, 0.6e1) + 0.64e2 * s3 * pow(s4, 0.5e1) * t * t * u * u + 0.17e2 * s3 * pow(s4, 0.4e1) * pow(t, 0.4e1) * u - 0.77e2 * s3 * pow(s4, 0.4e1) * pow(t, 0.3e1) * u * u - 0.77e2 * s3 * pow(s4, 0.4e1) * t * t * pow(u, 0.3e1) + 0.17e2 * s3 * pow(s4, 0.4e1) * t * pow(u, 0.4e1) - 0.25e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.5e1) * u - 0.54e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.4e1) * u * u - 0.74e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.54e2 * s3 * pow(s4, 0.3e1) * t * t * pow(u, 0.4e1) - 0.25e2 * s3 * pow(s4, 0.3e1) * t * pow(u, 0.5e1) + 0.17e2 * s3 * s4 * s4 * pow(t, 0.6e1) * u + 0.118e3 * s3 * s4 * s4 * pow(t, 0.5e1) * u * u + 0.293e3 * s3 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.293e3 * s3 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.118e3 * s3 * s4 * s4 * t * t * pow(u, 0.5e1) + 0.17e2 * s3 * s4 * s4 * t * pow(u, 0.6e1) - 0.9e1 * s3 * s4 * pow(t, 0.7e1) * u - 0.59e2 * s3 * s4 * pow(t, 0.6e1) * u * u - 0.177e3 * s3 * s4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.326e3 * s3 * s4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.177e3 * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.59e2 * s3 * s4 * t * t * pow(u, 0.6e1) - 0.9e1 * s3 * s4 * t * pow(u, 0.7e1) + 0.8e1 * s3 * pow(t, 0.7e1) * u * u + 0.38e2 * s3 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.78e2 * s3 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.78e2 * s3 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.38e2 * s3 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.8e1 * s3 * t * t * pow(u, 0.7e1) - 0.16e2 * pow(s4, 0.4e1) * pow(t, 0.4e1) * u * u - 0.32e2 * pow(s4, 0.4e1) * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.16e2 * pow(s4, 0.4e1) * t * t * pow(u, 0.4e1) + 0.31e2 * pow(s4, 0.3e1) * pow(t, 0.5e1) * u * u + 0.97e2 * pow(s4, 0.3e1) * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.97e2 * pow(s4, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.31e2 * pow(s4, 0.3e1) * t * t * pow(u, 0.5e1) - 0.23e2 * s4 * s4 * pow(t, 0.6e1) * u * u - 0.96e2 * s4 * s4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.146e3 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.96e2 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.23e2 * s4 * s4 * t * t * pow(u, 0.6e1) + 0.8e1 * s4 * pow(t, 0.7e1) * u * u + 0.38e2 * s4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.78e2 * s4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.78e2 * s4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.38e2 * s4 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.8e1 * s4 * t * t * pow(u, 0.7e1) - 0.7e1 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.14e2 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.14e2 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.14e2 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.7e1 * pow(t, 0.3e1) * pow(u, 0.7e1)) / (-u + s4) / (-t + s4) / (s3 - t) / (0.4e1 * s3 * s4 - t * t - 0.2e1 * t * u - u * u) * pow(t, -0.2e1) * pow(u, -0.2e1) / (-u + s3) + 0.4e1 * (0.2e1 * s3 * s3 * t + 0.4e1 * s3 * s4 * t - 0.2e1 * s3 * s4 * u - 0.4e1 * s3 * t * t - 0.2e1 * s3 * t * u + 0.2e1 * s4 * s4 * t - 0.4e1 * s4 * t * t - 0.2e1 * s4 * t * u + 0.2e1 * pow(t, 0.3e1) + 0.2e1 * t * t * u + t * u * u) * pow(t, -0.2e1) / u * polylog(2, -(s4 / s - t / s) / t * s) + 0.4e1 * (0.2e1 * s3 * s3 * u - 0.2e1 * s3 * s4 * t + 0.4e1 * s3 * s4 * u - 0.2e1 * s3 * t * u - 0.4e1 * s3 * u * u + 0.2e1 * s4 * s4 * u - 0.2e1 * s4 * t * u - 0.4e1 * s4 * u * u + t * t * u + 0.2e1 * t * u * u + 0.2e1 * pow(u, 0.3e1)) / t * pow(u, -0.2e1) * polylog(2, -(s4 / s - u / s) / u * s) + 0.4e1 * (0.2e1 * s3 * s3 * t + 0.4e1 * s3 * s4 * t - 0.2e1 * s3 * s4 * u - 0.4e1 * s3 * t * t - 0.2e1 * s3 * t * u + 0.2e1 * s4 * s4 * t - 0.4e1 * s4 * t * t - 0.2e1 * s4 * t * u + 0.2e1 * pow(t, 0.3e1) + 0.2e1 * t * t * u + t * u * u) * pow(t, -0.2e1) / u * polylog(2, -(s3 / s - t / s) / t * s) + 0.4e1 * (0.2e1 * s3 * s3 * u - 0.2e1 * s3 * s4 * t + 0.4e1 * s3 * s4 * u - 0.2e1 * s3 * t * u - 0.4e1 * s3 * u * u + 0.2e1 * s4 * s4 * u - 0.2e1 * s4 * t * u - 0.4e1 * s4 * u * u + t * t * u + 0.2e1 * t * u * u + 0.2e1 * pow(u, 0.3e1)) / t * pow(u, -0.2e1) * polylog(2, -(s3 / s - u / s) / u * s) - 0.4e1 * (0.12e2 * pow(s3, 0.4e1) * s4 * s4 * t + 0.60e2 * pow(s3, 0.4e1) * s4 * s4 * u - 0.8e1 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t + 0.120e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * u - 0.8e1 * pow(s3, 0.3e1) * s4 * s4 * t * t - 0.96e2 * pow(s3, 0.3e1) * s4 * s4 * t * u - 0.120e3 * pow(s3, 0.3e1) * s4 * s4 * u * u - 0.8e1 * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) - 0.48e2 * pow(s3, 0.3e1) * s4 * t * t * u - 0.60e2 * pow(s3, 0.3e1) * s4 * t * u * u - 0.20e2 * pow(s3, 0.3e1) * s4 * pow(u, 0.3e1) + 0.12e2 * s3 * s3 * pow(s4, 0.4e1) * t + 0.60e2 * s3 * s3 * pow(s4, 0.4e1) * u - 0.8e1 * s3 * s3 * pow(s4, 0.3e1) * t * t - 0.96e2 * s3 * s3 * pow(s4, 0.3e1) * t * u - 0.120e3 * s3 * s3 * pow(s4, 0.3e1) * u * u + 0.12e2 * s3 * s3 * s4 * s4 * pow(t, 0.3e1) - 0.28e2 * s3 * s3 * s4 * s4 * t * t * u - 0.20e2 * s3 * s3 * s4 * s4 * t * u * u + 0.20e2 * s3 * s3 * s4 * s4 * pow(u, 0.3e1) + 0.4e1 * s3 * s3 * s4 * pow(t, 0.4e1) + 0.68e2 * s3 * s3 * s4 * pow(t, 0.3e1) * u + 0.164e3 * s3 * s3 * s4 * t * t * u * u + 0.140e3 * s3 * s3 * s4 * t * pow(u, 0.3e1) + 0.40e2 * s3 * s3 * s4 * pow(u, 0.4e1) + 0.2e1 * s3 * s3 * pow(t, 0.5e1) + 0.10e2 * s3 * s3 * pow(t, 0.4e1) * u + 0.20e2 * s3 * s3 * pow(t, 0.3e1) * u * u + 0.20e2 * s3 * s3 * t * t * pow(u, 0.3e1) + 0.10e2 * s3 * s3 * t * pow(u, 0.4e1) + 0.2e1 * s3 * s3 * pow(u, 0.5e1) - 0.8e1 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) - 0.48e2 * s3 * pow(s4, 0.3e1) * t * t * u - 0.60e2 * s3 * pow(s4, 0.3e1) * t * u * u - 0.20e2 * s3 * pow(s4, 0.3e1) * pow(u, 0.3e1) + 0.4e1 * s3 * s4 * s4 * pow(t, 0.4e1) + 0.68e2 * s3 * s4 * s4 * pow(t, 0.3e1) * u + 0.164e3 * s3 * s4 * s4 * t * t * u * u + 0.140e3 * s3 * s4 * s4 * t * pow(u, 0.3e1) + 0.40e2 * s3 * s4 * s4 * pow(u, 0.4e1) - 0.2e1 * s3 * s4 * pow(t, 0.5e1) - 0.20e2 * s3 * s4 * pow(t, 0.4e1) * u - 0.64e2 * s3 * s4 * pow(t, 0.3e1) * u * u - 0.92e2 * s3 * s4 * t * t * pow(u, 0.3e1) - 0.62e2 * s3 * s4 * t * pow(u, 0.4e1) - 0.16e2 * s3 * s4 * pow(u, 0.5e1) - 0.2e1 * s3 * pow(t, 0.6e1) - 0.14e2 * s3 * pow(t, 0.5e1) * u - 0.40e2 * s3 * pow(t, 0.4e1) * u * u - 0.60e2 * s3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.50e2 * s3 * t * t * pow(u, 0.4e1) - 0.22e2 * s3 * t * pow(u, 0.5e1) - 0.4e1 * s3 * pow(u, 0.6e1) + 0.2e1 * s4 * s4 * pow(t, 0.5e1) + 0.10e2 * s4 * s4 * pow(t, 0.4e1) * u + 0.20e2 * s4 * s4 * pow(t, 0.3e1) * u * u + 0.20e2 * s4 * s4 * t * t * pow(u, 0.3e1) + 0.10e2 * s4 * s4 * t * pow(u, 0.4e1) + 0.2e1 * s4 * s4 * pow(u, 0.5e1) - 0.2e1 * s4 * pow(t, 0.6e1) - 0.14e2 * s4 * pow(t, 0.5e1) * u - 0.40e2 * s4 * pow(t, 0.4e1) * u * u - 0.60e2 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.50e2 * s4 * t * t * pow(u, 0.4e1) - 0.22e2 * s4 * t * pow(u, 0.5e1) - 0.4e1 * s4 * pow(u, 0.6e1) + pow(t, 0.7e1) + 0.7e1 * pow(t, 0.6e1) * u + 0.22e2 * pow(t, 0.5e1) * u * u + 0.40e2 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.45e2 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.31e2 * t * t * pow(u, 0.5e1) + 0.12e2 * t * pow(u, 0.6e1) + 0.2e1 * pow(u, 0.7e1)) / t * pow(0.4e1 * s3 * s4 - t * t - 0.2e1 * t * u - u * u, -0.2e1) / u / s /  (z - zp) * polylog(2, 1 - zp) + 0.4e1 * (0.12e2 * pow(s3, 0.4e1) * s4 * s4 * t + 0.60e2 * pow(s3, 0.4e1) * s4 * s4 * u - 0.8e1 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t + 0.120e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * u - 0.8e1 * pow(s3, 0.3e1) * s4 * s4 * t * t - 0.96e2 * pow(s3, 0.3e1) * s4 * s4 * t * u - 0.120e3 * pow(s3, 0.3e1) * s4 * s4 * u * u - 0.8e1 * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) - 0.48e2 * pow(s3, 0.3e1) * s4 * t * t * u - 0.60e2 * pow(s3, 0.3e1) * s4 * t * u * u - 0.20e2 * pow(s3, 0.3e1) * s4 * pow(u, 0.3e1) + 0.12e2 * s3 * s3 * pow(s4, 0.4e1) * t + 0.60e2 * s3 * s3 * pow(s4, 0.4e1) * u - 0.8e1 * s3 * s3 * pow(s4, 0.3e1) * t * t - 0.96e2 * s3 * s3 * pow(s4, 0.3e1) * t * u - 0.120e3 * s3 * s3 * pow(s4, 0.3e1) * u * u + 0.12e2 * s3 * s3 * s4 * s4 * pow(t, 0.3e1) - 0.28e2 * s3 * s3 * s4 * s4 * t * t * u - 0.20e2 * s3 * s3 * s4 * s4 * t * u * u + 0.20e2 * s3 * s3 * s4 * s4 * pow(u, 0.3e1) + 0.4e1 * s3 * s3 * s4 * pow(t, 0.4e1) + 0.68e2 * s3 * s3 * s4 * pow(t, 0.3e1) * u + 0.164e3 * s3 * s3 * s4 * t * t * u * u + 0.140e3 * s3 * s3 * s4 * t * pow(u, 0.3e1) + 0.40e2 * s3 * s3 * s4 * pow(u, 0.4e1) + 0.2e1 * s3 * s3 * pow(t, 0.5e1) + 0.10e2 * s3 * s3 * pow(t, 0.4e1) * u + 0.20e2 * s3 * s3 * pow(t, 0.3e1) * u * u + 0.20e2 * s3 * s3 * t * t * pow(u, 0.3e1) + 0.10e2 * s3 * s3 * t * pow(u, 0.4e1) + 0.2e1 * s3 * s3 * pow(u, 0.5e1) - 0.8e1 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) - 0.48e2 * s3 * pow(s4, 0.3e1) * t * t * u - 0.60e2 * s3 * pow(s4, 0.3e1) * t * u * u - 0.20e2 * s3 * pow(s4, 0.3e1) * pow(u, 0.3e1) + 0.4e1 * s3 * s4 * s4 * pow(t, 0.4e1) + 0.68e2 * s3 * s4 * s4 * pow(t, 0.3e1) * u + 0.164e3 * s3 * s4 * s4 * t * t * u * u + 0.140e3 * s3 * s4 * s4 * t * pow(u, 0.3e1) + 0.40e2 * s3 * s4 * s4 * pow(u, 0.4e1) - 0.2e1 * s3 * s4 * pow(t, 0.5e1) - 0.20e2 * s3 * s4 * pow(t, 0.4e1) * u - 0.64e2 * s3 * s4 * pow(t, 0.3e1) * u * u - 0.92e2 * s3 * s4 * t * t * pow(u, 0.3e1) - 0.62e2 * s3 * s4 * t * pow(u, 0.4e1) - 0.16e2 * s3 * s4 * pow(u, 0.5e1) - 0.2e1 * s3 * pow(t, 0.6e1) - 0.14e2 * s3 * pow(t, 0.5e1) * u - 0.40e2 * s3 * pow(t, 0.4e1) * u * u - 0.60e2 * s3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.50e2 * s3 * t * t * pow(u, 0.4e1) - 0.22e2 * s3 * t * pow(u, 0.5e1) - 0.4e1 * s3 * pow(u, 0.6e1) + 0.2e1 * s4 * s4 * pow(t, 0.5e1) + 0.10e2 * s4 * s4 * pow(t, 0.4e1) * u + 0.20e2 * s4 * s4 * pow(t, 0.3e1) * u * u + 0.20e2 * s4 * s4 * t * t * pow(u, 0.3e1) + 0.10e2 * s4 * s4 * t * pow(u, 0.4e1) + 0.2e1 * s4 * s4 * pow(u, 0.5e1) - 0.2e1 * s4 * pow(t, 0.6e1) - 0.14e2 * s4 * pow(t, 0.5e1) * u - 0.40e2 * s4 * pow(t, 0.4e1) * u * u - 0.60e2 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.50e2 * s4 * t * t * pow(u, 0.4e1) - 0.22e2 * s4 * t * pow(u, 0.5e1) - 0.4e1 * s4 * pow(u, 0.6e1) + pow(t, 0.7e1) + 0.7e1 * pow(t, 0.6e1) * u + 0.22e2 * pow(t, 0.5e1) * u * u + 0.40e2 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.45e2 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.31e2 * t * t * pow(u, 0.5e1) + 0.12e2 * t * pow(u, 0.6e1) + 0.2e1 * pow(u, 0.7e1)) / t * pow(0.4e1 * s3 * s4 - t * t - 0.2e1 * t * u - u * u, -0.2e1) / u / s /  (z - zp) * polylog(2, 1 - z) + 0.4e1 * (0.60e2 * pow(s3, 0.4e1) * s4 * s4 * t + 0.12e2 * pow(s3, 0.4e1) * s4 * s4 * u + 0.120e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t - 0.8e1 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * u - 0.120e3 * pow(s3, 0.3e1) * s4 * s4 * t * t - 0.96e2 * pow(s3, 0.3e1) * s4 * s4 * t * u - 0.8e1 * pow(s3, 0.3e1) * s4 * s4 * u * u - 0.20e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) - 0.60e2 * pow(s3, 0.3e1) * s4 * t * t * u - 0.48e2 * pow(s3, 0.3e1) * s4 * t * u * u - 0.8e1 * pow(s3, 0.3e1) * s4 * pow(u, 0.3e1) + 0.60e2 * s3 * s3 * pow(s4, 0.4e1) * t + 0.12e2 * s3 * s3 * pow(s4, 0.4e1) * u - 0.120e3 * s3 * s3 * pow(s4, 0.3e1) * t * t - 0.96e2 * s3 * s3 * pow(s4, 0.3e1) * t * u - 0.8e1 * s3 * s3 * pow(s4, 0.3e1) * u * u + 0.20e2 * s3 * s3 * s4 * s4 * pow(t, 0.3e1) - 0.20e2 * s3 * s3 * s4 * s4 * t * t * u - 0.28e2 * s3 * s3 * s4 * s4 * t * u * u + 0.12e2 * s3 * s3 * s4 * s4 * pow(u, 0.3e1) + 0.40e2 * s3 * s3 * s4 * pow(t, 0.4e1) + 0.140e3 * s3 * s3 * s4 * pow(t, 0.3e1) * u + 0.164e3 * s3 * s3 * s4 * t * t * u * u + 0.68e2 * s3 * s3 * s4 * t * pow(u, 0.3e1) + 0.4e1 * s3 * s3 * s4 * pow(u, 0.4e1) + 0.2e1 * s3 * s3 * pow(t, 0.5e1) + 0.10e2 * s3 * s3 * pow(t, 0.4e1) * u + 0.20e2 * s3 * s3 * pow(t, 0.3e1) * u * u + 0.20e2 * s3 * s3 * t * t * pow(u, 0.3e1) + 0.10e2 * s3 * s3 * t * pow(u, 0.4e1) + 0.2e1 * s3 * s3 * pow(u, 0.5e1) - 0.20e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) - 0.60e2 * s3 * pow(s4, 0.3e1) * t * t * u - 0.48e2 * s3 * pow(s4, 0.3e1) * t * u * u - 0.8e1 * s3 * pow(s4, 0.3e1) * pow(u, 0.3e1) + 0.40e2 * s3 * s4 * s4 * pow(t, 0.4e1) + 0.140e3 * s3 * s4 * s4 * pow(t, 0.3e1) * u + 0.164e3 * s3 * s4 * s4 * t * t * u * u + 0.68e2 * s3 * s4 * s4 * t * pow(u, 0.3e1) + 0.4e1 * s3 * s4 * s4 * pow(u, 0.4e1) - 0.16e2 * s3 * s4 * pow(t, 0.5e1) - 0.62e2 * s3 * s4 * pow(t, 0.4e1) * u - 0.92e2 * s3 * s4 * pow(t, 0.3e1) * u * u - 0.64e2 * s3 * s4 * t * t * pow(u, 0.3e1) - 0.20e2 * s3 * s4 * t * pow(u, 0.4e1) - 0.2e1 * s3 * s4 * pow(u, 0.5e1) - 0.4e1 * s3 * pow(t, 0.6e1) - 0.22e2 * s3 * pow(t, 0.5e1) * u - 0.50e2 * s3 * pow(t, 0.4e1) * u * u - 0.60e2 * s3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.40e2 * s3 * t * t * pow(u, 0.4e1) - 0.14e2 * s3 * t * pow(u, 0.5e1) - 0.2e1 * s3 * pow(u, 0.6e1) + 0.2e1 * s4 * s4 * pow(t, 0.5e1) + 0.10e2 * s4 * s4 * pow(t, 0.4e1) * u + 0.20e2 * s4 * s4 * pow(t, 0.3e1) * u * u + 0.20e2 * s4 * s4 * t * t * pow(u, 0.3e1) + 0.10e2 * s4 * s4 * t * pow(u, 0.4e1) + 0.2e1 * s4 * s4 * pow(u, 0.5e1) - 0.4e1 * s4 * pow(t, 0.6e1) - 0.22e2 * s4 * pow(t, 0.5e1) * u - 0.50e2 * s4 * pow(t, 0.4e1) * u * u - 0.60e2 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.40e2 * s4 * t * t * pow(u, 0.4e1) - 0.14e2 * s4 * t * pow(u, 0.5e1) - 0.2e1 * s4 * pow(u, 0.6e1) + 0.2e1 * pow(t, 0.7e1) + 0.12e2 * pow(t, 0.6e1) * u + 0.31e2 * pow(t, 0.5e1) * u * u + 0.45e2 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.40e2 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.22e2 * t * t * pow(u, 0.5e1) + 0.7e1 * t * pow(u, 0.6e1) + pow(u, 0.7e1)) / t * pow(0.4e1 * s3 * s4 - t * t - 0.2e1 * t * u - u * u, -0.2e1) / u / s /  (z - zp) * polylog(2, zp) - 0.4e1 * (0.60e2 * pow(s3, 0.4e1) * s4 * s4 * t + 0.12e2 * pow(s3, 0.4e1) * s4 * s4 * u + 0.120e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t - 0.8e1 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * u - 0.120e3 * pow(s3, 0.3e1) * s4 * s4 * t * t - 0.96e2 * pow(s3, 0.3e1) * s4 * s4 * t * u - 0.8e1 * pow(s3, 0.3e1) * s4 * s4 * u * u - 0.20e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) - 0.60e2 * pow(s3, 0.3e1) * s4 * t * t * u - 0.48e2 * pow(s3, 0.3e1) * s4 * t * u * u - 0.8e1 * pow(s3, 0.3e1) * s4 * pow(u, 0.3e1) + 0.60e2 * s3 * s3 * pow(s4, 0.4e1) * t + 0.12e2 * s3 * s3 * pow(s4, 0.4e1) * u - 0.120e3 * s3 * s3 * pow(s4, 0.3e1) * t * t - 0.96e2 * s3 * s3 * pow(s4, 0.3e1) * t * u - 0.8e1 * s3 * s3 * pow(s4, 0.3e1) * u * u + 0.20e2 * s3 * s3 * s4 * s4 * pow(t, 0.3e1) - 0.20e2 * s3 * s3 * s4 * s4 * t * t * u - 0.28e2 * s3 * s3 * s4 * s4 * t * u * u + 0.12e2 * s3 * s3 * s4 * s4 * pow(u, 0.3e1) + 0.40e2 * s3 * s3 * s4 * pow(t, 0.4e1) + 0.140e3 * s3 * s3 * s4 * pow(t, 0.3e1) * u + 0.164e3 * s3 * s3 * s4 * t * t * u * u + 0.68e2 * s3 * s3 * s4 * t * pow(u, 0.3e1) + 0.4e1 * s3 * s3 * s4 * pow(u, 0.4e1) + 0.2e1 * s3 * s3 * pow(t, 0.5e1) + 0.10e2 * s3 * s3 * pow(t, 0.4e1) * u + 0.20e2 * s3 * s3 * pow(t, 0.3e1) * u * u + 0.20e2 * s3 * s3 * t * t * pow(u, 0.3e1) + 0.10e2 * s3 * s3 * t * pow(u, 0.4e1) + 0.2e1 * s3 * s3 * pow(u, 0.5e1) - 0.20e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) - 0.60e2 * s3 * pow(s4, 0.3e1) * t * t * u - 0.48e2 * s3 * pow(s4, 0.3e1) * t * u * u - 0.8e1 * s3 * pow(s4, 0.3e1) * pow(u, 0.3e1) + 0.40e2 * s3 * s4 * s4 * pow(t, 0.4e1) + 0.140e3 * s3 * s4 * s4 * pow(t, 0.3e1) * u + 0.164e3 * s3 * s4 * s4 * t * t * u * u + 0.68e2 * s3 * s4 * s4 * t * pow(u, 0.3e1) + 0.4e1 * s3 * s4 * s4 * pow(u, 0.4e1) - 0.16e2 * s3 * s4 * pow(t, 0.5e1) - 0.62e2 * s3 * s4 * pow(t, 0.4e1) * u - 0.92e2 * s3 * s4 * pow(t, 0.3e1) * u * u - 0.64e2 * s3 * s4 * t * t * pow(u, 0.3e1) - 0.20e2 * s3 * s4 * t * pow(u, 0.4e1) - 0.2e1 * s3 * s4 * pow(u, 0.5e1) - 0.4e1 * s3 * pow(t, 0.6e1) - 0.22e2 * s3 * pow(t, 0.5e1) * u - 0.50e2 * s3 * pow(t, 0.4e1) * u * u - 0.60e2 * s3 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.40e2 * s3 * t * t * pow(u, 0.4e1) - 0.14e2 * s3 * t * pow(u, 0.5e1) - 0.2e1 * s3 * pow(u, 0.6e1) + 0.2e1 * s4 * s4 * pow(t, 0.5e1) + 0.10e2 * s4 * s4 * pow(t, 0.4e1) * u + 0.20e2 * s4 * s4 * pow(t, 0.3e1) * u * u + 0.20e2 * s4 * s4 * t * t * pow(u, 0.3e1) + 0.10e2 * s4 * s4 * t * pow(u, 0.4e1) + 0.2e1 * s4 * s4 * pow(u, 0.5e1) - 0.4e1 * s4 * pow(t, 0.6e1) - 0.22e2 * s4 * pow(t, 0.5e1) * u - 0.50e2 * s4 * pow(t, 0.4e1) * u * u - 0.60e2 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.40e2 * s4 * t * t * pow(u, 0.4e1) - 0.14e2 * s4 * t * pow(u, 0.5e1) - 0.2e1 * s4 * pow(u, 0.6e1) + 0.2e1 * pow(t, 0.7e1) + 0.12e2 * pow(t, 0.6e1) * u + 0.31e2 * pow(t, 0.5e1) * u * u + 0.45e2 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.40e2 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.22e2 * t * t * pow(u, 0.5e1) + 0.7e1 * t * pow(u, 0.6e1) + pow(u, 0.7e1)) / t * pow(0.4e1 * s3 * s4 - t * t - 0.2e1 * t * u - u * u, -0.2e1) / u / s /  (z - zp) * polylog(2, z) - 0.2e1 * (0.3e1 * pow(s3, 0.4e1) * s4 * s4 * u - 0.2e1 * pow(s3, 0.4e1) * s4 * u * u - 0.3e1 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t + 0.6e1 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * u - 0.16e2 * pow(s3, 0.3e1) * s4 * s4 * u * u + pow(s3, 0.3e1) * s4 * t * u * u + 0.8e1 * pow(s3, 0.3e1) * s4 * pow(u, 0.3e1) + 0.3e1 * s3 * s3 * pow(s4, 0.4e1) * u - 0.16e2 * s3 * s3 * pow(s4, 0.3e1) * u * u + 0.3e1 * s3 * s3 * s4 * s4 * t * t * u + 0.6e1 * s3 * s3 * s4 * s4 * t * u * u + 0.22e2 * s3 * s3 * s4 * s4 * pow(u, 0.3e1) - 0.2e1 * s3 * s3 * s4 * t * t * u * u + 0.2e1 * s3 * s3 * s4 * t * pow(u, 0.3e1) - 0.8e1 * s3 * s3 * s4 * pow(u, 0.4e1) - 0.4e1 * s3 * s3 * t * pow(u, 0.4e1) - 0.2e1 * s3 * pow(s4, 0.4e1) * u * u + s3 * pow(s4, 0.3e1) * t * u * u + 0.8e1 * s3 * pow(s4, 0.3e1) * pow(u, 0.3e1) - 0.2e1 * s3 * s4 * s4 * t * t * u * u + 0.2e1 * s3 * s4 * s4 * t * pow(u, 0.3e1) - 0.8e1 * s3 * s4 * s4 * pow(u, 0.4e1) - 0.4e1 * s3 * s4 * t * t * pow(u, 0.3e1) - 0.11e2 * s3 * s4 * t * pow(u, 0.4e1) + 0.2e1 * s3 * s4 * pow(u, 0.5e1) + 0.4e1 * s3 * t * t * pow(u, 0.4e1) + 0.6e1 * s3 * t * pow(u, 0.5e1) - 0.4e1 * s4 * s4 * t * pow(u, 0.4e1) + 0.4e1 * s4 * t * t * pow(u, 0.4e1) + 0.6e1 * s4 * t * pow(u, 0.5e1) - 0.3e1 * t * t * pow(u, 0.5e1) - 0.2e1 * t * pow(u, 0.6e1)) * pow(u, -0.2e1) * pow(-u + s3, -0.2e1) * pow(-u + s4, -0.2e1) / t * log(-u) + 0.2e1 * (0.2e1 * s3 * s3 * u - 0.2e1 * s3 * s4 * t + 0.4e1 * s3 * s4 * u - 0.2e1 * s3 * t * u - 0.4e1 * s3 * u * u + 0.2e1 * s4 * s4 * u - 0.2e1 * s4 * t * u - 0.4e1 * s4 * u * u + t * t * u + 0.2e1 * t * u * u + 0.2e1 * pow(u, 0.3e1)) / t * pow(u, -0.2e1) * pow(log(-u), 0.2e1) + 0.2e1 * (0.2e1 * s3 * s3 * t + 0.4e1 * s3 * s4 * t - 0.2e1 * s3 * s4 * u - 0.4e1 * s3 * t * t - 0.2e1 * s3 * t * u + 0.2e1 * s4 * s4 * t - 0.4e1 * s4 * t * t - 0.2e1 * s4 * t * u + 0.2e1 * pow(t, 0.3e1) + 0.2e1 * t * t * u + t * u * u) * pow(t, -0.2e1) / u * pow(log(-t), 0.2e1) - 0.4e1 * (0.2e1 * s3 * s3 * u - 0.2e1 * s3 * s4 * t + 0.4e1 * s3 * s4 * u - 0.2e1 * s3 * t * u - 0.4e1 * s3 * u * u + 0.2e1 * s4 * s4 * u - 0.2e1 * s4 * t * u - 0.4e1 * s4 * u * u + t * t * u + 0.2e1 * t * u * u + 0.2e1 * pow(u, 0.3e1)) / t * pow(u, -0.2e1) * log(-s) * log(-u) + 0.2e1 * (0.4e1 * s3 * s3 * t * u - 0.2e1 * s3 * s4 * t * t + 0.8e1 * s3 * s4 * t * u - 0.2e1 * s3 * s4 * u * u - 0.6e1 * s3 * t * t * u - 0.6e1 * s3 * t * u * u + 0.4e1 * s4 * s4 * t * u - 0.6e1 * s4 * t * t * u - 0.6e1 * s4 * t * u * u + 0.3e1 * pow(t, 0.3e1) * u + 0.4e1 * t * t * u * u + 0.3e1 * t * pow(u, 0.3e1)) * pow(u, -0.2e1) * pow(t, -0.2e1) * pow(log(-s), 0.2e1) + 0.2e1 * s4 * (0.96e2 * pow(s3, 0.4e1) * pow(s4, 0.5e1) * t * u - 0.128e3 * pow(s3, 0.4e1) * pow(s4, 0.4e1) * t * t * u - 0.128e3 * pow(s3, 0.4e1) * pow(s4, 0.4e1) * t * u * u + 0.48e2 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * pow(t, 0.3e1) * u + 0.128e3 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * t * t * u * u + 0.48e2 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * t * pow(u, 0.3e1) - 0.32e2 * pow(s3, 0.4e1) * s4 * s4 * pow(t, 0.3e1) * u * u - 0.32e2 * pow(s3, 0.4e1) * s4 * s4 * t * t * pow(u, 0.3e1) - 0.48e2 * pow(s3, 0.3e1) * pow(s4, 0.6e1) * t * t + 0.192e3 * pow(s3, 0.3e1) * pow(s4, 0.6e1) * t * u - 0.48e2 * pow(s3, 0.3e1) * pow(s4, 0.6e1) * u * u + 0.96e2 * pow(s3, 0.3e1) * pow(s4, 0.5e1) * pow(t, 0.3e1) - 0.360e3 * pow(s3, 0.3e1) * pow(s4, 0.5e1) * t * t * u - 0.360e3 * pow(s3, 0.3e1) * pow(s4, 0.5e1) * t * u * u + 0.96e2 * pow(s3, 0.3e1) * pow(s4, 0.5e1) * pow(u, 0.3e1) - 0.48e2 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * pow(t, 0.4e1) + 0.128e3 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * pow(t, 0.3e1) * u + 0.608e3 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * t * t * u * u + 0.128e3 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * t * pow(u, 0.3e1) - 0.48e2 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * pow(u, 0.4e1) + 0.56e2 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * pow(t, 0.4e1) * u - 0.168e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * pow(t, 0.3e1) * u * u - 0.168e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * t * pow(u, 0.3e1) + 0.56e2 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * pow(u, 0.4e1) - 0.24e2 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.5e1) * u - 0.80e2 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.4e1) * u * u - 0.16e2 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.80e2 * pow(s3, 0.3e1) * s4 * s4 * t * t * pow(u, 0.4e1) - 0.24e2 * pow(s3, 0.3e1) * s4 * s4 * t * pow(u, 0.5e1) + 0.16e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.5e1) * u * u + 0.40e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.40e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.16e2 * pow(s3, 0.3e1) * s4 * t * t * pow(u, 0.5e1) + 0.96e2 * s3 * s3 * pow(s4, 0.7e1) * t * u - 0.312e3 * s3 * s3 * pow(s4, 0.6e1) * t * t * u - 0.312e3 * s3 * s3 * pow(s4, 0.6e1) * t * u * u + 0.24e2 * s3 * s3 * pow(s4, 0.5e1) * pow(t, 0.4e1) + 0.364e3 * s3 * s3 * pow(s4, 0.5e1) * pow(t, 0.3e1) * u + 0.648e3 * s3 * s3 * pow(s4, 0.5e1) * t * t * u * u + 0.364e3 * s3 * s3 * pow(s4, 0.5e1) * t * pow(u, 0.3e1) + 0.24e2 * s3 * s3 * pow(s4, 0.5e1) * pow(u, 0.4e1) - 0.48e2 * s3 * s3 * pow(s4, 0.4e1) * pow(t, 0.5e1) - 0.196e3 * s3 * s3 * pow(s4, 0.4e1) * pow(t, 0.4e1) * u - 0.276e3 * s3 * s3 * pow(s4, 0.4e1) * pow(t, 0.3e1) * u * u - 0.276e3 * s3 * s3 * pow(s4, 0.4e1) * t * t * pow(u, 0.3e1) - 0.196e3 * s3 * s3 * pow(s4, 0.4e1) * t * pow(u, 0.4e1) - 0.48e2 * s3 * s3 * pow(s4, 0.4e1) * pow(u, 0.5e1) + 0.24e2 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.6e1) + 0.58e2 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.5e1) * u - 0.88e2 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.4e1) * u * u - 0.372e3 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.88e2 * s3 * s3 * pow(s4, 0.3e1) * t * t * pow(u, 0.4e1) + 0.58e2 * s3 * s3 * pow(s4, 0.3e1) * t * pow(u, 0.5e1) + 0.24e2 * s3 * s3 * pow(s4, 0.3e1) * pow(u, 0.6e1) - 0.12e2 * s3 * s3 * s4 * s4 * pow(t, 0.6e1) * u + 0.28e2 * s3 * s3 * s4 * s4 * pow(t, 0.5e1) * u * u + 0.328e3 * s3 * s3 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.328e3 * s3 * s3 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.28e2 * s3 * s3 * s4 * s4 * t * t * pow(u, 0.5e1) - 0.12e2 * s3 * s3 * s4 * s4 * t * pow(u, 0.6e1) + 0.3e1 * s3 * s3 * s4 * pow(t, 0.7e1) * u + 0.20e2 * s3 * s3 * s4 * pow(t, 0.6e1) * u * u - 0.15e2 * s3 * s3 * s4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.128e3 * s3 * s3 * s4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.15e2 * s3 * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.20e2 * s3 * s3 * s4 * t * t * pow(u, 0.6e1) + 0.3e1 * s3 * s3 * s4 * t * pow(u, 0.7e1) - 0.2e1 * s3 * s3 * pow(t, 0.7e1) * u * u - 0.14e2 * s3 * s3 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.8e1 * s3 * s3 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.8e1 * s3 * s3 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.14e2 * s3 * s3 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.2e1 * s3 * s3 * t * t * pow(u, 0.7e1) - 0.36e2 * s3 * pow(s4, 0.6e1) * pow(t, 0.3e1) * u - 0.104e3 * s3 * pow(s4, 0.6e1) * t * t * u * u - 0.36e2 * s3 * pow(s4, 0.6e1) * t * pow(u, 0.3e1) + 0.108e3 * s3 * pow(s4, 0.5e1) * pow(t, 0.4e1) * u + 0.460e3 * s3 * pow(s4, 0.5e1) * pow(t, 0.3e1) * u * u + 0.460e3 * s3 * pow(s4, 0.5e1) * t * t * pow(u, 0.3e1) + 0.108e3 * s3 * pow(s4, 0.5e1) * t * pow(u, 0.4e1) - 0.3e1 * s3 * pow(s4, 0.4e1) * pow(t, 0.6e1) - 0.130e3 * s3 * pow(s4, 0.4e1) * pow(t, 0.5e1) * u - 0.681e3 * s3 * pow(s4, 0.4e1) * pow(t, 0.4e1) * u * u - 0.1172e4 * s3 * pow(s4, 0.4e1) * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.681e3 * s3 * pow(s4, 0.4e1) * t * t * pow(u, 0.4e1) - 0.130e3 * s3 * pow(s4, 0.4e1) * t * pow(u, 0.5e1) - 0.3e1 * s3 * pow(s4, 0.4e1) * pow(u, 0.6e1) + 0.6e1 * s3 * pow(s4, 0.3e1) * pow(t, 0.7e1) + 0.82e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.6e1) * u + 0.406e3 * s3 * pow(s4, 0.3e1) * pow(t, 0.5e1) * u * u + 0.1058e4 * s3 * pow(s4, 0.3e1) * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1058e4 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.406e3 * s3 * pow(s4, 0.3e1) * t * t * pow(u, 0.5e1) + 0.82e2 * s3 * pow(s4, 0.3e1) * t * pow(u, 0.6e1) + 0.6e1 * s3 * pow(s4, 0.3e1) * pow(u, 0.7e1) - 0.3e1 * s3 * s4 * s4 * pow(t, 0.8e1) - 0.24e2 * s3 * s4 * s4 * pow(t, 0.7e1) * u - 0.76e2 * s3 * s4 * s4 * pow(t, 0.6e1) * u * u - 0.308e3 * s3 * s4 * s4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.538e3 * s3 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.308e3 * s3 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.76e2 * s3 * s4 * s4 * t * t * pow(u, 0.6e1) - 0.24e2 * s3 * s4 * s4 * t * pow(u, 0.7e1) - 0.3e1 * s3 * s4 * s4 * pow(u, 0.8e1) - 0.8e1 * s3 * s4 * pow(t, 0.7e1) * u * u - 0.28e2 * s3 * s4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.28e2 * s3 * s4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.28e2 * s3 * s4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.28e2 * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.8e1 * s3 * s4 * t * t * pow(u, 0.7e1) + s3 * pow(t, 0.8e1) * u * u + 0.14e2 * s3 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.27e2 * s3 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.28e2 * s3 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.27e2 * s3 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.14e2 * s3 * pow(t, 0.3e1) * pow(u, 0.7e1) + s3 * t * t * pow(u, 0.8e1) + 0.6e1 * pow(s4, 0.5e1) * pow(t, 0.5e1) * u + 0.20e2 * pow(s4, 0.5e1) * pow(t, 0.4e1) * u * u + 0.28e2 * pow(s4, 0.5e1) * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.20e2 * pow(s4, 0.5e1) * t * t * pow(u, 0.4e1) + 0.6e1 * pow(s4, 0.5e1) * t * pow(u, 0.5e1) - 0.18e2 * pow(s4, 0.4e1) * pow(t, 0.6e1) * u - 0.82e2 * pow(s4, 0.4e1) * pow(t, 0.5e1) * u * u - 0.156e3 * pow(s4, 0.4e1) * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.156e3 * pow(s4, 0.4e1) * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.82e2 * pow(s4, 0.4e1) * t * t * pow(u, 0.5e1) - 0.18e2 * pow(s4, 0.4e1) * t * pow(u, 0.6e1) + 0.21e2 * pow(s4, 0.3e1) * pow(t, 0.7e1) * u + 0.124e3 * pow(s4, 0.3e1) * pow(t, 0.6e1) * u * u + 0.299e3 * pow(s4, 0.3e1) * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.392e3 * pow(s4, 0.3e1) * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.299e3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.124e3 * pow(s4, 0.3e1) * t * t * pow(u, 0.6e1) + 0.21e2 * pow(s4, 0.3e1) * t * pow(u, 0.7e1) - 0.12e2 * s4 * s4 * pow(t, 0.8e1) * u - 0.86e2 * s4 * s4 * pow(t, 0.7e1) * u * u - 0.254e3 * s4 * s4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.416e3 * s4 * s4 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.416e3 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.254e3 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.86e2 * s4 * s4 * t * t * pow(u, 0.7e1) - 0.12e2 * s4 * s4 * t * pow(u, 0.8e1) + 0.3e1 * s4 * pow(t, 0.9e1) * u + 0.26e2 * s4 * pow(t, 0.8e1) * u * u + 0.96e2 * s4 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.194e3 * s4 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.242e3 * s4 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.194e3 * s4 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.96e2 * s4 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.26e2 * s4 * t * t * pow(u, 0.8e1) + 0.3e1 * s4 * t * pow(u, 0.9e1) - 0.2e1 * pow(t, 0.9e1) * u * u - 0.12e2 * pow(t, 0.8e1) * pow(u, 0.3e1) - 0.32e2 * pow(t, 0.7e1) * pow(u, 0.4e1) - 0.50e2 * pow(t, 0.6e1) * pow(u, 0.5e1) - 0.50e2 * pow(t, 0.5e1) * pow(u, 0.6e1) - 0.32e2 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.12e2 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.2e1 * t * t * pow(u, 0.9e1)) * pow(-t + s4, -0.2e1) * pow(-u + s4, -0.2e1) * pow(u, -0.2e1) * pow(t, -0.2e1) * pow(0.4e1 * s3 * s4 - t * t - 0.2e1 * t * u - u * u, -0.2e1) * log( (1 - z)) + 0.2e1 * s4 * (0.96e2 * pow(s3, 0.4e1) * pow(s4, 0.5e1) * t * u - 0.128e3 * pow(s3, 0.4e1) * pow(s4, 0.4e1) * t * t * u - 0.128e3 * pow(s3, 0.4e1) * pow(s4, 0.4e1) * t * u * u + 0.48e2 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * pow(t, 0.3e1) * u + 0.128e3 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * t * t * u * u + 0.48e2 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * t * pow(u, 0.3e1) - 0.32e2 * pow(s3, 0.4e1) * s4 * s4 * pow(t, 0.3e1) * u * u - 0.32e2 * pow(s3, 0.4e1) * s4 * s4 * t * t * pow(u, 0.3e1) - 0.48e2 * pow(s3, 0.3e1) * pow(s4, 0.6e1) * t * t + 0.192e3 * pow(s3, 0.3e1) * pow(s4, 0.6e1) * t * u - 0.48e2 * pow(s3, 0.3e1) * pow(s4, 0.6e1) * u * u + 0.96e2 * pow(s3, 0.3e1) * pow(s4, 0.5e1) * pow(t, 0.3e1) - 0.360e3 * pow(s3, 0.3e1) * pow(s4, 0.5e1) * t * t * u - 0.360e3 * pow(s3, 0.3e1) * pow(s4, 0.5e1) * t * u * u + 0.96e2 * pow(s3, 0.3e1) * pow(s4, 0.5e1) * pow(u, 0.3e1) - 0.48e2 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * pow(t, 0.4e1) + 0.128e3 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * pow(t, 0.3e1) * u + 0.608e3 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * t * t * u * u + 0.128e3 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * t * pow(u, 0.3e1) - 0.48e2 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * pow(u, 0.4e1) + 0.56e2 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * pow(t, 0.4e1) * u - 0.168e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * pow(t, 0.3e1) * u * u - 0.168e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * t * pow(u, 0.3e1) + 0.56e2 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * pow(u, 0.4e1) - 0.24e2 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.5e1) * u - 0.80e2 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.4e1) * u * u - 0.16e2 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.80e2 * pow(s3, 0.3e1) * s4 * s4 * t * t * pow(u, 0.4e1) - 0.24e2 * pow(s3, 0.3e1) * s4 * s4 * t * pow(u, 0.5e1) + 0.16e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.5e1) * u * u + 0.40e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.40e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.16e2 * pow(s3, 0.3e1) * s4 * t * t * pow(u, 0.5e1) + 0.96e2 * s3 * s3 * pow(s4, 0.7e1) * t * u - 0.312e3 * s3 * s3 * pow(s4, 0.6e1) * t * t * u - 0.312e3 * s3 * s3 * pow(s4, 0.6e1) * t * u * u + 0.24e2 * s3 * s3 * pow(s4, 0.5e1) * pow(t, 0.4e1) + 0.364e3 * s3 * s3 * pow(s4, 0.5e1) * pow(t, 0.3e1) * u + 0.648e3 * s3 * s3 * pow(s4, 0.5e1) * t * t * u * u + 0.364e3 * s3 * s3 * pow(s4, 0.5e1) * t * pow(u, 0.3e1) + 0.24e2 * s3 * s3 * pow(s4, 0.5e1) * pow(u, 0.4e1) - 0.48e2 * s3 * s3 * pow(s4, 0.4e1) * pow(t, 0.5e1) - 0.196e3 * s3 * s3 * pow(s4, 0.4e1) * pow(t, 0.4e1) * u - 0.276e3 * s3 * s3 * pow(s4, 0.4e1) * pow(t, 0.3e1) * u * u - 0.276e3 * s3 * s3 * pow(s4, 0.4e1) * t * t * pow(u, 0.3e1) - 0.196e3 * s3 * s3 * pow(s4, 0.4e1) * t * pow(u, 0.4e1) - 0.48e2 * s3 * s3 * pow(s4, 0.4e1) * pow(u, 0.5e1) + 0.24e2 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.6e1) + 0.58e2 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.5e1) * u - 0.88e2 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.4e1) * u * u - 0.372e3 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.88e2 * s3 * s3 * pow(s4, 0.3e1) * t * t * pow(u, 0.4e1) + 0.58e2 * s3 * s3 * pow(s4, 0.3e1) * t * pow(u, 0.5e1) + 0.24e2 * s3 * s3 * pow(s4, 0.3e1) * pow(u, 0.6e1) - 0.12e2 * s3 * s3 * s4 * s4 * pow(t, 0.6e1) * u + 0.28e2 * s3 * s3 * s4 * s4 * pow(t, 0.5e1) * u * u + 0.328e3 * s3 * s3 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.328e3 * s3 * s3 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.28e2 * s3 * s3 * s4 * s4 * t * t * pow(u, 0.5e1) - 0.12e2 * s3 * s3 * s4 * s4 * t * pow(u, 0.6e1) + 0.3e1 * s3 * s3 * s4 * pow(t, 0.7e1) * u + 0.20e2 * s3 * s3 * s4 * pow(t, 0.6e1) * u * u - 0.15e2 * s3 * s3 * s4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.128e3 * s3 * s3 * s4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.15e2 * s3 * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.20e2 * s3 * s3 * s4 * t * t * pow(u, 0.6e1) + 0.3e1 * s3 * s3 * s4 * t * pow(u, 0.7e1) - 0.2e1 * s3 * s3 * pow(t, 0.7e1) * u * u - 0.14e2 * s3 * s3 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.8e1 * s3 * s3 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.8e1 * s3 * s3 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.14e2 * s3 * s3 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.2e1 * s3 * s3 * t * t * pow(u, 0.7e1) - 0.36e2 * s3 * pow(s4, 0.6e1) * pow(t, 0.3e1) * u - 0.104e3 * s3 * pow(s4, 0.6e1) * t * t * u * u - 0.36e2 * s3 * pow(s4, 0.6e1) * t * pow(u, 0.3e1) + 0.108e3 * s3 * pow(s4, 0.5e1) * pow(t, 0.4e1) * u + 0.460e3 * s3 * pow(s4, 0.5e1) * pow(t, 0.3e1) * u * u + 0.460e3 * s3 * pow(s4, 0.5e1) * t * t * pow(u, 0.3e1) + 0.108e3 * s3 * pow(s4, 0.5e1) * t * pow(u, 0.4e1) - 0.3e1 * s3 * pow(s4, 0.4e1) * pow(t, 0.6e1) - 0.130e3 * s3 * pow(s4, 0.4e1) * pow(t, 0.5e1) * u - 0.681e3 * s3 * pow(s4, 0.4e1) * pow(t, 0.4e1) * u * u - 0.1172e4 * s3 * pow(s4, 0.4e1) * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.681e3 * s3 * pow(s4, 0.4e1) * t * t * pow(u, 0.4e1) - 0.130e3 * s3 * pow(s4, 0.4e1) * t * pow(u, 0.5e1) - 0.3e1 * s3 * pow(s4, 0.4e1) * pow(u, 0.6e1) + 0.6e1 * s3 * pow(s4, 0.3e1) * pow(t, 0.7e1) + 0.82e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.6e1) * u + 0.406e3 * s3 * pow(s4, 0.3e1) * pow(t, 0.5e1) * u * u + 0.1058e4 * s3 * pow(s4, 0.3e1) * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1058e4 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.406e3 * s3 * pow(s4, 0.3e1) * t * t * pow(u, 0.5e1) + 0.82e2 * s3 * pow(s4, 0.3e1) * t * pow(u, 0.6e1) + 0.6e1 * s3 * pow(s4, 0.3e1) * pow(u, 0.7e1) - 0.3e1 * s3 * s4 * s4 * pow(t, 0.8e1) - 0.24e2 * s3 * s4 * s4 * pow(t, 0.7e1) * u - 0.76e2 * s3 * s4 * s4 * pow(t, 0.6e1) * u * u - 0.308e3 * s3 * s4 * s4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.538e3 * s3 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.308e3 * s3 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.76e2 * s3 * s4 * s4 * t * t * pow(u, 0.6e1) - 0.24e2 * s3 * s4 * s4 * t * pow(u, 0.7e1) - 0.3e1 * s3 * s4 * s4 * pow(u, 0.8e1) - 0.8e1 * s3 * s4 * pow(t, 0.7e1) * u * u - 0.28e2 * s3 * s4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.28e2 * s3 * s4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.28e2 * s3 * s4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.28e2 * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.8e1 * s3 * s4 * t * t * pow(u, 0.7e1) + s3 * pow(t, 0.8e1) * u * u + 0.14e2 * s3 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.27e2 * s3 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.28e2 * s3 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.27e2 * s3 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.14e2 * s3 * pow(t, 0.3e1) * pow(u, 0.7e1) + s3 * t * t * pow(u, 0.8e1) + 0.6e1 * pow(s4, 0.5e1) * pow(t, 0.5e1) * u + 0.20e2 * pow(s4, 0.5e1) * pow(t, 0.4e1) * u * u + 0.28e2 * pow(s4, 0.5e1) * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.20e2 * pow(s4, 0.5e1) * t * t * pow(u, 0.4e1) + 0.6e1 * pow(s4, 0.5e1) * t * pow(u, 0.5e1) - 0.18e2 * pow(s4, 0.4e1) * pow(t, 0.6e1) * u - 0.82e2 * pow(s4, 0.4e1) * pow(t, 0.5e1) * u * u - 0.156e3 * pow(s4, 0.4e1) * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.156e3 * pow(s4, 0.4e1) * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.82e2 * pow(s4, 0.4e1) * t * t * pow(u, 0.5e1) - 0.18e2 * pow(s4, 0.4e1) * t * pow(u, 0.6e1) + 0.21e2 * pow(s4, 0.3e1) * pow(t, 0.7e1) * u + 0.124e3 * pow(s4, 0.3e1) * pow(t, 0.6e1) * u * u + 0.299e3 * pow(s4, 0.3e1) * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.392e3 * pow(s4, 0.3e1) * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.299e3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.124e3 * pow(s4, 0.3e1) * t * t * pow(u, 0.6e1) + 0.21e2 * pow(s4, 0.3e1) * t * pow(u, 0.7e1) - 0.12e2 * s4 * s4 * pow(t, 0.8e1) * u - 0.86e2 * s4 * s4 * pow(t, 0.7e1) * u * u - 0.254e3 * s4 * s4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.416e3 * s4 * s4 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.416e3 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.254e3 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.86e2 * s4 * s4 * t * t * pow(u, 0.7e1) - 0.12e2 * s4 * s4 * t * pow(u, 0.8e1) + 0.3e1 * s4 * pow(t, 0.9e1) * u + 0.26e2 * s4 * pow(t, 0.8e1) * u * u + 0.96e2 * s4 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.194e3 * s4 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.242e3 * s4 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.194e3 * s4 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.96e2 * s4 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.26e2 * s4 * t * t * pow(u, 0.8e1) + 0.3e1 * s4 * t * pow(u, 0.9e1) - 0.2e1 * pow(t, 0.9e1) * u * u - 0.12e2 * pow(t, 0.8e1) * pow(u, 0.3e1) - 0.32e2 * pow(t, 0.7e1) * pow(u, 0.4e1) - 0.50e2 * pow(t, 0.6e1) * pow(u, 0.5e1) - 0.50e2 * pow(t, 0.5e1) * pow(u, 0.6e1) - 0.32e2 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.12e2 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.2e1 * t * t * pow(u, 0.9e1)) * pow(-t + s4, -0.2e1) * pow(-u + s4, -0.2e1) * pow(u, -0.2e1) * pow(t, -0.2e1) * pow(0.4e1 * s3 * s4 - t * t - 0.2e1 * t * u - u * u, -0.2e1) * log( (1 - zp)) + 0.2e1 * (0.6e1 * pow(s3, 0.6e1) * pow(s4, 0.4e1) * t * u - 0.8e1 * pow(s3, 0.6e1) * pow(s4, 0.3e1) * t * t * u - 0.8e1 * pow(s3, 0.6e1) * pow(s4, 0.3e1) * t * u * u + 0.3e1 * pow(s3, 0.6e1) * s4 * s4 * pow(t, 0.3e1) * u + 0.8e1 * pow(s3, 0.6e1) * s4 * s4 * t * t * u * u + 0.3e1 * pow(s3, 0.6e1) * s4 * s4 * t * pow(u, 0.3e1) - 0.2e1 * pow(s3, 0.6e1) * s4 * pow(t, 0.3e1) * u * u - 0.2e1 * pow(s3, 0.6e1) * s4 * t * t * pow(u, 0.3e1) - 0.3e1 * pow(s3, 0.5e1) * pow(s4, 0.5e1) * t * t + 0.12e2 * pow(s3, 0.5e1) * pow(s4, 0.5e1) * t * u - 0.3e1 * pow(s3, 0.5e1) * pow(s4, 0.5e1) * u * u + 0.6e1 * pow(s3, 0.5e1) * pow(s4, 0.4e1) * pow(t, 0.3e1) - 0.34e2 * pow(s3, 0.5e1) * pow(s4, 0.4e1) * t * t * u - 0.34e2 * pow(s3, 0.5e1) * pow(s4, 0.4e1) * t * u * u + 0.6e1 * pow(s3, 0.5e1) * pow(s4, 0.4e1) * pow(u, 0.3e1) - 0.3e1 * pow(s3, 0.5e1) * pow(s4, 0.3e1) * pow(t, 0.4e1) + 0.26e2 * pow(s3, 0.5e1) * pow(s4, 0.3e1) * pow(t, 0.3e1) * u + 0.74e2 * pow(s3, 0.5e1) * pow(s4, 0.3e1) * t * t * u * u + 0.26e2 * pow(s3, 0.5e1) * pow(s4, 0.3e1) * t * pow(u, 0.3e1) - 0.3e1 * pow(s3, 0.5e1) * pow(s4, 0.3e1) * pow(u, 0.4e1) - 0.6e1 * pow(s3, 0.5e1) * s4 * s4 * pow(t, 0.4e1) * u - 0.42e2 * pow(s3, 0.5e1) * s4 * s4 * pow(t, 0.3e1) * u * u - 0.42e2 * pow(s3, 0.5e1) * s4 * s4 * t * t * pow(u, 0.3e1) - 0.6e1 * pow(s3, 0.5e1) * s4 * s4 * t * pow(u, 0.4e1) + 0.5e1 * pow(s3, 0.5e1) * s4 * pow(t, 0.4e1) * u * u + 0.16e2 * pow(s3, 0.5e1) * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.5e1 * pow(s3, 0.5e1) * s4 * t * t * pow(u, 0.4e1) + 0.6e1 * pow(s3, 0.4e1) * pow(s4, 0.6e1) * t * u + 0.6e1 * pow(s3, 0.4e1) * pow(s4, 0.5e1) * pow(t, 0.3e1) - 0.34e2 * pow(s3, 0.4e1) * pow(s4, 0.5e1) * t * t * u - 0.34e2 * pow(s3, 0.4e1) * pow(s4, 0.5e1) * t * u * u + 0.6e1 * pow(s3, 0.4e1) * pow(s4, 0.5e1) * pow(u, 0.3e1) - 0.12e2 * pow(s3, 0.4e1) * pow(s4, 0.4e1) * pow(t, 0.4e1) + 0.55e2 * pow(s3, 0.4e1) * pow(s4, 0.4e1) * pow(t, 0.3e1) * u + 0.140e3 * pow(s3, 0.4e1) * pow(s4, 0.4e1) * t * t * u * u + 0.55e2 * pow(s3, 0.4e1) * pow(s4, 0.4e1) * t * pow(u, 0.3e1) - 0.12e2 * pow(s3, 0.4e1) * pow(s4, 0.4e1) * pow(u, 0.4e1) + 0.6e1 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * pow(t, 0.5e1) - 0.32e2 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * pow(t, 0.4e1) * u - 0.156e3 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * pow(t, 0.3e1) * u * u - 0.156e3 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * t * t * pow(u, 0.3e1) - 0.32e2 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * t * pow(u, 0.4e1) + 0.6e1 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * pow(u, 0.5e1) + 0.6e1 * pow(s3, 0.4e1) * s4 * s4 * pow(t, 0.5e1) * u + 0.62e2 * pow(s3, 0.4e1) * s4 * s4 * pow(t, 0.4e1) * u * u + 0.100e3 * pow(s3, 0.4e1) * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.62e2 * pow(s3, 0.4e1) * s4 * s4 * t * t * pow(u, 0.4e1) + 0.6e1 * pow(s3, 0.4e1) * s4 * s4 * t * pow(u, 0.5e1) - 0.6e1 * pow(s3, 0.4e1) * s4 * pow(t, 0.5e1) * u * u - 0.14e2 * pow(s3, 0.4e1) * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.14e2 * pow(s3, 0.4e1) * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.6e1 * pow(s3, 0.4e1) * s4 * t * t * pow(u, 0.5e1) - 0.8e1 * pow(s3, 0.4e1) * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.8e1 * pow(s3, 0.3e1) * pow(s4, 0.6e1) * t * t * u - 0.8e1 * pow(s3, 0.3e1) * pow(s4, 0.6e1) * t * u * u - 0.3e1 * pow(s3, 0.3e1) * pow(s4, 0.5e1) * pow(t, 0.4e1) + 0.26e2 * pow(s3, 0.3e1) * pow(s4, 0.5e1) * pow(t, 0.3e1) * u + 0.74e2 * pow(s3, 0.3e1) * pow(s4, 0.5e1) * t * t * u * u + 0.26e2 * pow(s3, 0.3e1) * pow(s4, 0.5e1) * t * pow(u, 0.3e1) - 0.3e1 * pow(s3, 0.3e1) * pow(s4, 0.5e1) * pow(u, 0.4e1) + 0.6e1 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * pow(t, 0.5e1) - 0.32e2 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * pow(t, 0.4e1) * u - 0.156e3 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * pow(t, 0.3e1) * u * u - 0.156e3 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * t * t * pow(u, 0.3e1) - 0.32e2 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * t * pow(u, 0.4e1) + 0.6e1 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * pow(u, 0.5e1) - 0.3e1 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * pow(t, 0.6e1) + 0.20e2 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * pow(t, 0.5e1) * u + 0.119e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * pow(t, 0.4e1) * u * u + 0.184e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.119e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * t * pow(u, 0.4e1) + 0.20e2 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * pow(u, 0.5e1) - 0.3e1 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * pow(u, 0.6e1) - 0.6e1 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.6e1) * u - 0.38e2 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.5e1) * u * u - 0.48e2 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.48e2 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.38e2 * pow(s3, 0.3e1) * s4 * s4 * t * t * pow(u, 0.5e1) - 0.6e1 * pow(s3, 0.3e1) * s4 * s4 * t * pow(u, 0.6e1) + 0.5e1 * pow(s3, 0.3e1) * s4 * pow(t, 0.6e1) * u * u - 0.10e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.38e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.10e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.5e1 * pow(s3, 0.3e1) * s4 * t * t * pow(u, 0.6e1) + 0.18e2 * pow(s3, 0.3e1) * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.18e2 * pow(s3, 0.3e1) * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.3e1 * s3 * s3 * pow(s4, 0.6e1) * pow(t, 0.3e1) * u + 0.8e1 * s3 * s3 * pow(s4, 0.6e1) * t * t * u * u + 0.3e1 * s3 * s3 * pow(s4, 0.6e1) * t * pow(u, 0.3e1) - 0.6e1 * s3 * s3 * pow(s4, 0.5e1) * pow(t, 0.4e1) * u - 0.42e2 * s3 * s3 * pow(s4, 0.5e1) * pow(t, 0.3e1) * u * u - 0.42e2 * s3 * s3 * pow(s4, 0.5e1) * t * t * pow(u, 0.3e1) - 0.6e1 * s3 * s3 * pow(s4, 0.5e1) * t * pow(u, 0.4e1) + 0.6e1 * s3 * s3 * pow(s4, 0.4e1) * pow(t, 0.5e1) * u + 0.62e2 * s3 * s3 * pow(s4, 0.4e1) * pow(t, 0.4e1) * u * u + 0.100e3 * s3 * s3 * pow(s4, 0.4e1) * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.62e2 * s3 * s3 * pow(s4, 0.4e1) * t * t * pow(u, 0.4e1) + 0.6e1 * s3 * s3 * pow(s4, 0.4e1) * t * pow(u, 0.5e1) - 0.6e1 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.6e1) * u - 0.38e2 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.5e1) * u * u - 0.48e2 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.48e2 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.38e2 * s3 * s3 * pow(s4, 0.3e1) * t * t * pow(u, 0.5e1) - 0.6e1 * s3 * s3 * pow(s4, 0.3e1) * t * pow(u, 0.6e1) + 0.3e1 * s3 * s3 * s4 * s4 * pow(t, 0.7e1) * u + 0.12e2 * s3 * s3 * s4 * s4 * pow(t, 0.6e1) * u * u - 0.21e2 * s3 * s3 * s4 * s4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.72e2 * s3 * s3 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.21e2 * s3 * s3 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.12e2 * s3 * s3 * s4 * s4 * t * t * pow(u, 0.6e1) + 0.3e1 * s3 * s3 * s4 * s4 * t * pow(u, 0.7e1) - 0.2e1 * s3 * s3 * s4 * pow(t, 0.7e1) * u * u + 0.14e2 * s3 * s3 * s4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.74e2 * s3 * s3 * s4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.74e2 * s3 * s3 * s4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.14e2 * s3 * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.2e1 * s3 * s3 * s4 * t * t * pow(u, 0.7e1) - 0.14e2 * s3 * s3 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.30e2 * s3 * s3 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.14e2 * s3 * s3 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.2e1 * s3 * pow(s4, 0.6e1) * pow(t, 0.3e1) * u * u - 0.2e1 * s3 * pow(s4, 0.6e1) * t * t * pow(u, 0.3e1) + 0.5e1 * s3 * pow(s4, 0.5e1) * pow(t, 0.4e1) * u * u + 0.16e2 * s3 * pow(s4, 0.5e1) * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.5e1 * s3 * pow(s4, 0.5e1) * t * t * pow(u, 0.4e1) - 0.6e1 * s3 * pow(s4, 0.4e1) * pow(t, 0.5e1) * u * u - 0.14e2 * s3 * pow(s4, 0.4e1) * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.14e2 * s3 * pow(s4, 0.4e1) * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.6e1 * s3 * pow(s4, 0.4e1) * t * t * pow(u, 0.5e1) + 0.5e1 * s3 * pow(s4, 0.3e1) * pow(t, 0.6e1) * u * u - 0.10e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.38e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.10e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.5e1 * s3 * pow(s4, 0.3e1) * t * t * pow(u, 0.6e1) - 0.2e1 * s3 * s4 * s4 * pow(t, 0.7e1) * u * u + 0.14e2 * s3 * s4 * s4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.74e2 * s3 * s4 * s4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.74e2 * s3 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.14e2 * s3 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.2e1 * s3 * s4 * s4 * t * t * pow(u, 0.7e1) - 0.4e1 * s3 * s4 * pow(t, 0.7e1) * pow(u, 0.3e1) - 0.35e2 * s3 * s4 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.68e2 * s3 * s4 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.35e2 * s3 * s4 * pow(t, 0.4e1) * pow(u, 0.6e1) - 0.4e1 * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.4e1 * s3 * pow(t, 0.7e1) * pow(u, 0.4e1) + 0.16e2 * s3 * pow(t, 0.6e1) * pow(u, 0.5e1) + 0.16e2 * s3 * pow(t, 0.5e1) * pow(u, 0.6e1) + 0.4e1 * s3 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.8e1 * pow(s4, 0.4e1) * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.18e2 * pow(s4, 0.3e1) * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.18e2 * pow(s4, 0.3e1) * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.14e2 * s4 * s4 * pow(t, 0.6e1) * pow(u, 0.4e1) - 0.30e2 * s4 * s4 * pow(t, 0.5e1) * pow(u, 0.5e1) - 0.14e2 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.4e1 * s4 * pow(t, 0.7e1) * pow(u, 0.4e1) + 0.16e2 * s4 * pow(t, 0.6e1) * pow(u, 0.5e1) + 0.16e2 * s4 * pow(t, 0.5e1) * pow(u, 0.6e1) + 0.4e1 * s4 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.3e1 * pow(t, 0.7e1) * pow(u, 0.5e1) - 0.4e1 * pow(t, 0.6e1) * pow(u, 0.6e1) - 0.3e1 * pow(t, 0.5e1) * pow(u, 0.7e1)) * pow(-u + s4, -0.2e1) * pow(s3 - t, -0.2e1) * pow(-t + s4, -0.2e1) * pow(t, -0.2e1) * pow(u, -0.2e1) * pow(-u + s3, -0.2e1) * log(-s) - 0.2e1 * (0.64e2 * s * pow(s3, 0.4e1) * s4 * s4 * t * u *  z - 0.64e2 * s * pow(s3, 0.4e1) * s4 * s4 * t * u *  zp - 0.32e2 * s * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * t *  z + 0.32e2 * s * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * t *  zp + 0.128e3 * s * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * u *  z - 0.128e3 * s * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * u *  zp - 0.32e2 * s * pow(s3, 0.3e1) * pow(s4, 0.3e1) * u * u *  z + 0.32e2 * s * pow(s3, 0.3e1) * pow(s4, 0.3e1) * u * u *  zp - 0.96e2 * s * pow(s3, 0.3e1) * s4 * s4 * t * t * u *  z + 0.96e2 * s * pow(s3, 0.3e1) * s4 * s4 * t * t * u *  zp - 0.96e2 * s * pow(s3, 0.3e1) * s4 * s4 * t * u * u *  z + 0.96e2 * s * pow(s3, 0.3e1) * s4 * s4 * t * u * u *  zp - 0.32e2 * s * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) * u *  z + 0.32e2 * s * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) * u *  zp - 0.64e2 * s * pow(s3, 0.3e1) * s4 * t * t * u * u *  z + 0.64e2 * s * pow(s3, 0.3e1) * s4 * t * t * u * u *  zp - 0.32e2 * s * pow(s3, 0.3e1) * s4 * t * pow(u, 0.3e1) *  z + 0.32e2 * s * pow(s3, 0.3e1) * s4 * t * pow(u, 0.3e1) *  zp + 0.64e2 * s * s3 * s3 * pow(s4, 0.4e1) * t * u *  z - 0.64e2 * s * s3 * s3 * pow(s4, 0.4e1) * t * u *  zp - 0.96e2 * s * s3 * s3 * pow(s4, 0.3e1) * t * t * u *  z + 0.96e2 * s * s3 * s3 * pow(s4, 0.3e1) * t * t * u *  zp - 0.96e2 * s * s3 * s3 * pow(s4, 0.3e1) * t * u * u *  z + 0.96e2 * s * s3 * s3 * pow(s4, 0.3e1) * t * u * u *  zp + 0.16e2 * s * s3 * s3 * s4 * s4 * pow(t, 0.4e1) *  z - 0.16e2 * s * s3 * s3 * s4 * s4 * pow(t, 0.4e1) *  zp + 0.16e2 * s * s3 * s3 * s4 * s4 * pow(t, 0.3e1) * u *  z - 0.16e2 * s * s3 * s3 * s4 * s4 * pow(t, 0.3e1) * u *  zp - 0.32e2 * s * s3 * s3 * s4 * s4 * t * t * u * u *  z + 0.32e2 * s * s3 * s3 * s4 * s4 * t * t * u * u *  zp + 0.16e2 * s * s3 * s3 * s4 * s4 * t * pow(u, 0.3e1) *  z - 0.16e2 * s * s3 * s3 * s4 * s4 * t * pow(u, 0.3e1) *  zp + 0.16e2 * s * s3 * s3 * s4 * s4 * pow(u, 0.4e1) *  z - 0.16e2 * s * s3 * s3 * s4 * s4 * pow(u, 0.4e1) *  zp + 0.48e2 * s * s3 * s3 * s4 * pow(t, 0.4e1) * u *  z - 0.48e2 * s * s3 * s3 * s4 * pow(t, 0.4e1) * u *  zp + 0.144e3 * s * s3 * s3 * s4 * pow(t, 0.3e1) * u * u *  z - 0.144e3 * s * s3 * s3 * s4 * pow(t, 0.3e1) * u * u *  zp + 0.144e3 * s * s3 * s3 * s4 * t * t * pow(u, 0.3e1) *  z - 0.144e3 * s * s3 * s3 * s4 * t * t * pow(u, 0.3e1) *  zp + 0.48e2 * s * s3 * s3 * s4 * t * pow(u, 0.4e1) *  z - 0.48e2 * s * s3 * s3 * s4 * t * pow(u, 0.4e1) *  zp + 0.4e1 * s * s3 * s3 * pow(t, 0.5e1) * u *  z - 0.4e1 * s * s3 * s3 * pow(t, 0.5e1) * u *  zp + 0.16e2 * s * s3 * s3 * pow(t, 0.4e1) * u * u *  z - 0.16e2 * s * s3 * s3 * pow(t, 0.4e1) * u * u *  zp + 0.24e2 * s * s3 * s3 * pow(t, 0.3e1) * pow(u, 0.3e1) *  z - 0.24e2 * s * s3 * s3 * pow(t, 0.3e1) * pow(u, 0.3e1) *  zp + 0.16e2 * s * s3 * s3 * t * t * pow(u, 0.4e1) *  z - 0.16e2 * s * s3 * s3 * t * t * pow(u, 0.4e1) *  zp + 0.4e1 * s * s3 * s3 * t * pow(u, 0.5e1) *  z - 0.4e1 * s * s3 * s3 * t * pow(u, 0.5e1) *  zp - 0.32e2 * s * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * u *  z + 0.32e2 * s * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * u *  zp - 0.64e2 * s * s3 * pow(s4, 0.3e1) * t * t * u * u *  z + 0.64e2 * s * s3 * pow(s4, 0.3e1) * t * t * u * u *  zp - 0.32e2 * s * s3 * pow(s4, 0.3e1) * t * pow(u, 0.3e1) *  z + 0.32e2 * s * s3 * pow(s4, 0.3e1) * t * pow(u, 0.3e1) *  zp + 0.48e2 * s * s3 * s4 * s4 * pow(t, 0.4e1) * u *  z - 0.48e2 * s * s3 * s4 * s4 * pow(t, 0.4e1) * u *  zp + 0.144e3 * s * s3 * s4 * s4 * pow(t, 0.3e1) * u * u *  z - 0.144e3 * s * s3 * s4 * s4 * pow(t, 0.3e1) * u * u *  zp + 0.144e3 * s * s3 * s4 * s4 * t * t * pow(u, 0.3e1) *  z - 0.144e3 * s * s3 * s4 * s4 * t * t * pow(u, 0.3e1) *  zp + 0.48e2 * s * s3 * s4 * s4 * t * pow(u, 0.4e1) *  z - 0.48e2 * s * s3 * s4 * s4 * t * pow(u, 0.4e1) *  zp - 0.2e1 * s * s3 * s4 * pow(t, 0.6e1) *  z + 0.2e1 * s * s3 * s4 * pow(t, 0.6e1) *  zp - 0.24e2 * s * s3 * s4 * pow(t, 0.5e1) * u *  z + 0.24e2 * s * s3 * s4 * pow(t, 0.5e1) * u *  zp - 0.62e2 * s * s3 * s4 * pow(t, 0.4e1) * u * u *  z + 0.62e2 * s * s3 * s4 * pow(t, 0.4e1) * u * u *  zp - 0.80e2 * s * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) *  z + 0.80e2 * s * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) *  zp - 0.62e2 * s * s3 * s4 * t * t * pow(u, 0.4e1) *  z + 0.62e2 * s * s3 * s4 * t * t * pow(u, 0.4e1) *  zp - 0.24e2 * s * s3 * s4 * t * pow(u, 0.5e1) *  z + 0.24e2 * s * s3 * s4 * t * pow(u, 0.5e1) *  zp - 0.2e1 * s * s3 * s4 * pow(u, 0.6e1) *  z + 0.2e1 * s * s3 * s4 * pow(u, 0.6e1) *  zp - 0.6e1 * s * s3 * pow(t, 0.6e1) * u *  z + 0.6e1 * s * s3 * pow(t, 0.6e1) * u *  zp - 0.30e2 * s * s3 * pow(t, 0.5e1) * u * u *  z + 0.30e2 * s * s3 * pow(t, 0.5e1) * u * u *  zp - 0.60e2 * s * s3 * pow(t, 0.4e1) * pow(u, 0.3e1) *  z + 0.60e2 * s * s3 * pow(t, 0.4e1) * pow(u, 0.3e1) *  zp - 0.60e2 * s * s3 * pow(t, 0.3e1) * pow(u, 0.4e1) *  z + 0.60e2 * s * s3 * pow(t, 0.3e1) * pow(u, 0.4e1) *  zp - 0.30e2 * s * s3 * t * t * pow(u, 0.5e1) *  z + 0.30e2 * s * s3 * t * t * pow(u, 0.5e1) *  zp - 0.6e1 * s * s3 * t * pow(u, 0.6e1) *  z + 0.6e1 * s * s3 * t * pow(u, 0.6e1) *  zp + 0.4e1 * s * s4 * s4 * pow(t, 0.5e1) * u *  z - 0.4e1 * s * s4 * s4 * pow(t, 0.5e1) * u *  zp + 0.16e2 * s * s4 * s4 * pow(t, 0.4e1) * u * u *  z - 0.16e2 * s * s4 * s4 * pow(t, 0.4e1) * u * u *  zp + 0.24e2 * s * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) *  z - 0.24e2 * s * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) *  zp + 0.16e2 * s * s4 * s4 * t * t * pow(u, 0.4e1) *  z - 0.16e2 * s * s4 * s4 * t * t * pow(u, 0.4e1) *  zp + 0.4e1 * s * s4 * s4 * t * pow(u, 0.5e1) *  z - 0.4e1 * s * s4 * s4 * t * pow(u, 0.5e1) *  zp - 0.6e1 * s * s4 * pow(t, 0.6e1) * u *  z + 0.6e1 * s * s4 * pow(t, 0.6e1) * u *  zp - 0.30e2 * s * s4 * pow(t, 0.5e1) * u * u *  z + 0.30e2 * s * s4 * pow(t, 0.5e1) * u * u *  zp - 0.60e2 * s * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) *  z + 0.60e2 * s * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) *  zp - 0.60e2 * s * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) *  z + 0.60e2 * s * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) *  zp - 0.30e2 * s * s4 * t * t * pow(u, 0.5e1) *  z + 0.30e2 * s * s4 * t * t * pow(u, 0.5e1) *  zp - 0.6e1 * s * s4 * t * pow(u, 0.6e1) *  z + 0.6e1 * s * s4 * t * pow(u, 0.6e1) *  zp + 0.3e1 * s * pow(t, 0.7e1) * u *  z - 0.3e1 * s * pow(t, 0.7e1) * u *  zp + 0.16e2 * s * pow(t, 0.6e1) * u * u *  z - 0.16e2 * s * pow(t, 0.6e1) * u * u *  zp + 0.37e2 * s * pow(t, 0.5e1) * pow(u, 0.3e1) *  z - 0.37e2 * s * pow(t, 0.5e1) * pow(u, 0.3e1) *  zp + 0.48e2 * s * pow(t, 0.4e1) * pow(u, 0.4e1) *  z - 0.48e2 * s * pow(t, 0.4e1) * pow(u, 0.4e1) *  zp + 0.37e2 * s * pow(t, 0.3e1) * pow(u, 0.5e1) *  z - 0.37e2 * s * pow(t, 0.3e1) * pow(u, 0.5e1) *  zp + 0.16e2 * s * t * t * pow(u, 0.6e1) *  z - 0.16e2 * s * t * t * pow(u, 0.6e1) *  zp + 0.3e1 * s * t * pow(u, 0.7e1) *  z - 0.3e1 * s * t * pow(u, 0.7e1) *  zp + 0.72e2 * pow(s3, 0.4e1) * s4 * s4 * t * t * u + 0.72e2 * pow(s3, 0.4e1) * s4 * s4 * t * u * u + 0.112e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * t * u + 0.112e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * u * u - 0.128e3 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.3e1) * u - 0.192e3 * pow(s3, 0.3e1) * s4 * s4 * t * t * u * u - 0.128e3 * pow(s3, 0.3e1) * s4 * s4 * t * pow(u, 0.3e1) - 0.28e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.4e1) * u - 0.108e3 * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) * u * u - 0.108e3 * pow(s3, 0.3e1) * s4 * t * t * pow(u, 0.3e1) - 0.28e2 * pow(s3, 0.3e1) * s4 * t * pow(u, 0.4e1) + 0.72e2 * s3 * s3 * pow(s4, 0.4e1) * t * t * u + 0.72e2 * s3 * s3 * pow(s4, 0.4e1) * t * u * u - 0.128e3 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * u - 0.192e3 * s3 * s3 * pow(s4, 0.3e1) * t * t * u * u - 0.128e3 * s3 * s3 * pow(s4, 0.3e1) * t * pow(u, 0.3e1) + 0.32e2 * s3 * s3 * s4 * s4 * pow(t, 0.4e1) * u - 0.48e2 * s3 * s3 * s4 * s4 * pow(t, 0.3e1) * u * u - 0.48e2 * s3 * s3 * s4 * s4 * t * t * pow(u, 0.3e1) + 0.32e2 * s3 * s3 * s4 * s4 * t * pow(u, 0.4e1) + 0.44e2 * s3 * s3 * s4 * pow(t, 0.5e1) * u + 0.208e3 * s3 * s3 * s4 * pow(t, 0.4e1) * u * u + 0.328e3 * s3 * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.208e3 * s3 * s3 * s4 * t * t * pow(u, 0.4e1) + 0.44e2 * s3 * s3 * s4 * t * pow(u, 0.5e1) + 0.4e1 * s3 * s3 * pow(t, 0.6e1) * u + 0.20e2 * s3 * s3 * pow(t, 0.5e1) * u * u + 0.40e2 * s3 * s3 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.40e2 * s3 * s3 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.20e2 * s3 * s3 * t * t * pow(u, 0.5e1) + 0.4e1 * s3 * s3 * t * pow(u, 0.6e1) - 0.28e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.4e1) * u - 0.108e3 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * u * u - 0.108e3 * s3 * pow(s4, 0.3e1) * t * t * pow(u, 0.3e1) - 0.28e2 * s3 * pow(s4, 0.3e1) * t * pow(u, 0.4e1) + 0.44e2 * s3 * s4 * s4 * pow(t, 0.5e1) * u + 0.208e3 * s3 * s4 * s4 * pow(t, 0.4e1) * u * u + 0.328e3 * s3 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.208e3 * s3 * s4 * s4 * t * t * pow(u, 0.4e1) + 0.44e2 * s3 * s4 * s4 * t * pow(u, 0.5e1) - 0.18e2 * s3 * s4 * pow(t, 0.6e1) * u - 0.82e2 * s3 * s4 * pow(t, 0.5e1) * u * u - 0.156e3 * s3 * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.156e3 * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.82e2 * s3 * s4 * t * t * pow(u, 0.5e1) - 0.18e2 * s3 * s4 * t * pow(u, 0.6e1) - 0.6e1 * s3 * pow(t, 0.7e1) * u - 0.36e2 * s3 * pow(t, 0.6e1) * u * u - 0.90e2 * s3 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.120e3 * s3 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.90e2 * s3 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.36e2 * s3 * t * t * pow(u, 0.6e1) - 0.6e1 * s3 * t * pow(u, 0.7e1) + 0.4e1 * s4 * s4 * pow(t, 0.6e1) * u + 0.20e2 * s4 * s4 * pow(t, 0.5e1) * u * u + 0.40e2 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.40e2 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.20e2 * s4 * s4 * t * t * pow(u, 0.5e1) + 0.4e1 * s4 * s4 * t * pow(u, 0.6e1) - 0.6e1 * s4 * pow(t, 0.7e1) * u - 0.36e2 * s4 * pow(t, 0.6e1) * u * u - 0.90e2 * s4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.120e3 * s4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.90e2 * s4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.36e2 * s4 * t * t * pow(u, 0.6e1) - 0.6e1 * s4 * t * pow(u, 0.7e1) + 0.3e1 * pow(t, 0.8e1) * u + 0.19e2 * pow(t, 0.7e1) * u * u + 0.53e2 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.85e2 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.85e2 * pow(t, 0.4e1) * pow(u, 0.5e1) + 0.53e2 * pow(t, 0.3e1) * pow(u, 0.6e1) + 0.19e2 * t * t * pow(u, 0.7e1) + 0.3e1 * t * pow(u, 0.8e1)) * pow(u, -0.2e1) * pow(t, -0.2e1) * pow(0.4e1 * s3 * s4 - t * t - 0.2e1 * t * u - u * u, -0.2e1) / s /  (z - zp) * log( zp) * log( (1 - z)) - 0.2e1 * (0.16e2 * s * pow(s3, 0.3e1) * s4 * t * u *  z - 0.16e2 * s * pow(s3, 0.3e1) * s4 * t * u *  zp - 0.8e1 * s * s3 * s3 * s4 * s4 * t * t *  z + 0.8e1 * s * s3 * s3 * s4 * s4 * t * t *  zp + 0.32e2 * s * s3 * s3 * s4 * s4 * t * u *  z - 0.32e2 * s * s3 * s3 * s4 * s4 * t * u *  zp - 0.8e1 * s * s3 * s3 * s4 * s4 * u * u *  z + 0.8e1 * s * s3 * s3 * s4 * s4 * u * u *  zp - 0.24e2 * s * s3 * s3 * s4 * t * t * u *  z + 0.24e2 * s * s3 * s3 * s4 * t * t * u *  zp - 0.24e2 * s * s3 * s3 * s4 * t * u * u *  z + 0.24e2 * s * s3 * s3 * s4 * t * u * u *  zp - 0.4e1 * s * s3 * s3 * pow(t, 0.3e1) * u *  z + 0.4e1 * s * s3 * s3 * pow(t, 0.3e1) * u *  zp - 0.8e1 * s * s3 * s3 * t * t * u * u *  z + 0.8e1 * s * s3 * s3 * t * t * u * u *  zp - 0.4e1 * s * s3 * s3 * t * pow(u, 0.3e1) *  z + 0.4e1 * s * s3 * s3 * t * pow(u, 0.3e1) *  zp + 0.16e2 * s * s3 * pow(s4, 0.3e1) * t * u *  z - 0.16e2 * s * s3 * pow(s4, 0.3e1) * t * u *  zp - 0.24e2 * s * s3 * s4 * s4 * t * t * u *  z + 0.24e2 * s * s3 * s4 * s4 * t * t * u *  zp - 0.24e2 * s * s3 * s4 * s4 * t * u * u *  z + 0.24e2 * s * s3 * s4 * s4 * t * u * u *  zp + 0.2e1 * s * s3 * s4 * pow(t, 0.4e1) *  z - 0.2e1 * s * s3 * s4 * pow(t, 0.4e1) *  zp + 0.8e1 * s * s3 * s4 * pow(t, 0.3e1) * u *  z - 0.8e1 * s * s3 * s4 * pow(t, 0.3e1) * u *  zp + 0.4e1 * s * s3 * s4 * t * t * u * u *  z - 0.4e1 * s * s3 * s4 * t * t * u * u *  zp + 0.8e1 * s * s3 * s4 * t * pow(u, 0.3e1) *  z - 0.8e1 * s * s3 * s4 * t * pow(u, 0.3e1) *  zp + 0.2e1 * s * s3 * s4 * pow(u, 0.4e1) *  z - 0.2e1 * s * s3 * s4 * pow(u, 0.4e1) *  zp + 0.6e1 * s * s3 * pow(t, 0.4e1) * u *  z - 0.6e1 * s * s3 * pow(t, 0.4e1) * u *  zp + 0.18e2 * s * s3 * pow(t, 0.3e1) * u * u *  z - 0.18e2 * s * s3 * pow(t, 0.3e1) * u * u *  zp + 0.18e2 * s * s3 * t * t * pow(u, 0.3e1) *  z - 0.18e2 * s * s3 * t * t * pow(u, 0.3e1) *  zp + 0.6e1 * s * s3 * t * pow(u, 0.4e1) *  z - 0.6e1 * s * s3 * t * pow(u, 0.4e1) *  zp - 0.4e1 * s * s4 * s4 * pow(t, 0.3e1) * u *  z + 0.4e1 * s * s4 * s4 * pow(t, 0.3e1) * u *  zp - 0.8e1 * s * s4 * s4 * t * t * u * u *  z + 0.8e1 * s * s4 * s4 * t * t * u * u *  zp - 0.4e1 * s * s4 * s4 * t * pow(u, 0.3e1) *  z + 0.4e1 * s * s4 * s4 * t * pow(u, 0.3e1) *  zp + 0.6e1 * s * s4 * pow(t, 0.4e1) * u *  z - 0.6e1 * s * s4 * pow(t, 0.4e1) * u *  zp + 0.18e2 * s * s4 * pow(t, 0.3e1) * u * u *  z - 0.18e2 * s * s4 * pow(t, 0.3e1) * u * u *  zp + 0.18e2 * s * s4 * t * t * pow(u, 0.3e1) *  z - 0.18e2 * s * s4 * t * t * pow(u, 0.3e1) *  zp + 0.6e1 * s * s4 * t * pow(u, 0.4e1) *  z - 0.6e1 * s * s4 * t * pow(u, 0.4e1) *  zp - 0.3e1 * s * pow(t, 0.5e1) * u *  z + 0.3e1 * s * pow(t, 0.5e1) * u *  zp - 0.10e2 * s * pow(t, 0.4e1) * u * u *  z + 0.10e2 * s * pow(t, 0.4e1) * u * u *  zp - 0.14e2 * s * pow(t, 0.3e1) * pow(u, 0.3e1) *  z + 0.14e2 * s * pow(t, 0.3e1) * pow(u, 0.3e1) *  zp - 0.10e2 * s * t * t * pow(u, 0.4e1) *  z + 0.10e2 * s * t * t * pow(u, 0.4e1) *  zp - 0.3e1 * s * t * pow(u, 0.5e1) *  z + 0.3e1 * s * t * pow(u, 0.5e1) *  zp - 0.12e2 * pow(s3, 0.3e1) * s4 * t * t * u + 0.12e2 * pow(s3, 0.3e1) * s4 * t * u * u - 0.32e2 * s3 * s3 * s4 * s4 * t * t * u + 0.32e2 * s3 * s3 * s4 * s4 * t * u * u + 0.28e2 * s3 * s3 * s4 * pow(t, 0.3e1) * u - 0.28e2 * s3 * s3 * s4 * t * pow(u, 0.3e1) - 0.12e2 * s3 * pow(s4, 0.3e1) * t * t * u + 0.12e2 * s3 * pow(s4, 0.3e1) * t * u * u + 0.28e2 * s3 * s4 * s4 * pow(t, 0.3e1) * u - 0.28e2 * s3 * s4 * s4 * t * pow(u, 0.3e1) - 0.10e2 * s3 * s4 * pow(t, 0.4e1) * u - 0.10e2 * s3 * s4 * pow(t, 0.3e1) * u * u + 0.10e2 * s3 * s4 * t * t * pow(u, 0.3e1) + 0.10e2 * s3 * s4 * t * pow(u, 0.4e1) - 0.2e1 * s3 * pow(t, 0.5e1) * u - 0.4e1 * s3 * pow(t, 0.4e1) * u * u + 0.4e1 * s3 * t * t * pow(u, 0.4e1) + 0.2e1 * s3 * t * pow(u, 0.5e1) - 0.2e1 * s4 * pow(t, 0.5e1) * u - 0.4e1 * s4 * pow(t, 0.4e1) * u * u + 0.4e1 * s4 * t * t * pow(u, 0.4e1) + 0.2e1 * s4 * t * pow(u, 0.5e1) + pow(t, 0.6e1) * u + 0.3e1 * pow(t, 0.5e1) * u * u + 0.2e1 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.2e1 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.3e1 * t * t * pow(u, 0.5e1) - t * pow(u, 0.6e1)) /  (z - zp) / s * pow(t, -0.2e1) / (0.4e1 * s3 * s4 - t * t - 0.2e1 * t * u - u * u) * pow(u, -0.2e1) * log( zp) * log( (1 - zp)) + 0.2e1 * s3 * (0.96e2 * pow(s3, 0.7e1) * s4 * s4 * t * u - 0.48e2 * pow(s3, 0.6e1) * pow(s4, 0.3e1) * t * t + 0.192e3 * pow(s3, 0.6e1) * pow(s4, 0.3e1) * t * u - 0.48e2 * pow(s3, 0.6e1) * pow(s4, 0.3e1) * u * u - 0.312e3 * pow(s3, 0.6e1) * s4 * s4 * t * t * u - 0.312e3 * pow(s3, 0.6e1) * s4 * s4 * t * u * u - 0.36e2 * pow(s3, 0.6e1) * s4 * pow(t, 0.3e1) * u - 0.104e3 * pow(s3, 0.6e1) * s4 * t * t * u * u - 0.36e2 * pow(s3, 0.6e1) * s4 * t * pow(u, 0.3e1) + 0.96e2 * pow(s3, 0.5e1) * pow(s4, 0.4e1) * t * u + 0.96e2 * pow(s3, 0.5e1) * pow(s4, 0.3e1) * pow(t, 0.3e1) - 0.360e3 * pow(s3, 0.5e1) * pow(s4, 0.3e1) * t * t * u - 0.360e3 * pow(s3, 0.5e1) * pow(s4, 0.3e1) * t * u * u + 0.96e2 * pow(s3, 0.5e1) * pow(s4, 0.3e1) * pow(u, 0.3e1) + 0.24e2 * pow(s3, 0.5e1) * s4 * s4 * pow(t, 0.4e1) + 0.364e3 * pow(s3, 0.5e1) * s4 * s4 * pow(t, 0.3e1) * u + 0.648e3 * pow(s3, 0.5e1) * s4 * s4 * t * t * u * u + 0.364e3 * pow(s3, 0.5e1) * s4 * s4 * t * pow(u, 0.3e1) + 0.24e2 * pow(s3, 0.5e1) * s4 * s4 * pow(u, 0.4e1) + 0.108e3 * pow(s3, 0.5e1) * s4 * pow(t, 0.4e1) * u + 0.460e3 * pow(s3, 0.5e1) * s4 * pow(t, 0.3e1) * u * u + 0.460e3 * pow(s3, 0.5e1) * s4 * t * t * pow(u, 0.3e1) + 0.108e3 * pow(s3, 0.5e1) * s4 * t * pow(u, 0.4e1) + 0.6e1 * pow(s3, 0.5e1) * pow(t, 0.5e1) * u + 0.20e2 * pow(s3, 0.5e1) * pow(t, 0.4e1) * u * u + 0.28e2 * pow(s3, 0.5e1) * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.20e2 * pow(s3, 0.5e1) * t * t * pow(u, 0.4e1) + 0.6e1 * pow(s3, 0.5e1) * t * pow(u, 0.5e1) - 0.128e3 * pow(s3, 0.4e1) * pow(s4, 0.4e1) * t * t * u - 0.128e3 * pow(s3, 0.4e1) * pow(s4, 0.4e1) * t * u * u - 0.48e2 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * pow(t, 0.4e1) + 0.128e3 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * pow(t, 0.3e1) * u + 0.608e3 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * t * t * u * u + 0.128e3 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * t * pow(u, 0.3e1) - 0.48e2 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * pow(u, 0.4e1) - 0.48e2 * pow(s3, 0.4e1) * s4 * s4 * pow(t, 0.5e1) - 0.196e3 * pow(s3, 0.4e1) * s4 * s4 * pow(t, 0.4e1) * u - 0.276e3 * pow(s3, 0.4e1) * s4 * s4 * pow(t, 0.3e1) * u * u - 0.276e3 * pow(s3, 0.4e1) * s4 * s4 * t * t * pow(u, 0.3e1) - 0.196e3 * pow(s3, 0.4e1) * s4 * s4 * t * pow(u, 0.4e1) - 0.48e2 * pow(s3, 0.4e1) * s4 * s4 * pow(u, 0.5e1) - 0.3e1 * pow(s3, 0.4e1) * s4 * pow(t, 0.6e1) - 0.130e3 * pow(s3, 0.4e1) * s4 * pow(t, 0.5e1) * u - 0.681e3 * pow(s3, 0.4e1) * s4 * pow(t, 0.4e1) * u * u - 0.1172e4 * pow(s3, 0.4e1) * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.681e3 * pow(s3, 0.4e1) * s4 * t * t * pow(u, 0.4e1) - 0.130e3 * pow(s3, 0.4e1) * s4 * t * pow(u, 0.5e1) - 0.3e1 * pow(s3, 0.4e1) * s4 * pow(u, 0.6e1) - 0.18e2 * pow(s3, 0.4e1) * pow(t, 0.6e1) * u - 0.82e2 * pow(s3, 0.4e1) * pow(t, 0.5e1) * u * u - 0.156e3 * pow(s3, 0.4e1) * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.156e3 * pow(s3, 0.4e1) * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.82e2 * pow(s3, 0.4e1) * t * t * pow(u, 0.5e1) - 0.18e2 * pow(s3, 0.4e1) * t * pow(u, 0.6e1) + 0.48e2 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * pow(t, 0.3e1) * u + 0.128e3 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * t * t * u * u + 0.48e2 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * t * pow(u, 0.3e1) + 0.56e2 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * pow(t, 0.4e1) * u - 0.168e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * pow(t, 0.3e1) * u * u - 0.168e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * t * pow(u, 0.3e1) + 0.56e2 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * pow(u, 0.4e1) + 0.24e2 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.6e1) + 0.58e2 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.5e1) * u - 0.88e2 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.4e1) * u * u - 0.372e3 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.88e2 * pow(s3, 0.3e1) * s4 * s4 * t * t * pow(u, 0.4e1) + 0.58e2 * pow(s3, 0.3e1) * s4 * s4 * t * pow(u, 0.5e1) + 0.24e2 * pow(s3, 0.3e1) * s4 * s4 * pow(u, 0.6e1) + 0.6e1 * pow(s3, 0.3e1) * s4 * pow(t, 0.7e1) + 0.82e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.6e1) * u + 0.406e3 * pow(s3, 0.3e1) * s4 * pow(t, 0.5e1) * u * u + 0.1058e4 * pow(s3, 0.3e1) * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1058e4 * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.406e3 * pow(s3, 0.3e1) * s4 * t * t * pow(u, 0.5e1) + 0.82e2 * pow(s3, 0.3e1) * s4 * t * pow(u, 0.6e1) + 0.6e1 * pow(s3, 0.3e1) * s4 * pow(u, 0.7e1) + 0.21e2 * pow(s3, 0.3e1) * pow(t, 0.7e1) * u + 0.124e3 * pow(s3, 0.3e1) * pow(t, 0.6e1) * u * u + 0.299e3 * pow(s3, 0.3e1) * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.392e3 * pow(s3, 0.3e1) * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.299e3 * pow(s3, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.124e3 * pow(s3, 0.3e1) * t * t * pow(u, 0.6e1) + 0.21e2 * pow(s3, 0.3e1) * t * pow(u, 0.7e1) - 0.32e2 * s3 * s3 * pow(s4, 0.4e1) * pow(t, 0.3e1) * u * u - 0.32e2 * s3 * s3 * pow(s4, 0.4e1) * t * t * pow(u, 0.3e1) - 0.24e2 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.5e1) * u - 0.80e2 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.4e1) * u * u - 0.16e2 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.80e2 * s3 * s3 * pow(s4, 0.3e1) * t * t * pow(u, 0.4e1) - 0.24e2 * s3 * s3 * pow(s4, 0.3e1) * t * pow(u, 0.5e1) - 0.12e2 * s3 * s3 * s4 * s4 * pow(t, 0.6e1) * u + 0.28e2 * s3 * s3 * s4 * s4 * pow(t, 0.5e1) * u * u + 0.328e3 * s3 * s3 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.328e3 * s3 * s3 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.28e2 * s3 * s3 * s4 * s4 * t * t * pow(u, 0.5e1) - 0.12e2 * s3 * s3 * s4 * s4 * t * pow(u, 0.6e1) - 0.3e1 * s3 * s3 * s4 * pow(t, 0.8e1) - 0.24e2 * s3 * s3 * s4 * pow(t, 0.7e1) * u - 0.76e2 * s3 * s3 * s4 * pow(t, 0.6e1) * u * u - 0.308e3 * s3 * s3 * s4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.538e3 * s3 * s3 * s4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.308e3 * s3 * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.76e2 * s3 * s3 * s4 * t * t * pow(u, 0.6e1) - 0.24e2 * s3 * s3 * s4 * t * pow(u, 0.7e1) - 0.3e1 * s3 * s3 * s4 * pow(u, 0.8e1) - 0.12e2 * s3 * s3 * pow(t, 0.8e1) * u - 0.86e2 * s3 * s3 * pow(t, 0.7e1) * u * u - 0.254e3 * s3 * s3 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.416e3 * s3 * s3 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.416e3 * s3 * s3 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.254e3 * s3 * s3 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.86e2 * s3 * s3 * t * t * pow(u, 0.7e1) - 0.12e2 * s3 * s3 * t * pow(u, 0.8e1) + 0.16e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.5e1) * u * u + 0.40e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.40e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.16e2 * s3 * pow(s4, 0.3e1) * t * t * pow(u, 0.5e1) + 0.3e1 * s3 * s4 * s4 * pow(t, 0.7e1) * u + 0.20e2 * s3 * s4 * s4 * pow(t, 0.6e1) * u * u - 0.15e2 * s3 * s4 * s4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.128e3 * s3 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.15e2 * s3 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.20e2 * s3 * s4 * s4 * t * t * pow(u, 0.6e1) + 0.3e1 * s3 * s4 * s4 * t * pow(u, 0.7e1) - 0.8e1 * s3 * s4 * pow(t, 0.7e1) * u * u - 0.28e2 * s3 * s4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.28e2 * s3 * s4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.28e2 * s3 * s4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.28e2 * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.8e1 * s3 * s4 * t * t * pow(u, 0.7e1) + 0.3e1 * s3 * pow(t, 0.9e1) * u + 0.26e2 * s3 * pow(t, 0.8e1) * u * u + 0.96e2 * s3 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.194e3 * s3 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.242e3 * s3 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.194e3 * s3 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.96e2 * s3 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.26e2 * s3 * t * t * pow(u, 0.8e1) + 0.3e1 * s3 * t * pow(u, 0.9e1) - 0.2e1 * s4 * s4 * pow(t, 0.7e1) * u * u - 0.14e2 * s4 * s4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.8e1 * s4 * s4 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.8e1 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.14e2 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.2e1 * s4 * s4 * t * t * pow(u, 0.7e1) + s4 * pow(t, 0.8e1) * u * u + 0.14e2 * s4 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.27e2 * s4 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.28e2 * s4 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.27e2 * s4 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.14e2 * s4 * pow(t, 0.3e1) * pow(u, 0.7e1) + s4 * t * t * pow(u, 0.8e1) - 0.2e1 * pow(t, 0.9e1) * u * u - 0.12e2 * pow(t, 0.8e1) * pow(u, 0.3e1) - 0.32e2 * pow(t, 0.7e1) * pow(u, 0.4e1) - 0.50e2 * pow(t, 0.6e1) * pow(u, 0.5e1) - 0.50e2 * pow(t, 0.5e1) * pow(u, 0.6e1) - 0.32e2 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.12e2 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.2e1 * t * t * pow(u, 0.9e1)) * pow(-u + s3, -0.2e1) * pow(s3 - t, -0.2e1) * pow(u, -0.2e1) * pow(0.4e1 * s3 * s4 - t * t - 0.2e1 * t * u - u * u, -0.2e1) * pow(t, -0.2e1) * log( zp) + 0.2e1 * s3 * (0.96e2 * pow(s3, 0.7e1) * s4 * s4 * t * u - 0.48e2 * pow(s3, 0.6e1) * pow(s4, 0.3e1) * t * t + 0.192e3 * pow(s3, 0.6e1) * pow(s4, 0.3e1) * t * u - 0.48e2 * pow(s3, 0.6e1) * pow(s4, 0.3e1) * u * u - 0.312e3 * pow(s3, 0.6e1) * s4 * s4 * t * t * u - 0.312e3 * pow(s3, 0.6e1) * s4 * s4 * t * u * u - 0.36e2 * pow(s3, 0.6e1) * s4 * pow(t, 0.3e1) * u - 0.104e3 * pow(s3, 0.6e1) * s4 * t * t * u * u - 0.36e2 * pow(s3, 0.6e1) * s4 * t * pow(u, 0.3e1) + 0.96e2 * pow(s3, 0.5e1) * pow(s4, 0.4e1) * t * u + 0.96e2 * pow(s3, 0.5e1) * pow(s4, 0.3e1) * pow(t, 0.3e1) - 0.360e3 * pow(s3, 0.5e1) * pow(s4, 0.3e1) * t * t * u - 0.360e3 * pow(s3, 0.5e1) * pow(s4, 0.3e1) * t * u * u + 0.96e2 * pow(s3, 0.5e1) * pow(s4, 0.3e1) * pow(u, 0.3e1) + 0.24e2 * pow(s3, 0.5e1) * s4 * s4 * pow(t, 0.4e1) + 0.364e3 * pow(s3, 0.5e1) * s4 * s4 * pow(t, 0.3e1) * u + 0.648e3 * pow(s3, 0.5e1) * s4 * s4 * t * t * u * u + 0.364e3 * pow(s3, 0.5e1) * s4 * s4 * t * pow(u, 0.3e1) + 0.24e2 * pow(s3, 0.5e1) * s4 * s4 * pow(u, 0.4e1) + 0.108e3 * pow(s3, 0.5e1) * s4 * pow(t, 0.4e1) * u + 0.460e3 * pow(s3, 0.5e1) * s4 * pow(t, 0.3e1) * u * u + 0.460e3 * pow(s3, 0.5e1) * s4 * t * t * pow(u, 0.3e1) + 0.108e3 * pow(s3, 0.5e1) * s4 * t * pow(u, 0.4e1) + 0.6e1 * pow(s3, 0.5e1) * pow(t, 0.5e1) * u + 0.20e2 * pow(s3, 0.5e1) * pow(t, 0.4e1) * u * u + 0.28e2 * pow(s3, 0.5e1) * pow(t, 0.3e1) * pow(u, 0.3e1) + 0.20e2 * pow(s3, 0.5e1) * t * t * pow(u, 0.4e1) + 0.6e1 * pow(s3, 0.5e1) * t * pow(u, 0.5e1) - 0.128e3 * pow(s3, 0.4e1) * pow(s4, 0.4e1) * t * t * u - 0.128e3 * pow(s3, 0.4e1) * pow(s4, 0.4e1) * t * u * u - 0.48e2 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * pow(t, 0.4e1) + 0.128e3 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * pow(t, 0.3e1) * u + 0.608e3 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * t * t * u * u + 0.128e3 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * t * pow(u, 0.3e1) - 0.48e2 * pow(s3, 0.4e1) * pow(s4, 0.3e1) * pow(u, 0.4e1) - 0.48e2 * pow(s3, 0.4e1) * s4 * s4 * pow(t, 0.5e1) - 0.196e3 * pow(s3, 0.4e1) * s4 * s4 * pow(t, 0.4e1) * u - 0.276e3 * pow(s3, 0.4e1) * s4 * s4 * pow(t, 0.3e1) * u * u - 0.276e3 * pow(s3, 0.4e1) * s4 * s4 * t * t * pow(u, 0.3e1) - 0.196e3 * pow(s3, 0.4e1) * s4 * s4 * t * pow(u, 0.4e1) - 0.48e2 * pow(s3, 0.4e1) * s4 * s4 * pow(u, 0.5e1) - 0.3e1 * pow(s3, 0.4e1) * s4 * pow(t, 0.6e1) - 0.130e3 * pow(s3, 0.4e1) * s4 * pow(t, 0.5e1) * u - 0.681e3 * pow(s3, 0.4e1) * s4 * pow(t, 0.4e1) * u * u - 0.1172e4 * pow(s3, 0.4e1) * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.681e3 * pow(s3, 0.4e1) * s4 * t * t * pow(u, 0.4e1) - 0.130e3 * pow(s3, 0.4e1) * s4 * t * pow(u, 0.5e1) - 0.3e1 * pow(s3, 0.4e1) * s4 * pow(u, 0.6e1) - 0.18e2 * pow(s3, 0.4e1) * pow(t, 0.6e1) * u - 0.82e2 * pow(s3, 0.4e1) * pow(t, 0.5e1) * u * u - 0.156e3 * pow(s3, 0.4e1) * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.156e3 * pow(s3, 0.4e1) * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.82e2 * pow(s3, 0.4e1) * t * t * pow(u, 0.5e1) - 0.18e2 * pow(s3, 0.4e1) * t * pow(u, 0.6e1) + 0.48e2 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * pow(t, 0.3e1) * u + 0.128e3 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * t * t * u * u + 0.48e2 * pow(s3, 0.3e1) * pow(s4, 0.4e1) * t * pow(u, 0.3e1) + 0.56e2 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * pow(t, 0.4e1) * u - 0.168e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * pow(t, 0.3e1) * u * u - 0.168e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * t * pow(u, 0.3e1) + 0.56e2 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * pow(u, 0.4e1) + 0.24e2 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.6e1) + 0.58e2 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.5e1) * u - 0.88e2 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.4e1) * u * u - 0.372e3 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.88e2 * pow(s3, 0.3e1) * s4 * s4 * t * t * pow(u, 0.4e1) + 0.58e2 * pow(s3, 0.3e1) * s4 * s4 * t * pow(u, 0.5e1) + 0.24e2 * pow(s3, 0.3e1) * s4 * s4 * pow(u, 0.6e1) + 0.6e1 * pow(s3, 0.3e1) * s4 * pow(t, 0.7e1) + 0.82e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.6e1) * u + 0.406e3 * pow(s3, 0.3e1) * s4 * pow(t, 0.5e1) * u * u + 0.1058e4 * pow(s3, 0.3e1) * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.1058e4 * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.406e3 * pow(s3, 0.3e1) * s4 * t * t * pow(u, 0.5e1) + 0.82e2 * pow(s3, 0.3e1) * s4 * t * pow(u, 0.6e1) + 0.6e1 * pow(s3, 0.3e1) * s4 * pow(u, 0.7e1) + 0.21e2 * pow(s3, 0.3e1) * pow(t, 0.7e1) * u + 0.124e3 * pow(s3, 0.3e1) * pow(t, 0.6e1) * u * u + 0.299e3 * pow(s3, 0.3e1) * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.392e3 * pow(s3, 0.3e1) * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.299e3 * pow(s3, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.124e3 * pow(s3, 0.3e1) * t * t * pow(u, 0.6e1) + 0.21e2 * pow(s3, 0.3e1) * t * pow(u, 0.7e1) - 0.32e2 * s3 * s3 * pow(s4, 0.4e1) * pow(t, 0.3e1) * u * u - 0.32e2 * s3 * s3 * pow(s4, 0.4e1) * t * t * pow(u, 0.3e1) - 0.24e2 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.5e1) * u - 0.80e2 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.4e1) * u * u - 0.16e2 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.80e2 * s3 * s3 * pow(s4, 0.3e1) * t * t * pow(u, 0.4e1) - 0.24e2 * s3 * s3 * pow(s4, 0.3e1) * t * pow(u, 0.5e1) - 0.12e2 * s3 * s3 * s4 * s4 * pow(t, 0.6e1) * u + 0.28e2 * s3 * s3 * s4 * s4 * pow(t, 0.5e1) * u * u + 0.328e3 * s3 * s3 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.328e3 * s3 * s3 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.28e2 * s3 * s3 * s4 * s4 * t * t * pow(u, 0.5e1) - 0.12e2 * s3 * s3 * s4 * s4 * t * pow(u, 0.6e1) - 0.3e1 * s3 * s3 * s4 * pow(t, 0.8e1) - 0.24e2 * s3 * s3 * s4 * pow(t, 0.7e1) * u - 0.76e2 * s3 * s3 * s4 * pow(t, 0.6e1) * u * u - 0.308e3 * s3 * s3 * s4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.538e3 * s3 * s3 * s4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.308e3 * s3 * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.5e1) - 0.76e2 * s3 * s3 * s4 * t * t * pow(u, 0.6e1) - 0.24e2 * s3 * s3 * s4 * t * pow(u, 0.7e1) - 0.3e1 * s3 * s3 * s4 * pow(u, 0.8e1) - 0.12e2 * s3 * s3 * pow(t, 0.8e1) * u - 0.86e2 * s3 * s3 * pow(t, 0.7e1) * u * u - 0.254e3 * s3 * s3 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.416e3 * s3 * s3 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.416e3 * s3 * s3 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.254e3 * s3 * s3 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.86e2 * s3 * s3 * t * t * pow(u, 0.7e1) - 0.12e2 * s3 * s3 * t * pow(u, 0.8e1) + 0.16e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.5e1) * u * u + 0.40e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.40e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.16e2 * s3 * pow(s4, 0.3e1) * t * t * pow(u, 0.5e1) + 0.3e1 * s3 * s4 * s4 * pow(t, 0.7e1) * u + 0.20e2 * s3 * s4 * s4 * pow(t, 0.6e1) * u * u - 0.15e2 * s3 * s4 * s4 * pow(t, 0.5e1) * pow(u, 0.3e1) - 0.128e3 * s3 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.4e1) - 0.15e2 * s3 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.20e2 * s3 * s4 * s4 * t * t * pow(u, 0.6e1) + 0.3e1 * s3 * s4 * s4 * t * pow(u, 0.7e1) - 0.8e1 * s3 * s4 * pow(t, 0.7e1) * u * u - 0.28e2 * s3 * s4 * pow(t, 0.6e1) * pow(u, 0.3e1) + 0.28e2 * s3 * s4 * pow(t, 0.5e1) * pow(u, 0.4e1) + 0.28e2 * s3 * s4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.28e2 * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.8e1 * s3 * s4 * t * t * pow(u, 0.7e1) + 0.3e1 * s3 * pow(t, 0.9e1) * u + 0.26e2 * s3 * pow(t, 0.8e1) * u * u + 0.96e2 * s3 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.194e3 * s3 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.242e3 * s3 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.194e3 * s3 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.96e2 * s3 * pow(t, 0.3e1) * pow(u, 0.7e1) + 0.26e2 * s3 * t * t * pow(u, 0.8e1) + 0.3e1 * s3 * t * pow(u, 0.9e1) - 0.2e1 * s4 * s4 * pow(t, 0.7e1) * u * u - 0.14e2 * s4 * s4 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.8e1 * s4 * s4 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.8e1 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.14e2 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.2e1 * s4 * s4 * t * t * pow(u, 0.7e1) + s4 * pow(t, 0.8e1) * u * u + 0.14e2 * s4 * pow(t, 0.7e1) * pow(u, 0.3e1) + 0.27e2 * s4 * pow(t, 0.6e1) * pow(u, 0.4e1) + 0.28e2 * s4 * pow(t, 0.5e1) * pow(u, 0.5e1) + 0.27e2 * s4 * pow(t, 0.4e1) * pow(u, 0.6e1) + 0.14e2 * s4 * pow(t, 0.3e1) * pow(u, 0.7e1) + s4 * t * t * pow(u, 0.8e1) - 0.2e1 * pow(t, 0.9e1) * u * u - 0.12e2 * pow(t, 0.8e1) * pow(u, 0.3e1) - 0.32e2 * pow(t, 0.7e1) * pow(u, 0.4e1) - 0.50e2 * pow(t, 0.6e1) * pow(u, 0.5e1) - 0.50e2 * pow(t, 0.5e1) * pow(u, 0.6e1) - 0.32e2 * pow(t, 0.4e1) * pow(u, 0.7e1) - 0.12e2 * pow(t, 0.3e1) * pow(u, 0.8e1) - 0.2e1 * t * t * pow(u, 0.9e1)) * pow(-u + s3, -0.2e1) * pow(s3 - t, -0.2e1) * pow(u, -0.2e1) * pow(0.4e1 * s3 * s4 - t * t - 0.2e1 * t * u - u * u, -0.2e1) * pow(t, -0.2e1) * log( z) - 0.2e1 * (0.64e2 * s * pow(s3, 0.4e1) * s4 * s4 * t * u *  z - 0.64e2 * s * pow(s3, 0.4e1) * s4 * s4 * t * u *  zp - 0.32e2 * s * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * t *  z + 0.32e2 * s * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * t *  zp + 0.128e3 * s * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * u *  z - 0.128e3 * s * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * u *  zp - 0.32e2 * s * pow(s3, 0.3e1) * pow(s4, 0.3e1) * u * u *  z + 0.32e2 * s * pow(s3, 0.3e1) * pow(s4, 0.3e1) * u * u *  zp - 0.96e2 * s * pow(s3, 0.3e1) * s4 * s4 * t * t * u *  z + 0.96e2 * s * pow(s3, 0.3e1) * s4 * s4 * t * t * u *  zp - 0.96e2 * s * pow(s3, 0.3e1) * s4 * s4 * t * u * u *  z + 0.96e2 * s * pow(s3, 0.3e1) * s4 * s4 * t * u * u *  zp - 0.32e2 * s * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) * u *  z + 0.32e2 * s * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) * u *  zp - 0.64e2 * s * pow(s3, 0.3e1) * s4 * t * t * u * u *  z + 0.64e2 * s * pow(s3, 0.3e1) * s4 * t * t * u * u *  zp - 0.32e2 * s * pow(s3, 0.3e1) * s4 * t * pow(u, 0.3e1) *  z + 0.32e2 * s * pow(s3, 0.3e1) * s4 * t * pow(u, 0.3e1) *  zp + 0.64e2 * s * s3 * s3 * pow(s4, 0.4e1) * t * u *  z - 0.64e2 * s * s3 * s3 * pow(s4, 0.4e1) * t * u *  zp - 0.96e2 * s * s3 * s3 * pow(s4, 0.3e1) * t * t * u *  z + 0.96e2 * s * s3 * s3 * pow(s4, 0.3e1) * t * t * u *  zp - 0.96e2 * s * s3 * s3 * pow(s4, 0.3e1) * t * u * u *  z + 0.96e2 * s * s3 * s3 * pow(s4, 0.3e1) * t * u * u *  zp + 0.16e2 * s * s3 * s3 * s4 * s4 * pow(t, 0.4e1) *  z - 0.16e2 * s * s3 * s3 * s4 * s4 * pow(t, 0.4e1) *  zp + 0.16e2 * s * s3 * s3 * s4 * s4 * pow(t, 0.3e1) * u *  z - 0.16e2 * s * s3 * s3 * s4 * s4 * pow(t, 0.3e1) * u *  zp - 0.32e2 * s * s3 * s3 * s4 * s4 * t * t * u * u *  z + 0.32e2 * s * s3 * s3 * s4 * s4 * t * t * u * u *  zp + 0.16e2 * s * s3 * s3 * s4 * s4 * t * pow(u, 0.3e1) *  z - 0.16e2 * s * s3 * s3 * s4 * s4 * t * pow(u, 0.3e1) *  zp + 0.16e2 * s * s3 * s3 * s4 * s4 * pow(u, 0.4e1) *  z - 0.16e2 * s * s3 * s3 * s4 * s4 * pow(u, 0.4e1) *  zp + 0.48e2 * s * s3 * s3 * s4 * pow(t, 0.4e1) * u *  z - 0.48e2 * s * s3 * s3 * s4 * pow(t, 0.4e1) * u *  zp + 0.144e3 * s * s3 * s3 * s4 * pow(t, 0.3e1) * u * u *  z - 0.144e3 * s * s3 * s3 * s4 * pow(t, 0.3e1) * u * u *  zp + 0.144e3 * s * s3 * s3 * s4 * t * t * pow(u, 0.3e1) *  z - 0.144e3 * s * s3 * s3 * s4 * t * t * pow(u, 0.3e1) *  zp + 0.48e2 * s * s3 * s3 * s4 * t * pow(u, 0.4e1) *  z - 0.48e2 * s * s3 * s3 * s4 * t * pow(u, 0.4e1) *  zp + 0.4e1 * s * s3 * s3 * pow(t, 0.5e1) * u *  z - 0.4e1 * s * s3 * s3 * pow(t, 0.5e1) * u *  zp + 0.16e2 * s * s3 * s3 * pow(t, 0.4e1) * u * u *  z - 0.16e2 * s * s3 * s3 * pow(t, 0.4e1) * u * u *  zp + 0.24e2 * s * s3 * s3 * pow(t, 0.3e1) * pow(u, 0.3e1) *  z - 0.24e2 * s * s3 * s3 * pow(t, 0.3e1) * pow(u, 0.3e1) *  zp + 0.16e2 * s * s3 * s3 * t * t * pow(u, 0.4e1) *  z - 0.16e2 * s * s3 * s3 * t * t * pow(u, 0.4e1) *  zp + 0.4e1 * s * s3 * s3 * t * pow(u, 0.5e1) *  z - 0.4e1 * s * s3 * s3 * t * pow(u, 0.5e1) *  zp - 0.32e2 * s * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * u *  z + 0.32e2 * s * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * u *  zp - 0.64e2 * s * s3 * pow(s4, 0.3e1) * t * t * u * u *  z + 0.64e2 * s * s3 * pow(s4, 0.3e1) * t * t * u * u *  zp - 0.32e2 * s * s3 * pow(s4, 0.3e1) * t * pow(u, 0.3e1) *  z + 0.32e2 * s * s3 * pow(s4, 0.3e1) * t * pow(u, 0.3e1) *  zp + 0.48e2 * s * s3 * s4 * s4 * pow(t, 0.4e1) * u *  z - 0.48e2 * s * s3 * s4 * s4 * pow(t, 0.4e1) * u *  zp + 0.144e3 * s * s3 * s4 * s4 * pow(t, 0.3e1) * u * u *  z - 0.144e3 * s * s3 * s4 * s4 * pow(t, 0.3e1) * u * u *  zp + 0.144e3 * s * s3 * s4 * s4 * t * t * pow(u, 0.3e1) *  z - 0.144e3 * s * s3 * s4 * s4 * t * t * pow(u, 0.3e1) *  zp + 0.48e2 * s * s3 * s4 * s4 * t * pow(u, 0.4e1) *  z - 0.48e2 * s * s3 * s4 * s4 * t * pow(u, 0.4e1) *  zp - 0.2e1 * s * s3 * s4 * pow(t, 0.6e1) *  z + 0.2e1 * s * s3 * s4 * pow(t, 0.6e1) *  zp - 0.24e2 * s * s3 * s4 * pow(t, 0.5e1) * u *  z + 0.24e2 * s * s3 * s4 * pow(t, 0.5e1) * u *  zp - 0.62e2 * s * s3 * s4 * pow(t, 0.4e1) * u * u *  z + 0.62e2 * s * s3 * s4 * pow(t, 0.4e1) * u * u *  zp - 0.80e2 * s * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) *  z + 0.80e2 * s * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) *  zp - 0.62e2 * s * s3 * s4 * t * t * pow(u, 0.4e1) *  z + 0.62e2 * s * s3 * s4 * t * t * pow(u, 0.4e1) *  zp - 0.24e2 * s * s3 * s4 * t * pow(u, 0.5e1) *  z + 0.24e2 * s * s3 * s4 * t * pow(u, 0.5e1) *  zp - 0.2e1 * s * s3 * s4 * pow(u, 0.6e1) *  z + 0.2e1 * s * s3 * s4 * pow(u, 0.6e1) *  zp - 0.6e1 * s * s3 * pow(t, 0.6e1) * u *  z + 0.6e1 * s * s3 * pow(t, 0.6e1) * u *  zp - 0.30e2 * s * s3 * pow(t, 0.5e1) * u * u *  z + 0.30e2 * s * s3 * pow(t, 0.5e1) * u * u *  zp - 0.60e2 * s * s3 * pow(t, 0.4e1) * pow(u, 0.3e1) *  z + 0.60e2 * s * s3 * pow(t, 0.4e1) * pow(u, 0.3e1) *  zp - 0.60e2 * s * s3 * pow(t, 0.3e1) * pow(u, 0.4e1) *  z + 0.60e2 * s * s3 * pow(t, 0.3e1) * pow(u, 0.4e1) *  zp - 0.30e2 * s * s3 * t * t * pow(u, 0.5e1) *  z + 0.30e2 * s * s3 * t * t * pow(u, 0.5e1) *  zp - 0.6e1 * s * s3 * t * pow(u, 0.6e1) *  z + 0.6e1 * s * s3 * t * pow(u, 0.6e1) *  zp + 0.4e1 * s * s4 * s4 * pow(t, 0.5e1) * u *  z - 0.4e1 * s * s4 * s4 * pow(t, 0.5e1) * u *  zp + 0.16e2 * s * s4 * s4 * pow(t, 0.4e1) * u * u *  z - 0.16e2 * s * s4 * s4 * pow(t, 0.4e1) * u * u *  zp + 0.24e2 * s * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) *  z - 0.24e2 * s * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) *  zp + 0.16e2 * s * s4 * s4 * t * t * pow(u, 0.4e1) *  z - 0.16e2 * s * s4 * s4 * t * t * pow(u, 0.4e1) *  zp + 0.4e1 * s * s4 * s4 * t * pow(u, 0.5e1) *  z - 0.4e1 * s * s4 * s4 * t * pow(u, 0.5e1) *  zp - 0.6e1 * s * s4 * pow(t, 0.6e1) * u *  z + 0.6e1 * s * s4 * pow(t, 0.6e1) * u *  zp - 0.30e2 * s * s4 * pow(t, 0.5e1) * u * u *  z + 0.30e2 * s * s4 * pow(t, 0.5e1) * u * u *  zp - 0.60e2 * s * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) *  z + 0.60e2 * s * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) *  zp - 0.60e2 * s * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) *  z + 0.60e2 * s * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) *  zp - 0.30e2 * s * s4 * t * t * pow(u, 0.5e1) *  z + 0.30e2 * s * s4 * t * t * pow(u, 0.5e1) *  zp - 0.6e1 * s * s4 * t * pow(u, 0.6e1) *  z + 0.6e1 * s * s4 * t * pow(u, 0.6e1) *  zp + 0.3e1 * s * pow(t, 0.7e1) * u *  z - 0.3e1 * s * pow(t, 0.7e1) * u *  zp + 0.16e2 * s * pow(t, 0.6e1) * u * u *  z - 0.16e2 * s * pow(t, 0.6e1) * u * u *  zp + 0.37e2 * s * pow(t, 0.5e1) * pow(u, 0.3e1) *  z - 0.37e2 * s * pow(t, 0.5e1) * pow(u, 0.3e1) *  zp + 0.48e2 * s * pow(t, 0.4e1) * pow(u, 0.4e1) *  z - 0.48e2 * s * pow(t, 0.4e1) * pow(u, 0.4e1) *  zp + 0.37e2 * s * pow(t, 0.3e1) * pow(u, 0.5e1) *  z - 0.37e2 * s * pow(t, 0.3e1) * pow(u, 0.5e1) *  zp + 0.16e2 * s * t * t * pow(u, 0.6e1) *  z - 0.16e2 * s * t * t * pow(u, 0.6e1) *  zp + 0.3e1 * s * t * pow(u, 0.7e1) *  z - 0.3e1 * s * t * pow(u, 0.7e1) *  zp - 0.72e2 * pow(s3, 0.4e1) * s4 * s4 * t * t * u - 0.72e2 * pow(s3, 0.4e1) * s4 * s4 * t * u * u - 0.112e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * t * u - 0.112e3 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t * u * u + 0.128e3 * pow(s3, 0.3e1) * s4 * s4 * pow(t, 0.3e1) * u + 0.192e3 * pow(s3, 0.3e1) * s4 * s4 * t * t * u * u + 0.128e3 * pow(s3, 0.3e1) * s4 * s4 * t * pow(u, 0.3e1) + 0.28e2 * pow(s3, 0.3e1) * s4 * pow(t, 0.4e1) * u + 0.108e3 * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) * u * u + 0.108e3 * pow(s3, 0.3e1) * s4 * t * t * pow(u, 0.3e1) + 0.28e2 * pow(s3, 0.3e1) * s4 * t * pow(u, 0.4e1) - 0.72e2 * s3 * s3 * pow(s4, 0.4e1) * t * t * u - 0.72e2 * s3 * s3 * pow(s4, 0.4e1) * t * u * u + 0.128e3 * s3 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * u + 0.192e3 * s3 * s3 * pow(s4, 0.3e1) * t * t * u * u + 0.128e3 * s3 * s3 * pow(s4, 0.3e1) * t * pow(u, 0.3e1) - 0.32e2 * s3 * s3 * s4 * s4 * pow(t, 0.4e1) * u + 0.48e2 * s3 * s3 * s4 * s4 * pow(t, 0.3e1) * u * u + 0.48e2 * s3 * s3 * s4 * s4 * t * t * pow(u, 0.3e1) - 0.32e2 * s3 * s3 * s4 * s4 * t * pow(u, 0.4e1) - 0.44e2 * s3 * s3 * s4 * pow(t, 0.5e1) * u - 0.208e3 * s3 * s3 * s4 * pow(t, 0.4e1) * u * u - 0.328e3 * s3 * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.208e3 * s3 * s3 * s4 * t * t * pow(u, 0.4e1) - 0.44e2 * s3 * s3 * s4 * t * pow(u, 0.5e1) - 0.4e1 * s3 * s3 * pow(t, 0.6e1) * u - 0.20e2 * s3 * s3 * pow(t, 0.5e1) * u * u - 0.40e2 * s3 * s3 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.40e2 * s3 * s3 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.20e2 * s3 * s3 * t * t * pow(u, 0.5e1) - 0.4e1 * s3 * s3 * t * pow(u, 0.6e1) + 0.28e2 * s3 * pow(s4, 0.3e1) * pow(t, 0.4e1) * u + 0.108e3 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) * u * u + 0.108e3 * s3 * pow(s4, 0.3e1) * t * t * pow(u, 0.3e1) + 0.28e2 * s3 * pow(s4, 0.3e1) * t * pow(u, 0.4e1) - 0.44e2 * s3 * s4 * s4 * pow(t, 0.5e1) * u - 0.208e3 * s3 * s4 * s4 * pow(t, 0.4e1) * u * u - 0.328e3 * s3 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.3e1) - 0.208e3 * s3 * s4 * s4 * t * t * pow(u, 0.4e1) - 0.44e2 * s3 * s4 * s4 * t * pow(u, 0.5e1) + 0.18e2 * s3 * s4 * pow(t, 0.6e1) * u + 0.82e2 * s3 * s4 * pow(t, 0.5e1) * u * u + 0.156e3 * s3 * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.156e3 * s3 * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.82e2 * s3 * s4 * t * t * pow(u, 0.5e1) + 0.18e2 * s3 * s4 * t * pow(u, 0.6e1) + 0.6e1 * s3 * pow(t, 0.7e1) * u + 0.36e2 * s3 * pow(t, 0.6e1) * u * u + 0.90e2 * s3 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.120e3 * s3 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.90e2 * s3 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.36e2 * s3 * t * t * pow(u, 0.6e1) + 0.6e1 * s3 * t * pow(u, 0.7e1) - 0.4e1 * s4 * s4 * pow(t, 0.6e1) * u - 0.20e2 * s4 * s4 * pow(t, 0.5e1) * u * u - 0.40e2 * s4 * s4 * pow(t, 0.4e1) * pow(u, 0.3e1) - 0.40e2 * s4 * s4 * pow(t, 0.3e1) * pow(u, 0.4e1) - 0.20e2 * s4 * s4 * t * t * pow(u, 0.5e1) - 0.4e1 * s4 * s4 * t * pow(u, 0.6e1) + 0.6e1 * s4 * pow(t, 0.7e1) * u + 0.36e2 * s4 * pow(t, 0.6e1) * u * u + 0.90e2 * s4 * pow(t, 0.5e1) * pow(u, 0.3e1) + 0.120e3 * s4 * pow(t, 0.4e1) * pow(u, 0.4e1) + 0.90e2 * s4 * pow(t, 0.3e1) * pow(u, 0.5e1) + 0.36e2 * s4 * t * t * pow(u, 0.6e1) + 0.6e1 * s4 * t * pow(u, 0.7e1) - 0.3e1 * pow(t, 0.8e1) * u - 0.19e2 * pow(t, 0.7e1) * u * u - 0.53e2 * pow(t, 0.6e1) * pow(u, 0.3e1) - 0.85e2 * pow(t, 0.5e1) * pow(u, 0.4e1) - 0.85e2 * pow(t, 0.4e1) * pow(u, 0.5e1) - 0.53e2 * pow(t, 0.3e1) * pow(u, 0.6e1) - 0.19e2 * t * t * pow(u, 0.7e1) - 0.3e1 * t * pow(u, 0.8e1)) * pow(u, -0.2e1) * pow(t, -0.2e1) * pow(0.4e1 * s3 * s4 - t * t - 0.2e1 * t * u - u * u, -0.2e1) / s /  (z - zp) * log( z) * log( (1 - zp)) - 0.2e1 * (0.16e2 * s * pow(s3, 0.3e1) * s4 * t * u *  z - 0.16e2 * s * pow(s3, 0.3e1) * s4 * t * u *  zp - 0.8e1 * s * s3 * s3 * s4 * s4 * t * t *  z + 0.8e1 * s * s3 * s3 * s4 * s4 * t * t *  zp + 0.32e2 * s * s3 * s3 * s4 * s4 * t * u *  z - 0.32e2 * s * s3 * s3 * s4 * s4 * t * u *  zp - 0.8e1 * s * s3 * s3 * s4 * s4 * u * u *  z + 0.8e1 * s * s3 * s3 * s4 * s4 * u * u *  zp - 0.24e2 * s * s3 * s3 * s4 * t * t * u *  z + 0.24e2 * s * s3 * s3 * s4 * t * t * u *  zp - 0.24e2 * s * s3 * s3 * s4 * t * u * u *  z + 0.24e2 * s * s3 * s3 * s4 * t * u * u *  zp - 0.4e1 * s * s3 * s3 * pow(t, 0.3e1) * u *  z + 0.4e1 * s * s3 * s3 * pow(t, 0.3e1) * u *  zp - 0.8e1 * s * s3 * s3 * t * t * u * u *  z + 0.8e1 * s * s3 * s3 * t * t * u * u *  zp - 0.4e1 * s * s3 * s3 * t * pow(u, 0.3e1) *  z + 0.4e1 * s * s3 * s3 * t * pow(u, 0.3e1) *  zp + 0.16e2 * s * s3 * pow(s4, 0.3e1) * t * u *  z - 0.16e2 * s * s3 * pow(s4, 0.3e1) * t * u *  zp - 0.24e2 * s * s3 * s4 * s4 * t * t * u *  z + 0.24e2 * s * s3 * s4 * s4 * t * t * u *  zp - 0.24e2 * s * s3 * s4 * s4 * t * u * u *  z + 0.24e2 * s * s3 * s4 * s4 * t * u * u *  zp + 0.2e1 * s * s3 * s4 * pow(t, 0.4e1) *  z - 0.2e1 * s * s3 * s4 * pow(t, 0.4e1) *  zp + 0.8e1 * s * s3 * s4 * pow(t, 0.3e1) * u *  z - 0.8e1 * s * s3 * s4 * pow(t, 0.3e1) * u *  zp + 0.4e1 * s * s3 * s4 * t * t * u * u *  z - 0.4e1 * s * s3 * s4 * t * t * u * u *  zp + 0.8e1 * s * s3 * s4 * t * pow(u, 0.3e1) *  z - 0.8e1 * s * s3 * s4 * t * pow(u, 0.3e1) *  zp + 0.2e1 * s * s3 * s4 * pow(u, 0.4e1) *  z - 0.2e1 * s * s3 * s4 * pow(u, 0.4e1) *  zp + 0.6e1 * s * s3 * pow(t, 0.4e1) * u *  z - 0.6e1 * s * s3 * pow(t, 0.4e1) * u *  zp + 0.18e2 * s * s3 * pow(t, 0.3e1) * u * u *  z - 0.18e2 * s * s3 * pow(t, 0.3e1) * u * u *  zp + 0.18e2 * s * s3 * t * t * pow(u, 0.3e1) *  z - 0.18e2 * s * s3 * t * t * pow(u, 0.3e1) *  zp + 0.6e1 * s * s3 * t * pow(u, 0.4e1) *  z - 0.6e1 * s * s3 * t * pow(u, 0.4e1) *  zp - 0.4e1 * s * s4 * s4 * pow(t, 0.3e1) * u *  z + 0.4e1 * s * s4 * s4 * pow(t, 0.3e1) * u *  zp - 0.8e1 * s * s4 * s4 * t * t * u * u *  z + 0.8e1 * s * s4 * s4 * t * t * u * u *  zp - 0.4e1 * s * s4 * s4 * t * pow(u, 0.3e1) *  z + 0.4e1 * s * s4 * s4 * t * pow(u, 0.3e1) *  zp + 0.6e1 * s * s4 * pow(t, 0.4e1) * u *  z - 0.6e1 * s * s4 * pow(t, 0.4e1) * u *  zp + 0.18e2 * s * s4 * pow(t, 0.3e1) * u * u *  z - 0.18e2 * s * s4 * pow(t, 0.3e1) * u * u *  zp + 0.18e2 * s * s4 * t * t * pow(u, 0.3e1) *  z - 0.18e2 * s * s4 * t * t * pow(u, 0.3e1) *  zp + 0.6e1 * s * s4 * t * pow(u, 0.4e1) *  z - 0.6e1 * s * s4 * t * pow(u, 0.4e1) *  zp - 0.3e1 * s * pow(t, 0.5e1) * u *  z + 0.3e1 * s * pow(t, 0.5e1) * u *  zp - 0.10e2 * s * pow(t, 0.4e1) * u * u *  z + 0.10e2 * s * pow(t, 0.4e1) * u * u *  zp - 0.14e2 * s * pow(t, 0.3e1) * pow(u, 0.3e1) *  z + 0.14e2 * s * pow(t, 0.3e1) * pow(u, 0.3e1) *  zp - 0.10e2 * s * t * t * pow(u, 0.4e1) *  z + 0.10e2 * s * t * t * pow(u, 0.4e1) *  zp - 0.3e1 * s * t * pow(u, 0.5e1) *  z + 0.3e1 * s * t * pow(u, 0.5e1) *  zp + 0.12e2 * pow(s3, 0.3e1) * s4 * t * t * u - 0.12e2 * pow(s3, 0.3e1) * s4 * t * u * u + 0.32e2 * s3 * s3 * s4 * s4 * t * t * u - 0.32e2 * s3 * s3 * s4 * s4 * t * u * u - 0.28e2 * s3 * s3 * s4 * pow(t, 0.3e1) * u + 0.28e2 * s3 * s3 * s4 * t * pow(u, 0.3e1) + 0.12e2 * s3 * pow(s4, 0.3e1) * t * t * u - 0.12e2 * s3 * pow(s4, 0.3e1) * t * u * u - 0.28e2 * s3 * s4 * s4 * pow(t, 0.3e1) * u + 0.28e2 * s3 * s4 * s4 * t * pow(u, 0.3e1) + 0.10e2 * s3 * s4 * pow(t, 0.4e1) * u + 0.10e2 * s3 * s4 * pow(t, 0.3e1) * u * u - 0.10e2 * s3 * s4 * t * t * pow(u, 0.3e1) - 0.10e2 * s3 * s4 * t * pow(u, 0.4e1) + 0.2e1 * s3 * pow(t, 0.5e1) * u + 0.4e1 * s3 * pow(t, 0.4e1) * u * u - 0.4e1 * s3 * t * t * pow(u, 0.4e1) - 0.2e1 * s3 * t * pow(u, 0.5e1) + 0.2e1 * s4 * pow(t, 0.5e1) * u + 0.4e1 * s4 * pow(t, 0.4e1) * u * u - 0.4e1 * s4 * t * t * pow(u, 0.4e1) - 0.2e1 * s4 * t * pow(u, 0.5e1) - pow(t, 0.6e1) * u - 0.3e1 * pow(t, 0.5e1) * u * u - 0.2e1 * pow(t, 0.4e1) * pow(u, 0.3e1) + 0.2e1 * pow(t, 0.3e1) * pow(u, 0.4e1) + 0.3e1 * t * t * pow(u, 0.5e1) + t * pow(u, 0.6e1)) /  (z - zp) / s * pow(t, -0.2e1) / (0.4e1 * s3 * s4 - t * t - 0.2e1 * t * u - u * u) * pow(u, -0.2e1) * log( z) * log( (1 - z)) - 0.2e1 * (0.3e1 * pow(s3, 0.4e1) * s4 * s4 * t - 0.2e1 * pow(s3, 0.4e1) * s4 * t * t + 0.6e1 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * t - 0.3e1 * pow(s3, 0.3e1) * pow(s4, 0.3e1) * u - 0.16e2 * pow(s3, 0.3e1) * s4 * s4 * t * t + 0.8e1 * pow(s3, 0.3e1) * s4 * pow(t, 0.3e1) + pow(s3, 0.3e1) * s4 * t * t * u + 0.3e1 * s3 * s3 * pow(s4, 0.4e1) * t - 0.16e2 * s3 * s3 * pow(s4, 0.3e1) * t * t + 0.22e2 * s3 * s3 * s4 * s4 * pow(t, 0.3e1) + 0.6e1 * s3 * s3 * s4 * s4 * t * t * u + 0.3e1 * s3 * s3 * s4 * s4 * t * u * u - 0.8e1 * s3 * s3 * s4 * pow(t, 0.4e1) + 0.2e1 * s3 * s3 * s4 * pow(t, 0.3e1) * u - 0.2e1 * s3 * s3 * s4 * t * t * u * u - 0.4e1 * s3 * s3 * pow(t, 0.4e1) * u - 0.2e1 * s3 * pow(s4, 0.4e1) * t * t + 0.8e1 * s3 * pow(s4, 0.3e1) * pow(t, 0.3e1) + s3 * pow(s4, 0.3e1) * t * t * u - 0.8e1 * s3 * s4 * s4 * pow(t, 0.4e1) + 0.2e1 * s3 * s4 * s4 * pow(t, 0.3e1) * u - 0.2e1 * s3 * s4 * s4 * t * t * u * u + 0.2e1 * s3 * s4 * pow(t, 0.5e1) - 0.11e2 * s3 * s4 * pow(t, 0.4e1) * u - 0.4e1 * s3 * s4 * pow(t, 0.3e1) * u * u + 0.6e1 * s3 * pow(t, 0.5e1) * u + 0.4e1 * s3 * pow(t, 0.4e1) * u * u - 0.4e1 * s4 * s4 * pow(t, 0.4e1) * u + 0.6e1 * s4 * pow(t, 0.5e1) * u + 0.4e1 * s4 * pow(t, 0.4e1) * u * u - 0.2e1 * pow(t, 0.6e1) * u - 0.3e1 * pow(t, 0.5e1) * u * u) * pow(t, -0.2e1) / u * pow(s3 - t, -0.2e1) * pow(-t + s4, -0.2e1) * log(-t) - 0.4e1 * (0.2e1 * s3 * s3 * t + 0.4e1 * s3 * s4 * t - 0.2e1 * s3 * s4 * u - 0.4e1 * s3 * t * t - 0.2e1 * s3 * t * u + 0.2e1 * s4 * s4 * t - 0.4e1 * s4 * t * t - 0.2e1 * s4 * t * u + 0.2e1 * pow(t, 0.3e1) + 0.2e1 * t * t * u + t * u * u) * pow(t, -0.2e1) / u * log(-s) * log(-t);
    
    return 8.0*2.0*real( cg2);//:8 is the color factor
}


void GstarGstarMeNLOkinematics::Evaluate(double* xx_vegas)
{
    kk_.generate_bjorken_xs(xx_vegas);
    const double lumi = LL(kk_.x1,kk_.x2);
    if (lumi!=0.0)
        {
        kk_.SetNLOKinematics(xx_vegas);
        double me_sq = eval_me(kk_);
        
        double collinear1 = kk_.z / kk_.lambda * PP(1.0/kk_.z) * Born(kk_);
        double collinear2 = kk_.z / (1.0-kk_.lambda) * PP(1.0/kk_.z) * Born(kk_);

        JF(lumi  *  me_sq / kk_.s12 , kk_);
        JF(lumi  * collinear1 / kk_.s12, kk_.single_collinear(1));
        JF(lumi  * collinear2 / kk_.s12, kk_.single_collinear(2));
        }
    else
        {
        event_box_->AddNewEvent(0.0);
        
        }
    
}


double GstarGstarMeNLOHard::eval_me(const KinematicVariables&)
{
    
    
    
    return 0.0;
}














