/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 7: bubble(-s12-s13-s14-s23-s24)

// Coefficient order epsilon^-1 of master 7
template<>
double qq2yyg6CF<7,-1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return -(pow(s13,-1)*pow(s14,-1)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s24,-1)*pow(s23+s24,-1)*((s13*s14+s23*s24+s14*s14-s23*s23+2*(s24*s24))*pow(s12,5)+s23*s24*(s23+s24)*pow(s13,4)+pow(s12,4)*(2*s14*(s13*s13)+(2*s23+s24)*(s14*s14)-2*s14*(s23*s23-s24*s24)+s13*(3*s23*s24+s14*(2*s23+s24)+4*(s14*s14)-s23*s23+4*(s24*s24))-2*(s23-2*s24)*((s23+s24)*(s23+s24))+2*pow(s14,3))-s23*pow(s14,3)*(s23*(3*s14-s24)*s24+s24*(s23*s23)+(2*s14-s24)*(s24*s24)+pow(s23,3))+pow(s13,3)*(s14*s23*((s23+2*s24)*(s23+2*s24))+(s23+s24)*pow(s24,3))-s14*(s13*s13)*(-(s14*(2*s23*(s24*s24)+pow(s23,3)))+s24*(s24*(s23*s23)+3*s23*(s24*s24)-pow(s23,3)+pow(s24,3)))+s12*s12*((s14*s24+3*s23*s24+3*(s23*s23))*pow(s13,3)+s14*(s14*s14*(-5*s23*s24+s23*s23-3*(s24*s24))-s23*(3*s23-s24)*((s23+s24)*(s23+s24))-s14*(s23+s24)*((2*s23+s24)*(2*s23+s24))+(s23-s24)*pow(s14,3))+s13*(s14*s14*(-7*s23*s24+5*(s23*s23)-8*(s24*s24))-2*s14*s23*((s23+s24)*(s23+s24))-(s23*s23-4*(s24*s24))*((s23+s24)*(s23+s24))+(2*s23-s24)*pow(s14,3))+s13*s13*((s23+s24)*(s14*s14)+4*s24*(s23*s23)+s14*(s23*s24+7*(s23*s23)-5*(s24*s24))+8*s23*(s24*s24)+pow(s23,3)+5*pow(s24,3)))+s12*(s23*(s23+s24)*pow(s13,4)+s13*s13*(s14*s14*(-4*s23*s24+s23*s23-s24*s24)-(s23-3*s24)*s24*((s23+s24)*(s23+s24))+s14*(5*s24*(s23*s23)-3*s23*(s24*s24)+4*pow(s23,3)-5*pow(s24,3)))+pow(s13,3)*(s14*s23*(2*s23+s24)+4*s24*(s23*s23)+4*s23*(s24*s24)+pow(s23,3)+pow(s24,3))-s14*s14*(2*s23*s24*(s14*s14)+s23*s23*(s24*s24)+5*s24*pow(s23,3)+3*pow(s23,4)+s14*(7*s24*(s23*s23)+4*s23*(s24*s24)+pow(s23,3)-pow(s24,3))-2*s23*pow(s24,3)-pow(s24,4))-s13*s14*(s24*(6*s23+s24)*(s14*s14)+4*(s23*s23)*(s24*s24)+5*s24*pow(s23,3)+2*pow(s23,4)+s14*(5*s24*(s23*s23)+9*s23*(s24*s24)-2*pow(s23,3)+4*pow(s24,3))-pow(s24,4)))-s13*(s14*s14)*(3*(2*s14-s24)*s24*(s23*s23)+3*s14*s23*(s24*s24)-s24*pow(s23,3)+pow(s23,4)+pow(s24,4))+pow(s12,3)*(-(s24*(3*s23+2*s24)*(s14*s14))+s13*s13*(2*s14*(s23+s24)+3*(s14*s14)+2*((s23+s24)*(s23+s24)))+s14*pow(s13,3)+3*s23*pow(s14,3)+pow(s14,4)+s14*(-4*s24*(s23*s23)+3*s23*(s24*s24)-5*pow(s23,3)+2*pow(s24,3))+s13*((5*s23+2*s24)*(s14*s14)+s24*(s23*s23)+s14*(2*(s23*s23)-s24*s24)+11*s23*(s24*s24)+3*pow(s14,3)-2*pow(s23,3)+8*pow(s24,3))-(s23-2*s24)*pow(s23+s24,3)))*pow(s12+s23+s24,-1));
}

// Coefficient order epsilon^0 of master 7
template<>
double qq2yyg6CF<7,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return pow(s13,-2)*pow(s14,-2)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-2)*pow(s24,-2)*pow(s23+s24,-1)*(s24*(s13*s13*(s23*s24*(s23+s24)+(3*s23+s24)*(s14*s14))+s23*(s14*s14)*(-(s23*s23)+s24*s24)+s13*s14*((3*s23+s24)*(s14*s14)+3*s23*(s23*s24-s23*s23+2*(s24*s24))))*pow(s12,6)+s14*s23*(s24*s24)*(4*s23*s24+3*(s23*s23)+s24*s24)*pow(s13,6)+s24*pow(s12,5)*(-3*s23*(s14+s23+s24)*(s14*s14)*(s23*s23-s24*s24)+3*(s23*s24*(s23+s24)+(3*s23+s24)*(s14*s14))*pow(s13,3)+s13*s14*(s14*s14*(11*s23*s24+10*(s23*s23)+3*(s24*s24))+s14*s23*(6*s23*s24-11*(s23*s23)+17*(s24*s24))-9*s23*(s23-2*s24)*((s23+s24)*(s23+s24))+3*(3*s23+s24)*pow(s14,3))+s13*s13*(s14*s14*(11*s23*s24+10*(s23*s23)+3*(s24*s24))+3*s14*s23*(5*s23*s24-2*(s23*s23)+7*(s24*s24))+3*s23*s24*((s23+s24)*(s23+s24))+6*(3*s23+s24)*pow(s14,3)))-s24*(s23+s24)*pow(s14,5)*pow(s23,5)+s13*s24*(s23*s23)*pow(s14,4)*(s14*s14*(-8*s23*s24+s23*s23-6*(s24*s24))+2*(s23*s23)*(s24*s24)-5*s24*pow(s23,3)-4*pow(s23,4)+7*s23*pow(s24,3)-s14*(10*s24*(s23*s23)+11*s23*(s24*s24)+pow(s23,3)+2*pow(s24,3))+4*pow(s24,4))+s24*pow(s13,5)*(s14*s23*s24*(2*s23+5*s24)*((s23+s24)*(s23+s24))+s23*(s23+s24)*pow(s24,4)+s14*s14*(14*(s23*s23)*(s24*s24)+10*s24*pow(s23,3)+3*pow(s23,4)+5*s23*pow(s24,3)+pow(s24,4)))+s14*s24*pow(s13,4)*(s14*s14*(11*(s23*s23)*(s24*s24)+6*s24*pow(s23,3)+9*pow(s23,4)+3*s23*pow(s24,3)+pow(s24,4))+2*s14*s23*(9*(s23*s23)*(s24*s24)+4*s24*pow(s23,3)+2*pow(s23,4)+9*s23*pow(s24,3)+2*pow(s24,4))+s23*s24*(7*(s23*s23)*(s24*s24)+s24*pow(s23,3)-pow(s23,4)+11*s23*pow(s24,3)+6*pow(s24,4)))-s23*(s14*s14)*pow(s13,3)*(s14*s14*(17*(s23*s23)*(s24*s24)-6*s24*pow(s23,3)+pow(s23,4)+7*s23*pow(s24,3)+pow(s24,4))+s14*s24*(6*s24*pow(s23,3)-3*pow(s23,4)-4*s23*pow(s24,3)+5*pow(s24,4))+s24*(7*(s24*s24)*pow(s23,3)+s24*pow(s23,4)-pow(s23,5)+12*(s23*s23)*pow(s24,3)+9*s23*pow(s24,4)+2*pow(s24,5)))-s23*(s13*s13)*pow(s14,3)*(s23*(s14*s14)*(-(s24*(s23*s23))+24*s23*(s24*s24)+pow(s23,3)+14*pow(s24,3))+2*s14*s24*(10*(s23*s23)*(s24*s24)+11*s24*pow(s23,3)+pow(s23,4)+2*s23*pow(s24,3)+2*pow(s24,4))+s24*(-6*(s24*s24)*pow(s23,3)+s24*pow(s23,4)+2*pow(s23,5)-6*(s23*s23)*pow(s24,3)+3*s23*pow(s24,4)+4*pow(s24,5)))+s12*(s14*s23*s24*(4*s23*s24+3*(s23*s23)+s24*s24)*pow(s13,6)-s24*(s14+s23+s24)*(2*s23*s24+3*(s23*s23)-s24*s24)*pow(s14,4)*pow(s23,3)+s24*(s23+s24)*pow(s13,5)*(s14*s14*(5*s23*s24+12*(s23*s23)+3*(s24*s24))+s14*s23*(20*s23*s24+5*(s23*s23)+8*(s24*s24))+3*s23*pow(s24,3))+s23*(s13*s13)*(s14*s14)*(pow(s14,3)*(2*s24*(s23*s23)-9*s23*(s24*s24)-2*pow(s23,3)+2*pow(s24,3))+2*s24*((s23+s24)*(s23+s24))*(-2*s24*(s23*s23)+4*s23*(s24*s24)-4*pow(s23,3)+5*pow(s24,3))+3*s14*s24*(4*(s23*s23)*(s24*s24)-4*s24*pow(s23,3)-2*pow(s23,4)+9*s23*pow(s24,3)+3*pow(s24,4))+s14*s14*(-26*(s23*s23)*(s24*s24)+17*s24*pow(s23,3)-2*pow(s23,4)-22*s23*pow(s24,3)+5*pow(s24,4)))+s13*s23*s24*pow(s14,3)*((-2*s23*s24+s23*s23+2*(s24*s24))*pow(s14,3)-3*((s23+s24)*(s23+s24))*(s24*(s23*s23)-2*s23*(s24*s24)+4*pow(s23,3)-2*pow(s24,3))+s14*s14*(-21*s24*(s23*s23)-9*s23*(s24*s24)+4*pow(s23,3)+10*pow(s24,3))+s14*(-8*(s23*s23)*(s24*s24)-30*s24*pow(s23,3)-15*pow(s23,4)+21*s23*pow(s24,3)+14*pow(s24,4)))+pow(s13,4)*(3*s23*((s23+s24)*(s23+s24))*pow(s24,4)+s24*(s14*s14)*(57*(s23*s23)*(s24*s24)+72*s24*pow(s23,3)+29*pow(s23,4)+11*s23*pow(s24,3)+3*pow(s24,4))+pow(s14,3)*(17*(s23*s23)*(s24*s24)+15*s24*pow(s23,3)-2*pow(s23,4)+11*s23*pow(s24,3)+6*pow(s24,4))+s14*s23*s24*(43*(s23*s23)*(s24*s24)+13*s24*pow(s23,3)+pow(s23,4)+58*s23*pow(s24,3)+27*pow(s24,4)))+s14*pow(s13,3)*(-(s23*s24*((s23+s24)*(s23+s24))*(2*s24*(s23*s23)-9*s23*(s24*s24)+pow(s23,3)-14*pow(s24,3)))+pow(s14,3)*(-3*(s23*s23)*(s24*s24)+7*s24*pow(s23,3)-4*pow(s23,4)+4*s23*pow(s24,3)+3*pow(s24,4))+s14*s23*s24*(46*(s23*s23)*(s24*s24)+23*s24*pow(s23,3)+7*pow(s23,4)+43*s23*pow(s24,3)+13*pow(s24,4))+s14*s14*(42*(s24*s24)*pow(s23,3)+37*s24*pow(s23,4)-2*pow(s23,5)+16*(s23*s23)*pow(s24,3)-2*s23*pow(s24,4)+3*pow(s24,5))))+pow(s12,4)*(-(s23*s24*(s23+s24)*(s14*s14)*(3*(s23-s24)*(s14*s14)+s14*(-2*s23*s24+9*(s23*s23)-6*(s24*s24))+3*(s23-s24)*((s23+s24)*(s23+s24))))+3*s24*(s23*s24*(s23+s24)+(3*s23+s24)*(s14*s14))*pow(s13,4)+pow(s13,3)*(3*s23*(s24*s24)*(5*s23*s24+2*(s23*s23)+3*(s24*s24))+s14*s23*s24*(28*s23*s24+3*(s23*s23)+25*(s24*s24))+9*s24*(3*s23+s24)*pow(s14,3)+s14*s14*(20*s24*(s23*s23)+27*s23*(s24*s24)-pow(s23,3)+9*pow(s24,3)))+s13*s14*s24*((21*s23*s24+23*(s23*s23)+6*(s24*s24))*pow(s14,3)+3*(3*s23+s24)*pow(s14,4)+s14*s14*(24*s24*(s23*s23)+29*s23*(s24*s24)+pow(s23,3)+3*pow(s24,3))+s14*s23*(-17*s24*(s23*s23)+53*s23*(s24*s24)-33*pow(s23,3)+37*pow(s24,3))-9*s23*(s23-2*s24)*pow(s23+s24,3))+s13*s13*(9*s24*(3*s23+s24)*pow(s14,4)+s24*(s14*s14)*(46*s24*(s23*s23)+45*s23*(s24*s24)+7*pow(s23,3)+3*pow(s24,3))+pow(s14,3)*(43*s24*(s23*s23)+48*s23*(s24*s24)-pow(s23,3)+15*pow(s24,3))+s14*s23*s24*(15*s24*(s23*s23)+87*s23*(s24*s24)-16*pow(s23,3)+56*pow(s24,3))+3*s23*(s24*s24)*pow(s23+s24,3)))+s12*s12*(-(s24*(s23+s24)*(s23*s23)*((3*s23-2*s24)*(s14*s14)+s14*(s23*s24+9*(s23*s23)-4*(s24*s24))+(3*s23-2*s24)*((s23+s24)*(s23+s24)))*pow(s14,3))+pow(s13,5)*(3*s14*s23*s24*(5*s23*s24+4*(s23*s23)+s24*s24)+3*s23*(s23+s24)*pow(s24,3)+s14*s14*(5*s23*(s24*s24)-pow(s23,3)+3*pow(s24,3)))+pow(s13,4)*(3*s23*(5*s23*s24+2*(s23*s23)+3*(s24*s24))*pow(s24,3)+pow(s14,3)*(3*s24*(s23*s23)+14*s23*(s24*s24)-3*pow(s23,3)+9*pow(s24,3))+s14*s23*s24*(50*s24*(s23*s23)+71*s23*(s24*s24)+12*pow(s23,3)+33*pow(s24,3))+s14*s14*(51*(s23*s23)*(s24*s24)+42*s24*pow(s23,3)-2*pow(s23,4)+16*s23*pow(s24,3)+9*pow(s24,4)))+s14*(s13*s13)*(pow(s14,4)*(9*s24*(s23*s23)+2*s23*(s24*s24)-pow(s23,3)+3*pow(s24,3))+pow(s14,3)*(15*(s23*s23)*(s24*s24)+38*s24*pow(s23,3)-4*pow(s23,4)+5*s23*pow(s24,3)+6*pow(s24,4))+s14*s23*s24*(50*(s23*s23)*(s24*s24)-38*s24*pow(s23,3)-29*pow(s23,4)+104*s23*pow(s24,3)+45*pow(s24,4))+s14*s14*(34*(s24*s24)*pow(s23,3)+20*s24*pow(s23,4)-pow(s23,5)+41*(s23*s23)*pow(s24,3)+25*s23*pow(s24,4)+3*pow(s24,5))-s23*s24*(-(s23*s24)+4*(s23*s23)-14*(s24*s24))*pow(s23+s24,3))+s13*s23*s24*(s14*s14)*((s23*s24+12*(s23*s23)+2*(s24*s24))*pow(s14,3)+(3*s23-s24)*pow(s14,4)+s14*s14*(-17*s24*(s23*s23)+9*s23*(s24*s24)-5*pow(s23,3)+18*pow(s24,3))-s14*(s23*s23*(s24*s24)+62*s24*pow(s23,3)+38*pow(s23,4)-41*s23*pow(s24,3)-18*pow(s24,4))-(-4*s23*s24+11*(s23*s23)-3*(s24*s24))*pow(s23+s24,3))+pow(s13,3)*(pow(s14,4)*(9*s24*(s23*s23)+12*s23*(s24*s24)-3*pow(s23,3)+9*pow(s24,3))+pow(s14,3)*(50*(s23*s23)*(s24*s24)+56*s24*pow(s23,3)-6*pow(s23,4)+16*s23*pow(s24,3)+15*pow(s24,4))+s14*s23*s24*(73*(s23*s23)*(s24*s24)+6*s24*pow(s23,3)-4*pow(s23,4)+116*s23*pow(s24,3)+53*pow(s24,4))+s14*s14*(97*(s24*s24)*pow(s23,3)+34*s24*pow(s23,4)-pow(s23,5)+96*(s23*s23)*pow(s24,3)+34*s23*pow(s24,4)+3*pow(s24,5))+3*s23*pow(s24,3)*pow(s23+s24,3)))+pow(s12,3)*(s24*(s23*s24*(s23+s24)+(3*s23+s24)*(s14*s14))*pow(s13,5)+pow(s13,4)*(3*s23*(s24*s24)*(4*s23*s24+s23*s23+3*(s24*s24))+3*s14*s23*s24*(9*s23*s24+5*(s23*s23)+4*(s24*s24))+4*s24*(3*s23+s24)*pow(s14,3)+s14*s14*(10*s24*(s23*s23)+21*s23*(s24*s24)-2*pow(s23,3)+9*pow(s24,3)))+pow(s13,3)*(s14*s23*(s24*s24)*(107*s23*s24+43*(s23*s23)+64*(s24*s24))+3*s23*(s23+3*s24)*(s24*s24)*((s23+s24)*(s23+s24))+6*s24*(3*s23+s24)*pow(s14,4)+pow(s14,3)*(36*s24*(s23*s23)+51*s23*(s24*s24)-4*pow(s23,3)+21*pow(s24,3))+s14*s14*(74*(s23*s23)*(s24*s24)+47*s24*pow(s23,3)-2*pow(s23,4)+37*s23*pow(s24,3)+9*pow(s24,4)))-s23*s24*(s23+s24)*(s14*s14)*(s14*s14*(-4*s23*s24+9*(s23*s23)-3*(s24*s24))+(s23-s24)*pow(s14,3)+s14*(5*s24*(s23*s23)-7*s23*(s24*s24)+9*pow(s23,3)-3*pow(s24,3))+(s23-s24)*pow(s23+s24,3))+s13*s14*s24*(-(s14*s23*(-14*s23*s24+33*(s23*s23)-23*(s24*s24))*((s23+s24)*(s23+s24)))+(9*s23*s24+16*(s23*s23)+3*(s24*s24))*pow(s14,4)+(3*s23+s24)*pow(s14,5)+pow(s14,3)*(24*s24*(s23*s23)+18*s23*(s24*s24)+20*pow(s23,3)+3*pow(s24,3))+s14*s14*(47*(s23*s23)*(s24*s24)-17*s24*pow(s23,3)-32*pow(s23,4)+33*s23*pow(s24,3)+pow(s24,4))-3*s23*(s23-2*s24)*pow(s23+s24,4))+s13*s13*(-(s14*s23*s24*(-17*s23*s24+14*(s23*s23)-49*(s24*s24))*((s23+s24)*(s23+s24)))+4*s24*(3*s23+s24)*pow(s14,5)+pow(s14,4)*(42*s24*(s23*s23)+39*s23*(s24*s24)-2*pow(s23,3)+15*pow(s24,3))+s24*(s14*s14)*(119*(s23*s23)*(s24*s24)+27*s24*pow(s23,3)-21*pow(s23,4)+72*s23*pow(s24,3)+pow(s24,4))+pow(s14,3)*(72*(s23*s23)*(s24*s24)+53*s24*pow(s23,3)-2*pow(s23,4)+43*s23*pow(s24,3)+12*pow(s24,4))+s23*(s24*s24)*pow(s23+s24,4))))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1);
}

// Coefficient order epsilon^1 of master 7
template<>
double qq2yyg6CF<7,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s13,-2)*pow(s14,-2)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-2)*pow(s24,-2)*pow(s23+s24,-1)*((s13+s14)*(s23+s24)*(s14*s23*(4*s23-3*s24)*s24+s13*((s23-3*s24)*(s14*s14)-3*s23*(s24*s24)))*pow(s12,6)-2*s14*s23*(s24*s24)*(4*s23*s24+s23*s23+3*(s24*s24))*pow(s13,6)+s24*(5*s23*s24+4*(s23*s23)+s24*s24)*pow(s14,5)*pow(s23,4)+pow(s12,5)*(3*s23*s24*(s14+s23+s24)*(s14*s14)*(s23*s24+4*(s23*s23)-3*(s24*s24))+3*(s23+s24)*((s23-3*s24)*(s14*s14)-3*s23*(s24*s24))*pow(s13,3)+s13*s14*(s14*s23*s24*(-11*s23*s24+20*(s23*s23)-31*(s24*s24))+6*s23*(2*s23-3*s24)*s24*((s23+s24)*(s23+s24))+3*(-2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,3)+s14*s14*(-11*s24*(s23*s23)-21*s23*(s24*s24)+3*pow(s23,3)-9*pow(s24,3)))+s13*s13*(s14*s23*s24*(-21*s23*s24+10*(s23*s23)-31*(s24*s24))-9*s23*(s24*s24)*((s23+s24)*(s23+s24))+6*(-2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,3)+s14*s14*(-11*s24*(s23*s23)-21*s23*(s24*s24)+3*pow(s23,3)-9*pow(s24,3))))-s24*pow(s13,5)*(2*s14*s23*s24*(7*s24*(s23*s23)+20*s23*(s24*s24)-3*pow(s23,3)+10*pow(s24,3))+3*s23*(s23+s24)*pow(s24,4)+s14*s14*(27*(s23*s23)*(s24*s24)+4*s24*pow(s23,3)+6*pow(s23,4)+28*s23*pow(s24,3)+3*pow(s24,4)))+s13*(s23*s23)*pow(s14,4)*(-2*s14*s24*(4*s24*(s23*s23)+3*s23*(s24*s24)+4*pow(s23,3)+3*pow(s24,3))+s14*s14*(-8*s24*(s23*s23)+s23*(s24*s24)+pow(s23,3)+6*pow(s24,3))-s24*(27*(s23*s23)*(s24*s24)+4*s24*pow(s23,3)-6*pow(s23,4)+29*s23*pow(s24,3)+12*pow(s24,4)))-s14*s24*pow(s13,4)*(s14*s14*(-(s23*s23*(s24*s24))-15*s24*pow(s23,3)+24*pow(s23,4)+25*s23*pow(s24,3)+3*pow(s24,4))+2*s14*s23*(4*(s23*s23)*(s24*s24)-3*s24*pow(s23,3)+7*pow(s23,4)+29*s23*pow(s24,3)+15*pow(s24,4))+s23*s24*(25*(s23*s23)*(s24*s24)-4*s24*pow(s23,3)-8*pow(s23,4)+41*s23*pow(s24,3)+20*pow(s24,4)))+s23*(s14*s14)*pow(s13,3)*(s14*s14*(43*(s23*s23)*(s24*s24)-27*s24*pow(s23,3)+4*pow(s23,4)+49*s23*pow(s24,3)-pow(s24,4))+s24*(41*(s24*s24)*pow(s23,3)+2*s24*pow(s23,4)-8*pow(s23,5)+51*(s23*s23)*pow(s24,3)+19*s23*pow(s24,4)-pow(s24,5))+s14*(26*(s24*s24)*pow(s23,3)-24*s24*pow(s23,4)+68*(s23*s23)*pow(s24,3)+22*s23*pow(s24,4)+4*pow(s24,5)))+s23*(s13*s13)*pow(s14,3)*(s14*s14*(27*(s23*s23)*(s24*s24)-17*s24*pow(s23,3)+5*pow(s23,4)+35*s23*pow(s24,3)+2*pow(s24,4))+2*s14*s24*(28*(s23*s23)*(s24*s24)+9*s24*pow(s23,3)-9*pow(s23,4)+17*s23*pow(s24,3)+7*pow(s24,4))+s24*(-7*(s24*s24)*pow(s23,3)-19*s24*pow(s23,4)-6*pow(s23,5)+23*(s23*s23)*pow(s24,3)+29*s23*pow(s24,4)+12*pow(s24,5)))-s12*(2*s14*s23*s24*(4*s23*s24+s23*s23+3*(s24*s24))*pow(s13,6)-s24*(s14+s23+s24)*(11*s23*s24+12*(s23*s23)-s24*s24)*pow(s14,4)*pow(s23,3)+s24*pow(s13,5)*(9*s23*(s23+s24)*pow(s24,3)+s14*s14*(61*s24*(s23*s23)+38*s23*(s24*s24)+26*pow(s23,3)+9*pow(s24,3))+s14*(76*(s23*s23)*(s24*s24)+30*s24*pow(s23,3)-4*pow(s23,4)+42*s23*pow(s24,3)))+s13*s23*pow(s14,3)*(2*s24*((s23+s24)*(s23+s24))*(4*s24*(s23*s23)+17*s23*(s24*s24)-12*pow(s23,3)+12*pow(s24,3))+pow(s14,3)*(6*s24*(s23*s23)+17*s23*(s24*s24)-3*pow(s23,3)+14*pow(s24,3))+s14*s14*(57*(s23*s23)*(s24*s24)+39*s24*pow(s23,3)-3*pow(s23,4)+75*s23*pow(s24,3)+52*pow(s24,4))+s14*s24*(143*(s23*s23)*(s24*s24)+39*s24*pow(s23,3)-8*pow(s23,4)+158*s23*pow(s24,3)+62*pow(s24,4)))+pow(s13,4)*(9*s23*((s23+s24)*(s23+s24))*pow(s24,4)+s24*(s14*s14)*(221*(s23*s23)*(s24*s24)+159*s24*pow(s23,3)+52*pow(s23,4)+115*s23*pow(s24,3)+9*pow(s24,4))+pow(s14,3)*(118*(s23*s23)*(s24*s24)+54*s24*pow(s23,3)-8*pow(s23,4)+62*s23*pow(s24,3)+18*pow(s24,4))+s14*s23*s24*(94*(s23*s23)*(s24*s24)-12*s24*pow(s23,3)-14*pow(s23,4)+181*s23*pow(s24,3)+89*pow(s24,4)))+s23*(s13*s13)*(s14*s14)*(pow(s14,3)*(20*s24*(s23*s23)+54*s23*(s24*s24)-14*pow(s23,3)+32*pow(s24,3))+s24*((s23+s24)*(s23+s24))*(3*s24*(s23*s23)+62*s23*(s24*s24)-22*pow(s23,3)+47*pow(s24,3))+s14*s14*(155*(s23*s23)*(s24*s24)+105*s24*pow(s23,3)-11*pow(s23,4)+157*s23*pow(s24,3)+94*pow(s24,4))+s14*s24*(263*(s23*s23)*(s24*s24)+109*s24*pow(s23,3)+24*pow(s23,4)+277*s23*pow(s24,3)+99*pow(s24,4)))+s14*pow(s13,3)*(-2*s23*s24*((s23+s24)*(s23+s24))*(4*s24*(s23*s23)-13*s23*(s24*s24)+4*pow(s23,3)-18*pow(s24,3))+pow(s14,3)*(102*(s23*s23)*(s24*s24)+44*s24*pow(s23,3)-19*pow(s23,4)+48*s23*pow(s24,3)+9*pow(s24,4))+s14*s23*s24*(191*(s23*s23)*(s24*s24)+39*s24*pow(s23,3)+6*pow(s23,4)+267*s23*pow(s24,3)+109*pow(s24,4))+s14*s14*(227*(s24*s24)*pow(s23,3)+122*s24*pow(s23,4)-8*pow(s23,5)+227*(s23*s23)*pow(s24,3)+115*s23*pow(s24,4)+9*pow(s24,5))))+pow(s12,4)*(s23*s24*(s23+s24)*(s14*s14)*(3*(4*s23-3*s24)*(s14*s14)+s14*(s23*s24+36*(s23*s23)-18*(s24*s24))+3*(4*s23-3*s24)*((s23+s24)*(s23+s24)))+3*(s23+s24)*((s23-3*s24)*(s14*s14)-3*s23*(s24*s24))*pow(s13,4)+pow(s13,3)*(2*s14*s23*s24*(-25*s23*s24+2*(s23*s23)-27*(s24*s24))-9*s23*(s24*s24)*(5*s23*s24+2*(s23*s23)+3*(s24*s24))+9*(-2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,3)+s14*s14*(-21*s24*(s23*s23)-48*s23*(s24*s24)+10*pow(s23,3)-27*pow(s24,3)))+s13*s14*(3*(-2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,4)+s14*s23*s24*(36*s24*(s23*s23)-101*s23*(s24*s24)+62*pow(s23,3)-75*pow(s24,3))+pow(s14,3)*(-22*s24*(s23*s23)-43*s23*(s24*s24)+9*pow(s23,3)-18*pow(s24,3))+s14*s14*(-104*(s23*s23)*(s24*s24)-6*s24*pow(s23,3)+3*pow(s23,4)-108*s23*pow(s24,3)-9*pow(s24,4))+6*s23*(2*s23-3*s24)*s24*pow(s23+s24,3))+s13*s13*(9*(-2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,4)+s14*s23*s24*(-11*s24*(s23*s23)-127*s23*(s24*s24)+32*pow(s23,3)-84*pow(s24,3))+pow(s14,3)*(-43*s24*(s23*s23)-91*s23*(s24*s24)+19*pow(s23,3)-45*pow(s24,3))+s14*s14*(-144*(s23*s23)*(s24*s24)-14*s24*pow(s23,3)+3*pow(s23,4)-140*s23*pow(s24,3)-9*pow(s24,4))-9*s23*(s24*s24)*pow(s23+s24,3)))+s12*s12*(s24*(s23+s24)*(s23*s23)*((12*s23-5*s24)*(s14*s14)+s14*(13*s23*s24+36*(s23*s23)-10*(s24*s24))+(12*s23-5*s24)*((s23+s24)*(s23+s24)))*pow(s14,3)+pow(s13,5)*(-2*s14*s23*s24*(15*s23*s24+4*(s23*s23)+11*(s24*s24))+s14*s14*(s24*(s23*s23)-6*s23*(s24*s24)+4*pow(s23,3)-9*pow(s24,3))-9*s23*(s23+s24)*pow(s24,3))+pow(s13,4)*(s14*s23*s24*(-59*s24*(s23*s23)-189*s23*(s24*s24)+16*pow(s23,3)-114*pow(s24,3))+pow(s14,3)*(3*s24*(s23*s23)-19*s23*(s24*s24)+15*pow(s23,3)-27*pow(s24,3))-9*s23*(5*s23*s24+2*(s23*s23)+3*(s24*s24))*pow(s24,3)+s14*s14*(-175*(s23*s23)*(s24*s24)-74*s24*pow(s23,3)+8*pow(s23,4)-108*s23*pow(s24,3)-27*pow(s24,4)))+s14*(s13*s13)*(pow(s14,4)*(s24*(s23*s23)-9*s23*(s24*s24)+13*pow(s23,3)-9*pow(s24,3))+s14*s23*s24*(-313*(s23*s23)*(s24*s24)+41*s24*pow(s23,3)+72*pow(s23,4)-471*s23*pow(s24,3)-189*pow(s24,4))+pow(s14,3)*(-255*(s23*s23)*(s24*s24)-112*s24*pow(s23,3)+31*pow(s23,4)-150*s23*pow(s24,3)-18*pow(s24,4))+s14*s14*(-396*(s24*s24)*pow(s23,3)-103*s24*pow(s23,4)+7*pow(s23,5)-578*(s23*s23)*pow(s24,3)-293*s23*pow(s24,4)-9*pow(s24,5))+s23*s24*(-(s23*s24)+12*(s23*s23)-22*(s24*s24))*pow(s23+s24,3))+s13*s23*(s14*s14)*((3*(s23*s23)-s24*s24)*pow(s14,4)+pow(s14,3)*(-36*s24*(s23*s23)-87*s23*(s24*s24)+9*pow(s23,3)-58*pow(s24,3))+s14*s14*(-162*(s23*s23)*(s24*s24)-34*s24*pow(s23,3)+3*pow(s23,4)-275*s23*pow(s24,3)-146*pow(s24,4))-2*s14*s24*(90*(s23*s23)*(s24*s24)-26*s24*pow(s23,3)-34*pow(s23,4)+133*s23*pow(s24,3)+51*pow(s24,4))+s24*(-4*s23*s24+22*(s23*s23)-13*(s24*s24))*pow(s23+s24,3))+pow(s13,3)*(3*pow(s14,4)*(s24*(s23*s23)-7*s23*(s24*s24)+7*pow(s23,3)-9*pow(s24,3))+2*s14*s23*s24*(-70*(s23*s23)*(s24*s24)+21*s24*pow(s23,3)+18*pow(s23,4)-136*s23*pow(s24,3)-63*pow(s24,4))+pow(s14,3)*(-313*(s23*s23)*(s24*s24)-142*s24*pow(s23,3)+30*pow(s23,4)-178*s23*pow(s24,3)-45*pow(s24,4))+s14*s14*(-282*(s24*s24)*pow(s23,3)-41*s24*pow(s23,4)+4*pow(s23,5)-480*(s23*s23)*pow(s24,3)-248*s23*pow(s24,4)-9*pow(s24,5))-9*s23*pow(s24,3)*pow(s23+s24,3)))+pow(s12,3)*((s23+s24)*((s23-3*s24)*(s14*s14)-3*s23*(s24*s24))*pow(s13,5)+pow(s13,4)*(-9*s23*(s24*s24)*(4*s23*s24+s23*s23+3*(s24*s24))-s14*s23*s24*(53*s23*s24+8*(s23*s23)+45*(s24*s24))+4*(-2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,3)+s14*s14*(-9*s24*(s23*s23)-33*s23*(s24*s24)+11*pow(s23,3)-27*pow(s24,3)))+pow(s13,3)*(-9*s23*(s23+3*s24)*(s24*s24)*((s23+s24)*(s23+s24))+6*(-2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,4)+pow(s14,3)*(-29*s24*(s23*s23)-89*s23*(s24*s24)+31*pow(s23,3)-63*pow(s24,3))+16*s14*s23*s24*(-3*s24*(s23*s23)-14*s23*(s24*s24)+2*pow(s23,3)-9*pow(s24,3))+s14*s14*(-246*(s23*s23)*(s24*s24)-78*s24*pow(s23,3)+11*pow(s23,4)-182*s23*pow(s24,3)-27*pow(s24,4)))+s23*s24*(s23+s24)*(s14*s14)*(s14*s14*(-7*s23*s24+36*(s23*s23)-9*(s24*s24))+(4*s23-3*s24)*pow(s14,3)+s14*(29*s24*(s23*s23)-16*s23*(s24*s24)+36*pow(s23,3)-9*pow(s24,3))+(4*s23-3*s24)*pow(s23+s24,3))+s13*s14*(s14*s23*s24*(-19*s23*s24+64*(s23*s23)-57*(s24*s24))*((s23+s24)*(s23+s24))+(-2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,5)+pow(s14,4)*(-11*s24*(s23*s23)-23*s23*(s24*s24)+9*pow(s23,3)-9*pow(s24,3))+pow(s14,3)*(-165*(s23*s23)*(s24*s24)-52*s24*pow(s23,3)+9*pow(s23,4)-127*s23*pow(s24,3)-9*pow(s24,4))+s14*s14*(-84*(s24*s24)*pow(s23,3)+47*s24*pow(s23,4)+pow(s23,5)-294*(s23*s23)*pow(s24,3)-167*s23*pow(s24,4)-3*pow(s24,5))+2*s23*(2*s23-3*s24)*s24*pow(s23+s24,4))+s13*s13*(s14*s23*s24*(-23*s23*s24+34*(s23*s23)-75*(s24*s24))*((s23+s24)*(s23+s24))+4*(-2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,5)+pow(s14,4)*(-31*s24*(s23*s23)-79*s23*(s24*s24)+29*pow(s23,3)-45*pow(s24,3))+2*pow(s14,3)*(-181*(s23*s23)*(s24*s24)-63*s24*pow(s23,3)+10*pow(s23,4)-132*s23*pow(s24,3)-18*pow(s24,4))+s14*s14*(-152*(s24*s24)*pow(s23,3)+45*s24*pow(s23,4)+pow(s23,5)-456*(s23*s23)*pow(s24,3)-263*s23*pow(s24,4)-3*pow(s24,5))-3*s23*(s24*s24)*pow(s23+s24,4))))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1))/2.;
}

// Coefficient of master 7 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yyg6CF<7>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(-1,{
        qq2yyg6CF<7,-1>(s12,s13,s14,s23,s24),
        qq2yyg6CF<7,0>(s12,s13,s14,s23,s24),
        qq2yyg6CF<7,1>(s12,s13,s14,s23,s24)
    });
}

