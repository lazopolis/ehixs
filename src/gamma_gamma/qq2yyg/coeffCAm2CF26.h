/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 26: box(s24,s12+s13+s23,s13)

// Coefficient order epsilon^0 of master 26
template<>
double qq2yygCAm2CF<26,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (-4*s12*(s14*s23-s13*s24+s12*(-s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s14+s24,-1)-4*(s12+s14)*(s12*(2*s13+s14)+s14*(s13+s23))*(s14*s23-s13*s24+s12*(-s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s14+s24,-1)+8*(s12+s23)*s24*(s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24))+s12*s12)*pow(s13,-1)*pow(s12+s23+s24,-2)-4*s24*(s12*(s13*(5*s23+s24)+s23*(2*s14+5*s23+3*s24))+s23*(s13*(4*s23+3*s24)+s23*(s14+2*(s23+s24)))+(s13+s14+4*s23+s24)*(s12*s12)+pow(s12,3))*pow(s13,-1)*pow(s12+s23+s24,-2)+8*s12*(-(s23*s24*(s13*s13))-s14*s23*(2*s23*s24+s24*(s14+s24)+s23*s23)-s12*(s13*(s23+s24)*(3*s14+3*s23+s24)+s23*(s13*s13)+s14*(s14*s24+2*s23*s24+2*(s23*s23)))-2*s13*s14*(3*s23*s24+s23*s23+s24*s24)+s12*s12*(-(s14*s23)-s13*(s14+4*s23+2*s24)+(s23+s24)*(s23+s24))+(-s13+2*(s23+s24))*pow(s12,3)+pow(s12,4))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s23+s24,-2)-4*s23*s24*(s14*s23-s13*s24+s12*(-s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s14+s24,-1)*pow(s12+s23+s24,-1)+pow(s13,-1)*(-8*(s13+s23)*(s14+s23+s24)-8*s12*(2*s13+s14+2*s23+s24)-8*(s12*s12)+4*s13*(s14*s23-s13*s24+s12*(-s13+s14+s23+s24)+s12*s12)*pow(s12+s23+s24,-1))+4*pow(s13,-1)*(2*s12*s13+2*s12*s14+2*s13*s14+6*s12*s23+2*s13*s23+2*s23*(s14+s23)+4*(s12*s12)-(s12+s13+s23)*(s14*s23-s13*s24+s12*(-s13+s14+s23+s24)+s12*s12)*pow(s12+s23+s24,-1))+4*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*(2*(s13+s23)*(s14-s24)*(s14*s23-s13*s24)+2*(s12*s12)*(2*s14*s23+s13*(s14+s23-3*s24)-s23*s24+s14*s14)-2*s12*(3*s24*(s13*s13)+s23*(s23*s24+s14*(-s23+s24)-2*(s14*s14))-s13*(s14*(2*s23-s24)+s24*(-4*s23+s24)+s14*s14))+2*s14*pow(s12,3)+(s12+s23)*(s14*s23-s13*s24+s12*(-s13+s14+s23+s24)+s12*s12)*(3*s12*s13*(s12+s14+s24)*(s12+s23+s24)+(s12*s12+s14*s23-s13*s24+s12*(-s13+s14+s23+s24))*(s12*s12+s14*s23-s13*s24+s12*(-s13+s14+s23+s24)))*pow(s12+s23+s24,-3)-(s12*(-s13+s14-2*s24)+s23*(s14-s23-2*s24)-2*s13*(s23+s24)+s12*s12)*(2*s12*(s14*s23*(s23+s24)+s24*(s13*s13)+s23*(s14*s14))+s12*s12*(2*s14*(2*s23+s24)+s13*s13+s14*s14+(s23+s24)*(s23+s24))+(s14*s23-s13*s24)*(s14*s23-s13*s24)+2*(s14+s23+s24)*pow(s12,3)+pow(s12,4))*pow(s12+s23+s24,-2)-(s14*s23-s13*s24+s12*(-s13+s14+s23+s24)+s12*s12)*(s13*(s14-s24)*(3*s23+s24)+s23*(-(s24*(s23+s24))+s14*(2*s23+s24))+(s13+s14+s23+3*s24)*(s12*s12)-2*s24*(s13*s13)+s12*(2*s23*s24+s14*(3*s23+s24)+s13*(2*s14+3*s23+s24)+s23*s23-s24*s24))*pow(s12+s23+s24,-1)))/16.;
}

// Coefficient order epsilon^1 of master 26
template<>
double qq2yygCAm2CF<26,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s12,-1)*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s14+s24,-1)*((93*s23*s24+s14*(46*s23+40*s24)+s13*(15*s14+47*s23+42*s24)+7*(s13*s13)+6*(s14*s14)+52*(s23*s23)+42*(s24*s24))*pow(s12,7)+(5*s13+4*s14+14*s23+12*s24)*pow(s12,8)+pow(s12,9)+pow(s12,6)*(2*(7*s14+24*(s23+s24))*(s13*s13)+6*(9*s23+7*s24)*(s14*s14)+251*s24*(s23*s23)+231*s23*(s24*s24)+s14*(265*s23*s24+158*(s23*s23)+108*(s24*s24))+s13*(250*s23*s24+s14*(117*s23+103*s24)+15*(s14*s14)+137*(s23*s23)+132*(s24*s24))+3*pow(s13,3)+4*pow(s14,3)+88*pow(s23,3)+68*pow(s24,3))+pow(s12,5)*(464*(s23*s23)*(s24*s24)+s14*s14*(243*s23*s24+166*(s23*s23)+76*(s24*s24))+s13*s13*(213*s23*s24+s14*(78*s23+80*s24)+7*(s14*s14)+109*(s23*s23)+138*(s24*s24))+3*(s14+5*s23+6*s24)*pow(s13,3)+2*(13*s23+8*s24)*pow(s14,3)+pow(s14,4)+327*s24*pow(s23,3)+77*pow(s23,4)+279*s23*pow(s24,3)+s14*(641*s24*(s23*s23)+528*s23*(s24*s24)+252*pow(s23,3)+124*pow(s24,3))+s13*((93*s23+72*s24)*(s14*s14)+530*s24*(s23*s23)+554*s23*(s24*s24)+s14*(529*s23*s24+307*(s23*s23)+251*(s24*s24))+5*pow(s14,3)+185*pow(s23,3)+208*pow(s24,3))+57*pow(s24,4))+pow(s12,4)*((56*s23*s24+s14*(11*s23+17*s24)+26*(s23*s23)+48*(s24*s24))*pow(s13,3)+(77*s23*s24+66*(s23*s23)+14*(s24*s24))*pow(s14,3)+2*(2*s23+s24)*pow(s14,4)+443*(s24*s24)*pow(s23,3)+225*s24*pow(s23,4)+34*pow(s23,5)+407*(s23*s23)*pow(s24,3)+s14*s14*(525*s24*(s23*s23)+335*s23*(s24*s24)+244*pow(s23,3)+50*pow(s24,3))+s13*s13*(30*(s23+s24)*(s14*s14)+339*s24*(s23*s23)+417*s23*(s24*s24)+s14*(285*s23*s24+152*(s23*s23)+182*(s24*s24))+114*pow(s23,3)+212*pow(s24,3))+171*s23*pow(s24,4)+s14*(950*(s23*s23)*(s24*s24)+747*s24*pow(s23,3)+208*pow(s23,4)+471*s23*pow(s24,3)+64*pow(s24,4))+s13*(849*(s23*s23)*(s24*s24)+s14*s14*(318*s23*s24+211*(s23*s23)+117*(s24*s24))+(23*s23+15*s24)*pow(s14,3)+540*s24*pow(s23,3)+128*pow(s23,4)+642*s23*pow(s24,3)+s14*(963*s24*(s23*s23)+903*s23*(s24*s24)+377*pow(s23,3)+285*pow(s24,3))+177*pow(s24,4))+24*pow(s24,5))+s12*(s14*(s23*s23)*(2*s24*(10*s23*s24+7*(s23*s23)+7*(s24*s24))*((s23+s24)*(s23+s24))+2*s14*(17*s23*s24+5*(s23*s23)+11*(s24*s24))*((s23+s24)*(s23+s24))+s23*(s23+2*s24)*pow(s14,3)+s14*s14*(47*s24*(s23*s23)+40*s23*(s24*s24)+18*pow(s23,3)+10*pow(s24,3)))+s13*s23*(2*s24*((s23+s24)*(s23+s24))*(5*s24*(s23*s23)+9*s23*(s24*s24)+5*pow(s23,3)+5*pow(s24,3))+pow(s14,3)*(39*s24*(s23*s23)+30*s23*(s24*s24)+14*pow(s23,3)+8*pow(s24,3))+2*s14*((s23+s24)*(s23+s24))*(20*s24*(s23*s23)+6*s23*(s24*s24)+4*pow(s23,3)+13*pow(s24,3))+s14*s14*(59*(s23*s23)*(s24*s24)+60*s24*pow(s23,3)+28*pow(s23,4)+44*s23*pow(s24,3)+20*pow(s24,4)))+pow(s13,3)*(s14*(16*(s23*s23)*(s24*s24)+2*pow(s23,4)+45*s23*pow(s24,3)+26*pow(s24,4))+s24*(34*(s23*s23)*(s24*s24)+10*s24*pow(s23,3)+4*pow(s23,4)+59*s23*pow(s24,3)+30*pow(s24,4)))+s13*s13*(2*s24*((s23+s24)*(s23+s24))*(3*s24*(s23*s23)+26*s23*(s24*s24)+7*pow(s23,3)+8*pow(s24,3))+s14*s14*(-17*(s23*s23)*(s24*s24)+10*s24*pow(s23,3)+12*pow(s23,4)-4*s23*pow(s24,3)+8*pow(s24,4))+s14*(64*(s24*s24)*pow(s23,3)+30*s24*pow(s23,4)+10*pow(s23,5)+95*(s23*s23)*pow(s24,3)+80*s23*pow(s24,4)+26*pow(s24,5))))+pow(s12,3)*(6*s23*(s23+s24)*pow(s14,4)+208*(s24*s24)*pow(s23,4)+80*s24*pow(s23,5)+6*pow(s23,6)+256*pow(s23,3)*pow(s24,3)+pow(s14,3)*(141*s24*(s23*s23)+56*s23*(s24*s24)+84*pow(s23,3)+2*pow(s24,3))+pow(s13,3)*(62*s24*(s23*s23)+94*s23*(s24*s24)+s14*(35*s23*s24+14*(s23*s23)+39*(s24*s24))+20*pow(s23,3)+72*pow(s24,3))+166*(s23*s23)*pow(s24,4)+s14*s14*(530*(s23*s23)*(s24*s24)+539*s24*pow(s23,3)+186*pow(s23,4)+176*s23*pow(s24,3)+10*pow(s24,4))+s13*s13*(445*(s23*s23)*(s24*s24)+s14*s14*(80*s23*s24+47*(s23*s23)+47*(s24*s24))+254*s24*pow(s23,3)+58*pow(s23,4)+459*s23*pow(s24,3)+s14*(345*s24*(s23*s23)+420*s23*(s24*s24)+136*pow(s23,3)+206*pow(s24,3))+183*pow(s24,4))+48*s23*pow(s24,5)+s14*(796*(s24*s24)*pow(s23,3)+445*s24*pow(s23,4)+86*pow(s23,5)+625*(s23*s23)*pow(s24,3)+188*s23*pow(s24,4)+12*pow(s24,5))+s13*((57*s23*s24+41*(s23*s23)+12*(s24*s24))*pow(s14,3)+609*(s24*s24)*pow(s23,3)+290*s24*pow(s23,4)+44*pow(s23,5)+694*(s23*s23)*pow(s24,3)+s14*s14*(480*s24*(s23*s23)+353*s23*(s24*s24)+227*pow(s23,3)+78*pow(s24,3))+397*s23*pow(s24,4)+s14*(1112*(s23*s23)*(s24*s24)+803*s24*pow(s23,3)+234*pow(s23,4)+713*s23*pow(s24,3)+154*pow(s24,4))+78*pow(s24,5))+4*pow(s24,6))+s12*s12*(pow(s13,3)*(58*(s23*s23)*(s24*s24)+30*s24*pow(s23,3)+6*pow(s23,4)+96*s23*pow(s24,3)+s14*(18*s24*(s23*s23)+53*s23*(s24*s24)+8*pow(s23,3)+45*pow(s24,3))+63*pow(s24,4))+s13*s13*(206*(s24*s24)*pow(s23,3)+94*s24*pow(s23,4)+12*pow(s23,5)+325*(s23*s23)*pow(s24,3)+s14*s14*(62*s24*(s23*s23)+54*s23*(s24*s24)+34*pow(s23,3)+32*pow(s24,3))+285*s23*pow(s24,4)+s14*(294*(s23*s23)*(s24*s24)+170*s24*pow(s23,3)+58*pow(s23,4)+295*s23*pow(s24,3)+116*pow(s24,4))+84*pow(s24,5))+s23*(2*s23*(2*s23+3*s24)*pow(s14,4)+4*s24*((s23+s24)*(s23+s24))*(4*s24*(s23*s23)+4*s23*(s24*s24)+3*pow(s23,3)+pow(s24,3))+pow(s14,3)*(121*s24*(s23*s23)+76*s23*(s24*s24)+56*pow(s23,3)+10*pow(s24,3))+s14*s14*(365*(s23*s23)*(s24*s24)+267*s24*pow(s23,3)+70*pow(s23,4)+198*s23*pow(s24,3)+30*pow(s24,4))+2*s14*(157*(s24*s24)*pow(s23,3)+64*s24*pow(s23,4)+7*pow(s23,5)+173*(s23*s23)*pow(s24,3)+86*s23*pow(s24,4)+13*pow(s24,5)))+s13*(pow(s14,3)*(75*s24*(s23*s23)+36*s23*(s24*s24)+35*pow(s23,3)+2*pow(s24,3))+s14*s14*(307*(s23*s23)*(s24*s24)+294*s24*pow(s23,3)+120*pow(s23,4)+148*s23*pow(s24,3)+18*pow(s24,4))+s14*(562*(s24*s24)*pow(s23,3)+320*s24*pow(s23,4)+70*pow(s23,5)+528*(s23*s23)*pow(s24,3)+248*s23*pow(s24,4)+32*pow(s24,5))+2*(106*(s24*s24)*pow(s23,4)+41*s24*pow(s23,5)+3*pow(s23,6)+155*pow(s23,3)*pow(s24,3)+138*(s23*s23)*pow(s24,4)+58*s23*pow(s24,5)+7*pow(s24,6))))-2*(s13+s23)*(s14+s24)*(-(s13*s14*s23*(s23-4*s24))+(s23-3*s24)*s24*(s13*s13)-s14*s14*(s23*s23))*pow(s23+s24,3))*pow(s12+s23+s24,-3))/8.;
}

// Coefficient order epsilon^2 of master 26
template<>
double qq2yygCAm2CF<26,2>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s12,-1)*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*((40*s23*s24+s14*(10*s23+19*s24)+s13*(6*s14+16*s23+33*s24)+4*(s13*s13)+13*(s23*s23)+38*(s24*s24))*pow(s12,7)+(2*s13+3*s23+8*s24)*pow(s12,8)-(s13+s23)*(s14+s24)*((s23+s24)*(s23+s24))*(s24*(s13*s13)*(-7*s23*s24+3*(s23*s23)-7*(s24*s24))+s13*s14*s23*(10*s23*s24-3*(s23*s23)+7*(s24*s24))-3*(s14*s14)*pow(s23,3))+pow(s12,6)*((8*s14+19*s23+42*s24)*(s13*s13)+(11*s23+14*s24)*(s14*s14)+79*s24*(s23*s23)+139*s23*(s24*s24)+s14*(98*s23*s24+45*(s23*s23)+73*(s24*s24))+s13*(130*s23*s24+s14*(46*s23+64*s24)+6*(s14*s14)+41*(s23*s23)+131*(s24*s24))+2*pow(s13,3)+22*pow(s23,3)+72*pow(s24,3))+pow(s12,5)*(196*(s23*s23)*(s24*s24)+s14*s14*(76*s23*s24+51*(s23*s23)+41*(s24*s24))+s13*s13*(123*s23*s24+5*s14*(8*s23+11*s24)+4*(s14*s14)+33*(s23*s23)+148*(s24*s24))+(2*s14+6*s23+17*s24)*pow(s13,3)+2*(2*s23+s24)*pow(s14,3)+75*s24*pow(s23,3)+18*pow(s23,4)+215*s23*pow(s24,3)+s14*(205*s24*(s23*s23)+256*s23*(s24*s24)+80*pow(s23,3)+105*pow(s24,3))+s13*((42*s23+37*s24)*(s14*s14)+188*s24*(s23*s23)+392*s23*(s24*s24)+3*s14*(83*s23*s24+40*(s23*s23)+66*(s24*s24))+2*pow(s14,3)+48*pow(s23,3)+234*pow(s24,3))+68*pow(s24,4))+pow(s12,4)*((33*s23*s24+2*s14*(4*s23+5*s24)+7*(s23*s23)+55*(s24*s24))*pow(s13,3)+(15*s23*s24+19*(s23*s23)+5*(s24*s24))*pow(s14,3)-s24*pow(s14,4)+126*(s24*s24)*pow(s23,3)+31*s24*pow(s23,4)+7*pow(s23,5)+234*(s23*s23)*pow(s24,3)+s14*s14*(168*s24*(s23*s23)+135*s23*(s24*s24)+94*pow(s23,3)+40*pow(s24,3))+s13*s13*(4*(5*s23+4*s24)*(s14*s14)+116*s24*(s23*s23)+337*s23*(s24*s24)+2*s14*(74*s23*s24+38*(s23*s23)+75*(s24*s24))+27*pow(s23,3)+252*pow(s24,3))+166*s23*pow(s24,4)+s14*(354*(s23*s23)*(s24*s24)+218*s24*pow(s23,3)+70*pow(s23,4)+284*s23*pow(s24,3)+67*pow(s24,4))+s13*(418*(s23*s23)*(s24*s24)+s14*s14*(143*s23*s24+106*(s23*s23)+83*(s24*s24))+(12*s23+5*s24)*pow(s14,3)+114*s24*pow(s23,3)+28*pow(s23,4)+571*s23*pow(s24,3)+s14*(361*s24*(s23*s23)+526*s23*(s24*s24)+148*pow(s23,3)+270*pow(s24,3))+216*pow(s24,4))+32*pow(s24,5))+s12*(s14*(s23*s23)*(s24*(2*s23*s24+s23*s23+8*(s24*s24))*((s23+s24)*(s23+s24))-s23*s24*pow(s14,3)+s14*s14*(27*s24*(s23*s23)+9*s23*(s24*s24)+16*pow(s23,3)-pow(s24,3))+s14*(47*(s23*s23)*(s24*s24)+33*s24*pow(s23,3)+7*pow(s23,4)+27*s23*pow(s24,3)+6*pow(s24,4)))+pow(s13,3)*(s14*(6*(s23*s23)*(s24*s24)-9*s24*pow(s23,3)+3*pow(s23,4)+42*s23*pow(s24,3)+25*pow(s24,4))+s24*(37*(s23*s23)*(s24*s24)-7*s24*pow(s23,3)-2*pow(s23,4)+78*s23*pow(s24,3)+37*pow(s24,4)))+s13*s23*(pow(s14,3)*(22*s24*(s23*s23)+11*s23*(s24*s24)+15*pow(s23,3)+pow(s24,3))+s24*((s23+s24)*(s23+s24))*(-4*s24*(s23*s23)+19*s23*(s24*s24)-pow(s23,3)+15*pow(s24,3))+s14*s14*(s23*s23*(s24*s24)+30*s24*pow(s23,3)+25*pow(s23,4)+16*s23*pow(s24,3)+17*pow(s24,4))+s14*(-23*(s24*s24)*pow(s23,3)+8*s24*pow(s23,4)+4*pow(s23,5)-13*(s23*s23)*pow(s24,3)+47*s23*pow(s24,4)+33*pow(s24,5)))+s13*s13*(s14*s14*(-28*(s23*s23)*(s24*s24)-5*s24*pow(s23,3)+16*pow(s23,4)+2*s23*pow(s24,3)+12*pow(s24,4))+s24*(52*(s24*s24)*pow(s23,3)-12*s24*pow(s23,4)-3*pow(s23,5)+144*(s23*s23)*pow(s24,3)+103*s23*pow(s24,4)+20*pow(s24,5))+s14*(-19*(s24*s24)*pow(s23,3)-3*s24*pow(s23,4)+7*pow(s23,5)+46*(s23*s23)*pow(s24,3)+85*s23*pow(s24,4)+33*pow(s24,5))))+pow(s12,3)*(-3*s23*s24*pow(s14,4)+30*(s24*s24)*pow(s23,4)+s24*pow(s23,5)+pow(s23,6)+106*pow(s23,3)*pow(s24,3)+pow(s14,3)*(39*s24*(s23*s23)+13*s23*(s24*s24)+36*pow(s23,3)+3*pow(s24,3))+pow(s13,3)*(15*s24*(s23*s23)+84*s23*(s24*s24)+s14*(16*s23*s24+13*(s23*s23)+25*(s24*s24))+4*pow(s23,3)+90*pow(s24,3))+131*(s23*s23)*pow(s24,4)+s14*s14*(182*(s23*s23)*(s24*s24)+191*s24*pow(s23,3)+86*pow(s23,4)+89*s23*pow(s24,3)+13*pow(s24,4))+s13*s13*(235*(s23*s23)*(s24*s24)+s14*s14*(36*s23*s24+38*(s23*s23)+32*(s24*s24))+29*s24*pow(s23,3)+11*pow(s23,4)+470*s23*pow(s24,3)+s14*(126*s24*(s23*s23)+261*s23*(s24*s24)+71*pow(s23,3)+200*pow(s24,3))+228*pow(s24,4))+61*s23*pow(s24,5)+s14*(236*(s24*s24)*pow(s23,3)+119*s24*pow(s23,4)+30*pow(s23,5)+279*(s23*s23)*pow(s24,3)+142*s23*pow(s24,4)+16*pow(s24,5))+s13*((20*s23*s24+27*(s23*s23)+8*(s24*s24))*pow(s14,3)+169*(s24*s24)*pow(s23,3)+18*s24*pow(s23,4)+8*pow(s23,5)+485*(s23*s23)*pow(s24,3)+s14*s14*(207*s24*(s23*s23)+187*s23*(s24*s24)+129*pow(s23,3)+79*pow(s24,3))+421*s23*pow(s24,4)+s14*(465*(s23*s23)*(s24*s24)+233*s24*pow(s23,3)+94*pow(s23,4)+522*s23*pow(s24,3)+172*pow(s24,4))+101*pow(s24,5))+6*pow(s24,6))+s12*s12*(pow(s13,3)*(27*(s23*s23)*(s24*s24)-4*s24*pow(s23,3)+pow(s23,4)+114*s23*pow(s24,3)+s14*(s24*(s23*s23)+29*s23*(s24*s24)+10*pow(s23,3)+35*pow(s24,3))+80*pow(s24,4))+s13*s13*(36*(s24*s24)*pow(s23,3)-9*s24*pow(s23,4)+2*pow(s23,5)+275*(s23*s23)*pow(s24,3)+s14*s14*(19*s24*(s23*s23)+25*s23*(s24*s24)+35*pow(s23,3)+32*pow(s24,3))+333*s23*pow(s24,4)+s14*(99*(s23*s23)*(s24*s24)+30*s24*pow(s23,3)+34*pow(s23,4)+238*s23*pow(s24,3)+130*pow(s24,4))+106*pow(s24,5))+s23*(-3*s23*s24*pow(s14,4)+pow(s14,3)*(47*s24*(s23*s23)+14*s23*(s24*s24)+34*pow(s23,3)+2*pow(s24,3))+s24*((s23+s24)*(s23+s24))*(3*s24*(s23*s23)+11*s23*(s24*s24)-2*pow(s23,3)+8*pow(s24,3))+s14*s14*(129*(s23*s23)*(s24*s24)+115*s24*pow(s23,3)+39*pow(s23,4)+73*s23*pow(s24,3)+19*pow(s24,4))+s14*(69*(s24*s24)*pow(s23,3)+28*s24*pow(s23,4)+5*pow(s23,5)+113*(s23*s23)*pow(s24,3)+93*s23*pow(s24,4)+26*pow(s24,5)))+s13*(6*(s24*s24)*pow(s23,4)-6*s24*pow(s23,5)+pow(s23,6)+152*pow(s23,3)*pow(s24,3)+pow(s14,3)*(31*s24*(s23*s23)+16*s23*(s24*s24)+29*pow(s23,3)+5*pow(s24,3))+263*(s23*s23)*pow(s24,4)+s14*s14*(123*(s23*s23)*(s24*s24)+132*s24*pow(s23,3)+81*pow(s23,4)+103*s23*pow(s24,3)+27*pow(s24,4))+143*s23*pow(s24,5)+2*s14*(59*(s24*s24)*pow(s23,3)+31*s24*pow(s23,4)+15*pow(s23,5)+139*(s23*s23)*pow(s24,3)+116*s23*pow(s24,4)+21*pow(s24,5))+19*pow(s24,6))))*pow(s12+s14+s24,-1)*pow(s12+s23+s24,-3))/4.;
}

// Coefficient of master 26 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yygCAm2CF<26>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(0,{
        qq2yygCAm2CF<26,0>(s12,s13,s14,s23,s24),
        qq2yygCAm2CF<26,1>(s12,s13,s14,s23,s24),
        qq2yygCAm2CF<26,2>(s12,s13,s14,s23,s24)
    });
}

