/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 10: box(s14,(-s12-s13-s14),s23)

// Coefficient order epsilon^0 of master 10
template<>
double qq2yygCA<10,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (4*(s14*s23*(-2*s14+3*s23)+s12*(s13*(-2*s14+11*s23)-(2*s14-3*s23)*(s14+s23+s24))+(-2*s14+3*s23)*(s12*s12)+8*s23*(s13*s13)+s13*(s14*(6*s23-2*s24)+s23*(8*s23+3*s24)-4*(s14*s14)))*pow(s23,-1)*pow(s12+s13+s23,-1)-4*((6*s13+7*s14+2*s23+s24)*(s12*s12)+(2*s14+6*s23+s24)*(s13*s13)+s12*(2*s14*(5*s23-s24)+3*s23*(s23+s24)+s13*(9*s14+8*s23+2*s24)+3*(s13*s13))+s13*(s14*(7*s23-2*s24)+s23*(10*s23+3*s24)-2*(s14*s14))+(3*s14+4*s23)*(s23*s23)+3*pow(s12,3))*pow(s23,-1)*pow(s12+s13+s23,-1)+4*pow(s13,-1)*(s13*s14*s23*(9*s14*(s23-s24)+3*(s14*s14)+2*(5*s23*s24+5*(s23*s23)+4*(s24*s24)))+2*s14*(s23*s23)*(-2*s14*s24+s14*s14+2*((s23+s24)*(s23+s24)))+(s13*(3*s14+4*s23-11*s24)-8*s23*s24-s14*(s23+s24)+9*(s13*s13)-2*(s14*s14)+s23*s23+2*(s24*s24))*pow(s12,3)+(s13-s14-s23-3*s24)*pow(s12,4)-pow(s12,5)+(2*s23*(2*s23-5*s24)+3*s14*(8*s23-s24)+12*(s14*s14))*pow(s13,3)+4*(3*s14+2*s23-s24)*pow(s13,4)+4*pow(s13,5)+s12*s12*((15*s14+11*s23-17*s24)*(s13*s13)+(-4*s23+s24)*(s14*s14)+s23*(-5*s23*s24+s23*s23+2*(s24*s24))+s13*(s14*(10*s23-s24)-20*s23*s24+2*(s14*s14)+s23*s23+4*(s24*s24))+s14*(3*s23*s24+5*(s23*s23)+7*(s24*s24))+15*pow(s13,3)+2*pow(s14,3))+s13*s13*(-2*s23*s24*(3*s23+s24)+(19*s23+s24)*(s14*s14)+s14*(-5*s23*s24+18*(s23*s23)+7*(s24*s24))+4*pow(s14,3))+s12*(s13*s13*(s14*(29*s23-3*s24)+2*s24*(-11*s23+s24)+14*(s14*s14))+s14*s23*(12*s23*s24-s14*(2*s23+3*s24)+4*(s14*s14)+9*(s23*s23)+8*(s24*s24))+(23*s14+14*s23-13*s24)*pow(s13,3)+12*pow(s13,4)+s13*((11*s23+2*s24)*(s14*s14)-(2*s23+7*s24)*(s23*s23)+s14*(6*s23*s24+17*(s23*s23)+14*(s24*s24))+3*pow(s14,3))))*pow(s12+s13+s23,-2)*pow(s24,-1)+4*pow(s13,-1)*pow(s23,-1)*(-2*(s14-s23)*(s23+s24)*(s13*s13)+2*s23*s24*(s14*s14)-2*s13*(s23+s24)*(s23*s24-s14*(3*s23+s24)+s14*s14)+10*s14*s24*(s23*s23)+2*(s14*s14)*(s23*s23)-2*(s12*s12)*(4*s13*s23-s14*s24+s23*s23)+4*s14*s23*(s24*s24)-2*s12*(s13*s23*(s14-s23-2*s24)+2*s23*(s13*s13)+s24*(s14*s14)-s14*(5*s23*s24+3*(s23*s23)+s24*s24)+s23*(s23*s24-s23*s23+2*(s24*s24)))-4*s23*pow(s12,3)+6*s14*pow(s23,3)+2*(s12+s13)*(s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24))+s12*s12)*(-3*s23*(s12+s13+s23)*(s12+s23+s24)*(s12+s13+s14+s23+s24)+(pow(s12,2)+s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24)))*(pow(s12,2)+s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24))))*pow(s12+s13+s23,-3)+(3*s14*s23+s13*(2*s14-4*s23-3*s24)+s12*(s13-2*s23-3*s24)+s13*s13)*(s13*s13*(2*s23*s24+2*(s23*s23)+s24*s24)+2*s13*s23*(s14*s23+3*s23*s24+2*(s23*s23)+s24*s24)+s12*s12*(6*s23*s24+2*s14*(3*s23+s24)+2*s13*(s14+3*s23+2*s24)+s13*s13+s14*s14+7*(s23*s23)+s24*s24)+2*s12*(s13*(2*s23+s24)*(s14+2*s23+s24)+(s23+s24)*(s13*s13)+s23*(4*s23*s24+s14*(3*s23+2*s24)+s14*s14+3*(s23*s23)+s24*s24))+s23*s23*(2*s14*(s23+s24)+s14*s14+2*((s23+s24)*(s23+s24)))+2*(s13+s14+2*s23+s24)*pow(s12,3)+pow(s12,4))*pow(s12+s13+s23,-2)+(s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24))+s12*s12)*(-(s14*s23*(s14+6*s23+5*s24))+(4*s13+s23)*(s12*s12)+(s14-2*s23-s24)*(s13*s13)+s12*(s13*(s14-2*s23-s24)+3*s23*s24-s14*(3*s23+s24)+2*(s13*s13)-s23*s23+s24*s24)+s13*(4*s23*s24-s14*(5*s23+3*s24)+s14*s14+2*(s23*s23)+s24*s24)+2*pow(s12,3))*pow(s12+s13+s23,-1))*pow(s24,-1)+8*pow(s13,-1)*((3*s23*s24+2*s14*(3*s23+s24)+s13*(3*s14+21*s23+5*s24)+11*(s13*s13)+8*(s23*s23)-s24*s24)*pow(s12,3)+(7*s13+s14+7*s23+s24)*pow(s12,4)+2*pow(s12,5)-(s13+s14)*(s13*s13*(-8*s23*(s23+s24)-s14*(s23+2*s24)+2*(s14*s14))+s14*(s14-3*(s23+s24))*(s23*s23)-s13*s23*(5*s23*s24+s14*(6*s23+7*s24)-2*(s14*s14)+4*(s23*s23)+s24*s24)+(2*s14-4*s23-3*s24)*pow(s13,3))+s12*(s13*s13*(16*s23*s24+2*s14*(11*s23+5*s24)-5*(s14*s14)+21*(s23*s23)-s24*s24)+s14*s23*(5*s23*s24+s14*(6*s23+4*s24)-2*(s14*s14)+4*(s23*s23)+s24*s24)+(19*s23+9*s24)*pow(s13,3)+3*pow(s13,4)+s13*(6*s14*s23*(4*s23+3*s24)+3*(s23+s24)*(s14*s14)+5*(s23+s24)*(s23*s23)-2*pow(s14,3)))+s12*s12*(s14*s23*(9*s23+7*s24)+(4*s14+29*s23+10*s24)*(s13*s13)+(3*s23+s24)*(s14*s14)+s13*(11*s23*s24+s14*(20*s23+7*s24)-2*(s14*s14)+19*(s23*s23)-2*(s24*s24))+s23*(2*s23*s24+3*(s23*s23)-s24*s24)+9*pow(s13,3)-pow(s14,3)))*pow(s12+s13+s23,-2)*pow(s12+s23+s24,-1)+pow(s13,-1)*pow(s23,-1)*(16*s14*s23*(s13*s13)-8*(s12*s12)*(s13*(s14-2*s23)+2*s14*s24-2*s23*(s23+s24)-s14*s14)+8*s14*s23*(2*s14*(s23+s24)+2*(s14*s14)+(s23+s24)*(s23+s24))+8*s13*(4*s23*(s14*s14)+s14*(4*s23*s24+3*(s23*s23)+s24*s24)+s23*((s23+s24)*(s23+s24)))-8*s14*pow(s12,3)+8*s12*(2*s23*(s13*s13)+(5*s23+s24)*(s14*s14)+s13*(s14*(4*s23-2*s24)+s23*(s23+s24)+2*(s14*s14))+s14*(3*s23*s24+2*(s23*s23)+s24*s24)+2*s23*((s23+s24)*(s23+s24))+2*pow(s14,3))-8*(s12+s13)*(s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24))+s12*s12)*(-3*s23*(s12+s13+s23)*(s12+s23+s24)*(s12+s13+s14+s23+s24)+(pow(s12,2)+s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24)))*(pow(s12,2)+s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24))))*pow(s12+s13+s23,-3)+4*(2*s14*s23+s13*(4*s14+5*s23+3*s24)+s12*(5*s13+3*(2*s14+s23+s24))+3*(s12*s12)+2*(s13*s13))*(s13*s13*(2*s23*s24+2*(s23*s23)+s24*s24)+2*s13*s23*(s14*s23+3*s23*s24+2*(s23*s23)+s24*s24)+s12*s12*(6*s23*s24+2*s14*(3*s23+s24)+2*s13*(s14+3*s23+2*s24)+s13*s13+s14*s14+7*(s23*s23)+s24*s24)+2*s12*(s13*(2*s23+s24)*(s14+2*s23+s24)+(s23+s24)*(s13*s13)+s23*(4*s23*s24+s14*(3*s23+2*s24)+s14*s14+3*(s23*s23)+s24*s24))+s23*s23*(2*s14*(s23+s24)+s14*s14+2*((s23+s24)*(s23+s24)))+2*(s13+s14+2*s23+s24)*pow(s12,3)+pow(s12,4))*pow(s12+s13+s23,-2)-4*(s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24))+s12*s12)*(s14*s23*(4*s14+3*(s23+s24))+(4*s13+5*s14+5*s23+s24)*(s12*s12)+2*(s14+s23)*(s13*s13)+s12*(4*s23*s24+5*s14*(2*s23+s24)+s13*(7*s14+6*s23+s24)+2*(s13*s13)+6*(s14*s14)+3*(s23*s23)+s24*s24)+s13*(5*s23*s24+3*s14*(3*s23+s24)+2*(s14*s14)+4*(s23*s23)+s24*s24)+2*pow(s12,3))*pow(s12+s13+s23,-1))*pow(s12+s23+s24,-1)-4*(s14*s23+s12*(s13+s14+s23+s24)+s13*(2*s23+s24)+s12*s12)*(4*s14*s23+s12*(2*s13+3*s14+2*s23)+2*s14*s24+2*s23*s24+s13*(s14+3*s23+s24)+s14*s14+2*(s23*s23))*pow((-s12-s13-s14),-1)*pow(s23,-1)*pow((-s12-s23-s24),-1)+8*s14*(s14*s23+s12*(s13+s14+s23+s24)+s13*(2*s23+s24)+s12*s12)*(s12*(s13+s14-s23-s24)+(s13+s14)*(s13+s14))*pow(s13,-1)*pow((-s12-s13-s14),-1)*pow(s23,-1)*pow((-s12-s23-s24),-1)+8*(s14*s23+s12*(s13+s14+s23+s24)+s13*(2*s23+s24)+s12*s12)*pow(s13,-1)*pow((-s12-s13-s14),-1)*pow(s23,-1)*pow(s24,-1)*(3*s14*s23*(s13*s13)+s12*(s14*s24*(-s14+s23+s24)+s13*(s14*(s23-s24)-s23*(s23+s24))+s23*(s13*s13))+3*s13*s23*(s14*s14)+s23*pow(s13,3)+s14*(s23*(s14*s14)+pow(s23+s24,3)))*pow((-s12-s23-s24),-1))/32.;
}

// Coefficient order epsilon^1 of master 10
template<>
double qq2yygCA<10,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (-8*(s14*s23*(-2*s14+5*s23+3*s24)+(2*s13-s14+6*s23+s24)*(s12*s12)+(-s14+8*s23+s24)*(s13*s13)+s13*(s14*(8*s23-2*s24)+s23*(8*s23+5*s24)-7*(s14*s14))+s12*(s14*(4*s23-2*s24)-2*s13*(s14-7*s23-s24)+5*s23*(s23+s24)+s13*s13-2*(s14*s14))+pow(s12,3))*pow(s23,-1)*pow(s12+s13+s23,-1)+pow(s23,-1)*(-8*(3*s14*s23+2*s14*s24+2*s23*s24+s12*(s13+7*s14+s24)+s13*(6*s14-6*s23+s24)+s13*s13+7*(s14*s14))-4*(s12+s13-s14+2*s23)*(s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24))+s12*s12)*pow(s12+s13+s23,-1))-4*pow(s13,-1)*(s14*(s23*s23)*(s14*(18*s23-s24)+22*s23*s24+s14*s14+20*(s23*s23)+4*(s24*s24))+(11*s23*s24+s13*(93*s14+94*s23+3*s24)+2*s14*(46*s23+5*s24)+35*(s13*s13)+12*(s14*s14)+56*(s23*s23)+2*(s24*s24))*pow(s12,3)+(19*s13+23*s14+28*s23+2*s24)*pow(s12,4)+4*pow(s12,5)+(7*s23*s24+s14*(77*s23+6*s24)+30*(s14*s14)+28*(s23*s23)-2*(s24*s24))*pow(s13,3)+(26*s14+14*s23-s24)*pow(s13,4)+4*pow(s13,5)+s12*s12*((141*s14+114*s23-s24)*(s13*s13)+42*s23*(s14*s14)+5*s14*(8*s23*s24+27*(s23*s23)+s24*s24)+s23*(21*s23*s24+44*(s23*s23)+s24*s24)+s13*(31*s23*s24+s14*(257*s23+26*s24)+57*(s14*s14)+135*(s23*s23)+2*(s24*s24))+33*pow(s13,3)+pow(s14,3))+s13*s13*((74*s23+7*s24)*(s14*s14)+s23*(20*s23*s24+30*(s23*s23)-3*(s24*s24))+s14*(31*s23*s24+99*(s23*s23)+5*(s24*s24))+8*pow(s14,3))+s13*s23*((63*s23+6*s24)*(s14*s14)+12*(s23+s24)*(s23*s23)+s14*(49*s23*s24+68*(s23*s23)+9*(s24*s24))+9*pow(s14,3))+s12*(s13*s13*(27*s23*s24+s14*(240*s23+22*s24)+75*(s14*s14)+105*(s23*s23)-2*(s24*s24))+(97*s14+62*s23-3*s24)*pow(s13,3)+17*pow(s13,4)+s23*((48*s23-s24)*(s14*s14)+12*(s23+s24)*(s23*s23)+s14*(52*s23*s24+86*(s23*s23)+9*(s24*s24))+2*pow(s14,3))+s13*((120*s23+7*s24)*(s14*s14)+s23*(45*s23*s24+72*(s23*s23)-2*(s24*s24))+s14*(71*s23*s24+232*(s23*s23)+10*(s24*s24))+9*pow(s14,3))))*pow(s12+s13+s23,-2)*pow(s24,-1)-4*pow(s13,-1)*(s14*(s23*s23)*(s14*(17*s23+10*s24)-2*(s14*s14)+2*(7*s23*s24+5*(s23*s23)+2*(s24*s24)))+(22*s23*s24+s14*(74*s23+22*s24)+s13*(45*s14+114*s23+31*s24)+53*(s13*s13)+10*(s14*s14)+46*(s23*s23)-2*(s24*s24))*pow(s12,3)+3*(11*s13+6*s14+11*s23+2*s24)*pow(s12,4)+8*pow(s12,5)+(33*s23*s24+3*s14*(7*s23+6*s24)-16*(s14*s14)+36*(s23*s23)+2*(s24*s24))*pow(s13,3)+(-8*s14+16*s23+11*s24)*pow(s13,4)+s12*(s13*s13*(86*s23*s24+s14*(113*s23+58*s24)-22*(s14*s14)+115*(s23*s23)+2*(s24*s24))+(-5*s14+84*s23+41*s24)*pow(s13,3)+11*pow(s13,4)+s13*(2*(15*s23+7*s24)*(s14*s14)+2*s23*(21*s23*s24+23*(s23*s23)+s24*s24)+s14*(122*s23*s24+169*(s23*s23)+12*(s24*s24))-10*pow(s14,3))+2*s23*((22*s23+9*s24)*(s14*s14)+2*(s23+s24)*(s23*s23)+s14*(28*s23*s24+29*(s23*s23)+5*(s24*s24))-2*pow(s14,3)))+s13*s13*(-6*(s23-s24)*(s14*s14)+s23*(26*s23*s24+24*(s23*s23)+3*(s24*s24))+s14*(58*s23*s24+69*(s23*s23)+6*(s24*s24))-8*pow(s14,3))+2*s13*s23*((13*s23+8*s24)*(s14*s14)+2*(s23+s24)*(s23*s23)+s14*(26*s23*s24+25*(s23*s23)+5*(s24*s24))-5*pow(s14,3))+s12*s12*((30*s14+149*s23+55*s24)*(s13*s13)+(37*s23+8*s24)*(s14*s14)+s13*(75*s23*s24+2*s14*(82*s23+31*s24)+4*(s14*s14)+123*(s23*s23)-2*(s24*s24))+s23*(20*s23*s24+25*(s23*s23)-s24*s24)+2*s14*(32*s23*s24+52*(s23*s23)+3*(s24*s24))+39*pow(s13,3)-2*pow(s14,3)))*pow(s12+s13+s23,-2)*pow(s12+s23+s24,-1)+pow(s13,-1)*pow(s23,-1)*pow(s12+s23+s24,-1)*(80*s13*s14*s23*s24-32*s14*s23*(s13*s13)+16*s14*s24*(s13*s13)+24*s23*s24*(s13*s13)+8*s14*s23*(s24*(s23+s24)+s14*(5*s23+6*s24)-4*(s14*s14))-64*s13*s23*(s14*s14)-8*(s12*s12)*(s13*(s14-2*s23)-s14*(8*s23+s24)-2*s23*(2*s23+3*s24)+5*(s14*s14))+64*s13*s14*(s23*s23)+40*s13*s24*(s23*s23)-16*s13*s14*(s24*s24)+32*s13*s23*(s24*s24)-8*s14*pow(s12,3)+24*s23*pow(s12,3)-16*s23*pow(s13,3)-8*s12*(3*s23*(s13*s13)+(s23+s24)*(s14*s14)+s13*(-5*s23*(s23+2*s24)-s14*(2*s23+3*s24)+4*(s14*s14))+s14*(-10*s23*s24-9*(s23*s23)+2*(s24*s24))-s23*(4*s23*s24+s23*s23+3*(s24*s24))+4*pow(s14,3))+8*s13*pow(s23,3)+((-8*(2*s14*s23+s13*(4*s14+5*s23+3*s24)+s12*(5*s13+3*(2*s14+s23+s24))+3*(s12*s12)+2*(s13*s13))*((pow(s12,2)+s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24)))*(pow(s12,2)+s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24))))+8*(4*s14*s23+s12*(2*s13-2*s14+s23)+s13*(-2*s14+3*s23)+2*(s13*s13)-6*(s14*s14))*(s13*s13*(2*s23*s24+2*(s23*s23)+s24*s24)+2*s13*s23*(s14*s23+3*s23*s24+2*(s23*s23)+s24*s24)+s12*s12*(6*s23*s24+2*s14*(3*s23+s24)+2*s13*(s14+3*s23+2*s24)+s13*s13+s14*s14+7*(s23*s23)+s24*s24)+2*s12*(s13*(2*s23+s24)*(s14+2*s23+s24)+(s23+s24)*(s13*s13)+s23*(4*s23*s24+s14*(3*s23+2*s24)+s14*s14+3*(s23*s23)+s24*s24))+s23*s23*(2*s14*(s23+s24)+s14*s14+2*((s23+s24)*(s23+s24)))+2*(s13+s14+2*s23+s24)*pow(s12,3)+pow(s12,4)))*pow(s12+s13+s23,-2))/2.+4*(s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24))+s12*s12)*((9*s13+2*(5*s14+2*s23+s24))*(s12*s12)+(2*s14+6*s23-s24)*(s13*s13)+s14*(-(s23*s24)+s14*(4*s23+6*s24)+6*(s14*s14))+s13*(s23*s24+9*s14*(s23+s24)+8*(s14*s14)+2*(s23*s23)+2*(s24*s24))+s12*(s13*(11*s14+9*s23+s24)+7*(s13*s13)+2*(s14*(5*s23+6*s24)+7*(s14*s14)+s24*s24))+4*pow(s12,3)+2*pow(s13,3))*pow(s12+s13+s23,-1)+4*(s12+s13)*pow(s12+s13+s23,-3)*pow(pow(s12,2)+s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24)),3))-pow(s13,-1)*pow(s23,-1)*pow(s24,-1)*(56*s13*s14*s23*s24-8*(s23*(8*s23+3*s24)-s14*(2*s23+5*s24))*(s13*s13)+16*s13*s23*(s14*s14)+24*s13*s24*(s14*s14)+8*s23*s24*(s14*s14)+8*(s12*s12)*(3*s13*(4*s14-3*s23)-s23*(5*s23+s24)+s14*(2*s23+7*s24)+12*(s14*s14))-16*s13*s14*(s23*s23)-24*s13*s24*(s23*s23)+32*s14*s24*(s23*s23)-8*(s14*s14)*(s23*s23)+16*s13*s14*(s24*s24)+8*s14*s23*(s24*s24)+48*s14*pow(s12,3)-32*s23*pow(s12,3)-16*s23*pow(s13,3)+8*s12*(2*s14*s24*(4*s23+s24)+(6*s14-7*s23)*(s13*s13)+(2*s23+3*s24)*(s14*s14)+s13*(-3*s23*(4*s23+s24)+s14*(5*s23+12*s24)+12*(s14*s14))-s23*((s23+s24)*(s23+s24))+6*pow(s14,3))-24*s13*pow(s23,3)+24*s14*pow(s23,3)-((-8*(3*s14*s23+s13*(2*s14-4*s23-3*s24)+s12*(s13-2*s23-3*s24)+s13*s13)*((pow(s12,2)+s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24)))*(pow(s12,2)+s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24))))+8*(3*s14*(2*s14+s23)+s13*(10*s14+s23)+s12*(6*s13+10*s14+3*s23)+4*(s12*s12)+2*(s13*s13))*(s13*s13*(2*s23*s24+2*(s23*s23)+s24*s24)+2*s13*s23*(s14*s23+3*s23*s24+2*(s23*s23)+s24*s24)+s12*s12*(6*s23*s24+2*s14*(3*s23+s24)+2*s13*(s14+3*s23+2*s24)+s13*s13+s14*s14+7*(s23*s23)+s24*s24)+2*s12*(s13*(2*s23+s24)*(s14+2*s23+s24)+(s23+s24)*(s13*s13)+s23*(4*s23*s24+s14*(3*s23+2*s24)+s14*s14+3*(s23*s23)+s24*s24))+s23*s23*(2*s14*(s23+s24)+s14*s14+2*((s23+s24)*(s23+s24)))+2*(s13+s14+2*s23+s24)*pow(s12,3)+pow(s12,4)))*pow(s12+s13+s23,-2))/2.+4*(s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24))+s12*s12)*((9*s13+4*s14+9*s23+4*s24)*(s12*s12)+(-2*s14+8*s23+s24)*(s13*s13)+s14*(-2*s23*(3*s23+2*s24)+s14*(7*s23+6*s24)+6*(s14*s14))+s13*(7*s23*s24+s14*(8*s23+5*s24)+4*(s14*s14)+8*(s23*s23)+2*(s24*s24))+s12*(s13*(s14+16*s23+5*s24)+7*(s13*s13)+2*(3*s23*s24+s14*(5*s23+4*s24)+5*(s14*s14)+2*(s23*s23)+s24*s24))+4*pow(s12,3)+2*pow(s13,3))*pow(s12+s13+s23,-1)+4*(s12+s13)*pow(s12+s13+s23,-3)*pow(pow(s12,2)+s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24)),3))-4*(s14*s23+s12*(s13+s14+s23+s24)+s13*(2*s23+s24)+s12*s12)*(s13*(5*s14-s23+s24)+s12*(7*s14+5*s23+7*s24)+3*(s12*s12)+s13*s13+2*(3*s23*s24+s14*(3*s23+4*s24)+2*(s14*s14)+s23*s23+2*(s24*s24)))*pow((-s12-s13-s14),-1)*pow(s23,-1)*pow((-s12-s23-s24),-1)-4*(s14*s23+s12*(s13+s14+s23+s24)+s13*(2*s23+s24)+s12*s12)*(2*(s14+s23)*(s12*s12)+2*s14*(s13*s13)+s12*(7*s14*s23+2*s13*(2*s14+s23)+2*s23*(s23+s24)+6*(s14*s14))+s13*(s14*(4*s23-s24)+2*s23*(s23+s24)+6*(s14*s14))+s14*(7*s23*s24+s14*(6*s23+s24)+4*(s14*s14)+5*(s23*s23)+2*(s24*s24)))*pow(s13,-1)*pow((-s12-s13-s14),-1)*pow(s23,-1)*pow((-s12-s23-s24),-1)-4*(s14*s23+s12*(s13+s14+s23+s24)+s13*(2*s23+s24)+s12*s12)*pow(s13,-1)*pow((-s12-s13-s14),-1)*pow(s23,-1)*pow(s24,-1)*((s23*(3*s23+5*s24)+s14*(13*s23+6*s24))*(s13*s13)+4*(s12*s12)*(3*s13*(s14+s23)+3*s23*(s23+s24)+s14*(7*s23+3*s24)+3*(s14*s14))+s13*(3*(7*s23+4*s24)*(s14*s14)+s14*(24*s23*s24+16*(s23*s23)+5*(s24*s24))+6*s23*((s23+s24)*(s23+s24)))+6*(s14+s23)*pow(s12,3)+2*s23*pow(s13,3)+s12*((6*s14+8*s23)*(s13*s13)+14*(2*s23+s24)*(s14*s14)+s13*(2*s23*(7*s23+8*s24)+s14*(37*s23+16*s24)+12*(s14*s14))+s14*(37*s23*s24+28*(s23*s23)+8*(s24*s24))+6*s23*((s23+s24)*(s23+s24))+6*pow(s14,3))+s14*(2*(5*s23+3*s24)*(s14*s14)+21*s24*(s23*s23)+13*s23*(s24*s24)+s14*(16*s23*s24+12*(s23*s23)+3*(s24*s24))+10*pow(s23,3)+2*pow(s24,3)))*pow((-s12-s23-s24),-1))/32.;
}

// Coefficient order epsilon^2 of master 10
template<>
double qq2yygCA<10,2>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (8*(s14*s23*(9*s23+8*s24)+(8*s13+4*s14+13*s23+4*s24)*(s12*s12)+4*(s14+2*s23+s24)*(s13*s13)+s12*(s13*(8*s14+21*s23+8*s24)+s23*(13*s14+9*(s23+s24))+4*(s13*s13))+s13*(18*s14*s23+9*s23*s24-8*(s14*s14)+8*(s23*s23))+4*pow(s12,3))*pow(s23,-1)*pow(s12+s13+s23,-1)+2*pow(s23,-1)*(8*(-3*s14*s23+2*s14*s24+5*s23*s24+s13*(-4*s14+s23+2*s24)+s12*(3*s13+s14+5*s23+2*s24)+2*(s12*s12)+s13*s13-3*(s14*s14)+7*(s23*s23))-4*s23*(s13*(2*s23+s24)+s12*(s13+s14+3*s23+s24)+s23*(s14+2*(s23+s24))+s12*s12)*pow(s12+s13+s23,-1))-8*pow(s13,-1)*(s14*(2*s24*(5*s23+2*s24)+s14*(9*s23+20*s24)-11*(s14*s14))*(s23*s23)+(47*s23*s24+s14*(83*s23+23*s24)+s13*(93*s14+170*s23+58*s24)+78*(s13*s13)+8*(s14*s14)+81*(s23*s23)+4*(s24*s24))*pow(s12,3)+(50*s13+28*s14+52*s23+17*s24)*pow(s12,4)+13*pow(s12,5)+(45*s23*s24+s14*(55*s23+24*s24)-6*(s14*s14)+56*(s23*s23)+2*(s24*s24))*pow(s13,3)+(14*s14+26*s23+11*s24)*pow(s13,4)+4*pow(s13,5)+s12*(s13*s13*(133*s23*s24+s14*(189*s23+67*s24)+s14*s14+189*(s23*s23)+8*(s24*s24))+(69*s14+122*s23+46*s24)*pow(s13,3)+25*pow(s13,4)+s13*((32*s23+22*s24)*(s14*s14)+2*(54*s23+49*s24)*(s23*s23)+s14*(111*s23*s24+142*(s23*s23)+8*(s24*s24))-25*pow(s14,3))+s23*((26*s23+27*s24)*(s14*s14)+16*(s23+s24)*(s23*s23)+s14*(47*s23*s24+27*(s23*s23)+10*(s24*s24))-22*pow(s14,3)))+s13*s23*((19*s23+39*s24)*(s14*s14)+2*(8*s23+9*s24)*(s23*s23)+s14*(49*s23*s24+22*(s23*s23)+10*(s24*s24))-25*pow(s14,3))+s13*s13*((2*s23+15*s24)*(s14*s14)+2*(25*s23+26*s24)*(s23*s23)+s14*(59*s23*s24+63*(s23*s23)+4*(s24*s24))-16*pow(s14,3))+s12*s12*(2*(60*s14+107*s23+38*s24)*(s13*s13)+(25*s23+7*s24)*(s14*s14)+2*(29*s23+23*s24)*(s23*s23)+s14*(60*s23*s24+82*(s23*s23)+4*(s24*s24))+s13*(135*s23*s24+3*s14*(71*s23+22*s24)+13*(s14*s14)+212*(s23*s23)+10*(s24*s24))+62*pow(s13,3)-11*pow(s14,3)))*pow(s12+s13+s23,-2)*pow(s24,-1)+8*pow(s13,-1)*pow(s23,-1)*pow(s12+s13+s23,-3)*pow(s24,-1)*((61*s23*s24+22*s14*(5*s23+2*s24)+2*s13*(54*s14+94*s23+45*s24)+112*(s13*s13)+34*(s14*s14)+73*(s23*s23)+8*(s24*s24))*pow(s12,5)+(52*s13+28*s14+43*s23+18*s24)*pow(s12,6)+10*pow(s12,7)+(5*s23*s24*(8*s23+3*s24)-4*(s23+3*s24)*(s14*s14)+4*s14*(3*s23*s24+5*(s23*s23)+3*(s24*s24)))*pow(s13,4)+2*(s14*(2*s23+s24)+s24*(10*s23+3*s24))*pow(s13,5)+4*s24*pow(s13,6)+s13*s14*(s23*s23)*((8*s23-52*s24)*(s14*s14)+s14*(4*s23*s24+15*(s23*s23)-8*(s24*s24))+s23*(19*s23*s24+4*(s23*s23)+5*(s24*s24))-2*pow(s14,3))+pow(s12,4)*(2*(78*s14+165*s23+92*s24)*(s13*s13)+2*(59*s23+18*s24)*(s14*s14)+s14*(127*s23*s24+169*(s23*s23)+12*(s24*s24))+s23*(78*s23*s24+61*(s23*s23)+21*(s24*s24))+s13*(251*s23*s24+3*s14*(117*s23+58*s24)+82*(s14*s14)+259*(s23*s23)+38*(s24*s24))+128*pow(s13,3)+22*pow(s14,3))+pow(s13,3)*(s23*s24*(15*s23*s24+36*(s23*s23)+s24*s24)+s14*s14*(-67*s23*s24+4*(s23*s23)+6*(s24*s24))+s14*s23*(43*s23*s24+32*(s23*s23)+15*(s24*s24))-2*(7*s23+4*s24)*pow(s14,3))+s23*(s13*s13)*(s14*s14*(-65*s23*s24+20*(s23*s23)-2*(s24*s24))+s23*s24*(6*s23*s24+12*(s23*s23)-s24*s24)+2*s14*s23*(26*s23*s24+10*(s23*s23)+s24*s24)-(11*s23+52*s24)*pow(s14,3)-8*pow(s14,4))+s14*s14*(s14*(3*s23-8*s24)+s23*(3*s23+8*s24)+6*(s14*s14))*pow(s23,3)+pow(s12,3)*(3*(s14*s14)*(25*s23*s24+51*(s23*s23)+2*(s24*s24))+s14*s23*(141*s23*s24+127*(s23*s23)+15*(s24*s24))+s13*s13*(407*s23*s24+4*s14*(102*s23+65*s24)+44*(s14*s14)+351*(s23*s23)+72*(s24*s24))+4*(25*s14+73*s23+49*s24)*pow(s13,3)+82*pow(s13,4)+3*(23*s23+4*s24)*pow(s14,3)+s13*((226*s23+96*s24)*(s14*s14)+2*s23*(130*s23*s24+83*(s23*s23)+39*(s24*s24))+s14*(378*s23*s24+431*(s23*s23)+48*(s24*s24))+22*pow(s14,3))+6*pow(s14,4)+s23*(45*s24*(s23*s23)+18*s23*(s24*s24)+25*pow(s23,3)+pow(s24,3)))+s12*((s14*(44*s23+48*s24)-18*(s14*s14)+4*(32*s23*s24+13*(s23*s23)+8*(s24*s24)))*pow(s13,4)+(24*s23+34*s24)*pow(s13,5)+4*pow(s13,6)+pow(s13,3)*(-17*s23*(s14*s14)+2*s23*(92*s23*s24+26*(s23*s23)+33*(s24*s24))+s14*(148*s23*s24+143*(s23*s23)+48*(s24*s24))-22*pow(s14,3))+s14*(s23*s23)*((31*s23-4*s24)*(s14*s14)+s14*(19*s23*s24+25*(s23*s23)-8*(s24*s24))+s23*(19*s23*s24+7*(s23*s23)+3*(s24*s24))+18*pow(s14,3))+s13*s23*(s14*s14*(-8*s23*s24+92*(s23*s23)-4*(s24*s24))+s14*s23*(122*s23*s24+61*(s23*s23)+8*(s24*s24))+(38*s23-36*s24)*pow(s14,3)-4*pow(s14,4)+s23*(22*s24*(s23*s23)+11*s23*(s24*s24)+4*pow(s23,3)-2*pow(s24,3)))+s13*s13*(s14*s14*(-58*s23*s24+71*(s23*s23)+18*(s24*s24))+s14*s23*(209*s23*s24+153*(s23*s23)+45*(s24*s24))-(33*s23+4*s24)*pow(s14,3)-8*pow(s14,4)+s23*(112*s24*(s23*s23)+48*s23*(s24*s24)+24*pow(s23,3)+3*pow(s24,3))))+s12*s12*((325*s23*s24+s14*(207*s23+176*s24)-22*(s14*s14)+217*(s23*s23)+68*(s24*s24))*pow(s13,3)+(24*s14+131*s23+114*s24)*pow(s13,4)+28*pow(s13,5)+s13*s13*((95*s23+72*s24)*(s14*s14)+s14*(387*s23*s24+385*(s23*s23)+72*(s24*s24))+s23*(326*s23*s24+157*(s23*s23)+108*(s24*s24))-22*pow(s14,3))+s23*(s14*s14*(50*s23*s24+91*(s23*s23)-2*(s24*s24))+s14*s23*(77*s23*s24+47*(s23*s23)+6*(s24*s24))+(75*s23+16*s24)*pow(s14,3)+18*pow(s14,4)+s23*(10*s24*(s23*s23)+5*s23*(s24*s24)+4*pow(s23,3)-pow(s24,3)))+s13*(s14*s14*(84*s23*s24+221*(s23*s23)+18*(s24*s24))+s14*s23*(307*s23*s24+245*(s23*s23)+45*(s24*s24))+4*(13*s23+4*s24)*pow(s14,3)-2*pow(s14,4)+s23*(121*s24*(s23*s23)+51*s23*(s24*s24)+47*pow(s23,3)+3*pow(s24,3)))))+8*pow(s13,-1)*(s14*(s23*s23)*(s14*(18*s23+25*s24)-10*(s14*s14)-2*(s23*s24+5*(s23*s23)-4*(s24*s24)))+(10*s23*s24+s13*(37*s14+30*s23+22*s24)+s14*(34*s23+24*s24)+14*(s13*s13)+4*(s14*s14)+8*(s23*s23)+4*(s24*s24))*pow(s12,3)+2*(6*s13+7*s14+5*s23+4*s24)*pow(s12,4)+4*pow(s12,5)+(s14*(12*s23+11*s24)-16*(s14*s14)+2*(4*s23*s24+7*(s23*s23)+s24*s24))*pow(s13,3)+2*(3*s23+s24)*pow(s13,4)+s12*(s13*s13*(22*s23*s24+6*s14*(9*s23+7*s24)-22*(s14*s14)+38*(s23*s23)+8*(s24*s24))+s14*s23*(21*s23*s24+s14*(40*s23+39*s24)-20*(s14*s14)-14*(s23*s23)+19*(s24*s24))+(13*s14+26*s23+10*s24)*pow(s13,3)+2*pow(s13,4)+s13*(5*(5*s23+7*s24)*(s14*s14)+2*(7*s23+5*s24)*(s23*s23)+s14*(62*s23*s24+25*(s23*s23)+20*(s24*s24))-25*pow(s14,3)))+s13*s23*((29*s23+48*s24)*(s14*s14)+2*(s23+s24)*(s23*s23)+s14*(14*s23*s24-10*(s23*s23)+19*(s24*s24))-25*pow(s14,3))+s13*s13*(-7*(s23-3*s24)*(s14*s14)+2*(5*s23+4*s24)*(s23*s23)+s14*(23*s23*s24+12*(s23*s23)+10*(s24*s24))-16*pow(s14,3))+s12*s12*((36*s14+40*s23+22*s24)*(s13*s13)+2*(13*s23+7*s24)*(s14*s14)+2*(s23+s24)*(s23*s23)+s14*(47*s23*s24+16*(s23*s23)+10*(s24*s24))+s13*(24*s23*s24+s14*(72*s23+55*s24)-4*(s14*s14)+30*(s23*s23)+10*(s24*s24))+8*pow(s13,3)-10*pow(s14,3)))*pow(s12+s13+s23,-2)*pow(s12+s23+s24,-1)-8*pow(s13,-1)*pow(s23,-1)*pow(s12+s13+s23,-3)*((25*s23*s24+4*s14*(5*s23+2*s24)+s13*(20*s14+90*s23+28*s24)+42*(s13*s13)+10*(s14*s14)+42*(s23*s23)+2*(s24*s24))*pow(s12,5)+(20*s13+6*s14+20*s23+6*s24)*pow(s12,6)+4*pow(s12,7)+(s14*s23*(12*s23+13*s24)-2*(13*s23+6*s24)*(s14*s14)+2*s23*(20*s23*s24+12*(s23*s23)+s24*s24))*pow(s13,4)+(-2*s14*(s23-s24)+8*s23*(s23+2*s24))*pow(s13,5)+2*s24*pow(s13,6)+s13*s14*(s23*s23)*(-((37*s23+52*s24)*(s14*s14))+4*s14*(s23*s24+s23*s23-2*(s24*s24))+s23*(17*s23*s24+14*(s23*s23)+2*(s24*s24))-2*pow(s14,3))+pow(s12,4)*(s14*s23*(36*s23+11*s24)+6*(4*s14+28*s23+9*s24)*(s13*s13)+12*(s23+s24)*(s14*s14)+s23*(41*s23*s24+46*(s23*s23)+8*(s24*s24))+s13*(103*s23*s24+s14*(56*s23+30*s24)+14*(s14*s14)+170*(s23*s23)+8*(s24*s24))+48*pow(s13,3)+14*pow(s14,3))+s14*s14*(-4*s14*(3*s23+2*s24)+s23*(6*s23+5*s24)+6*(s14*s14))*pow(s23,3)-s23*(s13*s13)*(s14*s14*(54*s23*s24+35*(s23*s23)+2*(s24*s24))+s14*s23*(-45*s23*s24-44*(s23*s23)+15*(s24*s24))+(55*s23+52*s24)*pow(s14,3)+8*pow(s14,4)+s23*(-14*s24*(s23*s23)-3*s23*(s24*s24)-8*pow(s23,3)+pow(s24,3)))+pow(s13,3)*(s14*s23*(39*s23*s24+44*(s23*s23)-11*(s24*s24))+s14*s14*(-59*s23*s24-59*(s23*s23)+6*(s24*s24))-4*(7*s23+2*s24)*pow(s14,3)+s23*(40*s24*(s23*s23)+5*s23*(s24*s24)+24*pow(s23,3)+pow(s24,3)))+pow(s12,3)*(s14*s23*(12*s23*s24+48*(s23*s23)-11*(s24*s24))-6*(s14*s14)*(s23*s24+3*(s23*s23)-s24*s24)+s13*s13*(175*s23*s24+s14*(57*s23+44*s24)-16*(s14*s14)+278*(s23*s23)+12*(s24*s24))+4*(3*s14+41*s23+14*s24)*pow(s13,3)+32*pow(s13,4)+6*(5*s23+2*s24)*pow(s14,3)+s13*(s14*s23*(108*s23+31*s24)+(-39*s23+24*s24)*(s14*s14)+s23*(149*s23*s24+164*(s23*s23)+26*(s24*s24))+8*pow(s14,3))+6*pow(s14,4)+s23*(31*s24*(s23*s23)+8*s23*(s24*s24)+26*pow(s23,3)+pow(s24,3)))+s12*((s14*(s23+12*s24)-14*(s14*s14)+2*(38*s23*s24+40*(s23*s23)+s24*s24))*pow(s13,4)+6*(3*s23+2*s24)*pow(s13,5)+2*pow(s13,6)+pow(s13,3)*(35*s14*s23*(2*s23+s24)-6*(19*s23+4*s24)*(s14*s14)+s23*(147*s23*s24+128*(s23*s23)+14*(s24*s24))-20*pow(s14,3))+2*s14*(s23*s23)*(-2*s14*s24*(5*s23+2*s24)-(11*s23+2*s24)*(s14*s14)+(6*s23+7*s24)*(s23*s23)+9*pow(s14,3))-s13*s23*(s14*s14*(90*s23*s24+59*(s23*s23)+4*(s24*s24))+s14*s23*(-61*s23*s24-84*(s23*s23)+26*(s24*s24))+6*(11*s23+6*s24)*pow(s14,3)+4*pow(s14,4)-s23*(23*s24*(s23*s23)+5*s23*(s24*s24)+14*pow(s23,3)-2*pow(s24,3)))+s13*s13*(3*s14*s23*(24*s23*s24+47*(s23*s23)-11*(s24*s24))+s14*s14*(-123*s23*s24-158*(s23*s23)+18*(s24*s24))-(81*s23+4*s24)*pow(s14,3)-8*pow(s14,4)+s23*(106*s24*(s23*s23)+18*s23*(s24*s24)+78*pow(s23,3)+3*pow(s24,3))))+s12*s12*((157*s23*s24+8*s14*(3*s23+4*s24)-34*(s14*s14)+222*(s23*s23)+8*(s24*s24))*pow(s13,3)+2*(s14+42*s23+17*s24)*pow(s13,4)+12*pow(s13,5)+s13*s13*(2*s14*s23*(65*s23+21*s24)-139*s23*(s14*s14)+s23*(215*s23*s24+222*(s23*s23)+30*(s24*s24))-26*pow(s14,3))+s23*(s14*s23*(23*s23*s24+38*(s23*s23)-11*(s24*s24))-s14*s14*(43*s23*s24+26*(s23*s23)+2*(s24*s24))+2*(3*s23+8*s24)*pow(s14,3)+18*pow(s14,4)+s23*(9*s24*(s23*s23)+2*s23*(s24*s24)+6*pow(s23,3)-pow(s24,3)))+s13*(s14*s23*(45*s23*s24+142*(s23*s23)-33*(s24*s24))-2*(s14*s14)*(35*s23*s24+58*(s23*s23)-9*(s24*s24))+(-21*s23+16*s24)*pow(s14,3)-2*pow(s14,4)+s23*(97*s24*(s23*s23)+21*s23*(s24*s24)+78*pow(s23,3)+3*pow(s24,3)))))*pow(s12+s23+s24,-1)+8*(s14*s23+s12*(s13+s14+s23+s24)+s13*(2*s23+s24)+s12*s12)*(2*s14*s23+10*s23*s24+s13*(-5*s14+5*s23+3*s24)+s12*(3*s13+10*s23+8*s24)+4*(s12*s12)+s13*s13-6*(s14*s14)+6*(s23*s23)+4*(s24*s24))*pow((-s12-s13-s14),-1)*pow(s23,-1)*pow((-s12-s23-s24),-1)+8*(s14*s23+s12*(s13+s14+s23+s24)+s13*(2*s23+s24)+s12*s12)*(s12*(s13*(13*s14-s23)+s14*(17*s14+4*s23+11*s24))+9*s14*(s12*s12)+(4*s14-s23)*(s13*s13)+s13*(s23*(s23+s24)+s14*(s23+9*s24)+12*(s14*s14))+s14*(-(s23*s24)+s14*(6*s23+13*s24)+8*(s14*s14)-5*(s23*s23)+4*(s24*s24)))*pow(s13,-1)*pow((-s12-s13-s14),-1)*pow(s23,-1)*pow((-s12-s23-s24),-1)-8*(s14*s23+s12*(s13+s14+s23+s24)+s13*(2*s23+s24)+s12*s12)*pow(s13,-1)*((s23*(9*s23+8*s24)+s14*(7*s23+9*s24))*(s13*s13)+s12*s12*(s13*(16*s14+15*s23)+16*s23*(s23+s24)+s14*(22*s23+15*s24)+16*(s14*s14))+s14*(8*s24*(s14*s14)+s24*(7*s23*s24+5*(s23*s23)+2*(s24*s24))+s14*(14*s23*s24+4*(s23*s23)+9*(s24*s24)))+s13*((5*s23+17*s24)*(s14*s14)+2*s14*(11*s23*s24+7*(s23*s23)+4*(s24*s24))+s23*(17*s23*s24+8*(s23*s23)+9*(s24*s24)))+8*(s14+s23)*pow(s12,3)+2*s23*pow(s13,3)+s12*((8*s14+9*s23)*(s13*s13)+(16*s23+25*s24)*(s14*s14)+s13*(s23*(25*s23+24*s24)+s14*(26*s23+24*s24)+16*(s14*s14))+s14*(26*s23*s24+16*(s23*s23)+9*(s24*s24))+8*s23*((s23+s24)*(s23+s24))+8*pow(s14,3)))*pow((-s12-s13-s14),-1)*pow(s23,-1)*pow(s24,-1)*pow((-s12-s23-s24),-1))/64.;
}

// Coefficient of master 10 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yygCA<10>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(0,{
        qq2yygCA<10,0>(s12,s13,s14,s23,s24),
        qq2yygCA<10,1>(s12,s13,s14,s23,s24),
        qq2yygCA<10,2>(s12,s13,s14,s23,s24)
    });
}

