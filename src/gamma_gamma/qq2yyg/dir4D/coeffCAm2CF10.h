/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 10: bubble(s12+s13+s23)

// Coefficient order epsilon^-1 of master 10
template<>
double qq2yygCAm2CF<10,-1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (-512*(s12*s13*(s23*(3*s14+s23)+s13*(5*s14+7*s23+3*s24)+7*(s13*s13))+s12*s12*(s14*s23+s13*(4*s14+5*s23+3*s24)+9*(s13*s13))+(5*s13+s14+s23+s24)*pow(s12,3)+pow(s12,4)+s13*(s13*s23*(2*s14+s23)+(2*s14+3*s23+s24)*(s13*s13)+s14*(s23*s23)+2*pow(s13,3)))*pow(s12+s13,-1)*pow(s12+s13+s14,-2)*pow(s23,-1)*pow(s12+s13+s23,-1)+256*(s13*s14*s23*(-s14+s23+s24)+(s23*s24+s14*(2*s23+s24))*(s13*s13)+s12*s12*(2*s13*(s14+s23)+s14*(s23+s24)+s23*(s23+s24)+s14*s14)+s12*(s14*s23*s24+(s14+s23)*(s13*s13)+s13*(s23*(s23+2*s24)+s14*(3*s23+2*s24)+s14*s14))-s14*s14*(s23*s23)+(s14+s23)*pow(s12,3))*pow(s12+s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)+512*(s12*s23*(s13*(s23+3*s24)+s23*(3*s14+s23+5*s24))+(s13*(2*s23+s24)+s23*(3*s14+3*s23+4*s24))*(s12*s12)+s23*(s14*(s23*s23)+s24*(2*s13*s23+s13*s13+2*(s23*s23)))+(s13+s14+3*s23+s24)*pow(s12,3)+pow(s12,4))*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-2)+256*pow(s13,-1)*pow(s12+s13,-2)*pow(s12+s13+s14,-3)*pow(s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*((6*s13*(6*s14+5*s23-s24)+s23*(6*s23-s24)+2*s14*(9*s23-s24)+42*(s13*s13)+6*(s14*s14))*pow(s12,6)+(14*s13+6*s14+6*s23-s24)*pow(s12,7)+2*pow(s12,8)-(s23+s24)*pow(s13,3)*(s13*s14*s23*(s14-2*s24)+s14*s14*(s23*s23)+s13*s13*(s14*(s23-s24)+s24*s24)-s24*pow(s13,3))+s12*(s13*s13)*(2*(s14-2*(s23+s24))*(s14*s14)*(s23*s23)+s13*s14*s23*(3*s23*s24-s14*(s23+5*s24)+4*(s14*s14)-4*(s23*s23)+7*(s24*s24))+(s14*(6*s23-2*s24)+4*s23*s24+6*(s14*s14)-s23*s23+5*(s24*s24))*pow(s13,3)+(6*s14+s23-s24)*pow(s13,4)+2*pow(s13,5)+s13*s13*((9*s23-s24)*(s14*s14)+s24*(-3*s23*s24+2*(s23*s23)-5*(s24*s24))+s14*(-3*s23*s24-5*(s23*s23)+4*(s24*s24))+2*pow(s14,3)))+pow(s12,3)*(6*(s14+s23)*(s14*s14)*(s23*s23)+s13*s14*s23*(s14*(33*s23-5*s24)-s23*s24+16*(s14*s14)+2*(s23*s23)+5*(s24*s24))+2*(s14*(51*s23-10*s24)+30*(s14*s14)+5*(s24*s24))*pow(s13,3)+3*(30*s14+12*s23-5*s24)*pow(s13,4)+42*pow(s13,5)+s13*s13*((79*s23-6*s24)*(s14*s14)+6*s24*(s23*s23)+2*s23*(s24*s24)+s14*(-15*s23*s24+27*(s23*s23)+4*(s24*s24))+12*pow(s14,3)-4*pow(s23,3)-10*pow(s24,3)))+s12*s12*(s13*(8*s14+s23-3*s24)*(s14*s14)*(s23*s23)+s14*s23*(s13*s13)*(s14*(15*s23-8*s24)+14*(s14*s14)-8*(s23*s23)+9*(s24*s24))+(10*s14*(4*s23-s24)+5*s23*s24+30*(s14*s14)-4*(s23*s23)+10*(s24*s24))*pow(s13,4)+2*(18*s14+5*s23-3*s24)*pow(s13,5)+14*pow(s13,6)+2*pow(s14,3)*pow(s23,3)+pow(s13,3)*((44*s23-4*s24)*(s14*s14)+6*s24*(s23*s23)-s14*(11*s23*s24+s23*s23-6*(s24*s24))-2*s23*(s24*s24)+8*pow(s14,3)-3*pow(s23,3)-10*pow(s24,3)))+pow(s12,4)*(s14*s23*(s14*(18*s23-s24)+6*(s14*s14)+6*(s23*s23)+s24*s24)+s13*s13*(2*s14*(63*s23-10*s24)-5*s23*s24+60*(s14*s14)+14*(s23*s23)+5*(s24*s24))+4*(30*s14+16*s23-5*s24)*pow(s13,3)+70*pow(s13,4)+s13*((62*s23-4*s24)*(s14*s14)+2*s24*(s23*s23)+3*s23*(s24*s24)+s14*(-9*s23*s24+42*(s23*s23)+s24*s24)+8*pow(s14,3)+pow(s23,3)-5*pow(s24,3)))+pow(s12,5)*(2*s14*s23*(9*s23-s24)+(90*s14+61*s23-15*s24)*(s13*s13)+(18*s23-s24)*(s14*s14)+s23*(s24*s24)+s13*(2*s14*(38*s23-5*s24)-4*s23*s24+30*(s14*s14)+17*(s23*s23)+s24*s24)+70*pow(s13,3)+2*pow(s14,3)+2*pow(s23,3)-pow(s24,3)))+256*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s23,-2)*pow(s12+s13+s23,-1)*pow(s24,-3)*((15*s14*s23+s13*(6*s14+12*s23-s24)-s23*s24+3*(s13*s13)+3*(s14*s14)+10*(s23*s23)+s24*s24)*pow(s12,6)+(3*s13+3*s14+5*s23)*pow(s12,7)+pow(s12,8)+s14*(-(s14*s23*(2*s13+s23)*s24)+s14*s14*(s23*s23)+s13*(s13+s23)*(s24*s24))*pow(s23,3)+s12*s12*(s23*(s13*s13)*(s24*(-3*s23*s24+s23*s23-8*(s24*s24))+s14*(-4*s23*s24+3*(s23*s23)+3*(s24*s24)))+s13*(s23*s23)*(3*(4*s23-3*s24)*(s14*s14)+s14*(-11*s23*s24+6*(s23*s23)+8*(s24*s24))-s24*(s23*s24+s23*s23+14*(s24*s24)))+s24*(-2*s23*s24+s23*s23-2*(s24*s24))*pow(s13,3)+(3*(5*s23-2*s24)*(s14*s14)+s14*(-8*s23*s24+3*(s23*s23)+4*(s24*s24))-s24*(-(s23*s24)+s23*s23+8*(s24*s24))+10*pow(s14,3))*pow(s23,3))+pow(s12,3)*(s23*s23*pow(s13,3)+s13*s23*((18*s23-5*s24)*(s14*s14)-4*s24*(s23*s23)+3*s23*(s24*s24)+s14*(-15*s23*s24+24*(s23*s23)+5*(s24*s24))+3*pow(s23,3)-16*pow(s24,3))+s23*s23*((30*s23-4*s24)*(s14*s14)-4*s24*(s23*s23)+4*s23*(s24*s24)+3*s14*(-4*s23*s24+5*(s23*s23)+2*(s24*s24))+10*pow(s14,3)+pow(s23,3)-12*pow(s24,3))+s13*s13*(s14*s23*(9*s23-5*s24)-s23*(s24*s24)+3*pow(s23,3)-6*pow(s24,3)))+pow(s12,4)*(s13*s13*(s14*(9*s23-2*s24)-3*s23*s24+9*(s23*s23)+s24*s24)+(2*s23-s24)*pow(s13,3)+s23*((30*s23-s24)*(s14*s14)-6*s24*(s23*s23)+6*s23*(s24*s24)+s14*(-8*s23*s24+30*(s23*s23)+4*(s24*s24))+5*pow(s14,3)+5*pow(s23,3)-8*pow(s24,3))+s13*((12*s23-s24)*(s14*s14)-6*s24*(s23*s23)+5*s23*(s24*s24)+s14*(-9*s23*s24+36*(s23*s23)+s24*s24)+12*pow(s23,3)-6*pow(s24,3)))+pow(s12,5)*((3*s14+9*s23-2*s24)*(s13*s13)+15*s23*(s14*s14)-4*s24*(s23*s23)+4*s23*(s24*s24)+s14*(-2*s23*s24+30*(s23*s23)+s24*s24)+s13*(s14*(24*s23-2*s24)+3*(s14*s14)+2*(-2*s23*s24+9*(s23*s23)+s24*s24))+pow(s13,3)+pow(s14,3)+10*pow(s23,3)-2*pow(s24,3))-s12*(s23*s23)*(s24*(s14*(s23-4*s24)+s24*(s23+2*s24))*(s13*s13)+s13*s23*(s14*(3*s23-5*s24)*s24+(-3*s23+7*s24)*(s14*s14)+(s23+4*s24)*(s24*s24))+s23*s23*(s14*(2*s23-s24)*s24+(-3*s23+4*s24)*(s14*s14)-5*pow(s14,3)+2*pow(s24,3))))+512*pow(s12+s13+s14,-1)*pow(s23,-1)*(s13*(s12*s12)*pow(s12+s23,-2)+s12*(2*s12+s23)*pow(s12+s23,-1)-s12*s12*(s13*s13)*pow(s13+s23,-3)+s12*s13*(3*s12+s23)*pow(s13+s23,-2)-s12*(3*s12+2*s23)*pow(s13+s23,-1)-(7*s12-2*(s13+s14-s23))*(s12+s23+s24)*pow(s12+s13+s23,-1)+(5*s12-s13-s14+s23)*(s12+s13+s14+s23+s24)*pow(s12+s13+s23,-1)-3*(s12+s23+s24)*(s12+s13+s14+s23+s24)*pow(s12+s13+s23,-1)+(-((s13+s14)*s23)+s12*(-4*s13-4*s14+3*s23)+5*(s12*s12))*pow(s12+s13+s23,-1)+3*((s12+s23+s24)*(s12+s23+s24))*pow(s12+s13+s23,-1)+(s12+s13+s14+s23+s24)*(s12+s13+s14+s23+s24)*pow(s12+s13+s23,-1)-s12*(2*s12-s13-s14+s23)*(s23*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)+s12*pow(s12+s23,-2)*pow(s12+s13+s23,-1)*pow(s24,-2)*(-((s14+s24)*(s14*(-s23+s24)+s24*(2*s13+s23+s24))*(s23*s23))+s12*s23*((3*s23-2*s24)*(s14*s14)+2*s13*(s14*(s23-2*s24)-2*(s24*s24))+2*s14*(s23*s23-2*(s24*s24))-(3*s23+2*s24)*(s24*s24))+(6*s14*s23+2*s13*(s14+2*s23)+2*s23*s24+s13*s13+s14*s14+3*(s23*s23)-s24*s24)*pow(s12,3)+(2*s13+2*s14+3*s23+s24)*pow(s12,4)+pow(s12,5)+s12*s12*((s23-s24)*(s13*s13)+(3*s23-s24)*(s14*s14)+s24*(s23*s23)+s14*(6*(s23*s23)-2*(s24*s24))+2*s13*(s14*(2*s23-s24)+s23*s23-s24*s24)-3*s23*(s24*s24)+pow(s23,3)-pow(s24,3)))-pow(s13+s23,-3)*(pow(s12,5)*pow(s13,3)-pow(s12,4)*(-9*s23*s24*(s13*s13)-9*s13*s24*(s23*s23)+(-2*s14+s23-5*s24)*pow(s13,3)+pow(s13,4)-3*s24*pow(s23,3))+pow(s12,3)*(9*s23*s24*(2*s14+s23+3*s24)*(s13*s13)+3*s13*s24*(6*s14+5*s23+9*s24)*(s23*s23)+(-(s14*(s23-8*s24))-4*s23*s24+s14*s14+s23*s23+10*(s24*s24))*pow(s13,3)-(s14-2*s23+4*s24)*pow(s13,4)+pow(s13,5)+3*s24*(2*s14+2*s23+3*s24)*pow(s23,3))+s24*(s12*s12)*(12*s23*s24+12*s14*(s23+s24)-3*s13*(s14+s23+2*s24)+3*(s13*s13)+3*(s14*s14)+3*(s23*s23)+10*(s24*s24))*pow(s13+s23,3)+s12*s24*(-(s13*(3*s14*(s23+s24)+s24*(3*s23+4*s24)))+3*s24*(s13*s13)+3*(2*s23+s24)*(s14*s14)+s24*(8*s23*s24+3*(s23*s23)+5*(s24*s24))+s14*(15*s23*s24+6*(s23*s23)+8*(s24*s24)))*pow(s13+s23,3)+s24*(s14*s14*(3*s23*s24+3*(s23*s23)+s24*s24)+s14*s24*(5*s23*s24-s13*(3*s23+s24)+3*(s23*s23)+2*(s24*s24))+s24*s24*(-(s13*(s23+s24))+s13*s13+(s23+s24)*(s23+s24)))*pow(s13+s23,3))*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-3)+(3*s12-s13-s14+s23)*(-(s12*(2*s13-2*s14-2*s23-3*s24)*s24*((s13+s23)*(s13+s23)))-s24*((s13-s23-s24)*s24-s14*(2*s23+s24))*((s13+s23)*(s13+s23))+s13*s13*pow(s12,3)+s12*s12*(4*s13*s23*s24+(s14-s23+3*s24)*(s13*s13)+2*s24*(s23*s23)-pow(s13,3)))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)+(s12*s13+(s13+s23)*s24)*(s12*(3*s13+3*s14-2*s23)+(s13+s14)*s23-3*(s12*s12))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1))+256*pow(s13,-1)*pow(s24,-1)*(2*s23*(s12*s12)*pow(s12+s13,-2)+s12*(s12+s13-3*s23-2*s24)*pow(s12+s13,-1)-2*(s12*s12)*(s23*s23)*pow(s13+s23,-3)+s12*s23*(3*s12+s13-3*s23-2*s24)*pow(s13+s23,-2)+(s12+s23)*(s12+s13+s23)*(s12+s13+s14+s23+s24)*pow(s13+s23,-2)-((s13+2*s23)*(s23+s24)+s12*(3*s13-2*(s23+s24))+2*(s12*s12))*pow(s13+s23,-1)+s12*(s12+s23)*(s14*s23+s12*(2*s13+s14+s23+s24)+s13*(2*s14+s23+s24)+s12*s12+s13*s13)*pow(s13,-1)*pow(s12+s13,-1)*pow(s13+s23,-1)+6*(s12+s13+s14)*(s12+s13+s14+s23+s24)*pow(s12+s13+s23,-1)-2*(4*s12-2*s23-s24)*(s12+s13+s14+s23+s24)*pow(s12+s13+s23,-1)+2*(s12+s13+s14)*(5*s12-2*(2*s23+s24))*pow(s12+s13+s23,-1)-((s13+3*s23)*(s23+s24)+s12*(s13-5*(2*s23+s24))+5*(s12*s12))*pow(s12+s13+s23,-1)-6*((s12+s13+s14)*(s12+s13+s14))*pow(s12+s13+s23,-1)-2*((s12+s13+s14+s23+s24)*(s12+s13+s14+s23+s24))*pow(s12+s13+s23,-1)-2*s12*(-((s14+s24)*(s13*(s14-s24)+s14*(s14+2*s23+s24))*(s13*s13))+s12*s13*(-2*s14*(s14+s24)*(s14+2*s23+s24)+2*s24*(s13*s13)+s13*(s24*(2*s23+3*s24)-3*(s14*s14)))+(2*s13*(s14+2*s23+3*s24)+3*(s13*s13)-s14*s14+(s23+s24)*(s23+s24))*pow(s12,3)+(3*s13+s14+2*(s23+s24))*pow(s12,4)+pow(s12,5)+s12*s12*((s14+2*s23+6*s24)*(s13*s13)+s13*(4*s23*s24-3*(s14*s14)+s23*s23+3*(s24*s24))-s14*((s14+s23+s24)*(s14+s23+s24))+pow(s13,3)))*pow(s12+s13,-2)*pow(s14,-2)*pow(s12+s13+s23,-1)+2*s12*(s12-2*s23-s24)*(s13*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s12+s13,-1)*pow(s14,-1)*pow(s12+s13+s23,-1)+2*pow(s13+s23,-3)*(pow(s12,5)*pow(s23,3)+pow(s12,4)*(9*s14*s23*(s13*s13)+s13*(9*s14-s23)*(s23*s23)+3*s14*pow(s13,3)+(5*s14-s23+2*s24)*pow(s23,3))+pow(s12,3)*(s13*(s23*(2*s23-s24)+s14*(-4*s23+18*s24)+27*(s14*s14))*(s23*s23)+s23*(s13*s13)*(9*s14*(s23+2*s24)+27*(s14*s14)+s23*s23)+3*s14*(3*s14+5*s23+2*s24)*pow(s13,3)+6*s14*pow(s13,4)+(-4*s14*(s23-2*s24)-s23*s24+10*(s14*s14)+s23*s23+s24*s24)*pow(s23,3))+s14*(s12*s12)*(-6*s14*(s23-2*s24)+3*s13*(4*s14-s23+4*s24)+3*(s13*s13)+10*(s14*s14)+3*(-(s23*s24)+s23*s23+s24*s24))*pow(s13+s23,3)+s14*(s13*s14*(-(s14*(s23-5*s24))+3*s24*(-s23+s24)+2*(s14*s14))+s14*s14*(-(s14*(s23-2*s24))-s23*s24+s14*s14+s23*s23+s24*s24)+s13*s13*(3*s14*s24+s14*s14+3*(s24*s24)))*pow(s13+s23,3)+s12*s14*(3*(s14+2*s24)*(s13*s13)+s13*(-3*s14*(s23-5*s24)-3*(s23-2*s24)*s24+8*(s14*s14))+s14*(-4*s14*(s23-2*s24)+5*(s14*s14)+3*(-(s23*s24)+s23*s23+s24*s24)))*pow(s13+s23,3))*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-3)+2*(-2*s12+2*s23+s24)*(s12*s12*(s13*(4*s14-s23)*s23+2*s14*(s13*s13)+(3*s14-s23+s24)*(s23*s23))+s12*s14*(2*s13+3*s14-2*s23+2*s24)*((s13+s23)*(s13+s23))+s14*(s14*(s14-s23+s24)+s13*(s14+2*s24))*((s13+s23)*(s13+s23))+s23*s23*pow(s12,3))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)+(s13*s14+(s12+s14)*s23)*((s13+3*s23)*(s23+s24)+s12*(s13-3*(2*s23+s24))+3*(s12*s12))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1))+256*pow(s24,-1)*(s12*pow(s12+s23,-1)-(s12*(s13+s23)+s23*(2*s13+s23))*pow(s13,-1)*pow(s12+s23,-1)+2*s13*(s12*s12)*pow(s13+s23,-3)-2*s12*(2*s12+s23)*pow(s13+s23,-2)+(2*s12*s23+s23*(s13+s23)+2*(s12*s12))*pow(s13,-1)*pow(s13+s23,-1)+(s12+s23)*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s12+s13+s23,-1)+(s12+s23+s24)*(4*s12+s13+3*s23+2*s24)*pow(s13,-1)*pow(s12+s13+s23,-1)-(s23*(2*s23+s24)+2*s12*(s13+2*s23+s24)+s13*(3*s23+s24)+2*(s12*s12))*pow(s13,-1)*pow(s12+s13+s23,-1)-2*((s12+s23+s24)*(s12+s23+s24))*pow(s13,-1)*pow(s12+s13+s23,-1)-(s12+s23+s24)*(s23*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)+2*pow(s13,-1)*pow(s13+s23,-3)*(pow(s12,5)*pow(s13,3)-pow(s12,4)*(-9*s23*s24*(s13*s13)-9*s13*s24*(s23*s23)+(-2*s14+s23-5*s24)*pow(s13,3)+pow(s13,4)-3*s24*pow(s23,3))+pow(s12,3)*(9*s23*s24*(2*s14+s23+3*s24)*(s13*s13)+3*s13*s24*(6*s14+5*s23+9*s24)*(s23*s23)+(-(s14*(s23-8*s24))-4*s23*s24+s14*s14+s23*s23+10*(s24*s24))*pow(s13,3)-(s14-2*s23+4*s24)*pow(s13,4)+pow(s13,5)+3*s24*(2*s14+2*s23+3*s24)*pow(s23,3))+s24*(s12*s12)*(12*s23*s24+12*s14*(s23+s24)-3*s13*(s14+s23+2*s24)+3*(s13*s13)+3*(s14*s14)+3*(s23*s23)+10*(s24*s24))*pow(s13+s23,3)+s12*s24*(-(s13*(3*s14*(s23+s24)+s24*(3*s23+4*s24)))+3*s24*(s13*s13)+3*(2*s23+s24)*(s14*s14)+s24*(8*s23*s24+3*(s23*s23)+5*(s24*s24))+s14*(15*s23*s24+6*(s23*s23)+8*(s24*s24)))*pow(s13+s23,3)+s24*(s14*s14*(3*s23*s24+3*(s23*s23)+s24*s24)+s14*s24*(5*s23*s24-s13*(3*s23+s24)+3*(s23*s23)+2*(s24*s24))+s24*s24*(-(s13*(s23+s24))+s13*s13+(s23+s24)*(s23+s24)))*pow(s13+s23,3))*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-3)-2*(3*s12+2*s23+s24)*pow(s13,-1)*(-(s12*(2*s13-2*s14-2*s23-3*s24)*s24*((s13+s23)*(s13+s23)))-s24*((s13-s23-s24)*s24-s14*(2*s23+s24))*((s13+s23)*(s13+s23))+s13*s13*pow(s12,3)+s12*s12*(4*s13*s23*s24+(s14-s23+3*s24)*(s13*s13)+2*s24*(s23*s23)-pow(s13,3)))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)+(s12*s13+(s13+s23)*s24)*(4*s12*(2*s23+s24)+s23*(s13+3*s23+2*s24)+6*(s12*s12))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1))+256*(s12*pow(s12+s13,-1)*pow(s12+s13+s14,-1)+(s12+s13+s23)*pow(s12+s13,-1)*pow(s23,-1)-(s13*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s12+s13,-1)*pow(s14,-1)*pow(s23,-1)-(-(s14*s23)+s12*(s14+s23+s24)+s13*(2*s23+s24))*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)+2*s23*(s12*s12)*pow(s12+s13+s14,-1)*pow(s13+s23,-3)-s12*(3*s12+s13+2*s14-s23)*pow(s12+s13+s14,-1)*pow(s13+s23,-2)-(s12+s13)*(s12+s13+s23)*(s12+s13+s14+s23+s24)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-2)+s12*(s14*s23+s12*(2*s13+s14+s23+s24)+s13*(2*s14+s23+s24)+s12*s12+s13*s13)*pow(s13,-1)*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s13+s23,-1)+(s23*(-2*s14+s23+s24)+2*s12*(s13+s14+s23+s24)+s13*(s23+2*s24)+3*(s12*s12))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-1)+2*(s12+s13+s14)*pow(s23,-1)*pow(s12+s13+s23,-1)+(-2*s12-s13-2*s14+s23)*pow(s23,-1)*pow(s12+s13+s23,-1)-(s12+s13)*(s12+s13+s14+s23+s24)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)+(s23*(2*s14+s23+s24)+s12*(8*s13+5*s14+3*s23+2*s24)+s13*(4*s14+5*s23+2*s24)+4*(s12*s12)+4*(s13*s13))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)-2*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-3)*(pow(s12,5)*pow(s23,3)+pow(s12,4)*(9*s14*s23*(s13*s13)+s13*(9*s14-s23)*(s23*s23)+3*s14*pow(s13,3)+(5*s14-s23+2*s24)*pow(s23,3))+pow(s12,3)*(s13*(s23*(2*s23-s24)+s14*(-4*s23+18*s24)+27*(s14*s14))*(s23*s23)+s23*(s13*s13)*(9*s14*(s23+2*s24)+27*(s14*s14)+s23*s23)+3*s14*(3*s14+5*s23+2*s24)*pow(s13,3)+6*s14*pow(s13,4)+(-4*s14*(s23-2*s24)-s23*s24+10*(s14*s14)+s23*s23+s24*s24)*pow(s23,3))+s14*(s12*s12)*(-6*s14*(s23-2*s24)+3*s13*(4*s14-s23+4*s24)+3*(s13*s13)+10*(s14*s14)+3*(-(s23*s24)+s23*s23+s24*s24))*pow(s13+s23,3)+s14*(s13*s14*(-(s14*(s23-5*s24))+3*s24*(-s23+s24)+2*(s14*s14))+s14*s14*(-(s14*(s23-2*s24))-s23*s24+s14*s14+s23*s23+s24*s24)+s13*s13*(3*s14*s24+s14*s14+3*(s24*s24)))*pow(s13+s23,3)+s12*s14*(3*(s14+2*s24)*(s13*s13)+s13*(-3*s14*(s23-5*s24)-3*(s23-2*s24)*s24+8*(s14*s14))+s14*(-4*s14*(s23-2*s24)+5*(s14*s14)+3*(-(s23*s24)+s23*s23+s24*s24)))*pow(s13+s23,3))*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-3)+2*(2*s12+s13+s14-s23)*(s12*s12*(s13*(4*s14-s23)*s23+2*s14*(s13*s13)+(3*s14-s23+s24)*(s23*s23))+s12*s14*(2*s13+3*s14-2*s23+2*s24)*((s13+s23)*(s13+s23))+s14*(s14*(s14-s23+s24)+s13*(s14+2*s24))*((s13+s23)*(s13+s23))+s23*s23*pow(s12,3))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)-(s13*s14+(s12+s14)*s23)*(3*s23*(s23+s24)+s12*(8*s13+5*s14+2*s23+4*s24)+s13*(3*s14+4*(s23+s24))+6*(s12*s12)+3*(s13*s13))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1))-256*pow(s13,-1)*pow(s12+s13,-2)*pow(s14,-3)*pow(s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*((-(s14*s23)+s13*(-s14+12*s23+15*s24)+10*(s13*s13)+s14*s14+3*((s23+s24)*(s23+s24)))*pow(s12,6)+(5*s13+3*(s23+s24))*pow(s12,7)+pow(s12,8)-s12*s12*(s13*s23*(s14*s14)*(s14*(2*s23+s24)+s23*(4*s23+s24)+2*(s14*s14))-s14*s23*(s13*s13)*(-4*s23*s24+s14*(-7*s23+2*s24)+9*(s14*s14)+s23*s23-9*(s24*s24))-(3*s24*(2*s23+5*s24)-s14*(s23+8*s24)+s14*s14)*pow(s13,4)+(s14-3*s24)*pow(s13,5)+(2*s14+s23+s24)*(s23*s23)*pow(s14,3)-pow(s13,3)*((-3*s23+4*s24)*(s14*s14)+s14*(-11*s23*s24+s23*s23-6*(s24*s24))+s24*(12*s23*s24+3*(s23*s23)+10*(s24*s24))+8*pow(s14,3)))+pow(s12,4)*(s13*s13*(36*s23*s24-2*s14*(3*s23+4*s24)+6*(s14*s14)+9*(s23*s23)+30*(s24*s24))+s14*s23*(-(s14*(3*s23+s24))+3*(s14*s14)-(s23+s24)*(s23+s24))-6*(s14-2*s23-5*s24)*pow(s13,3)+5*pow(s13,4)+s13*(-((s23-4*s24)*(s14*s14))-s14*(9*s23*s24+3*(s23*s23)+s24*s24)+(2*s23+5*s24)*((s23+s24)*(s23+s24))+8*pow(s14,3)))+s13*(s23*(s14+s23)*s24*(s13*s13)*(s14*s14)+s14*s23*(s14-2*s24)*s24*pow(s13,3)+(-s14+s24)*(s24*s24)*pow(s13,4)+s13*(-s14+s24)*(s23*s23)*pow(s14,3)-pow(s14,4)*pow(s23,3))-s12*(s23*(s14+2*s23)*(s14-s24)*(s13*s13)*(s14*s14)+s14*s23*(s14*(s23-3*s24)+s24*(s23+7*s24)-3*(s14*s14))*pow(s13,3)+(2*s14-3*s24)*s24*pow(s13,5)+pow(s13,4)*(s14*s24*(3*s23+4*s24)+(s23-s24)*(s14*s14)-(3*s23+5*s24)*(s24*s24)-2*pow(s14,3))+3*s13*(s14+s23)*(s23*s23)*pow(s14,3)+pow(s14,4)*pow(s23,3))+pow(s12,3)*(-(s23*(s14*s14)*(s14*s24+2*s23*(s23+s24)+s14*s14))+s13*s14*s23*(-5*s24*(s23+s24)-s14*(9*s23+s24)+9*(s14*s14))+(-4*s14*(s23+3*s24)+4*(s14*s14)+3*(8*s23*s24+s23*s23+10*(s24*s24)))*pow(s13,3)+(-4*s14+3*(s23+5*s24))*pow(s13,4)+pow(s13,5)+s13*s13*(-(s14*s24*(15*s23+4*s24))-3*(s23-2*s24)*(s14*s14)+9*s24*(s23*s23)+18*s23*(s24*s24)+12*pow(s14,3)+pow(s23,3)+10*pow(s24,3)))+pow(s12,5)*(-2*s14*s23*(s23+s24)+(-4*s14+18*s23+30*s24)*(s13*s13)+s24*(s14*s14)+s13*(-2*s14*(2*s23+s24)+4*(s14*s14)+3*(8*s23*s24+3*(s23*s23)+5*(s24*s24)))+10*pow(s13,3)+2*pow(s14,3)+pow(s23+s24,3)))+256*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s23,-2)*pow(s12+s13+s23,-1)*(2*(8*s13*(2*s23+s24)+s14*(3*s23+s24)+2*(s13*s13)+3*(6*s23*s24+7*(s23*s23)+s24*s24))*pow(s12,6)+(5*s13+s14+14*s23+6*s24)*pow(s12,7)+2*pow(s12,8)+pow(s12,5)*((-s14+23*s23+14*s24)*(s13*s13)-s23*(s14*s14)+s14*(10*s23*s24+15*(s23*s23)+s24*s24)+s13*(82*s23*s24+s14*(-2*s23+s24)-s14*s14+84*(s23*s23)+18*(s24*s24))+pow(s13,3)+pow(s14,3)+2*(45*s24*(s23*s23)+15*s23*(s24*s24)+35*pow(s23,3)+pow(s24,3)))+s23*((s14-s23-s24)*(s14*s14)*pow(s23,4)+s13*s14*(s23*s23)*(s14*s23*(s23-2*s24)-3*s24*(s23*s23)-2*s23*(s24*s24)-2*pow(s23,3)-pow(s24,3))+s24*pow(s13,3)*(4*s24*(s23*s23)+3*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+s23*(s13*s13)*(-(s14*(5*s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3)))+s24*(4*s24*(s23*s23)+3*s23*(s24*s24)+2*pow(s23,3)+pow(s24,3))))+pow(s12,4)*(s13*s13*(59*s23*s24-s14*(7*s23+s24)+46*(s23*s23)+18*(s24*s24))+(5*s23+4*s24)*pow(s13,3)+s23*(-((5*s23+s24)*(s14*s14))+120*s24*(s23*s23)+60*s23*(s24*s24)+4*s14*(5*s23*s24+5*(s23*s23)+s24*s24)+5*pow(s14,3)+70*pow(s23,3)+8*pow(s24,3))+s13*(-((3*s23+s24)*(s14*s14))+2*s14*(s23*s24-5*(s23*s23)+s24*s24)+2*(83*s24*(s23*s23)+35*s23*(s24*s24)+58*pow(s23,3)+4*pow(s24,3))))+pow(s12,3)*((13*s23*s24+4*(s23*s23)+6*(s24*s24))*pow(s13,3)+s13*s13*(85*s24*(s23*s23)+52*s23*(s24*s24)+s14*(-5*s23*s24-16*(s23*s23)+s24*s24)+40*pow(s23,3)+10*pow(s24,3))+s23*s23*(-2*(5*s23+2*s24)*(s14*s14)+s14*(20*s23*s24+15*(s23*s23)+6*(s24*s24))+10*pow(s14,3)+6*(15*s24*(s23*s23)+10*s23*(s24*s24)+7*pow(s23,3)+2*pow(s24,3)))+s13*(-(s23*(2*s23+5*s24)*(s14*s14))+101*(s23*s23)*(s24*s24)+166*s24*pow(s23,3)+89*pow(s23,4)+22*s23*pow(s24,3)+s14*(-3*s24*(s23*s23)+5*s23*(s24*s24)-20*pow(s23,3)+pow(s24,3))+pow(s24,4)))+s12*s12*(2*(-((5*s23+3*s24)*(s14*s14))+s14*(5*s23*s24+3*(s23*s23)+2*(s24*s24))+(7*s23+4*s24)*((s23+s24)*(s23+s24))+5*pow(s14,3))*pow(s23,3)+pow(s13,3)*(9*s24*(s23*s23)+12*s23*(s24*s24)-3*pow(s23,3)+4*pow(s24,3))+s13*s13*(50*(s23*s23)*(s24*s24)+51*s24*pow(s23,3)+14*pow(s23,4)+19*s23*pow(s24,3)+s14*(-12*s24*(s23*s23)+2*s23*(s24*s24)-16*pow(s23,3)+pow(s24,3))+2*pow(s24,4))+s13*s23*(s23*(2*s23-9*s24)*(s14*s14)+s14*(-11*s24*(s23*s23)+2*s23*(s24*s24)-20*pow(s23,3)+pow(s24,3))+2*(32*(s23*s23)*(s24*s24)+41*s24*pow(s23,3)+18*pow(s23,4)+10*s23*pow(s24,3)+pow(s24,4))))+s12*(s13*(s23*s23)*(s23*(3*s23-7*s24)*(s14*s14)+(4*s23*s24+6*(s23*s23)+s24*s24)*((s23+s24)*(s23+s24))-s14*(10*s24*(s23*s23)+3*s23*(s24*s24)+10*pow(s23,3)+pow(s24,3)))+pow(s13,3)*(8*(s23*s23)*(s24*s24)+s24*pow(s23,3)-3*pow(s23,4)+5*s23*pow(s24,3)+pow(s24,4))+s23*(s13*s13)*(20*(s23*s23)*(s24*s24)-s14*s23*(13*s23*s24+7*(s23*s23)+s24*s24)+13*s24*pow(s23,3)+pow(s23,4)+12*s23*pow(s24,3)+3*pow(s24,4))+pow(s23,4)*(-((5*s23+4*s24)*(s14*s14))+s14*((s23+s24)*(s23+s24))+5*pow(s14,3)+2*pow(s23+s24,3))))*pow(s12+s23+s24,-3)-512*((s13*(5*s23+s24)+s23*(3*s14+9*s23+4*s24))*(s12*s12)+s12*s23*(s13*(7*s23+3*s24)+s23*(3*s14+7*s23+5*s24)+s13*s13)+s23*(s13*s23*(3*s23+2*s24)+(s23+s24)*(s13*s13)+(s14+2*(s23+s24))*(s23*s23))+(s13+s14+5*s23+s24)*pow(s12,3)+pow(s12,4))*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-2)+256*(s13*s23*((2*s23-s24)*s24+s14*(s23+s24))+(s23-s24)*s24*(s13*s13)+s12*s12*(s13*(s14+2*s23+s24)+s24*(s14+2*s23+s24)+s13*s13)+s12*(s23*s24*(2*s14+s23+s24)+s13*(s14*(2*s23+s24)+s23*(s23+3*s24))+s23*(s13*s13))+s14*s24*(s23*s23)+(s13+s24)*pow(s12,3))*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*pow(s12+s23+s24,-1)+256*(s14*(s23+s24)*(s23*s23)-s13*s23*(3*s23*s24+s24*(-s14+s24)+2*(s23*s23))+s12*s12*(4*s23*s24+s24*(s13+s24)+s14*(3*s23+s24)+3*(s23*s23))-s13*s13*(2*s23*s24+2*(s23*s23)+s24*s24)+s12*(-((2*s23+s24)*(s13*s13))+s13*(s14*s24-2*s23*s24-3*(s23*s23))+s23*(s14*(3*s23+2*s24)+(s23+s24)*(s23+s24)))+(s13+s14+3*s23+2*s24)*pow(s12,3)+pow(s12,4))*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*pow(s12+s23+s24,-1)+256*pow(s13,-1)*pow(s12+s13,-2)*pow(s12+s13+s14,-3)*pow(s23,-1)*pow(s12+s13+s23,-1)*(2*(s14*(8*s23+s24)+s13*(18*s14+16*s23+3*s24)+21*(s13*s13)+3*(s14*s14)+2*(s23*s23))*pow(s12,6)+(14*s13+6*s14+5*s23+s24)*pow(s12,7)+2*pow(s12,8)+pow(s12,5)*(s14*s23*(14*s23+s24)+3*(30*s14+28*s23+5*s24)*(s13*s13)+(18*s23+s24)*(s14*s14)+(s23+s24)*((s23-s24)*(s23-s24))+s13*(-2*s23*s24+2*s14*(41*s23+5*s24)+30*(s14*s14)+23*(s23*s23)-s24*s24)+70*pow(s13,3)+2*pow(s14,3))+s13*(s23*(2*s23*(2*s23-s24)+s14*(3*s23-s24))*(s13*s13)*(s14*s14)+s14*s23*(s14*(4*s23-2*s24)-5*s23*s24+s23*s23-2*(s24*s24))*pow(s13,3)+(s14*(-3*s23*s24+2*(s23*s23)-s24*s24)+s24*(s23*s24-s23*s23+s24*s24))*pow(s13,4)-s24*(2*s23+s24)*pow(s13,5)+s13*(s14+3*s23-s24)*(s23*s23)*pow(s14,3)+pow(s14,4)*pow(s23,3))+s12*(s23*(s13*s13)*(s14*s14)*(s23*(8*s23-s24)+s14*(12*s23-s24)+s14*s14)+s14*s23*(s14*(20*s23-3*s24)-13*s23*s24+6*(s14*s14)+s23*s23-7*(s24*s24))*pow(s13,3)+(-10*s23*s24+2*s14*(8*s23+s24)+6*(s14*s14)+s23*s23-5*(s24*s24))*pow(s13,5)+(6*s14+6*s23+s24)*pow(s13,6)+2*pow(s13,7)+s13*(3*s14+5*s23)*(s23*s23)*pow(s14,3)+pow(s14,4)*pow(s23,3)+pow(s13,4)*((15*s23+s24)*(s14*s14)-7*s24*(s23*s23)+s14*(-10*s23*s24+13*(s23*s23)-4*(s24*s24))+3*s23*(s24*s24)+2*pow(s14,3)-3*pow(s23,3)+5*pow(s24,3)))+pow(s12,4)*(s13*s13*(-10*s23*s24+2*s14*(83*s23+10*s24)+60*(s14*s14)+46*(s23*s23)-5*(s24*s24))+s14*s23*(-(s23*s24)+2*s14*(9*s23+s24)+8*(s14*s14)+4*(s23*s23)-s24*s24)+4*(30*s14+29*s23+5*s24)*pow(s13,3)+70*pow(s13,4)+s13*((70*s23+4*s24)*(s14*s14)-7*s24*(s23*s23)+s14*(2*s23*s24+59*(s23*s23)-s24*s24)-3*s23*(s24*s24)+8*pow(s14,3)+5*pow(s23,3)+5*pow(s24,3)))+s12*s12*(s13*s23*(s14*s14)*(2*s23*(6*s23+s24)+s14*(19*s23+s24)+2*(s14*s14))+s14*s23*(s13*s13)*(-12*s23*s24+2*s14*(25*s23+s24)+20*(s14*s14)+9*(s23*s23)-9*(s24*s24))+2*(-10*s23*s24+s14*(41*s23+5*s24)+15*(s14*s14)+7*(s23*s23)-5*(s24*s24))*pow(s13,4)+6*(6*s14+6*s23+s24)*pow(s13,5)+14*pow(s13,6)+(2*s14+4*s23+s24)*(s23*s23)*pow(s14,3)+pow(s13,3)*(4*(16*s23+s24)*(s14*s14)-16*s24*(s23*s23)+s14*(-11*s23*s24+51*(s23*s23)-6*(s24*s24))+2*s23*(s24*s24)+8*pow(s14,3)-3*pow(s23,3)+10*pow(s24,3)))+pow(s12,3)*(s23*(s14*s14)*(s23*(6*s23+s24)+s14*(10*s23+s24)+s14*s14)+s13*s14*s23*(-5*s23*s24+s14*(52*s23+5*s24)+22*(s14*s14)+13*(s23*s23)-5*(s24*s24))+2*(s14*(83*s23+10*s24)+30*(s14*s14)+5*(-2*s23*s24+4*(s23*s23)-s24*s24))*pow(s13,3)+(90*s14+89*s23+15*s24)*pow(s13,4)+42*pow(s13,5)+s13*s13*((101*s23+6*s24)*(s14*s14)+s14*(-3*s23*s24+85*(s23*s23)-4*(s24*s24))+12*pow(s14,3)+2*(-8*s24*(s23*s23)-s23*(s24*s24)+2*pow(s23,3)+5*pow(s24,3)))))*pow(s12+s23+s24,-1)+512*pow(s13,-1)*(s23*(s12*s12)*pow(s12+s13,-2)+s12*(2*s12+s13)*pow(s12+s13,-1)-s12*s12*(s23*s23)*pow(s13+s23,-3)+s12*(3*s12+s13)*s23*pow(s13+s23,-2)-s12*(3*s12+2*s13)*pow(s13+s23,-1)-(s12+s13+s14)*(7*s12+2*s13-2*s23-2*s24)*pow(s12+s13+s23,-1)-3*(s12+s13+s14)*(s12+s13+s14+s23+s24)*pow(s12+s13+s23,-1)+(5*s12+s13-s23-s24)*(s12+s13+s14+s23+s24)*pow(s12+s13+s23,-1)+(-(s13*(s23+s24))+s12*(3*s13-4*(s23+s24))+5*(s12*s12))*pow(s12+s13+s23,-1)+3*((s12+s13+s14)*(s12+s13+s14))*pow(s12+s13+s23,-1)+(s12+s13+s14+s23+s24)*(s12+s13+s14+s23+s24)*pow(s12+s13+s23,-1)+s12*(-((s14+s24)*(s13*(s14-s24)+s14*(s14+2*s23+s24))*(s13*s13))+s12*s13*(-2*s14*(s14+s24)*(s14+2*s23+s24)+2*s24*(s13*s13)+s13*(s24*(2*s23+3*s24)-3*(s14*s14)))+(2*s13*(s14+2*s23+3*s24)+3*(s13*s13)-s14*s14+(s23+s24)*(s23+s24))*pow(s12,3)+(3*s13+s14+2*(s23+s24))*pow(s12,4)+pow(s12,5)+s12*s12*((s14+2*s23+6*s24)*(s13*s13)+s13*(4*s23*s24-3*(s14*s14)+s23*s23+3*(s24*s24))-s14*((s14+s23+s24)*(s14+s23+s24))+pow(s13,3)))*pow(s12+s13,-2)*pow(s14,-2)*pow(s12+s13+s23,-1)-s12*(2*s12+s13-s23-s24)*(s13*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s12+s13,-1)*pow(s14,-1)*pow(s12+s13+s23,-1)-pow(s13+s23,-3)*(pow(s12,5)*pow(s23,3)+pow(s12,4)*(9*s14*s23*(s13*s13)+s13*(9*s14-s23)*(s23*s23)+3*s14*pow(s13,3)+(5*s14-s23+2*s24)*pow(s23,3))+pow(s12,3)*(s13*(s23*(2*s23-s24)+s14*(-4*s23+18*s24)+27*(s14*s14))*(s23*s23)+s23*(s13*s13)*(9*s14*(s23+2*s24)+27*(s14*s14)+s23*s23)+3*s14*(3*s14+5*s23+2*s24)*pow(s13,3)+6*s14*pow(s13,4)+(-4*s14*(s23-2*s24)-s23*s24+10*(s14*s14)+s23*s23+s24*s24)*pow(s23,3))+s14*(s12*s12)*(-6*s14*(s23-2*s24)+3*s13*(4*s14-s23+4*s24)+3*(s13*s13)+10*(s14*s14)+3*(-(s23*s24)+s23*s23+s24*s24))*pow(s13+s23,3)+s14*(s13*s14*(-(s14*(s23-5*s24))+3*s24*(-s23+s24)+2*(s14*s14))+s14*s14*(-(s14*(s23-2*s24))-s23*s24+s14*s14+s23*s23+s24*s24)+s13*s13*(3*s14*s24+s14*s14+3*(s24*s24)))*pow(s13+s23,3)+s12*s14*(3*(s14+2*s24)*(s13*s13)+s13*(-3*s14*(s23-5*s24)-3*(s23-2*s24)*s24+8*(s14*s14))+s14*(-4*s14*(s23-2*s24)+5*(s14*s14)+3*(-(s23*s24)+s23*s23+s24*s24)))*pow(s13+s23,3))*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-3)+(3*s12+s13-s23-s24)*(s12*s12*(s13*(4*s14-s23)*s23+2*s14*(s13*s13)+(3*s14-s23+s24)*(s23*s23))+s12*s14*(2*s13+3*s14-2*s23+2*s24)*((s13+s23)*(s13+s23))+s14*(s14*(s14-s23+s24)+s13*(s14+2*s24))*((s13+s23)*(s13+s23))+s23*s23*pow(s12,3))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)+(s13*s14+(s12+s14)*s23)*(s13*(s23+s24)+s12*(-2*s13+3*(s23+s24))-3*(s12*s12))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1))*pow(s12+s23+s24,-1)+256*pow(s13,-1)*pow(s12+s13,-2)*pow(s14,-3)*pow(s23,-1)*pow(s12+s13+s23,-1)*((-(s14*s23)+s13*(-s14+12*s23+15*s24)+10*(s13*s13)+s14*s14+3*((s23+s24)*(s23+s24)))*pow(s12,6)+(5*s13+3*(s23+s24))*pow(s12,7)+pow(s12,8)+s24*(s13*s14*s23*(s14-2*s24)+s24*(-s14+s24)*(s13*s13)+s14*s14*(s23*s23))*pow(s13,3)+pow(s12,4)*(s13*s13*(36*s23*s24-2*s14*(3*s23+4*s24)+6*(s14*s14)+9*(s23*s23)+30*(s24*s24))-s14*s23*(-(s14*(s23+s24))+6*(s14*s14)+(s23+s24)*(s23+s24))-6*(s14-2*s23-5*s24)*pow(s13,3)+5*pow(s13,4)+s13*((5*s23+4*s24)*(s14*s14)-s14*(9*s23*s24+3*(s23*s23)+s24*s24)+(2*s23+5*s24)*((s23+s24)*(s23+s24))-8*pow(s14,3)))-s12*(s13*s13)*(s13*s14*s23*(s14*(s23-5*s24)+s24*(s23+7*s24)+4*(s14*s14))+2*(s14-2*s24)*(s14*s14)*(s23*s23)+(2*s14-3*s24)*s24*pow(s13,3)+s13*s13*(s14*s24*(3*s23+4*s24)+(s23-s24)*(s14*s14)-(3*s23+5*s24)*(s24*s24)+2*pow(s14,3)))-s12*s12*(s13*(8*s14+2*s23-3*s24)*(s14*s14)*(s23*s23)+s14*s23*(s13*s13)*(s14*(3*s23-8*s24)+4*s23*s24+14*(s14*s14)-s23*s23+9*(s24*s24))-(3*s24*(2*s23+5*s24)-s14*(s23+8*s24)+s14*s14)*pow(s13,4)+(s14-3*s24)*pow(s13,5)+pow(s13,3)*((s23-4*s24)*(s14*s14)+s14*(11*s23*s24-s23*s23+6*(s24*s24))-s24*(12*s23*s24+3*(s23*s23)+10*(s24*s24))+8*pow(s14,3))+2*pow(s14,3)*pow(s23,3))+pow(s12,3)*(-(s13*s14*s23*(s14*(s23-5*s24)+5*s24*(s23+s24)+16*(s14*s14)))+(-4*s14*(s23+3*s24)+4*(s14*s14)+3*(8*s23*s24+s23*s23+10*(s24*s24)))*pow(s13,3)+(-4*s14+3*(s23+5*s24))*pow(s13,4)+pow(s13,5)-6*(s23*s23)*pow(s14,3)+s13*s13*(-(s14*s24*(15*s23+4*s24))+3*(s23+2*s24)*(s14*s14)+9*s24*(s23*s23)+18*s23*(s24*s24)-12*pow(s14,3)+pow(s23,3)+10*pow(s24,3)))+pow(s12,5)*(-2*s14*s23*(s23+s24)+(-4*s14+18*s23+30*s24)*(s13*s13)+(2*s23+s24)*(s14*s14)+s13*(-2*s14*(2*s23+s24)+4*(s14*s14)+3*(8*s23*s24+3*(s23*s23)+5*(s24*s24)))+10*pow(s13,3)-2*pow(s14,3)+pow(s23+s24,3)))*pow(s12+s23+s24,-1)+256*((s12+s13+s23)*pow(s13,-1)*pow(s12+s23,-1)+(-2*s12+s13-s23-2*s24)*pow(s13,-1)*pow(s12+s13+s23,-1)+2*(s12+s23+s24)*pow(s13,-1)*pow(s12+s13+s23,-1)-(s23*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)+s12*pow(s12+s23,-1)*pow(s12+s23+s24,-1)-(s14*s23+s13*(2*s23-s24)+s12*(s13+s14+s24))*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s23+s24,-1)+2*s13*(s12*s12)*pow(s13+s23,-3)*pow(s12+s23+s24,-1)-s12*(3*s12-s13+s23+2*s24)*pow(s13+s23,-2)*pow(s12+s23+s24,-1)-(s12+s23)*(s12+s13+s23)*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s13+s23,-2)*pow(s12+s23+s24,-1)+(2*s14*s23+s13*(s14+s23-2*s24)+2*s12*(s13+s14+s23+s24)+3*(s12*s12)+s13*s13)*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s23+s24,-1)+s12*(s13*(s23+s24)+s12*(s13+s14+2*s23+s24)+s23*(s14+s23+2*s24)+s12*s12)*pow(s23,-1)*pow(s12+s23,-1)*pow(s13+s23,-1)*pow(s12+s23+s24,-1)-(s12+s23)*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)+(s13*(s14+5*s23+2*s24)+s12*(3*s13+2*s14+8*s23+5*s24)+2*s23*(s14+2*(s23+s24))+4*(s12*s12)+s13*s13)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)-2*pow(s13,-1)*pow(s13+s23,-3)*(pow(s12,5)*pow(s13,3)-pow(s12,4)*(-9*s23*s24*(s13*s13)-9*s13*s24*(s23*s23)+(-2*s14+s23-5*s24)*pow(s13,3)+pow(s13,4)-3*s24*pow(s23,3))+pow(s12,3)*(9*s23*s24*(2*s14+s23+3*s24)*(s13*s13)+3*s13*s24*(6*s14+5*s23+9*s24)*(s23*s23)+(-(s14*(s23-8*s24))-4*s23*s24+s14*s14+s23*s23+10*(s24*s24))*pow(s13,3)-(s14-2*s23+4*s24)*pow(s13,4)+pow(s13,5)+3*s24*(2*s14+2*s23+3*s24)*pow(s23,3))+s24*(s12*s12)*(12*s23*s24+12*s14*(s23+s24)-3*s13*(s14+s23+2*s24)+3*(s13*s13)+3*(s14*s14)+3*(s23*s23)+10*(s24*s24))*pow(s13+s23,3)+s12*s24*(-(s13*(3*s14*(s23+s24)+s24*(3*s23+4*s24)))+3*s24*(s13*s13)+3*(2*s23+s24)*(s14*s14)+s24*(8*s23*s24+3*(s23*s23)+5*(s24*s24))+s14*(15*s23*s24+6*(s23*s23)+8*(s24*s24)))*pow(s13+s23,3)+s24*(s14*s14*(3*s23*s24+3*(s23*s23)+s24*s24)+s14*s24*(5*s23*s24-s13*(3*s23+s24)+3*(s23*s23)+2*(s24*s24))+s24*s24*(-(s13*(s23+s24))+s13*s13+(s23+s24)*(s23+s24)))*pow(s13+s23,3))*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-3)*pow(s12+s23+s24,-1)+2*(2*s12-s13+s23+s24)*pow(s13,-1)*(-(s12*(2*s13-2*s14-2*s23-3*s24)*s24*((s13+s23)*(s13+s23)))-s24*((s13-s23-s24)*s24-s14*(2*s23+s24))*((s13+s23)*(s13+s23))+s13*s13*pow(s12,3)+s12*s12*(4*s13*s23*s24+(s14-s23+3*s24)*(s13*s13)+2*s24*(s23*s23)-pow(s13,3)))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)*pow(s12+s23+s24,-1)-(s12*s13+(s13+s23)*s24)*(s13*(3*s14+4*s23)+s12*(2*s13+4*s14+8*s23+5*s24)+s23*(4*s14+3*(s23+s24))+6*(s12*s12)+3*(s13*s13))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1)*pow(s12+s23+s24,-1))+256*pow(s12+s13+s14,-1)*pow(s23,-1)*(-2*s13*(s12*s12)*pow(s12+s23,-2)-s12*(3*s12-s13+2*s14+s23)*pow(s12+s23,-1)+2*(s12*s12)*(s13*s13)*pow(s13+s23,-3)-s12*s13*(5*s12-s13+2*s14+s23)*pow(s13+s23,-2)+(s12+s13)*(s12+s13+s23)*(s12+s14+s24)*pow(s13+s23,-2)+(-(s14*(2*s13+s23))+2*s12*(-s13+s14+s23)+4*(s12*s12))*pow(s13+s23,-1)+s12*(s12+s13)*(s13*(s23+s24)+s12*(s13+s14+2*s23+s24)+s23*(s14+s23+2*s24)+s12*s12)*pow(s23,-1)*pow(s12+s23,-1)*pow(s13+s23,-1)+2*(7*s12-2*s13+2*s14)*s24*pow(s12+s13+s23,-1)-2*(5*s12-s13+s14)*(s12+s14+s24)*pow(s12+s13+s23,-1)-6*s24*(s12+s14+s24)*pow(s12+s13+s23,-1)+(s12*(-8*s13+5*s14)-s14*(3*s13+s23)+10*(s12*s12))*pow(s12+s13+s23,-1)+6*(s24*s24)*pow(s12+s13+s23,-1)+2*((s12+s14+s24)*(s12+s14+s24))*pow(s12+s13+s23,-1)+2*s12*pow(s12+s23,-2)*pow(s12+s13+s23,-1)*(s23*s23*(2*s13*s14*s23-s24*(s13*s13)+(2*s23+s24)*(s14*s14)+2*s14*((s23+s24)*(s23+s24))+s24*((s23+s24)*(s23+s24)))+2*(s14*(7*s23+3*s24)+s14*s14+2*(4*s23*s24+3*(s23*s23)+s24*s24))*pow(s12,3)+(4*s14+8*s23+5*s24)*pow(s12,4)+2*pow(s12,5)+2*s12*s23*(2*s13*s14*s23-(s23+s24)*(s13*s13)+(3*s23+s24)*(s14*s14)+4*s24*(s23*s23)+4*s23*(s24*s24)+s14*(7*s23*s24+5*(s23*s23)+2*(s24*s24))+pow(s23,3)+pow(s24,3))+s12*s12*(2*s13*s14*s23-2*s23*(s13*s13)+(6*s23+s24)*(s14*s14)+18*s24*(s23*s23)+10*s23*(s24*s24)+2*s14*(8*s23*s24+9*(s23*s23)+s24*s24)+8*pow(s23,3)+pow(s24,3)))*pow(s12+s23+s24,-2)-2*s12*(2*s12-s13+s14)*(s23*(s13+s14+s23+s24)+s12*(s14+2*s23+s24)+s12*s12)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)-2*pow(s13+s23,-3)*pow(s12+s13+s23,-1)*(s23*(3*s13+2*s14+3*s23+2*s24)*(3*s13*s23+3*(s13*s13)+s23*s23)*pow(s12,4)+s23*(3*s13*s23+3*(s13*s13)+s23*s23)*pow(s12,5)+s23*pow(s12,3)*(s23*s23*(3*s23*s24+2*s14*(3*s23+s24)+s14*s14+3*(s23*s23)+s24*s24)+3*s13*s23*(4*s23*s24+s14*(7*s23+2*s24)+s14*s14+5*(s23*s23)+s24*s24)+3*(s13*s13)*(6*s23*s24+s14*(9*s23+2*s24)+s14*s14+10*(s23*s23)+s24*s24)+3*(4*s14+9*s23+3*s24)*pow(s13,3)+9*pow(s13,4))+(s23+s24)*(s14*s14*(-(s23*s24)+s23*s23+s24*s24)+s14*s24*(-3*s13*(s23-s24)+s23*s24-s23*s23+2*(s24*s24))+s24*s24*(3*s13*(s23+s24)+3*(s13*s13)+(s23+s24)*(s23+s24)))*pow(s13+s23,3)+s12*s12*pow(s13+s23,3)*(3*s13*s23*(2*s14+s23)+3*s14*s23*(2*s23+s24)+3*s23*(s13*s13)+3*s23*(s14*s14)+pow(s23,3)+pow(s24,3))-s12*pow(s13+s23,3)*(3*s13*(s23-s24)*(-(s14*s23)+s24*(s23+s24))+3*s23*s24*(s13*s13)-3*(s14*s14)*(s23*s23)+(s23-2*s24)*s24*((s23+s24)*(s23+s24))-2*s14*(pow(s23,3)+pow(s24,3))))*pow(s12+s13+s14+s23+s24,-3)+2*(3*s12-s13+s14)*(s23*(2*s13+s23)*(2*s13+s14+2*s23+s24)*(s12*s12)-(s23+s24)*(s14*(-s23+s24)+s24*(2*s13+s23+s24))*((s13+s23)*(s13+s23))+s12*((s13+s23)*(s13+s23))*(2*s13*s23+2*s14*s23+s23*s23-s24*s24)+s23*(2*s13+s23)*pow(s12,3))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-2)+(s12*s23+(s13+s23)*(s23+s24))*(s12*(6*s13-3*s14)+s14*(3*s13+s23)-6*(s12*s12))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-1))+256*pow(s13,-1)*pow(s12+s23+s24,-1)*(-2*s23*(s12*s12)*pow(s12+s13,-2)-s12*(3*s12+s13-s23+2*s24)*pow(s12+s13,-1)+2*(s12*s12)*(s23*s23)*pow(s13+s23,-3)+(s12+s23)*(s12+s13+s23)*(s12+s14+s24)*pow(s13+s23,-2)-s12*s23*(5*s12+s13-s23+2*s24)*pow(s13+s23,-2)+(-((s13+2*s23)*s24)+2*s12*(s13-s23+s24)+4*(s12*s12))*pow(s13+s23,-1)+s12*(s12+s23)*(s14*s23+s12*(2*s13+s14+s23+s24)+s13*(2*s14+s23+s24)+s12*s12+s13*s13)*pow(s13,-1)*pow(s12+s13,-1)*pow(s13+s23,-1)-6*s14*(s12+s14+s24)*pow(s12+s13+s23,-1)-2*(s12+s14+s24)*(5*s12-s23+s24)*pow(s12+s13+s23,-1)+2*s14*(7*s12-2*s23+2*s24)*pow(s12+s13+s23,-1)+(-((s13+3*s23)*s24)+s12*(-8*s23+5*s24)+10*(s12*s12))*pow(s12+s13+s23,-1)+6*(s14*s14)*pow(s12+s13+s23,-1)+2*((s12+s14+s24)*(s12+s14+s24))*pow(s12+s13+s23,-1)+2*s12*(s13*s13*((s14+2*s24)*(s13*s13)+2*s13*(2*s14*s24+s24*(s23+s24)+s14*s14)+s14*(2*s14*s24+s14*s14-s23*s23+s24*s24))+2*(3*s14*s24+s13*(8*s14+7*s24)+6*(s13*s13)+2*(s14*s14)+s24*s24)*pow(s12,3)+(8*s13+5*s14+4*s24)*pow(s12,4)+2*pow(s12,5)+2*s12*s13*((4*s14+5*s24)*(s13*s13)+s14*(2*s14*s24+s14*s14-s23*s23+s24*s24)+s13*(7*s14*s24+2*s23*s24+4*(s14*s14)-s23*s23+3*(s24*s24))+pow(s13,3))+s12*s12*(18*(s14+s24)*(s13*s13)+2*s13*(8*s14*s24+s23*s24+5*(s14*s14)-s23*s23+3*(s24*s24))+s14*((s14+s24)*(s14+s24))+8*pow(s13,3)))*pow(s12+s13,-2)*pow(s12+s13+s14,-2)*pow(s12+s13+s23,-1)-2*s12*(2*s12-s23+s24)*(s12*(2*s13+s14+s24)+s13*(s13+s14+s23+s24)+s12*s12)*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-1)-2*pow(s13+s23,-3)*(s13*(3*s13+2*s14+3*s23+2*s24)*(3*s13*s23+s13*s13+3*(s23*s23))*pow(s12,4)+s13*(3*s13*s23+s13*s13+3*(s23*s23))*pow(s12,5)+s13*pow(s12,3)*(3*(s23*s23)*(4*s23*s24+s14*(3*s23+2*s24)+s14*s14+3*(s23*s23)+s24*s24)+3*s13*s23*(9*s23*s24+2*s14*(3*s23+s24)+s14*s14+9*(s23*s23)+s24*s24)+s13*s13*(21*s23*s24+2*s14*(6*s23+s24)+s14*s14+30*(s23*s23)+s24*s24)+3*(s14+5*s23+2*s24)*pow(s13,3)+3*pow(s13,4))+(s13+s14)*(s13*s14*(s14*(3*s23+s24)-s24*(3*s23+s24)+2*(s14*s14))+s13*s13*(-(s14*s24)+s14*s14+s24*s24)+s14*s14*(3*s23*s24+s14*(3*s23+2*s24)+s14*s14+3*(s23*s23)+s24*s24))*pow(s13+s23,3)+s12*s12*(3*(s23+2*s24)*(s13*s13)+3*s13*(2*s23*s24+s24*(s14+s24)+s23*s23)+pow(s13,3)+pow(s14,3))*pow(s13+s23,3)-s12*(3*(s14*s23-s24*(s23+s24))*(s13*s13)+3*s13*s14*(s23*(s23+s24)-s14*s14)+(s14-2*s24)*pow(s13,3)-(2*s14+3*s23+2*s24)*pow(s14,3))*pow(s13+s23,3))*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-3)+2*(3*s12-s23+s24)*(s13*(s13+2*s23)*(2*s13+s14+2*s23+s24)*(s12*s12)-(s13+s14)*(s13*(s14-s24)+s14*(s14+2*s23+s24))*((s13+s23)*(s13+s23))+s12*(2*s13*(s23+s24)+s13*s13-s14*s14)*((s13+s23)*(s13+s23))+s13*(s13+2*s23)*pow(s12,3))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-2)+(s12*s13+(s13+s14)*(s13+s23))*(s12*(6*s23-3*s24)+(s13+3*s23)*s24-6*(s12*s12))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-1))+512*pow(s13,-1)*pow(s24,-1)*(-(s23*(s12*s12)*pow(s12+s13,-2))-s12*(2*s12+s13)*pow(s12+s13,-1)+s12*s12*(s23*s23)*pow(s13+s23,-3)-s12*(3*s12+s13)*s23*pow(s13+s23,-2)+s12*(3*s12+2*s13)*pow(s13+s23,-1)+3*s14*(s12+s14+s24)*pow(s12+s13+s23,-1)+(6*s12+s13+s24)*(s12+s14+s24)*pow(s12+s13+s23,-1)-s14*(9*s12+2*(s13+s24))*pow(s12+s13+s23,-1)-(s13*s24+4*s12*(s13+s24)+9*(s12*s12))*pow(s12+s13+s23,-1)-3*(s14*s14)*pow(s12+s13+s23,-1)-(s12+s14+s24)*(s12+s14+s24)*pow(s12+s13+s23,-1)-s12*(s13*s13*((s14+2*s24)*(s13*s13)+2*s13*(2*s14*s24+s24*(s23+s24)+s14*s14)+s14*(2*s14*s24+s14*s14-s23*s23+s24*s24))+2*(3*s14*s24+s13*(8*s14+7*s24)+6*(s13*s13)+2*(s14*s14)+s24*s24)*pow(s12,3)+(8*s13+5*s14+4*s24)*pow(s12,4)+2*pow(s12,5)+2*s12*s13*((4*s14+5*s24)*(s13*s13)+s14*(2*s14*s24+s14*s14-s23*s23+s24*s24)+s13*(7*s14*s24+2*s23*s24+4*(s14*s14)-s23*s23+3*(s24*s24))+pow(s13,3))+s12*s12*(18*(s14+s24)*(s13*s13)+2*s13*(8*s14*s24+s23*s24+5*(s14*s14)-s23*s23+3*(s24*s24))+s14*((s14+s24)*(s14+s24))+8*pow(s13,3)))*pow(s12+s13,-2)*pow(s12+s13+s14,-2)*pow(s12+s13+s23,-1)+s12*(3*s12+s13+s24)*(s12*(2*s13+s14+s24)+s13*(s13+s14+s23+s24)+s12*s12)*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-1)+pow(s13+s23,-3)*(s13*(3*s13+2*s14+3*s23+2*s24)*(3*s13*s23+s13*s13+3*(s23*s23))*pow(s12,4)+s13*(3*s13*s23+s13*s13+3*(s23*s23))*pow(s12,5)+s13*pow(s12,3)*(3*(s23*s23)*(4*s23*s24+s14*(3*s23+2*s24)+s14*s14+3*(s23*s23)+s24*s24)+3*s13*s23*(9*s23*s24+2*s14*(3*s23+s24)+s14*s14+9*(s23*s23)+s24*s24)+s13*s13*(21*s23*s24+2*s14*(6*s23+s24)+s14*s14+30*(s23*s23)+s24*s24)+3*(s14+5*s23+2*s24)*pow(s13,3)+3*pow(s13,4))+(s13+s14)*(s13*s14*(s14*(3*s23+s24)-s24*(3*s23+s24)+2*(s14*s14))+s13*s13*(-(s14*s24)+s14*s14+s24*s24)+s14*s14*(3*s23*s24+s14*(3*s23+2*s24)+s14*s14+3*(s23*s23)+s24*s24))*pow(s13+s23,3)+s12*s12*(3*(s23+2*s24)*(s13*s13)+3*s13*(2*s23*s24+s24*(s14+s24)+s23*s23)+pow(s13,3)+pow(s14,3))*pow(s13+s23,3)-s12*(3*(s14*s23-s24*(s23+s24))*(s13*s13)+3*s13*s14*(s23*(s23+s24)-s14*s14)+(s14-2*s24)*pow(s13,3)-(2*s14+3*s23+2*s24)*pow(s14,3))*pow(s13+s23,3))*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-3)-(4*s12+s13+s24)*(s13*(s13+2*s23)*(2*s13+s14+2*s23+s24)*(s12*s12)-(s13+s14)*(s13*(s14-s24)+s14*(s14+2*s23+s24))*((s13+s23)*(s13+s23))+s12*(2*s13*(s23+s24)+s13*s13-s14*s14)*((s13+s23)*(s13+s23))+s13*(s13+2*s23)*pow(s12,3))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-2)+(s12*s13+(s13+s14)*(s13+s23))*(s13*s24+3*s12*(s13+s24)+6*(s12*s12))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-1))+256*pow(s12+s23+s24,-1)*(-(s12*pow(s12+s23,-1))+(s12*(s13+s23)+s23*(2*s13+s23))*pow(s13,-1)*pow(s12+s23,-1)-2*s13*(s12*s12)*pow(s13+s23,-3)+2*s12*(2*s12+s23)*pow(s13+s23,-2)-(2*s12*s23+s23*(s13+s23)+2*(s12*s12))*pow(s13,-1)*pow(s13+s23,-1)+(s12*(s13+s23-2*s24)+s23*(s23-s24)+s13*(2*s23-s24))*pow(s13,-1)*pow(s12+s13+s23,-1)+(2*s12+s13+s23-2*s24)*s24*pow(s13,-1)*pow(s12+s13+s23,-1)+(s12+s23)*(s12+s14+s24)*pow(s13,-1)*pow(s12+s13+s23,-1)+2*(s24*s24)*pow(s13,-1)*pow(s12+s13+s23,-1)-s24*(s23*(s13+s14+s23+s24)+s12*(s14+2*s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)-2*pow(s13,-1)*pow(s13+s23,-3)*pow(s12+s13+s23,-1)*(s23*(3*s13+2*s14+3*s23+2*s24)*(3*s13*s23+3*(s13*s13)+s23*s23)*pow(s12,4)+s23*(3*s13*s23+3*(s13*s13)+s23*s23)*pow(s12,5)+s23*pow(s12,3)*(s23*s23*(3*s23*s24+2*s14*(3*s23+s24)+s14*s14+3*(s23*s23)+s24*s24)+3*s13*s23*(4*s23*s24+s14*(7*s23+2*s24)+s14*s14+5*(s23*s23)+s24*s24)+3*(s13*s13)*(6*s23*s24+s14*(9*s23+2*s24)+s14*s14+10*(s23*s23)+s24*s24)+3*(4*s14+9*s23+3*s24)*pow(s13,3)+9*pow(s13,4))+(s23+s24)*(s14*s14*(-(s23*s24)+s23*s23+s24*s24)+s14*s24*(-3*s13*(s23-s24)+s23*s24-s23*s23+2*(s24*s24))+s24*s24*(3*s13*(s23+s24)+3*(s13*s13)+(s23+s24)*(s23+s24)))*pow(s13+s23,3)+s12*s12*pow(s13+s23,3)*(3*s13*s23*(2*s14+s23)+3*s14*s23*(2*s23+s24)+3*s23*(s13*s13)+3*s23*(s14*s14)+pow(s23,3)+pow(s24,3))-s12*pow(s13+s23,3)*(3*s13*(s23-s24)*(-(s14*s23)+s24*(s23+s24))+3*s23*s24*(s13*s13)-3*(s14*s14)*(s23*s23)+(s23-2*s24)*s24*((s23+s24)*(s23+s24))-2*s14*(pow(s23,3)+pow(s24,3))))*pow(s12+s13+s14+s23+s24,-3)+2*(2*s12+s23-s24)*(s23*(2*s13+s23)*(2*s13+s14+2*s23+s24)*(s12*s12)-(s23+s24)*(s14*(-s23+s24)+s24*(2*s13+s23+s24))*((s13+s23)*(s13+s23))+s12*((s13+s23)*(s13+s23))*(2*s13*s23+2*s14*s23+s23*s23-s24*s24)+s23*(2*s13+s23)*pow(s12,3))*pow(s13,-1)*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-2)-(s12*s23+(s13+s23)*(s23+s24))*(2*s12*(s23-2*s24)+s23*(s13+s23-2*s24)+2*(s12*s12))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-1))+256*pow(s12+s13+s14,-1)*(-(s12*pow(s12+s13,-1))+(s12*(s13+s23)+s13*(s13+2*s23))*pow(s12+s13,-1)*pow(s23,-1)-2*s23*(s12*s12)*pow(s13+s23,-3)+2*s12*(2*s12+s13)*pow(s13+s23,-2)-(2*s12*s13+s13*(s13+s23)+2*(s12*s12))*pow(s23,-1)*pow(s13+s23,-1)+s14*(2*s12+s13-2*s14+s23)*pow(s23,-1)*pow(s12+s13+s23,-1)+(s12+s13)*(s12+s14+s24)*pow(s23,-1)*pow(s12+s13+s23,-1)+(-(s13*(s14-2*s23))-s14*s23+s12*(s13-2*s14+s23)+s13*s13)*pow(s23,-1)*pow(s12+s13+s23,-1)+2*(s14*s14)*pow(s23,-1)*pow(s12+s13+s23,-1)-s14*(s12*(2*s13+s14+s24)+s13*(s13+s14+s23+s24)+s12*s12)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)-2*pow(s23,-1)*pow(s13+s23,-3)*(s13*(3*s13+2*s14+3*s23+2*s24)*(3*s13*s23+s13*s13+3*(s23*s23))*pow(s12,4)+s13*(3*s13*s23+s13*s13+3*(s23*s23))*pow(s12,5)+s13*pow(s12,3)*(3*(s23*s23)*(4*s23*s24+s14*(3*s23+2*s24)+s14*s14+3*(s23*s23)+s24*s24)+3*s13*s23*(9*s23*s24+2*s14*(3*s23+s24)+s14*s14+9*(s23*s23)+s24*s24)+s13*s13*(21*s23*s24+2*s14*(6*s23+s24)+s14*s14+30*(s23*s23)+s24*s24)+3*(s14+5*s23+2*s24)*pow(s13,3)+3*pow(s13,4))+(s13+s14)*(s13*s14*(s14*(3*s23+s24)-s24*(3*s23+s24)+2*(s14*s14))+s13*s13*(-(s14*s24)+s14*s14+s24*s24)+s14*s14*(3*s23*s24+s14*(3*s23+2*s24)+s14*s14+3*(s23*s23)+s24*s24))*pow(s13+s23,3)+s12*s12*(3*(s23+2*s24)*(s13*s13)+3*s13*(2*s23*s24+s24*(s14+s24)+s23*s23)+pow(s13,3)+pow(s14,3))*pow(s13+s23,3)-s12*(3*(s14*s23-s24*(s23+s24))*(s13*s13)+3*s13*s14*(s23*(s23+s24)-s14*s14)+(s14-2*s24)*pow(s13,3)-(2*s14+3*s23+2*s24)*pow(s14,3))*pow(s13+s23,3))*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-3)+2*(2*s12+s13-s14)*(s13*(s13+2*s23)*(2*s13+s14+2*s23+s24)*(s12*s12)-(s13+s14)*(s13*(s14-s24)+s14*(s14+2*s23+s24))*((s13+s23)*(s13+s23))+s12*(2*s13*(s23+s24)+s13*s13-s14*s14)*((s13+s23)*(s13+s23))+s13*(s13+2*s23)*pow(s12,3))*pow(s23,-1)*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-2)-(s12*s13+(s13+s14)*(s13+s23))*(2*s12*(s13-2*s14)+s13*(s13-2*s14+s23)+2*(s12*s12))*pow(s23,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-1))+256*((s12+s13+s23)*pow(s13,-1)*pow(s12+s23,-1)-2*s24*pow(s13,-1)*pow(s12+s13+s23,-1)+(s13+s23+2*s24)*pow(s13,-1)*pow(s12+s13+s23,-1)-s12*pow(s12+s23,-1)*pow(s24,-1)-(s14*s23-s13*(2*s23+s24)+s12*(-s13+s14+2*s23+s24)+2*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)-2*s13*(s12*s12)*pow(s13+s23,-3)*pow(s24,-1)+s12*(s12-s13-s23-2*s24)*pow(s13+s23,-2)*pow(s24,-1)-(s12+s23)*(s12+s13+s23)*(s12+s14+s24)*pow(s13,-1)*pow(s13+s23,-2)*pow(s24,-1)+(2*s14*s23+s13*(s14-s23-2*s24)+s12*(-s13+2*(s14+s23+s24))+s12*s12)*pow(s13,-1)*pow(s13+s23,-1)*pow(s24,-1)+s12*(s13*(s23+s24)+s12*(s13+s14+2*s23+s24)+s23*(s14+s23+2*s24)+s12*s12)*pow(s23,-1)*pow(s12+s23,-1)*pow(s13+s23,-1)*pow(s24,-1)-(s12+s23)*(s12+s14+s24)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)+(2*s23*(s14+2*s24)+s13*(s14-s23+2*s24)+s12*(2*s13+2*s14+3*s23+5*s24)+3*(s12*s12))*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)-(s23*(s13+s14+s23+s24)+s12*(s14+2*s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s23+s24,-1)+2*pow(s13,-1)*pow(s13+s23,-3)*pow(s12+s13+s23,-1)*pow(s24,-1)*(s23*(3*s13+2*s14+3*s23+2*s24)*(3*s13*s23+3*(s13*s13)+s23*s23)*pow(s12,4)+s23*(3*s13*s23+3*(s13*s13)+s23*s23)*pow(s12,5)+s23*pow(s12,3)*(s23*s23*(3*s23*s24+2*s14*(3*s23+s24)+s14*s14+3*(s23*s23)+s24*s24)+3*s13*s23*(4*s23*s24+s14*(7*s23+2*s24)+s14*s14+5*(s23*s23)+s24*s24)+3*(s13*s13)*(6*s23*s24+s14*(9*s23+2*s24)+s14*s14+10*(s23*s23)+s24*s24)+3*(4*s14+9*s23+3*s24)*pow(s13,3)+9*pow(s13,4))+(s23+s24)*(s14*s14*(-(s23*s24)+s23*s23+s24*s24)+s14*s24*(-3*s13*(s23-s24)+s23*s24-s23*s23+2*(s24*s24))+s24*s24*(3*s13*(s23+s24)+3*(s13*s13)+(s23+s24)*(s23+s24)))*pow(s13+s23,3)+s12*s12*pow(s13+s23,3)*(3*s13*s23*(2*s14+s23)+3*s14*s23*(2*s23+s24)+3*s23*(s13*s13)+3*s23*(s14*s14)+pow(s23,3)+pow(s24,3))-s12*pow(s13+s23,3)*(3*s13*(s23-s24)*(-(s14*s23)+s24*(s23+s24))+3*s23*s24*(s13*s13)-3*(s14*s14)*(s23*s23)+(s23-2*s24)*s24*((s23+s24)*(s23+s24))-2*s14*(pow(s23,3)+pow(s24,3))))*pow(s12+s13+s14+s23+s24,-3)+2*(-s12+s13+s24)*(s23*(2*s13+s23)*(2*s13+s14+2*s23+s24)*(s12*s12)-(s23+s24)*(s14*(-s23+s24)+s24*(2*s13+s23+s24))*((s13+s23)*(s13+s23))+s12*((s13+s23)*(s13+s23))*(2*s13*s23+2*s14*s23+s23*s23-s24*s24)+s23*(2*s13+s23)*pow(s12,3))*pow(s13,-1)*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-2)-(s12*s23+(s13+s23)*(s23+s24))*(3*s13*s14+s23*(4*s14+3*s24)+s12*(5*s13+4*s14+4*s23+5*s24)+3*(s12*s12))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)))/512.;
}

// Coefficient order epsilon^0 of master 10
template<>
double qq2yygCAm2CF<10,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (-256*(s13*s14*(2*s14*(4*s23+s24)+s23*(-2*s23+3*s24)+2*(s14*s14))+s12*s12*(3*s23*s24+s13*(28*s14-9*s23+3*s24)+s14*(7*s23+10*s24)-15*(s13*s13)+12*(s14*s14))+s13*s13*(3*s23*(-s23+s24)+2*s14*(3*s23+5*s24)+14*(s14*s14))+s14*s14*(s23*s23)+(-3*s13+11*s14+s24)*pow(s12,3)+pow(s12,4)+s12*((23*s14+3*(-6*s23+s24))*(s13*s13)+s14*(s14*(7*s23+2*s24)+s23*(s23+3*s24)+2*(s14*s14))+s13*(-3*s23*(s23-2*s24)+s14*(13*s23+20*s24)+26*(s14*s14))-17*pow(s13,3))+(6*s14-9*s23+s24)*pow(s13,3)-6*pow(s13,4))*pow(s12+s13,-1)*pow(s12+s13+s14,-2)*pow(s23,-1)*pow(s12+s13+s23,-1)-256*(s13*s13*(3*s23*s24+s14*(s23+2*s24)-2*(s14*s14))+2*s13*s14*(s14*(-2*s23+s24)+s23*(s23+2*s24)+s14*s14)+s12*s12*(3*s23*(2*s13+s23+s24)+s14*(3*s23+2*s24)+4*(s14*s14))+s12*((-6*s14+3*s23)*(s13*s13)+2*s14*(s14*s24+2*s23*s24+s14*s14)+s13*(4*s14*(s23+s24)+3*s23*(s23+2*s24)+2*(s14*s14)))-4*(s14*s14)*(s23*s23)+(2*s14+3*s23)*pow(s12,3)-4*s14*pow(s13,3))*pow(s12+s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)-256*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-2)*(s14*s23*(6*s23*s24+(3*s13-2*s24)*s24+7*(s23*s23))+s24*(2*s13*s23*(8*s23+3*s24)+(7*s23+s24)*(s13*s13)+2*s23*(4*s23*s24+8*(s23*s23)-s24*s24))+s12*s12*(42*s23*s24+3*s14*(7*s23+2*s24)+2*s13*(7*s23+8*s24)+21*(s23*s23)+4*(s24*s24))+(7*s13+7*s14+21*s23+13*s24)*pow(s12,3)+7*pow(s12,4)+s12*(4*s24*(s13*s13)+45*s24*(s23*s23)+s13*(32*s23*s24+s24*(3*s14+5*s24)+7*(s23*s23))+s14*(12*s23*s24+21*(s23*s23)-2*(s24*s24))+12*s23*(s24*s24)+7*pow(s23,3)-2*pow(s24,3)))-128*pow(s13,-1)*pow(s12+s13,-2)*pow(s12+s13+s14,-3)*pow(s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*((s13*(86*s14+115*s23-21*s24)-7*s23*s24+s14*(59*s23+s24)+119*(s13*s13)+9*(s14*s14)+24*(s23*s23)-6*(s24*s24))*pow(s12,6)+(41*s13+15*s14+21*s23-4*s24)*pow(s12,7)+6*pow(s12,8)+pow(s12,5)*((202*s14+265*s23-43*s24)*(s13*s13)+(51*s23+16*s24)*(s14*s14)+s13*(-34*s23*s24+3*s14*(91*s23+5*s24)+39*(s14*s14)+96*(s23*s23)-36*(s24*s24))+s14*(s23*s24+73*(s23*s23)-11*(s24*s24))+s23*(-3*s23*s24+9*(s23*s23)-8*(s24*s24))+190*pow(s13,3)-3*pow(s14,3))+s13*((-(s23*s24*(7*s23+6*s24))+2*(2*s23+5*s24)*(s14*s14)+s14*(-7*s23*s24+17*(s23*s23)-18*(s24*s24)))*pow(s13,4)+(-5*s23*s24+2*s14*(5*s23+4*s24)+4*(s23*s23)-6*(s24*s24))*pow(s13,5)+2*(2*s23+s24)*pow(s13,6)+s13*s23*(-(s14*(s23-2*s24))+2*s23*s24+11*(s23*s23)-2*(s24*s24))*pow(s14,3)+2*pow(s14,4)*pow(s23,3)+s13*s13*(s14*s14)*(-4*s23*(s14*s14)-11*s24*(s23*s23)+s14*(15*s23*s24+11*(s23*s23)-2*(s24*s24))-11*s23*(s24*s24)+11*pow(s23,3)+2*pow(s24,3))+s14*pow(s13,3)*((-6*s23+4*s24)*(s14*s14)-5*s24*(s23*s23)+s14*(11*s23*s24+25*(s23*s23)-14*(s24*s24))+7*pow(s23,3)+7*pow(s24,3)))+pow(s12,4)*(s13*s13*(-71*s23*s24+s14*(514*s23+58*s24)+63*(s14*s14)+164*(s23*s23)-90*(s24*s24))+(248*s14+334*s23-40*s24)*pow(s13,3)+180*pow(s13,4)+s13*(3*(63*s23+25*s24)*(s14*s14)+s14*(7*s23*s24+251*(s23*s23)-62*(s24*s24))+s23*(-17*s23*s24+22*(s23*s23)-38*(s24*s24))-16*pow(s14,3))+s14*((9*s23+13*s24)*(s14*s14)+5*s14*(5*s23*s24+15*(s23*s23)-s24*s24)-21*s23*(s24*s24)-3*pow(s14,3)+29*pow(s23,3)+7*pow(s24,3)))+s12*((-26*s23*s24+s14*(79*s23+43*s24)+32*(s23*s23)-36*(s24*s24))*pow(s13,5)+(8*s14+31*s23+9*s24)*pow(s13,6)+4*pow(s13,7)+pow(s13,4)*((49*s23+57*s24)*(s14*s14)+s14*(-17*s23*s24+108*(s23*s23)-83*(s24*s24))+s23*(-29*s23*s24+7*(s23*s23)-32*(s24*s24))-8*pow(s14,3))+4*s13*s23*(2*s23*s24+(s14-s24)*s24+6*(s23*s23))*pow(s14,3)+2*pow(s14,4)*pow(s23,3)+s13*s13*(s14*s14)*(2*(-6*s23+s24)*(s14*s14)-21*s24*(s23*s23)+s14*(49*s23*s24+43*(s23*s23)-4*(s24*s24))-37*s23*(s24*s24)+44*pow(s23,3)+6*pow(s24,3))+s14*pow(s13,3)*((-11*s23+25*s24)*(s14*s14)-36*s24*(s23*s23)+s14*(62*s23*s24+123*(s23*s23)-47*(s24*s24))-21*s23*(s24*s24)-4*pow(s14,3)+29*pow(s23,3)+28*pow(s24,3)))+pow(s12,3)*((6*s14*(84*s23+17*s24)+45*(s14*s14)+4*(-21*s23*s24+40*(s23*s23)-30*(s24*s24)))*pow(s13,3)+(167*s14+251*s23-10*s24)*pow(s13,4)+101*pow(s13,5)+s13*s13*((266*s23+139*s24)*(s14*s14)+s14*(8*s23*s24+357*(s23*s23)-138*(s24*s24))+8*s23*(-5*s23*s24+3*(s23*s23)-9*(s24*s24))-31*pow(s14,3))+s14*s14*(s14*s23*(27*s23+19*s24)+(-4*s23+2*s24)*(s14*s14)+9*s24*(s23*s23)-15*s23*(s24*s24)+33*pow(s23,3)+2*pow(s24,3))+s13*s14*((19*s23+43*s24)*(s14*s14)-26*s24*(s23*s23)+s14*(90*s23*s24+214*(s23*s23)-29*(s24*s24))-63*s23*(s24*s24)-10*pow(s14,3)+64*pow(s23,3)+28*pow(s24,3)))+s12*s12*((-61*s23*s24+3*s14*(91*s23+31*s24)+12*(s14*s14)+96*(s23*s23)-90*(s24*s24))*pow(s13,4)+(58*s14+115*s23+11*s24)*pow(s13,5)+31*pow(s13,6)+pow(s13,3)*((173*s23+127*s24)*(s14*s14)+2*s14*(-4*s23*s24+135*(s23*s23)-76*(s24*s24))+2*s23*(-24*s23*s24+9*(s23*s23)-34*(s24*s24))-26*pow(s14,3))+s23*(6*s23*s24+s14*(s23+2*s24)+15*(s23*s23)-2*(s24*s24))*pow(s14,3)+s13*(s14*s14)*(4*(-3*s23+s24)*(s14*s14)-s24*(s23*s23)+s14*(53*s23*s24+59*(s23*s23)-2*(s24*s24))-41*s23*(s24*s24)+64*pow(s23,3)+6*pow(s24,3))+s14*(s13*s13)*((5*s23+51*s24)*(s14*s14)-57*s24*(s23*s23)+s14*(116*s23*s24+237*(s23*s23)-57*(s24*s24))-63*s23*(s24*s24)-11*pow(s14,3)+57*pow(s23,3)+42*pow(s24,3))))-128*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s23,-2)*pow(s12+s13+s23,-1)*pow(s24,-3)*((12*s23*s24+s13*(30*s14+60*s23+8*s24)+s14*(75*s23+11*s24)+15*(s13*s13)+15*(s14*s14)+50*(s23*s23)+4*(s24*s24))*pow(s12,6)+(15*s13+15*s14+25*s23+4*s24)*pow(s12,7)+5*pow(s12,8)+pow(s12,5)*((15*s14+45*s23+4*s24)*(s13*s13)+5*(15*s23+2*s24)*(s14*s14)+8*s24*(s23*s23)+s14*(36*s23*s24+150*(s23*s23)-5*(s24*s24))+16*s23*(s24*s24)+s13*(21*s23*s24+2*s14*(60*s23+7*s24)+15*(s14*s14)+90*(s23*s23)+6*(s24*s24))+5*pow(s13,3)+5*pow(s14,3)+50*pow(s23,3)-4*pow(s24,3))+s23*(-(s23*s24*(s14*s14)*(s13*(11*s23*s24+7*(s23*s23)-2*(s24*s24))+2*s23*(4*s23*s24+2*(s23*s23)-s24*s24)))+s14*s23*((s23+6*s24)*(s13*s13)+2*(s23+2*s24)*(s23*s23)+s13*(11*s23*s24+6*(s23*s23)-2*(s24*s24)))*(s24*s24)+s23*s23*(3*s23*s24+5*(s23*s23)-2*(s24*s24))*pow(s14,3)+s13*(-3*s13*s23*(2*s23+s24)+(s23+2*s24)*(s13*s13)-2*(3*s23+2*s24)*(s23*s23))*pow(s24,3))+s12*(-(s23*s24*(s13*s13)*(s14*(5*s23*s24+2*(s23*s23)-16*(s24*s24))+s24*(12*s23*s24-3*(s23*s23)+4*(s24*s24))))+s24*s24*(4*s23*s24+s23*s23+2*(s24*s24))*pow(s13,3)+s13*s23*(s23*(-25*s23*s24+4*(s23*s23)-16*(s24*s24))*(s24*s24)+s14*s24*(2*s24*(s23*s23)+37*s23*(s24*s24)-10*pow(s23,3)-4*pow(s24,3))+s14*s14*(-15*s24*(s23*s23)-37*s23*(s24*s24)+15*pow(s23,3)+4*pow(s24,3)))+s23*s23*(2*s23*(-2*s23*s24+s23*s23-2*(s24*s24))*(s24*s24)+(12*s23*s24+25*(s23*s23)-6*(s24*s24))*pow(s14,3)+s14*s24*(2*s24*(s23*s23)+21*s23*(s24*s24)-8*pow(s23,3)-2*pow(s24,3))+s14*s14*(-6*s24*(s23*s23)-35*s23*(s24*s24)+15*pow(s23,3)+4*pow(s24,3))))+s12*s12*(s24*(-3*s23*s24+5*(s23*s23)+s24*s24)*pow(s13,3)+s13*s13*(-(s24*(-5*s24*(s23*s23)+8*s23*(s24*s24)-6*pow(s23,3)+pow(s24,3)))+s14*(-(s24*(s23*s23))-21*s23*(s24*s24)+15*pow(s23,3)+10*pow(s24,3)))+s23*(2*(9*s23*s24+25*(s23*s23)-3*(s24*s24))*pow(s14,3)+s14*s14*(16*s24*(s23*s23)-57*s23*(s24*s24)+75*pow(s23,3)+2*pow(s24,3))-s23*s24*(-10*s24*(s23*s23)+15*s23*(s24*s24)+4*pow(s23,3)+13*pow(s24,3))+s14*(-11*(s23*s23)*(s24*s24)-21*s24*pow(s23,3)+15*pow(s23,4)+35*s23*pow(s24,3)-4*pow(s24,4)))+s13*(s14*s14*(-3*s24*(s23*s23)-41*s23*(s24*s24)+60*pow(s23,3)+2*pow(s24,3))-s23*s24*(-17*s24*(s23*s23)+39*s23*(s24*s24)+3*pow(s23,3)+20*pow(s24,3))+s14*(-34*(s23*s23)*(s24*s24)-16*s24*pow(s23,3)+30*pow(s23,4)+41*s23*pow(s24,3)-2*pow(s24,4))))+pow(s12,3)*(s23*(s14*s14)*(44*s23*s24+150*(s23*s23)-41*(s24*s24))+(5*s23*s24+5*(s23*s23)-2*(s24*s24))*pow(s13,3)+2*(6*s23*s24+25*(s23*s23)-s24*s24)*pow(s14,3)+s13*s13*(16*s24*(s23*s23)+s14*(4*s23*s24+45*(s23*s23)-15*(s24*s24))+2*s23*(s24*s24)+15*pow(s23,3)-2*pow(s24,3))+s23*(22*(s23*s23)*(s24*s24)-12*s24*pow(s23,3)+5*pow(s23,4)-22*s23*pow(s24,3)-14*pow(s24,4))+s13*(s14*s14*(11*s23*s24+90*(s23*s23)-15*(s24*s24))+28*(s23*s23)*(s24*s24)-s24*pow(s23,3)+15*pow(s23,4)-27*s23*pow(s24,3)+s14*(12*s24*(s23*s23)-50*s23*(s24*s24)+120*pow(s23,3)+15*pow(s24,3))-8*pow(s24,4))+s14*(-25*(s23*s23)*(s24*s24)-4*s24*pow(s23,3)+75*pow(s23,4)+23*s23*pow(s24,3)-2*pow(s24,4)))+pow(s12,4)*((3*s14*(15*s23+s24)+s23*(45*s23+14*s24))*(s13*s13)+s14*s14*(36*s23*s24+150*(s23*s23)-11*(s24*s24))+26*(s23*s23)*(s24*s24)+10*s23*pow(s13,3)+(25*s23+3*s24)*pow(s14,3)-8*s24*pow(s23,3)+25*pow(s23,4)+s13*(6*(10*s23+s24)*(s14*s14)+15*s24*(s23*s23)+4*s14*(8*s23*s24+45*(s23*s23)-5*(s24*s24))+21*s23*(s24*s24)+60*pow(s23,3)-7*pow(s24,3))-15*s23*pow(s24,3)+s14*(34*s24*(s23*s23)-19*s23*(s24*s24)+150*pow(s23,3)+5*pow(s24,3))-5*pow(s24,4)))+32*pow(s13,-1)*pow(s24,-1)*(40*s12+8*s13-16*(s12+s13)-24*s23+8*(s13+s23)-16*s24-8*s12*(s13*(2*s13+s23)+s12*(2*s13+3*s23))*pow(s12+s13,-2)-8*(3*s14*s23+s12*(10*s13+3*s14-5*s23+s24)+s13*(6*s14+7*(s23+s24))+6*(s12*s12)+4*(s13*s13))*pow(s12+s13,-1)+8*(s12+s13)*(s13*(s13+s23)+s12*(s13+3*s23))*pow(s13+s23,-2)-8*(s12*s23*(s12+s13-3*s23-2*s24)+(s12+s13)*(s13+s23)*(3*s12+s13-3*s23-2*s24))*pow(s13+s23,-2)-8*(s12+s23)*(s12+s13+s23)*(s12+2*s13+s14+2*s23+s24)*pow(s13+s23,-2)+8*(s12*(13*s13+2*s14-2*s23-2*s24)+s23*(2*s14+7*s23+4*s24)+s13*(6*s14+9*s23+5*s24)+7*(s12*s12)+4*(s13*s13))*pow(s13+s23,-1)-24*(-(s13*s23)+s12*(s13+s23)+s12*s12)*(s14*s23+s12*(2*s13+s14+s23+s24)+s13*(2*s14+s23+s24)+s12*s12+s13*s13)*pow(s13,-1)*pow(s12+s13,-1)*pow(s13+s23,-1)+24*(s12+s13)*(3*s12+3*s13+2*s14)*pow(s12+s13+s23,-1)+8*(s13+s23)*(2*s12+3*s13+2*s14+3*s23+2*s24)*pow(s12+s13+s23,-1)+(8*(3*s12-2*s13-5*s23-2*s24)*(s12+s13+s14+s23+s24)-16*(s13+s23)*(-4*s12+2*s23+s24))*pow(s12+s13+s23,-1)+(-8*(s12+s13+s14)*(4*s12-s13-9*s23-4*s24)-16*(s12+s13)*(5*s12-2*(2*s23+s24)))*pow(s12+s13+s23,-1)-24*(s14*s23+s12*(4*s13+s14+2*s23+s24)+s13*(2*s14+3*s23+s24)+s12*s12+3*(s13*s13))*pow(s12+s13+s23,-1)+8*(s12*(11*s13+2*s14-21*s23-9*s24)+s13*(3*s14+10*s23+6*s24)+s23*(2*s14+11*s23+12*s24)+16*(s12*s12)+6*(s13*s13))*pow(s12+s13+s23,-1)-8*(s13*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(2*s14*s23+s12*(7*s13+2*s14-8*s23-5*s24)+s13*(2*s14+5*s23+s24)+8*(s12*s12)+5*(s13*s13))*pow(s12+s13,-1)*pow(s14,-1)*pow(s12+s13+s23,-1)+8*pow(s12+s13,-2)*pow(s14,-2)*(((3*s14+2*(s23+6*s24))*(s13*s13)-s14*(6*s23*s24+2*s14*(3*s23+s24)+s14*s14+5*(s23*s23)+s24*s24)+2*s13*(-2*s14*(s23-2*s24)+5*s23*s24+s23*s23+4*(s24*s24)))*pow(s12,3)+(4*s14*s24+s13*(9*s14+10*s23+16*s24)+6*(s13*s13)+s14*s14+3*((s23+s24)*(s23+s24)))*pow(s12,4)+(8*s13+5*s14+6*(s23+s24))*pow(s12,5)+3*pow(s12,6)+(s14+s24)*(s13*(s14-s24)+s14*(s14+2*s23+s24))*pow(s13,3)-s13*(s12*s12)*((s14+2*s23)*(s13*s13)+s13*(4*s14*(s23-s24)-2*s23*s24+2*(s14*s14)+s23*s23-6*(s24*s24))+s14*(10*s23*s24+2*s14*(5*s23+s24)+s14*s14+3*(s23*s23)+s24*s24)+pow(s13,3))+s12*(s13*s13)*(-2*s13*(s13+s23)*s24+s14*s24*(-2*s23+s24)-2*(s23-s24)*(s14*s14)+pow(s14,3)))*pow(s12+s13+s23,-1)-8*(s14*((s13+s23)*(s13+s23))*(-(s23*(s14-3*s23+s24)*(s14*s14))+s13*s14*(3*s24*(-3*s23+s24)+s14*(-3*s23+5*s24)+2*(s14*s14))+3*(s13*s13)*(3*s14*s24+s14*s14+3*(s24*s24)))+(6*s13*s23*(4*s14+s23+s24)+(9*s14+6*s23)*(s13*s13)+(21*s14-4*s23+12*s24)*(s23*s23))*pow(s12,4)+3*s23*(s13+2*s23)*pow(s12,5)+pow(s12,3)*(3*(s13*s13)*(4*s23*s24+6*s14*(2*s23+s24)+7*(s14*s14))+3*s13*s23*(s24*(5*s23+s24)+2*s14*(2*s23+7*s24)+15*(s14*s14))+s23*s23*(-4*s23*s24+s14*(-13*s23+30*s24)+27*(s14*s14)+3*(s23*s23)+6*(s24*s24))+3*(6*s14+s23)*pow(s13,3))+3*(s12*s12)*(s14*(s23*s23)*(s14*(-5*s23+8*s24)+5*(s14*s14)+3*(-(s23*s24)+s23*s23+s24*s24))+2*(s23*s24+2*s14*(s23+3*s24)+5*(s14*s14))*pow(s13,3)+3*s14*pow(s13,4)+s13*s13*(s23*s24*(s23+2*s24)+8*(2*s23+s24)*(s14*s14)+s14*(24*s23*s24-s23*s23+3*(s24*s24))+5*pow(s14,3))+s13*s23*(-(s23*(s23-3*s24)*s24)+2*(s23+8*s24)*(s14*s14)+s14*(11*s23*s24+s23*s23+6*(s24*s24))+10*pow(s14,3)))+s12*(s13+s23)*(s23*(s14*s14)*(s14*(-7*s23+6*s24)+3*(s14*s14)+3*(-2*s23*s24+3*(s23*s23)+s24*s24))+9*s14*(s14+2*s24)*pow(s13,3)+s13*s14*(6*s23*s24*(-2*s23+3*s24)+(7*s23+6*s24)*(s14*s14)-3*s14*(-9*s23*s24+s23*s23-s24*s24)+3*pow(s14,3))+s13*s13*(6*s14*s24*(2*s23+3*s24)+33*s24*(s14*s14)+3*s23*(s24*s24)+14*pow(s14,3))))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-3)-4*(-2*(s13+s23)*(s13*s14+(s12+s14)*s23)*(4*s12-2*(2*s23+s24))*(-(s14*s23)+s13*(s14+2*s24)+s12*(2*s13+2*s14-s23+2*s24)+2*(s12*s12))+2*(-2*s12+4*s23+2*s24)*(s12*s12*(s13*(4*s14-s23)*s23+2*s14*(s13*s13)+(3*s14-s23+s24)*(s23*s23))+s12*s14*(2*s13+3*s14-2*s23+2*s24)*((s13+s23)*(s13+s23))+s14*(s14*(s14-s23+s24)+s13*(s14+2*s24))*((s13+s23)*(s13+s23))+s23*s23*pow(s12,3)))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)-8*(s13*s14+(s12+s14)*s23)*(s13*(s14+5*s23+4*s24)+s23*(10*s23+9*s24)+s12*(4*s13-7*(2*s23+s24))+8*(s12*s12)+s13*s13)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1))+32*pow(s12+s13+s14,-1)*pow(s23,-1)*(64*s12+16*s23-16*(s12+s23)+8*(s13+s23)-8*s12*(s23*(s13+2*s23)+s12*(3*s13+2*s23))*pow(s12+s23,-2)-8*(s12*(-6*s13-8*s14+s23-2*s24)-2*s13*(2*s23+s24)-s23*(6*s14+s23+4*s24)+5*(s12*s12))*pow(s12+s23,-1)+8*(s12+s23)*(s23*(s13+s23)+s12*(3*s13+s23))*pow(s13+s23,-2)-8*(s12+s13)*(s12+s13+s23)*(s12+s13+s14+s23+s24)*pow(s13+s23,-2)-8*((9*s13+6*s23)*(s12*s12)-s12*(s13*(2*s14-11*s23)+s13*s13-8*(s23*s23))+2*(s13+s23)*(s23*s23))*pow(s13+s23,-2)+8*(s13*(2*s14+s23)+s12*(-2*s13-6*s14+11*s23)-s23*(3*s14+s23+4*s24)+12*(s12*s12)+2*(s13*s13))*pow(s13+s23,-1)-8*(s12*(s13-2*s23)+2*s13*s23+s12*s12)*(s13*(s23+s24)+s12*(s13+s14+2*s23+s24)+s23*(s14+s23+2*s24)+s12*s12)*pow(s23,-1)*pow(s12+s23,-1)*pow(s13+s23,-1)-24*(s12+s23)*(3*s12+3*s23+2*s24)*pow(s12+s13+s23,-1)-8*(s13+s23)*(2*s12+3*s13+2*s14+3*s23+2*s24)*pow(s12+s13+s23,-1)+(16*(7*s12-2*(s13+s14-s23))*(s12+s23)+8*(8*s12-5*s13-4*s14+3*s23)*(s12+s23+s24))*pow(s12+s13+s23,-1)+(16*(-5*s12+s13+s14-s23)*(s13+s23)-8*(5*s12-3*s13-2*s14)*(s12+s13+s14+s23+s24))*pow(s12+s13+s23,-1)+24*(s13*(3*s23+s24)+s12*(2*s13+s14+4*s23+s24)+s23*(s14+3*s23+2*s24)+s12*s12)*pow(s12+s13+s23,-1)-8*(s13*(s23+4*s24)+s23*(-5*s14+7*s23+4*s24)+s12*(-21*s13-21*s14+24*s23+4*s24)+27*(s12*s12))*pow(s12+s13+s23,-1)+8*(s23*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(s12*(-4*s13-5*s14+10*s23)+s23*(3*s13+s14+4*s23+s24)+12*(s12*s12))*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)-8*pow(s12+s23,-2)*pow(s12+s13+s23,-1)*pow(s24,-2)*((2*s13*(3*s14+5*s23)+9*s23*s24+4*s14*(4*s23+s24)+3*(s13*s13)+3*(s14*s14)+6*(s23*s23)+s24*s24)*pow(s12,4)+(6*s13+6*s14+8*s23+5*s24)*pow(s12,5)+3*pow(s12,6)+(s14+s24)*(s14*(-s23+s24)+s24*(2*s13+s23+s24))*pow(s23,3)+pow(s12,3)*((2*s23-5*s24)*(s13*s13)+(8*s23-s24)*(s14*s14)+3*s24*(s23*s23)+2*s13*(s14*(5*s23-3*s24)-2*s23*s24+s23*s23-3*(s24*s24))+2*s14*(4*s23*s24+6*(s23*s23)-s24*s24)-pow(s24,3))+s12*(s23*s23)*(s24*(s14*s14)-2*s14*(s23*s23-s24*s24)-2*s13*(s14*(s23+s24)+s24*s24)+pow(s24,3))-s23*(s12*s12)*(2*s14*s24*(-2*s23+s24)+(s23+3*s24)*(s13*s13)+(-6*s23+s24)*(s14*s14)+s24*(s23*s23)+2*s23*(s24*s24)+2*s13*(-(s14*(s23-5*s24))+2*s23*s24+s23*s23+5*(s24*s24))+pow(s23,3)+pow(s24,3)))+8*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*(s24*((s13+s23)*(s13+s23))*(s14*s24*(-(s13*(9*s23+s24))+s23*(9*s23+5*s24))+3*s23*(3*s23+s24)*(s14*s14)+(-(s13*(3*s23+s24))+s23*(3*s23+2*s24)+3*(s13*s13))*(s24*s24))+3*s13*(2*s13+s23)*pow(s12,5)+pow(s12,4)*(6*s13*s23*(s14+s23+4*s24)+3*(4*s14+2*s23+7*s24)*(s13*s13)+9*s24*(s23*s23)-4*pow(s13,3))+pow(s12,3)*(3*(s13*s13)*(5*s14*(s23+2*s24)+s24*(4*s23+9*s24)+2*(s14*s14))+3*s24*(6*s14+6*s23+7*s24)*(s23*s23)+3*s13*s23*(12*s23*s24+2*s14*(2*s23+7*s24)+s14*s14+s23*s23+15*(s24*s24))-(4*s14+13*s24)*pow(s13,3)+3*pow(s13,4))+3*(s12*s12)*(s24*(s23*s23)*(10*s23*s24+4*s14*(3*s23+2*s24)+3*(s14*s14)+3*(s23*s23)+5*(s24*s24))+s13*s13*(3*(s23+s24)*(s14*s14)+s24*(2*s23*s24-s23*s23+5*(s24*s24))+s14*(11*s23*s24+s23*s23+8*(s24*s24)))+2*s13*s23*((s23+3*s24)*(s14*s14)+s24*(8*s23*s24+2*(s23*s23)+5*(s24*s24))+s14*(12*s23*s24+s23*s23+8*(s24*s24)))-(s14*(s23+3*s24)+s24*(-s23+5*s24))*pow(s13,3)+3*s24*pow(s13,4))+s12*(s13+s23)*(-(s24*(6*s14*(2*s23+s24)+s24*(3*s23+7*s24))*(s13*s13))+s23*s24*(3*(6*s23+s24)*(s14*s14)+3*s14*(11*s23*s24+6*(s23*s23)+2*(s24*s24))+s24*(14*s23*s24+9*(s23*s23)+3*(s24*s24)))+9*(s24*s24)*pow(s13,3)+s13*(3*(s14*s14)*(6*s23*s24+s23*s23+s24*s24)+3*s14*s24*(9*s23*s24+4*(s23*s23)+2*(s24*s24))+(7*s23+3*s24)*pow(s24,3))))*pow(s12+s14+s24,-3)+4*(-4*(s13+s23)*(3*s12-s13-s14+s23)*(s12*s13+(s13+s23)*s24)*(2*s14*s23+(-s13+s23)*s24+s12*(-s13+2*(s14+s23+s24))+2*(s12*s12))+2*(-2*s12+s13+s14-s23)*(-2*s12*(2*s13-2*s14-2*s23-3*s24)*s24*((s13+s23)*(s13+s23))+2*s24*(s24*(-s13+s23+s24)+s14*(2*s23+s24))*((s13+s23)*(s13+s23))+2*(s13*s13)*pow(s12,3)-2*(s12*s12)*(-4*s13*s23*s24+(-s14+s23-3*s24)*(s13*s13)-2*s24*(s23*s23)+pow(s13,3))))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)+8*(s12*s13+(s13+s23)*s24)*(s13*(3*s14+4*s24)+s12*(-10*s13-13*s14+16*s23+4*s24)+s23*(-4*s14+3*(s23+s24))+19*(s12*s12)+3*(s13*s13))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1))+256*pow(s24,-1)*((s12+s23)*pow(s13,-1)-(2*s12+s13+s23)*pow(s13,-1)-(s23*(s13+s23)+s12*(2*s13+s23))*pow(s13,-1)*pow(s12+s23,-1)-(s12+s13+s23)*(s12+s23+s24)*pow(s13,-1)*pow(s12+s23,-1)+(s13*(8*s23-s24)+s23*(3*s14+5*s23+2*s24)+s12*(5*s13+3*(s14+3*s23+s24))+4*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)-(s12+s23)*(s23*(s13+s23)+s12*(3*s13+s23))*pow(s13,-1)*pow(s13+s23,-2)+(s12+s23)*(s12+s13+s23)*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s13+s23,-2)+((7*s13+4*s23)*(s12*s12)+2*(s13+s23)*(s23*s23)+s12*(s13*(9*s23+2*s24)+s13*s13+6*(s23*s23)))*pow(s13,-1)*pow(s13+s23,-2)-(3*s13*(s14+2*s23)+s23*(4*s14+5*s23+2*s24)+s12*(5*s13+2*(s14+6*s23+3*s24))+9*(s12*s12)+s13*s13)*pow(s13,-1)*pow(s13+s23,-1)-3*s12*(s13*(s23+s24)+s12*(s13+s14+2*s23+s24)+s23*(s14+s23+2*s24)+s12*s12)*pow(s23,-1)*pow(s12+s23,-1)*pow(s13+s23,-1)-(s12+s23)*(s12+2*s13+s14+2*s23+s24)*pow(s13,-1)*pow(s12+s13+s23,-1)+(s12+s23)*(3*s12+3*s23+2*s24)*pow(s13,-1)*pow(s12+s13+s23,-1)-(2*s12+2*s23+s24)*(4*s12+s13+3*s23+2*s24)*pow(s13,-1)*pow(s12+s13+s23,-1)+(2*s14*s23+4*s14*s24+8*s23*s24+s13*(s14+10*s23+7*s24)+s12*(7*s13+2*s14+15*s23+13*s24)+8*(s12*s12)+7*(s23*s23)+4*(s24*s24))*pow(s13,-1)*pow(s12+s13+s23,-1)+(s23*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(s23*s24+s12*(6*s23+s24)-s24*(s13+2*s24)+3*(s12*s12)+3*(s23*s23))*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)-pow(s13,-1)*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*(s24*((s13+s23)*(s13+s23))*(s14*s24*(-(s13*(9*s23+s24))+s23*(9*s23+5*s24))+3*s23*(3*s23+s24)*(s14*s14)+(-(s13*(3*s23+s24))+s23*(3*s23+2*s24)+3*(s13*s13))*(s24*s24))+3*s13*(2*s13+s23)*pow(s12,5)+pow(s12,4)*(6*s13*s23*(s14+s23+4*s24)+3*(4*s14+2*s23+7*s24)*(s13*s13)+9*s24*(s23*s23)-4*pow(s13,3))+pow(s12,3)*(3*(s13*s13)*(5*s14*(s23+2*s24)+s24*(4*s23+9*s24)+2*(s14*s14))+3*s24*(6*s14+6*s23+7*s24)*(s23*s23)+3*s13*s23*(12*s23*s24+2*s14*(2*s23+7*s24)+s14*s14+s23*s23+15*(s24*s24))-(4*s14+13*s24)*pow(s13,3)+3*pow(s13,4))+3*(s12*s12)*(s24*(s23*s23)*(10*s23*s24+4*s14*(3*s23+2*s24)+3*(s14*s14)+3*(s23*s23)+5*(s24*s24))+s13*s13*(3*(s23+s24)*(s14*s14)+s24*(2*s23*s24-s23*s23+5*(s24*s24))+s14*(11*s23*s24+s23*s23+8*(s24*s24)))+2*s13*s23*((s23+3*s24)*(s14*s14)+s24*(8*s23*s24+2*(s23*s23)+5*(s24*s24))+s14*(12*s23*s24+s23*s23+8*(s24*s24)))-(s14*(s23+3*s24)+s24*(-s23+5*s24))*pow(s13,3)+3*s24*pow(s13,4))+s12*(s13+s23)*(-(s24*(6*s14*(2*s23+s24)+s24*(3*s23+7*s24))*(s13*s13))+s23*s24*(3*(6*s23+s24)*(s14*s14)+3*s14*(11*s23*s24+6*(s23*s23)+2*(s24*s24))+s24*(14*s23*s24+9*(s23*s23)+3*(s24*s24)))+9*(s24*s24)*pow(s13,3)+s13*(3*(s14*s14)*(6*s23*s24+s23*s23+s24*s24)+3*s14*s24*(9*s23*s24+4*(s23*s23)+2*(s24*s24))+(7*s23+3*s24)*pow(s24,3))))*pow(s12+s14+s24,-3)+2*pow(s13,-1)*(-(s24*(2*s23+s24)*((2*s13-2*s23-s24)*s24-s14*(4*s23+s24))*((s13+s23)*(s13+s23)))-s12*(s13+s23)*(s24*(8*s23+9*s24)*(s13*s13)-s23*s24*(19*s23*s24+6*s14*(3*s23+s24)+8*(s23*s23)+7*(s24*s24))-s13*(s14*(20*s23*s24+4*(s23*s23)+6*(s24*s24))+s24*(12*s23*s24+4*(s23*s23)+7*(s24*s24))))+2*s13*(4*s13+3*s23)*pow(s12,4)+pow(s12,3)*(2*s13*s23*(3*s14+5*s23+14*s24)+(8*s14+7*(s23+3*s24))*(s13*s13)+10*s24*(s23*s23)-5*pow(s13,3))+s12*s12*((s14*(12*s23+13*s24)+s24*(10*s23+19*s24))*(s13*s13)+2*s24*(5*s14+9*s23+8*s24)*(s23*s23)+2*s13*s23*(19*s23*s24+s14*(5*s23+11*s24)+2*(s23*s23)+17*(s24*s24))-4*(s23+3*s24)*pow(s13,3)))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)-(s12*s13+(s13+s23)*s24)*(2*s14*s23+4*s14*s24+9*s23*s24+s13*(2*s14+5*s23+3*s24)+s12*(4*s13+4*s14+24*s23+15*s24)+18*(s12*s12)+s13*s13+2*(s14*s14)+10*(s23*s23)+2*(s24*s24))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1))+32*(8*(s12+s13)*pow(s12+s13+s14,-1)*pow(s23,-1)-8*(s12+2*s14)*pow(s12+s13+s14,-1)*pow(s23,-1)-8*(2*s12+2*s13+s14)*(s12+s13+s23)*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)-8*(s13*(s13+s23)+s12*(s13+2*s23))*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)+8*(-(s14*s23)+s12*(3*s13+3*s14+2*s23+s24)+s13*(6*s23+s24)+s12*s12+2*(s13*s13))*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)+8*(s12*(s12+s13+2*s14-s23)*s23+(s12+s13)*(3*s12+s13+2*s14-s23)*(s13+s23))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-2)-8*(s12+s13)*(s13*(s13+s23)+s12*(s13+3*s23))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-2)+8*(s12+s13)*(s12+s13+s23)*(s12+2*s13+s14+2*s23+s24)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-2)-8*(s14*s23+s12*(2*s13+s14+s23+s24)+s13*(2*s14+s23+s24)+s12*s12+s13*s13)*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s13+s23,-1)-8*(s23*(-6*s14+s23-s24)+2*s12*(2*s13+s14+s23+2*s24)+s13*(3*s23+2*s24)+6*(s12*s12)+2*(s13*s13))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-1)+8*(3*s12+3*s13+2*(s14+s23))*(s13*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s12+s13,-1)*pow(s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)-8*(s12+s13)*(3*s12+3*s13+2*s14)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)+8*(2*s12+2*s13+s14)*(2*s12+s13+2*s14-s23)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)+8*(s12+s13)*(s12+2*s13+s14+2*s23+s24)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)-8*(3*s14*s23+4*s14*s24+2*s23*s24+s12*(21*s13+17*s14+4*s23+8*s24)+s13*(12*s14+11*s23+8*s24)+11*(s12*s12)+10*(s13*s13)+4*(s14*s14)+s23*s23)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)+8*(s14*((s13+s23)*(s13+s23))*(-(s23*(s14-3*s23+s24)*(s14*s14))+s13*s14*(3*s24*(-3*s23+s24)+s14*(-3*s23+5*s24)+2*(s14*s14))+3*(s13*s13)*(3*s14*s24+s14*s14+3*(s24*s24)))+(6*s13*s23*(4*s14+s23+s24)+(9*s14+6*s23)*(s13*s13)+(21*s14-4*s23+12*s24)*(s23*s23))*pow(s12,4)+3*s23*(s13+2*s23)*pow(s12,5)+pow(s12,3)*(3*(s13*s13)*(4*s23*s24+6*s14*(2*s23+s24)+7*(s14*s14))+3*s13*s23*(s24*(5*s23+s24)+2*s14*(2*s23+7*s24)+15*(s14*s14))+s23*s23*(-4*s23*s24+s14*(-13*s23+30*s24)+27*(s14*s14)+3*(s23*s23)+6*(s24*s24))+3*(6*s14+s23)*pow(s13,3))+3*(s12*s12)*(s14*(s23*s23)*(s14*(-5*s23+8*s24)+5*(s14*s14)+3*(-(s23*s24)+s23*s23+s24*s24))+2*(s23*s24+2*s14*(s23+3*s24)+5*(s14*s14))*pow(s13,3)+3*s14*pow(s13,4)+s13*s13*(s23*s24*(s23+2*s24)+8*(2*s23+s24)*(s14*s14)+s14*(24*s23*s24-s23*s23+3*(s24*s24))+5*pow(s14,3))+s13*s23*(-(s23*(s23-3*s24)*s24)+2*(s23+8*s24)*(s14*s14)+s14*(11*s23*s24+s23*s23+6*(s24*s24))+10*pow(s14,3)))+s12*(s13+s23)*(s23*(s14*s14)*(s14*(-7*s23+6*s24)+3*(s14*s14)+3*(-2*s23*s24+3*(s23*s23)+s24*s24))+9*s14*(s14+2*s24)*pow(s13,3)+s13*s14*(6*s23*s24*(-2*s23+3*s24)+(7*s23+6*s24)*(s14*s14)-3*s14*(-9*s23*s24+s23*s23-s24*s24)+3*pow(s14,3))+s13*s13*(6*s14*s24*(2*s23+3*s24)+33*s24*(s14*s14)+3*s23*(s24*s24)+14*pow(s14,3))))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-3)+4*(-4*(2*s12+s13+s14-s23)*(s13+s23)*(s13*s14+(s12+s14)*s23)*(-(s14*s23)+s13*(s14+2*s24)+s12*(2*s13+2*s14-s23+2*s24)+2*(s12*s12))-4*(s12+s13+s14-s23)*(s12*s12*(s13*(4*s14-s23)*s23+2*s14*(s13*s13)+(3*s14-s23+s24)*(s23*s23))+s12*s14*(2*s13+3*s14-2*s23+2*s24)*((s13+s23)*(s13+s23))+s14*(s14*(s14-s23+s24)+s13*(s14+2*s24))*((s13+s23)*(s13+s23))+s23*s23*pow(s12,3)))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)+8*(s13*s14+(s12+s14)*s23)*(-2*s14*s23+4*s14*s24+7*s23*s24+s13*(7*s14+8*s23+10*s24)+s12*(18*s13+13*s14+4*s23+12*s24)+15*(s12*s12)+7*(s13*s13)+2*(s14*s14)+7*(s23*s23)+2*(s24*s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1))+128*pow(s13,-1)*pow(s12+s13,-2)*pow(s14,-3)*pow(s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*((s14*(20*s23+19*s24)+s13*(32*s14+60*s23+75*s24)+50*(s13*s13)+12*(s14*s14)+15*((s23+s24)*(s23+s24)))*pow(s12,6)+(25*s13+8*s14+15*(s23+s24))*pow(s12,7)+5*pow(s12,8)+pow(s12,4)*(3*(s13*s13)*(60*s23*s24+s14*(29*s23+38*s24)+22*(s14*s14)+15*(s23*s23)+50*(s24*s24))+2*(16*s14+30*s23+75*s24)*pow(s13,3)+25*pow(s13,4)+s14*(5*(3*s23+s24)*(s14*s14)+s14*(8*(s23*s23)-5*(s24*s24))+(4*s23+3*s24)*((s23+s24)*(s23+s24))+pow(s14,3))+s13*((71*s23+35*s24)*(s14*s14)+s14*(96*s23*s24+50*(s23*s23)+56*(s24*s24))+5*(2*s23+5*s24)*((s23+s24)*(s23+s24))+37*pow(s14,3)))+s12*(s14*((29*s23+9*s24)*(s14*s14)+s14*(10*s23*s24+15*(s23*s23)-11*(s24*s24))+s24*(s23*s24+6*(s23*s23)+12*(s24*s24)))*pow(s13,3)+15*(s24*s24)*pow(s13,5)-2*s13*s23*(-2*s23*s24+s14*(5*s23+2*s24)+s23*s23-2*(s24*s24))*pow(s14,3)+pow(s13,4)*(2*s14*s24*(3*s23+7*s24)+(6*s23+8*s24)*(s14*s14)+5*(3*s23+5*s24)*(s24*s24)+6*pow(s14,3))-4*pow(s14,4)*pow(s23,3)+s13*s13*(s14*s14)*(-2*(s23+s24)*(s14*s14)+s24*(s23*s23)-19*s23*(s24*s24)+s14*(13*s23*s24+22*(s23*s23)+4*(s24*s24))+9*pow(s23,3)-6*pow(s24,3)))+s13*(s13*s13*(s14*s14)*(s24*(-5*s23*s24+s23*s23-2*(s24*s24))+s14*(5*s23*s24+10*(s23*s23)+2*(s24*s24)))+s14*(2*s14*(s23-s24)*s24+4*s23*(s14*s14)+3*(-s23+s24)*(s24*s24))*pow(s13,3)+s13*s23*(6*s23*s24-s14*(3*s23+2*s24)+5*(s23*s23)+2*(s24*s24))*pow(s14,3)-4*pow(s14,4)*pow(s23,3)+5*pow(s13,4)*pow(s24,3))+s12*s12*((15*s24*(2*s23+5*s24)+s14*(9*s23+19*s24)+10*(s14*s14))*pow(s13,4)+15*s24*pow(s13,5)-s23*(2*s23*s24+s14*(7*s23+2*s24)+5*(s23*s23)-2*(s24*s24))*pow(s14,3)+pow(s13,3)*((39*s23+33*s24)*(s14*s14)+5*s24*(12*s23*s24+3*(s23*s23)+10*(s24*s24))+2*s14*(24*s23*s24+9*(s23*s23)+28*(s24*s24))+29*pow(s14,3))+s13*(s14*s14)*(-4*(s23+s24)*(s14*s14)-9*s24*(s23*s23)-23*s23*(s24*s24)+s14*(11*s23*s24+12*(s23*s23)+2*(s24*s24))+5*pow(s23,3)-6*pow(s24,3))+s14*(s13*s13)*((61*s23+23*s24)*(s14*s14)+23*s24*(s23*s23)+s14*(14*s23*s24+37*(s23*s23)-21*(s24*s24))+21*s23*(s24*s24)+pow(s14,3)+9*pow(s23,3)+18*pow(s24,3)))+pow(s12,3)*((s14*(47*s23+76*s24)+42*(s14*s14)+15*(8*s23*s24+s23*s23+10*(s24*s24)))*pow(s13,3)+(8*s14+15*(s23+5*s24))*pow(s13,4)+5*pow(s13,5)-s14*s14*(-3*s14*s23*s24+2*(s23+s24)*(s14*s14)+9*s24*(s23*s23)+9*s23*(s24*s24)+2*pow(s23,3)+2*pow(s24,3))+s13*s14*((51*s23+19*s24)*(s14*s14)+28*s24*(s23*s23)+s14*(6*s23*s24+30*(s23*s23)-17*(s24*s24))+27*s23*(s24*s24)+2*pow(s14,3)+13*pow(s23,3)+12*pow(s24,3))+s13*s13*((82*s23+51*s24)*(s14*s14)+4*s14*(27*s23*s24+13*(s23*s23)+21*(s24*s24))+50*pow(s14,3)+5*(9*s24*(s23*s23)+18*s23*(s24*s24)+pow(s23,3)+10*pow(s24,3))))+pow(s12,5)*(6*(8*s14+15*s23+25*s24)*(s13*s13)+(22*s23+9*s24)*(s14*s14)+2*s14*(15*s23*s24+8*(s23*s23)+7*(s24*s24))+s13*(s14*(69*s23+76*s24)+46*(s14*s14)+15*(8*s23*s24+3*(s23*s23)+5*(s24*s24)))+50*pow(s13,3)+10*pow(s14,3)+5*pow(s23+s24,3)))-128*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s23,-2)*pow(s12+s13+s23,-1)*((30*s23*s24+s14*(35*s23+3*s24)+s13*(15*s14+53*s23+19*s24)+8*(s13*s13)+4*(s14*s14)+61*(s23*s23)-3*(s24*s24))*pow(s12,6)+(7*s13+6*s14+17*s23+3*s24)*pow(s12,7)+2*pow(s12,8)+pow(s12,5)*((9*s14+54*s23+29*s24)*(s13*s13)+3*(8*s23+s24)*(s14*s14)+108*s24*(s23*s23)+s14*(13*s23*s24+85*(s23*s23)-14*(s24*s24))+3*s23*(s24*s24)+s13*(119*s23*s24+9*s14*(8*s23+3*s24)+6*(s14*s14)+163*(s23*s23)+15*(s24*s24))+3*pow(s13,3)+120*pow(s23,3)-7*pow(s24,3))+pow(s12,3)*(s23*(s14*s14)*(58*s23*s24+80*(s23*s23)+5*(s24*s24))+(58*s23*s24+32*(s23*s23)+21*(s24*s24))*pow(s13,3)-2*s24*(14*s23+s24)*pow(s14,3)+s13*s13*(275*s24*(s23*s23)+138*s23*(s24*s24)+s14*(82*s23*s24+60*(s23*s23)+21*(s24*s24))+164*pow(s23,3)+23*pow(s24,3))+s23*(87*(s23*s23)*(s24*s24)+183*s24*pow(s23,3)+97*pow(s23,4)-5*s23*pow(s24,3)-6*pow(s24,4))+s14*(-87*(s23*s23)*(s24*s24)+18*s24*pow(s23,3)+80*pow(s23,4)-39*s23*pow(s24,3)-2*pow(s24,4))+s13*(146*(s23*s23)*(s24*s24)+s14*s14*(31*s23*s24+52*(s23*s23)+9*(s24*s24))+376*s24*pow(s23,3)+249*pow(s23,4)+s14*(136*s24*(s23*s23)+8*s23*(s24*s24)+144*pow(s23,3)-7*pow(s24,3))+5*s23*pow(s24,3)-2*pow(s24,4)))+pow(s12,4)*(s14*s14*(22*s23*s24+60*(s23*s23)-s24*s24)+45*(s23*s23)*(s24*s24)+s13*s13*(s14*(37*s23+24*s24)+3*(49*s23*s24+44*(s23*s23)+13*(s24*s24)))+(18*s23+13*s24)*pow(s13,3)-7*s24*pow(s14,3)+192*s24*pow(s23,3)+140*pow(s23,4)+s14*(22*s24*(s23*s23)-57*s23*(s24*s24)+110*pow(s23,3)-13*pow(s24,3))-16*s23*pow(s24,3)+s13*((28*s23+13*s24)*(s14*s14)+296*s24*(s23*s23)+75*s23*(s24*s24)+s14*(99*s23*s24+141*(s23*s23)+7*(s24*s24))+266*pow(s23,3)+pow(s24,3))-3*pow(s24,4))+s12*s12*(pow(s13,3)*(89*s24*(s23*s23)+66*s23*(s24*s24)+30*pow(s23,3)+15*pow(s24,3))+s23*(s23*(16*s23*s24+37*(s23*s23)-3*(s24*s24))*((s23+s24)*(s23+s24))-6*s24*(7*s23+s24)*pow(s14,3)+s14*s14*(72*s24*(s23*s23)+21*s23*(s24*s24)+60*pow(s23,3)+2*pow(s24,3))+s14*(-59*(s23*s23)*(s24*s24)+7*s24*pow(s23,3)+31*pow(s23,4)-39*s23*pow(s24,3)-4*pow(s24,4)))+s13*(s14*s14*(15*s24*(s23*s23)+23*s23*(s24*s24)+48*pow(s23,3)+2*pow(s24,3))+s23*(139*(s23*s23)*(s24*s24)+257*s24*pow(s23,3)+133*pow(s23,4)+11*s23*pow(s24,3)-4*pow(s24,4))+s14*(-14*(s23*s23)*(s24*s24)+84*s24*pow(s23,3)+81*pow(s23,4)-23*s23*pow(s24,3)-2*pow(s24,4)))+s13*s13*(181*(s23*s23)*(s24*s24)+258*s24*pow(s23,3)+120*pow(s23,4)+51*s23*pow(s24,3)+s14*(81*s24*(s23*s23)+49*s23*(s24*s24)+48*pow(s23,3)+6*pow(s24,3))+5*pow(s24,4)))+s23*(s14*s14*(s23*s23)*(s23*s24*(-7*s14+8*s24)+10*s24*(s23*s23)+2*(-s14+s24)*(s24*s24)+4*pow(s23,3))+s23*(s13*s13)*((9*s23*s24+12*(s23*s23)+s24*s24)*((s23+s24)*(s23+s24))+s14*(-11*s24*(s23*s23)-s23*(s24*s24)+3*pow(s23,3)-2*pow(s24,3)))+pow(s13,3)*(31*(s23*s23)*(s24*s24)+21*s24*pow(s23,3)+8*pow(s23,4)+17*s23*pow(s24,3)+4*pow(s24,4))+s13*s23*(s14*(-5*s23*s24+3*(s23*s23)-2*(s24*s24))*((s23+s24)*(s23+s24))+s14*s14*(-8*s24*(s23*s23)+5*s23*(s24*s24)+4*pow(s23,3)+2*pow(s24,3))+4*(s23*s23)*pow(s23+s24,3)))+s12*(s13*s23*(s23*(15*s23*s24+37*(s23*s23)-2*(s24*s24))*((s23+s24)*(s23+s24))+s14*s14*(-11*s24*(s23*s23)+19*s23*(s24*s24)+22*pow(s23,3)+4*pow(s24,3))+s14*(-24*(s23*s23)*(s24*s24)+21*s24*pow(s23,3)+24*pow(s23,4)-25*s23*pow(s24,3)-4*pow(s24,4)))+pow(s13,3)*(74*(s23*s23)*(s24*s24)+65*s24*pow(s23,3)+21*pow(s23,4)+30*s23*pow(s24,3)+4*pow(s24,4))+s23*(s13*s13)*(113*(s23*s23)*(s24*s24)+134*s24*pow(s23,3)+54*pow(s23,4)+39*s23*pow(s24,3)+s14*(12*s24*(s23*s23)+27*s23*(s24*s24)+19*pow(s23,3)+4*pow(s24,3))+6*pow(s24,4))+s23*s23*(s14*(-9*s23*s24+5*(s23*s23)-2*(s24*s24))*((s23+s24)*(s23+s24))-2*s24*(14*s23+3*s24)*pow(s14,3)+s14*s14*(43*s24*(s23*s23)+23*s23*(s24*s24)+24*pow(s23,3)+4*pow(s24,3))+6*(s23*s23)*pow(s23+s24,3))))*pow(s12+s23+s24,-3)-256*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*(s13*s13*(-2*s23*s24-3*(s23*s23)+s24*s24)+s13*s23*(6*s23*s24+3*s14*(s23+s24)-9*(s23*s23)+8*(s24*s24))+s12*s12*(28*s23*s24+s13*(3*s14-9*s23+7*s24)+s14*(3*s23+10*s24)-15*(s23*s23)+12*(s24*s24))+(s14-3*s23+11*s24)*pow(s12,3)+pow(s12,4)+s12*((-3*s23+s24)*(s13*s13)+23*s24*(s23*s23)+26*s23*(s24*s24)+s14*(20*s23*s24+3*(s23*s23)+2*(s24*s24))+s13*(13*s23*s24+3*s14*(2*s23+s24)-18*(s23*s23)+7*(s24*s24))-17*pow(s23,3)+2*pow(s24,3))+s23*(s14*(10*s23*s24+s23*s23+2*(s24*s24))+2*(3*s24*(s23*s23)+7*s23*(s24*s24)-3*pow(s23,3)+pow(s24,3))))*pow(s12+s23+s24,-2)+256*(2*s23*s24*(s23+s24)*(s14+3*s23+s24)+(s13*(-s14+3*s23+s24)+2*s24*(s14+5*s23+2*s24))*(s12*s12)+s13*s13*(6*s23*s24+5*(s23*s23)+4*(s24*s24))+s13*s23*(11*s23*s24-s14*(s23+4*s24)+5*(s23*s23)+6*(s24*s24))+s12*((5*s23+4*s24)*(s13*s13)+2*s24*(6*s23*s24+s14*(2*s23+s24)+7*(s23*s23)+s24*s24)+s13*(12*s23*s24-2*s14*(s23+2*s24)+9*(s23*s23)+2*(s24*s24)))-(s13-2*s24)*pow(s12,3))*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*pow(s12+s23+s24,-1)-256*(2*s23*s24*(s14-2*s23+s24)*(s23+s24)+s13*s23*((s23-4*s24)*s24+s14*(3*s23+4*s24))+2*(s23-2*s24)*s24*(s13*s13)+s12*s12*(3*s13*(s14+2*s23+s24)+2*s24*(s14+2*s24)+3*(s13*s13))+s12*(s13*(s23*(3*s23+4*s24)+s14*(6*s23+4*s24))+3*s23*(s13*s13)+2*s24*(s23*s24+s14*(2*s23+s24)-3*(s23*s23)+s24*s24))+(3*s13+2*s24)*pow(s12,3))*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*pow(s12+s23+s24,-1)-128*pow(s13,-1)*pow(s12+s13,-2)*pow(s12+s13+s14,-3)*pow(s23,-1)*pow(s12+s13+s23,-1)*((15*s23*s24+s14*(19*s23+3*s24)+s13*(30*s14+53*s23+35*s24)+61*(s13*s13)-3*(s14*s14)+8*(s23*s23)+4*(s24*s24))*pow(s12,6)+(17*s13+3*s14+7*s23+6*s24)*pow(s12,7)+2*pow(s12,8)+pow(s12,5)*((108*s14+163*s23+85*s24)*(s13*s13)+(15*s23-14*s24)*(s14*s14)+3*s23*(3*s23*s24+s23*s23+2*(s24*s24))+s14*(27*s23*s24+29*(s23*s23)+3*(s24*s24))+s13*(s14*(119*s23+13*s24)+3*(s14*s14)+6*((3*s23+2*s24)*(3*s23+2*s24)))+120*pow(s13,3)-7*pow(s14,3))+pow(s12,4)*(s13*s13*(s14*(296*s23+22*s24)+45*(s14*s14)+3*(47*s23*s24+44*(s23*s23)+20*(s24*s24)))+2*(96*s14+133*s23+55*s24)*pow(s13,3)+140*pow(s13,4)+s13*((75*s23-57*s24)*(s14*s14)+s14*(99*s23*s24+147*(s23*s23)+22*(s24*s24))+s23*(37*s23*s24+18*(s23*s23)+28*(s24*s24))-16*pow(s14,3))+s14*((s23-13*s24)*(s14*s14)+24*s24*(s23*s23)+s14*(7*s23*s24+39*(s23*s23)-s24*s24)+13*s23*(s24*s24)-3*pow(s14,3)+13*pow(s23,3)-7*pow(s24,3)))+s12*s12*((81*s23*s24+s14*(257*s23+7*s24)+66*(s14*s14)+120*(s23*s23)+60*(s24*s24))*pow(s13,4)+(90*s14+133*s23+31*s24)*pow(s13,5)+37*pow(s13,6)+s23*(s14*(5*s23-2*s24)+6*s23*s24+15*(s23*s23)+2*(s24*s24))*pow(s14,3)+pow(s13,3)*((139*s23-59*s24)*(s14*s14)+6*s23*(8*s23*s24+5*(s23*s23)+8*(s24*s24))+6*s14*(14*s23*s24+43*(s23*s23)+12*(s24*s24))+10*pow(s14,3))+s14*(s13*s13)*((11*s23-39*s24)*(s14*s14)+81*s24*(s23*s23)+15*s23*(s24*s24)+s14*(-14*s23*s24+181*(s23*s23)+21*(s24*s24))-3*pow(s14,3)+89*pow(s23,3)-42*pow(s24,3))+s13*(s14*s14)*(-4*(s23+s24)*(s14*s14)+49*s24*(s23*s23)+23*s23*(s24*s24)+s14*(-23*s23*s24+51*(s23*s23)+2*(s24*s24))+66*pow(s23,3)-6*pow(s24,3)))+s12*((s14*(89*s23+s24)+18*(s14*s14)+6*(4*s23*s24+9*(s23*s23)+4*(s24*s24)))*pow(s13,5)+(18*s14+37*s23+5*s24)*pow(s13,6)+6*pow(s13,7)+2*s13*s23*(s14*(3*s23-2*s24)+2*s23*s24+15*(s23*s23)+2*(s24*s24))*pow(s14,3)+pow(s13,4)*(5*(13*s23-3*s24)*(s14*s14)+s23*(19*s23*s24+21*(s23*s23)+22*(s24*s24))+s14*(21*s23*s24+134*(s23*s23)+43*(s24*s24))+6*pow(s14,3))+4*pow(s14,4)*pow(s23,3)+s14*pow(s13,3)*((11*s23-13*s24)*(s14*s14)+12*s24*(s23*s23)-11*s23*(s24*s24)+s14*(-24*s23*s24+113*(s23*s23)+23*(s24*s24))+65*pow(s23,3)-28*pow(s24,3))+s13*s13*(s14*s14)*(-2*(s23+s24)*(s14*s14)+27*s24*(s23*s23)+19*s23*(s24*s24)+s14*(-25*s23*s24+39*(s23*s23)+4*(s24*s24))+74*pow(s23,3)-6*pow(s24,3)))+pow(s12,3)*((2*s14*(188*s23+9*s24)+87*(s14*s14)+4*(36*s23*s24+41*(s23*s23)+20*(s24*s24)))*pow(s13,3)+(183*s14+249*s23+80*s24)*pow(s13,4)+97*pow(s13,5)+s13*s13*((146*s23-87*s24)*(s14*s14)+4*s23*(15*s23*s24+8*(s23*s23)+13*(s24*s24))+s14*(136*s23*s24+275*(s23*s23)+58*(s24*s24))-5*pow(s14,3))+s13*s14*((5*s23-39*s24)*(s14*s14)+82*s24*(s23*s23)+31*s23*(s24*s24)+s14*(8*s23*s24+138*(s23*s23)+5*(s24*s24))-6*pow(s14,3)+58*pow(s23,3)-28*pow(s24,3))+s14*s14*(s14*s23*(23*s23-7*s24)-2*(s23+s24)*(s14*s14)+21*s24*(s23*s23)+9*s23*(s24*s24)+21*pow(s23,3)-2*pow(s24,3)))+s13*((12*s23*(s14*s14)+s23*(3*s23*s24+8*(s23*s23)+4*(s24*s24))+s14*(s23*s24+33*(s23*s23)+10*(s24*s24)))*pow(s13,4)+(12*s14*s23+3*s23*s24+12*(s23*s23)+4*(s24*s24))*pow(s13,5)+4*s23*pow(s13,6)+s13*s23*(s14*(s23-2*s24)-2*s23*s24+17*(s23*s23)+2*(s24*s24))*pow(s14,3)+4*pow(s14,4)*pow(s23,3)+s14*pow(s13,3)*(4*s23*(s14*s14)-11*s24*(s23*s23)-8*s23*(s24*s24)+s14*(-9*s23*s24+31*(s23*s23)+8*(s24*s24))+21*pow(s23,3)-7*pow(s24,3))+s13*s13*(s14*s14)*(-(s24*(s23*s23))+5*s23*(s24*s24)+s14*(-9*s23*s24+11*(s23*s23)+2*(s24*s24))+31*pow(s23,3)-2*pow(s24,3))))*pow(s12+s23+s24,-1)+32*pow(s13,-1)*(64*s12+16*s13-16*(s12+s13)+8*(s13+s23)-8*s12*(s13*(2*s13+s23)+s12*(2*s13+3*s23))*pow(s12+s13,-2)-8*(-2*s14*s23-2*s13*(2*s14+2*s23+3*s24)+s12*(s13-2*(s14+3*s23+4*s24))+5*(s12*s12)-s13*s13)*pow(s12+s13,-1)+8*(s12+s13)*(s13*(s13+s23)+s12*(s13+3*s23))*pow(s13+s23,-2)-8*(s12+s23)*(s12+s13+s23)*(s12+s13+s14+s23+s24)*pow(s13+s23,-2)-8*((6*s13+9*s23)*(s12*s12)+2*(s13+s23)*(s13*s13)+s12*(11*s13*s23-s23*(s23+2*s24)+8*(s13*s13)))*pow(s13+s23,-2)+8*(s13*(-4*s14+s23-3*s24)+2*s23*(s23+s24)+s12*(11*s13-2*(s23+3*s24))+12*(s12*s12)-s13*s13)*pow(s13+s23,-1)-8*(2*s13*s23+s12*(-2*s13+s23)+s12*s12)*(s14*s23+s12*(2*s13+s14+s23+s24)+s13*(2*s14+s23+s24)+s12*s12+s13*s13)*pow(s13,-1)*pow(s12+s13,-1)*pow(s13+s23,-1)-24*(s12+s13)*(3*s12+3*s13+2*s14)*pow(s12+s13+s23,-1)+(8*(s12+s13+s14)*(8*s12+3*s13-5*s23-4*s24)+16*(s12+s13)*(7*s12+2*s13-2*s23-2*s24))*pow(s12+s13+s23,-1)-8*(s13+s23)*(2*s12+3*s13+2*s14+3*s23+2*s24)*pow(s12+s13+s23,-1)+(-16*(s13+s23)*(5*s12+s13-s23-s24)-8*(5*s12-3*s23-2*s24)*(s12+s13+s14+s23+s24))*pow(s12+s13+s23,-1)+24*(s14*s23+s12*(4*s13+s14+2*s23+s24)+s13*(2*s14+3*s23+s24)+s12*s12+3*(s13*s13))*pow(s12+s13+s23,-1)-8*(4*s14*s23+s13*(4*s14+s23-5*s24)+s12*(24*s13+4*s14-21*(s23+s24))+27*(s12*s12)+7*(s13*s13))*pow(s12+s13+s23,-1)+8*(s13*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(s12*(10*s13-4*s23-5*s24)+s13*(4*s13+s14+3*s23+s24)+12*(s12*s12))*pow(s12+s13,-1)*pow(s14,-1)*pow(s12+s13+s23,-1)-8*pow(s12+s13,-2)*pow(s14,-2)*(((3*s14+2*(s23+6*s24))*(s13*s13)-s14*(6*s23*s24+2*s14*(3*s23+s24)+s14*s14+5*(s23*s23)+s24*s24)+2*s13*(-2*s14*(s23-2*s24)+5*s23*s24+s23*s23+4*(s24*s24)))*pow(s12,3)+(4*s14*s24+s13*(9*s14+10*s23+16*s24)+6*(s13*s13)+s14*s14+3*((s23+s24)*(s23+s24)))*pow(s12,4)+(8*s13+5*s14+6*(s23+s24))*pow(s12,5)+3*pow(s12,6)+(s14+s24)*(s13*(s14-s24)+s14*(s14+2*s23+s24))*pow(s13,3)-s13*(s12*s12)*((s14+2*s23)*(s13*s13)+s13*(4*s14*(s23-s24)-2*s23*s24+2*(s14*s14)+s23*s23-6*(s24*s24))+s14*(10*s23*s24+2*s14*(5*s23+s24)+s14*s14+3*(s23*s23)+s24*s24)+pow(s13,3))+s12*(s13*s13)*(-2*s13*(s13+s23)*s24+s14*s24*(-2*s23+s24)-2*(s23-s24)*(s14*s14)+pow(s14,3)))*pow(s12+s13+s23,-1)+8*(s14*((s13+s23)*(s13+s23))*(-(s23*(s14-3*s23+s24)*(s14*s14))+s13*s14*(3*s24*(-3*s23+s24)+s14*(-3*s23+5*s24)+2*(s14*s14))+3*(s13*s13)*(3*s14*s24+s14*s14+3*(s24*s24)))+(6*s13*s23*(4*s14+s23+s24)+(9*s14+6*s23)*(s13*s13)+(21*s14-4*s23+12*s24)*(s23*s23))*pow(s12,4)+3*s23*(s13+2*s23)*pow(s12,5)+pow(s12,3)*(3*(s13*s13)*(4*s23*s24+6*s14*(2*s23+s24)+7*(s14*s14))+3*s13*s23*(s24*(5*s23+s24)+2*s14*(2*s23+7*s24)+15*(s14*s14))+s23*s23*(-4*s23*s24+s14*(-13*s23+30*s24)+27*(s14*s14)+3*(s23*s23)+6*(s24*s24))+3*(6*s14+s23)*pow(s13,3))+3*(s12*s12)*(s14*(s23*s23)*(s14*(-5*s23+8*s24)+5*(s14*s14)+3*(-(s23*s24)+s23*s23+s24*s24))+2*(s23*s24+2*s14*(s23+3*s24)+5*(s14*s14))*pow(s13,3)+3*s14*pow(s13,4)+s13*s13*(s23*s24*(s23+2*s24)+8*(2*s23+s24)*(s14*s14)+s14*(24*s23*s24-s23*s23+3*(s24*s24))+5*pow(s14,3))+s13*s23*(-(s23*(s23-3*s24)*s24)+2*(s23+8*s24)*(s14*s14)+s14*(11*s23*s24+s23*s23+6*(s24*s24))+10*pow(s14,3)))+s12*(s13+s23)*(s23*(s14*s14)*(s14*(-7*s23+6*s24)+3*(s14*s14)+3*(-2*s23*s24+3*(s23*s23)+s24*s24))+9*s14*(s14+2*s24)*pow(s13,3)+s13*s14*(6*s23*s24*(-2*s23+3*s24)+(7*s23+6*s24)*(s14*s14)-3*s14*(-9*s23*s24+s23*s23-s24*s24)+3*pow(s14,3))+s13*s13*(6*s14*s24*(2*s23+3*s24)+33*s24*(s14*s14)+3*s23*(s24*s24)+14*pow(s14,3))))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-3)+4*(-4*(s13+s23)*(s13*s14+(s12+s14)*s23)*(3*s12+s13-s23-s24)*(-(s14*s23)+s13*(s14+2*s24)+s12*(2*s13+2*s14-s23+2*s24)+2*(s12*s12))+4*(-2*s12-s13+s23+s24)*(s12*s12*(s13*(4*s14-s23)*s23+2*s14*(s13*s13)+(3*s14-s23+s24)*(s23*s23))+s12*s14*(2*s13+3*s14-2*s23+2*s24)*((s13+s23)*(s13+s23))+s14*(s14*(s14-s23+s24)+s13*(s14+2*s24))*((s13+s23)*(s13+s23))+s23*s23*pow(s12,3)))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)+8*(s13*s14+(s12+s14)*s23)*(s12*(16*s13+4*s14-10*s23-13*s24)+s13*(3*s14-4*s24)+s23*(4*s14+3*(s23+s24))+19*(s12*s12)+3*(s13*s13))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1))*pow(s12+s23+s24,-1)-128*pow(s13,-1)*pow(s12+s13,-2)*pow(s14,-3)*pow(s23,-1)*pow(s12+s13+s23,-1)*((s14*(8*s23+11*s24)+3*s13*(4*s14+20*s23+25*s24)+50*(s13*s13)+4*(s14*s14)+15*((s23+s24)*(s23+s24)))*pow(s12,6)+(25*s13+4*s14+15*(s23+s24))*pow(s12,7)+5*pow(s12,8)+pow(s12,4)*(s13*s13*(s14*(15*s23+34*s24)+26*(s14*s14)+15*(12*s23*s24+3*(s23*s23)+10*(s24*s24)))+(-8*s14+60*s23+150*s24)*pow(s13,3)+25*pow(s13,4)+s13*((21*s23-19*s24)*(s14*s14)+2*s14*(16*s23*s24+7*(s23*s23)+18*(s24*s24))+5*(2*s23+5*s24)*((s23+s24)*(s23+s24))-15*pow(s14,3))+s14*(-(s14*s24*(20*s23+11*s24))+(-7*s23+5*s24)*(s14*s14)+3*s24*((s23+s24)*(s23+s24))-5*pow(s14,3)))+s13*(s13*s13*(s14*s14)*(-4*s23*(s14*s14)+s24*(-11*s23*s24+s23*s23-2*(s24*s24))+s14*(11*s23*s24-6*(s23*s23)+2*(s24*s24)))+s14*(2*s14*(3*s23-4*s24)*s24+(-6*s23+4*s24)*(s14*s14)+(-7*s23+3*s24)*(s24*s24))*pow(s13,3)+s24*(-4*s14*s24+2*(s14*s14)+5*(s24*s24))*pow(s13,4)+s13*s23*(6*s23*s24-s14*(3*s23+2*s24)+s23*s23+2*(s24*s24))*pow(s14,3)+2*pow(s14,4)*pow(s23,3))+s12*((-8*s14*s24+2*(s14*s14)+15*(s24*s24))*pow(s13,5)+pow(s13,4)*(-2*s14*s24*(5*s23+3*s24)+2*(2*s23+s24)*(s14*s14)+5*(3*s23+5*s24)*(s24*s24)-4*pow(s14,3))+s14*pow(s13,3)*((-25*s23+21*s24)*(s14*s14)+s14*(2*s23*s24+3*(s23*s23)-35*(s24*s24))+s24*(-15*s23*s24-2*(s23*s23)+12*(s24*s24))-4*pow(s14,3))-4*s13*s23*(-4*s23*s24+s14*(s23+s24)-s23*s23-s24*s24)*pow(s14,3)+2*pow(s14,4)*pow(s23,3)-s13*s13*(s14*s14)*(2*(8*s23+s24)*(s14*s14)+5*s24*(s23*s23)+s14*(-37*s23*s24+12*(s23*s23)-4*(s24*s24))+37*s23*(s24*s24)-pow(s23,3)+6*pow(s24,3)))-s12*s12*((-15*s24*(2*s23+5*s24)+3*s14*(s23+7*s24)-10*(s14*s14))*pow(s13,4)+(4*s14-15*s24)*pow(s13,5)+s23*(-10*s23*s24+s14*(s23+2*s24)-s23*s23-2*(s24*s24))*pow(s14,3)+pow(s13,3)*((-17*s23+11*s24)*(s14*s14)-2*s14*(-8*s23*s24+3*(s23*s23)+8*(s24*s24))-5*s24*(12*s23*s24+3*(s23*s23)+10*(s24*s24))+15*pow(s14,3))+s14*(s13*s13)*((39*s23-35*s24)*(s14*s14)+s24*(s23*s23)+3*s23*(s24*s24)+s14*(34*s23*s24-5*(s23*s23)+57*(s24*s24))+13*pow(s14,3)-5*pow(s23,3)-18*pow(s24,3))+s13*(s14*s14)*(4*(5*s23+s24)*(s14*s14)+21*s24*(s23*s23)+s14*(-41*s23*s24+8*(s23*s23)-2*(s24*s24))+41*s23*(s24*s24)+3*pow(s23,3)+6*pow(s24,3)))+pow(s12,3)*((-(s14*(s23+4*s24))+22*(s14*s14)+15*(8*s23*s24+s23*s23+10*(s24*s24)))*pow(s13,3)+(-12*s14+15*(s23+5*s24))*pow(s13,4)+5*pow(s13,5)-s14*s14*(s14*s23*(2*s23-15*s24)+2*(4*s23+s24)*(s14*s14)+15*s24*(s23*s23)+15*s23*(s24*s24)+2*pow(s23,3)+2*pow(s24,3))+s13*s14*((-27*s23+23*s24)*(s14*s14)+4*s24*(s23*s23)+s14*(-50*s23*s24+2*(s23*s23)-41*(s24*s24))+11*s23*(s24*s24)-14*pow(s14,3)+5*pow(s23,3)+12*pow(s24,3))+s13*s13*((28*s23-25*s24)*(s14*s14)+4*s14*(3*s23*s24+4*(s23*s23)+11*(s24*s24))-22*pow(s14,3)+5*(9*s24*(s23*s23)+18*s23*(s24*s24)+pow(s23,3)+10*pow(s24,3))))+pow(s12,5)*(2*(4*s14+45*s23+75*s24)*(s13*s13)+(6*s23-5*s24)*(s14*s14)+2*s14*(7*s23*s24+2*(s23*s23)+5*(s24*s24))+s13*(3*s14*(7*s23+12*s24)+16*(s14*s14)+15*(8*s23*s24+3*(s23*s23)+5*(s24*s24)))+50*pow(s13,3)-4*pow(s14,3)+5*pow(s23+s24,3)))*pow(s12+s23+s24,-1)+32*(8*(3*s12+2*s13+3*s23+2*s24)*(s23*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)+8*(s12+s23)*pow(s13,-1)*pow(s12+s23+s24,-1)-8*(s12+2*s24)*pow(s13,-1)*pow(s12+s23+s24,-1)-8*(s23*(s13+s23)+s12*(2*s13+s23))*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s23+s24,-1)-8*(s12+s13+s23)*(2*s12+2*s23+s24)*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s23+s24,-1)+8*(s23*(s14+2*s23)+s13*(6*s23-s24)+s12*(2*s13+s14+3*(s23+s24))+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s23+s24,-1)-8*(s12+s23)*(s23*(s13+s23)+s12*(3*s13+s23))*pow(s13,-1)*pow(s13+s23,-2)*pow(s12+s23+s24,-1)+8*(s12+s23)*(s12+s13+s23)*(s12+2*s13+s14+2*s23+s24)*pow(s13,-1)*pow(s13+s23,-2)*pow(s12+s23+s24,-1)+8*(s12*s13*(s12-s13+s23+2*s24)+(s12+s23)*(s13+s23)*(3*s12-s13+s23+2*s24))*pow(s13,-1)*pow(s13+s23,-2)*pow(s12+s23+s24,-1)-8*(2*s23*(s14+s23)+2*s12*(s13+2*s14+2*s23+s24)-s13*(s14-3*s23+6*s24)+6*(s12*s12)+s13*s13)*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s23+s24,-1)-8*(s13*(s23+s24)+s12*(s13+s14+2*s23+s24)+s23*(s14+s23+2*s24)+s12*s12)*pow(s12+s23,-1)*pow(s13+s23,-1)*pow(s12+s23+s24,-1)+8*(s12+s23)*(s12+2*s13+s14+2*s23+s24)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)+8*(2*s12+2*s23+s24)*(2*s12-s13+s23+2*s24)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)-8*(s12+s23)*(3*s12+3*s23+2*s24)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)-8*(s13*(2*s14+11*s23+3*s24)+s12*(4*s13+8*s14+21*s23+17*s24)+11*(s12*s12)+s13*s13+2*(6*s23*s24+2*s14*(2*s23+s24)+5*(s23*s23)+2*(s24*s24)))*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)+8*pow(s13,-1)*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*(s24*((s13+s23)*(s13+s23))*(s14*s24*(-(s13*(9*s23+s24))+s23*(9*s23+5*s24))+3*s23*(3*s23+s24)*(s14*s14)+(-(s13*(3*s23+s24))+s23*(3*s23+2*s24)+3*(s13*s13))*(s24*s24))+3*s13*(2*s13+s23)*pow(s12,5)+pow(s12,4)*(6*s13*s23*(s14+s23+4*s24)+3*(4*s14+2*s23+7*s24)*(s13*s13)+9*s24*(s23*s23)-4*pow(s13,3))+pow(s12,3)*(3*(s13*s13)*(5*s14*(s23+2*s24)+s24*(4*s23+9*s24)+2*(s14*s14))+3*s24*(6*s14+6*s23+7*s24)*(s23*s23)+3*s13*s23*(12*s23*s24+2*s14*(2*s23+7*s24)+s14*s14+s23*s23+15*(s24*s24))-(4*s14+13*s24)*pow(s13,3)+3*pow(s13,4))+3*(s12*s12)*(s24*(s23*s23)*(10*s23*s24+4*s14*(3*s23+2*s24)+3*(s14*s14)+3*(s23*s23)+5*(s24*s24))+s13*s13*(3*(s23+s24)*(s14*s14)+s24*(2*s23*s24-s23*s23+5*(s24*s24))+s14*(11*s23*s24+s23*s23+8*(s24*s24)))+2*s13*s23*((s23+3*s24)*(s14*s14)+s24*(8*s23*s24+2*(s23*s23)+5*(s24*s24))+s14*(12*s23*s24+s23*s23+8*(s24*s24)))-(s14*(s23+3*s24)+s24*(-s23+5*s24))*pow(s13,3)+3*s24*pow(s13,4))+s12*(s13+s23)*(-(s24*(6*s14*(2*s23+s24)+s24*(3*s23+7*s24))*(s13*s13))+s23*s24*(3*(6*s23+s24)*(s14*s14)+3*s14*(11*s23*s24+6*(s23*s23)+2*(s24*s24))+s24*(14*s23*s24+9*(s23*s23)+3*(s24*s24)))+9*(s24*s24)*pow(s13,3)+s13*(3*(s14*s14)*(6*s23*s24+s23*s23+s24*s24)+3*s14*s24*(9*s23*s24+4*(s23*s23)+2*(s24*s24))+(7*s23+3*s24)*pow(s24,3))))*pow(s12+s14+s24,-3)*pow(s12+s23+s24,-1)+4*pow(s13,-1)*(-4*(s13+s23)*(2*s12-s13+s23+s24)*(s12*s13+(s13+s23)*s24)*(2*s14*s23+(-s13+s23)*s24+s12*(-s13+2*(s14+s23+s24))+2*(s12*s12))-2*(s12-s13+s23+s24)*(-2*s12*(2*s13-2*s14-2*s23-3*s24)*s24*((s13+s23)*(s13+s23))+2*s24*(s24*(-s13+s23+s24)+s14*(2*s23+s24))*((s13+s23)*(s13+s23))+2*(s13*s13)*pow(s12,3)-2*(s12*s12)*(-4*s13*s23*s24+(-s14+s23-3*s24)*(s13*s13)-2*s24*(s23*s23)+pow(s13,3))))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)*pow(s12+s23+s24,-1)+8*(s12*s13+(s13+s23)*s24)*(10*s14*s23+s13*(7*s14+8*s23-2*s24)+4*s14*s24+7*s23*s24+s12*(4*s13+12*s14+18*s23+13*s24)+15*(s12*s12)+7*(s13*s13)+2*(s14*s14)+7*(s23*s23)+2*(s24*s24))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1)*pow(s12+s23+s24,-1))+32*pow(s13,-1)*pow(s12+s23+s24,-1)*(-56*s12-8*s13+16*(s12+s13)+8*s23-8*(s13+s23)-16*s24+8*s12*(s13*(2*s13+s23)+s12*(2*s13+3*s23))*pow(s12+s13,-2)+8*(-3*s14*s23-s12*(6*s13+3*s14+9*s23+s24)-s13*(6*s14+3*s23+7*s24)+2*(s12*s12)-2*(s13*s13))*pow(s12+s13,-1)-8*(s12+s13)*(s13*(s13+s23)+s12*(s13+3*s23))*pow(s13+s23,-2)-8*(s12+s23)*(s12+s13+s23)*(s12-s13+s14-s23+s24)*pow(s13+s23,-2)+8*(s13*(s13+s23)*(s13-s23+2*s24)+(5*s13+8*s23)*(s12*s12)+2*s12*(-(s23*(s23-2*s24))+s13*(3*s23+s24)+3*(s13*s13)))*pow(s13+s23,-2)+8*(2*s12*(s14+3*s23-s24)+s23*(2*s14-3*s23+4*s24)+s13*(6*s14-2*s23+5*s24)-7*(s12*s12)+2*(s13*s13))*pow(s13+s23,-1)-24*(-(s13*s23)+s12*(s13+s23)+s12*s12)*(s14*s23+s12*(2*s13+s14+s23+s24)+s13*(2*s14+s23+s24)+s12*s12+s13*s13)*pow(s13,-1)*pow(s12+s13,-1)*pow(s13+s23,-1)-24*(s12+s13)*(s12+s13-2*s14)*pow(s12+s13+s23,-1)-8*(s13+s23)*(-2*s12+s13-2*s14+s23-2*s24)*pow(s12+s13+s23,-1)+(16*(s13+s23)*(-5*s12+s23-s24)+8*(s12+s14+s24)*(5*s12-2*s13-3*s23+2*s24))*pow(s12+s13+s23,-1)+(16*(s12+s13)*(7*s12-2*s23+2*s24)-8*s14*(8*s12-s13-5*s23+4*s24))*pow(s12+s13+s23,-1)-24*(s14*s23+s12*(s14+s24)+s13*(2*s14-s23+s24)+s12*s12-s13*s13)*pow(s12+s13+s23,-1)-8*(s13*(-3*s14+2*s23-6*s24)+s12*(-2*s14-26*s23+9*s24)-s23*(2*s14+s23+12*s24)+23*(s12*s12)+3*(s13*s13))*pow(s12+s13+s23,-1)-8*((4*s24*(-s23+s24)+s14*(-8*s23+10*s24)+s13*(19*s14-12*s23+22*s24)+8*(s13*s13)+6*(s14*s14))*pow(s12,4)+(12*s13+9*s14-4*s23+8*s24)*pow(s12,5)+4*pow(s12,6)+pow(s12,3)*(s14*(s14+s24)*(s14-4*s23+s24)+2*(s14-8*s23+8*s24)*(s13*s13)+2*s13*(-3*s23*s24+s14*(-10*s23+9*s24)+4*(s14*s14)-3*(s23*s23)+5*(s24*s24))-8*pow(s13,3))-((s14+2*s24)*(s13*s13)+2*s13*(2*s14*s24+s24*(s23+s24)+s14*s14)+s14*(2*s14*s24+s14*s14-s23*s23+s24*s24))*pow(s13,3)-s12*(s13*s13)*(2*s13*(4*s14+s24)*(s14+s23+s24)+(11*s14+4*s23+8*s24)*(s13*s13)+s14*(4*s23*s24+2*s14*(2*s23+s24)+s14*s14+3*(s23*s23)+s24*s24)+4*pow(s13,3))-s13*(s12*s12)*(2*(9*s14+6*s23+2*s24)*(s13*s13)+2*s13*(s14*(10*s23-s24)+s23*s24+2*(s14*s14)+3*(s23*s23)-3*(s24*s24))-s14*(-8*s23*s24+s14*(-8*s23+2*s24)+s14*s14-6*(s23*s23)+s24*s24)+12*pow(s13,3)))*pow(s12+s13,-2)*pow(s12+s13+s14,-2)*pow(s12+s13+s23,-1)+8*(s12*(2*s13+s14+s24)+s13*(s13+s14+s23+s24)+s12*s12)*(-2*s14*s23-s13*(2*s14-2*s23+s24)+s12*(2*s13-2*s14-5*s23+5*s24)+11*(s12*s12)+3*(s13*s13))*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-1)+8*(3*s13*(2*s13+3*s23)*pow(s12,5)+pow(s12,4)*(3*s13*s23*(8*s14+9*s23+6*s24)+3*(5*s14+17*s23+4*s24)*(s13*s13)+3*s14*(s23*s23)+22*pow(s13,3))+(s13+s14)*((s13+s23)*(s13+s23))*(s23*(s14+4*s23+s24)*(s14*s14)-s13*s14*(13*s23*s24+5*s14*(s23+s24)+2*(s14*s14)+4*(s23*s23)+3*(s24*s24))+s13*s13*(4*s23*s24-s14*(4*s23+s24)-3*(s14*s14)+s23*s23+6*(s24*s24))+2*(s23+2*s24)*pow(s13,3)+pow(s13,4))+pow(s12,3)*(3*s14*(s14+2*(s23+s24))*(s23*s23)+3*(s13*s13)*(27*s23*s24+s14*(28*s23+6*s24)+3*(s14*s14)+30*(s23*s23)+2*(s24*s24))+3*s13*s23*(2*s14*(8*s23+5*s24)+5*(s14*s14)+3*(4*s23*s24+3*(s23*s23)+s24*s24))+(37*s14+94*s23+40*s24)*pow(s13,3)+31*pow(s13,4))+3*(s12*s12)*(s14*(s23*s23)*(-(s14*s23)-s14*s14+(s23+s24)*(s23+s24))+(40*s23*s24+13*s14*(2*s23+s24)+2*(s14*s14)+32*(s23*s23)+6*(s24*s24))*pow(s13,3)+(10*s14+25*s23+16*s24)*pow(s13,4)+7*pow(s13,5)+s13*s23*(-2*s23*(s14*s14)+2*s14*(6*s23*s24+3*(s23*s23)+s24*s24)+3*s23*((s23+s24)*(s23+s24))-2*pow(s14,3))+s13*s13*(2*s23*(s14*s14)+s14*(25*s23*s24+21*(s23*s23)+s24*s24)+s23*(30*s23*s24+17*(s23*s23)+10*(s24*s24))-pow(s14,3)))+s12*(s13+s23)*(-(s23*(s14*s14)*(s14*(8*s23+6*s24)+3*(s14*s14)+3*(3*s23*s24+2*(s23*s23)+s24*s24)))+(45*s23*s24+3*s14*(3*s23+8*s24)-6*(s14*s14)+19*(s23*s23)+18*(s24*s24))*pow(s13,3)+(9*s14+20*s23+24*s24)*pow(s13,4)+7*pow(s13,5)+s13*s13*(-3*(9*s23+2*s24)*(s14*s14)-6*s14*(-3*s23*s24+s23*s23-s24*s24)+3*s23*(7*s23*s24+2*(s23*s23)+5*(s24*s24))-11*pow(s14,3))-s13*s14*((19*s23+6*s24)*(s14*s14)+6*s23*(s23*s23-s24*s24)+3*s14*(5*s23*s24+8*(s23*s23)+s24*s24)+3*pow(s14,3))))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-3)-4*(4*(s13+s23)*(s12*s13+(s13+s14)*(s13+s23))*(3*s12-s23+s24)*(-(s14*s23)+s13*(s14+s23+2*s24)+s12*(3*s13+2*(s14+s23+s24))+2*(s12*s12)+s13*s13)+4*(2*s12-s23+s24)*(s13*(s13+2*s23)*(2*s13+s14+2*s23+s24)*(s12*s12)-(s13+s14)*(s13*(s14-s24)+s14*(s14+2*s23+s24))*((s13+s23)*(s13+s23))+s12*(2*s13*(s23+s24)+s13*s13-s14*s14)*((s13+s23)*(s13+s23))+s13*(s13+2*s23)*pow(s12,3)))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-2)+8*(s12*s13+(s13+s14)*(s13+s23))*(s23*(s23-9*s24)-s12*(s13+16*s23-7*s24)+s13*(-s14+s23-4*s24)+15*(s12*s12))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-1))+32*pow(s13,-1)*pow(s24,-1)*(-64*s12-16*s13+16*(s12+s13)-8*(s13+s23)+8*s12*(s13*(2*s13+s23)+s12*(2*s13+3*s23))*pow(s12+s13,-2)+8*(2*s14*s23+s13*(4*s14+4*s23+6*s24)+s12*(13*s13+2*s14+4*s23+8*s24)+15*(s12*s12)+3*(s13*s13))*pow(s12+s13,-1)-8*(s12+s13)*(s13*(s13+s23)+s12*(s13+3*s23))*pow(s13+s23,-2)-8*(s12+s23)*(s12+s13+s23)*(s12+s14+s24)*pow(s13+s23,-2)+8*((6*s13+11*s23)*(s12*s12)+2*(s13+s23)*(s13*s13)+s12*(11*s13*s23+s23*(s23+2*s24)+8*(s13*s13)))*pow(s13+s23,-2)-8*(-2*s23*s24+2*s12*(9*s13+s23+3*s24)+s13*(4*s14+4*s23+3*s24)+18*(s12*s12)+3*(s13*s13))*pow(s13+s23,-1)-8*(2*s13*s23+s12*(-2*s13+s23)+s12*s12)*(s14*s23+s12*(2*s13+s14+s23+s24)+s13*(2*s14+s23+s24)+s12*s12+s13*s13)*pow(s13,-1)*pow(s12+s13,-1)*pow(s13+s23,-1)+24*(s12+s13)*(s12+s13-2*s14)*pow(s12+s13+s23,-1)+8*(s13+s23)*(-2*s12+s13-2*s14+s23-2*s24)*pow(s12+s13+s23,-1)+(16*(s13+s23)*(6*s12+s13+s24)-8*(s12+s14+s24)*(7*s12-s23+2*s24))*pow(s12+s13+s23,-1)+(8*s14*(12*s12+3*s13-s23+4*s24)-16*(s12+s13)*(9*s12+2*(s13+s24)))*pow(s12+s13+s23,-1)+24*(s14*s23+s12*(s14+s24)+s13*(2*s14-s23+s24)+s12*s12-s13*s13)*pow(s12+s13+s23,-1)+8*(-4*s14*s23+s13*(-4*s14+2*s23+5*s24)+s12*(21*s13-4*s14-4*s23+21*s24)+44*(s12*s12)+3*(s13*s13))*pow(s12+s13+s23,-1)+8*((4*s24*(-s23+s24)+s14*(-8*s23+10*s24)+s13*(19*s14-12*s23+22*s24)+8*(s13*s13)+6*(s14*s14))*pow(s12,4)+(12*s13+9*s14-4*s23+8*s24)*pow(s12,5)+4*pow(s12,6)+pow(s12,3)*(s14*(s14+s24)*(s14-4*s23+s24)+2*(s14-8*s23+8*s24)*(s13*s13)+2*s13*(-3*s23*s24+s14*(-10*s23+9*s24)+4*(s14*s14)-3*(s23*s23)+5*(s24*s24))-8*pow(s13,3))-((s14+2*s24)*(s13*s13)+2*s13*(2*s14*s24+s24*(s23+s24)+s14*s14)+s14*(2*s14*s24+s14*s14-s23*s23+s24*s24))*pow(s13,3)-s12*(s13*s13)*(2*s13*(4*s14+s24)*(s14+s23+s24)+(11*s14+4*s23+8*s24)*(s13*s13)+s14*(4*s23*s24+2*s14*(2*s23+s24)+s14*s14+3*(s23*s23)+s24*s24)+4*pow(s13,3))-s13*(s12*s12)*(2*(9*s14+6*s23+2*s24)*(s13*s13)+2*s13*(s14*(10*s23-s24)+s23*s24+2*(s14*s14)+3*(s23*s23)-3*(s24*s24))-s14*(-8*s23*s24+s14*(-8*s23+2*s24)+s14*s14-6*(s23*s23)+s24*s24)+12*pow(s13,3)))*pow(s12+s13,-2)*pow(s12+s13+s14,-2)*pow(s12+s13+s23,-1)-8*(s12*(2*s13+s14+s24)+s13*(s13+s14+s23+s24)+s12*s12)*(s13*(3*s13-s14+2*s23-s24)+s12*(8*s13+s23+5*s24)+17*(s12*s12))*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-1)-8*(3*s13*(2*s13+3*s23)*pow(s12,5)+pow(s12,4)*(3*s13*s23*(8*s14+9*s23+6*s24)+3*(5*s14+17*s23+4*s24)*(s13*s13)+3*s14*(s23*s23)+22*pow(s13,3))+(s13+s14)*((s13+s23)*(s13+s23))*(s23*(s14+4*s23+s24)*(s14*s14)-s13*s14*(13*s23*s24+5*s14*(s23+s24)+2*(s14*s14)+4*(s23*s23)+3*(s24*s24))+s13*s13*(4*s23*s24-s14*(4*s23+s24)-3*(s14*s14)+s23*s23+6*(s24*s24))+2*(s23+2*s24)*pow(s13,3)+pow(s13,4))+pow(s12,3)*(3*s14*(s14+2*(s23+s24))*(s23*s23)+3*(s13*s13)*(27*s23*s24+s14*(28*s23+6*s24)+3*(s14*s14)+30*(s23*s23)+2*(s24*s24))+3*s13*s23*(2*s14*(8*s23+5*s24)+5*(s14*s14)+3*(4*s23*s24+3*(s23*s23)+s24*s24))+(37*s14+94*s23+40*s24)*pow(s13,3)+31*pow(s13,4))+3*(s12*s12)*(s14*(s23*s23)*(-(s14*s23)-s14*s14+(s23+s24)*(s23+s24))+(40*s23*s24+13*s14*(2*s23+s24)+2*(s14*s14)+32*(s23*s23)+6*(s24*s24))*pow(s13,3)+(10*s14+25*s23+16*s24)*pow(s13,4)+7*pow(s13,5)+s13*s23*(-2*s23*(s14*s14)+2*s14*(6*s23*s24+3*(s23*s23)+s24*s24)+3*s23*((s23+s24)*(s23+s24))-2*pow(s14,3))+s13*s13*(2*s23*(s14*s14)+s14*(25*s23*s24+21*(s23*s23)+s24*s24)+s23*(30*s23*s24+17*(s23*s23)+10*(s24*s24))-pow(s14,3)))+s12*(s13+s23)*(-(s23*(s14*s14)*(s14*(8*s23+6*s24)+3*(s14*s14)+3*(3*s23*s24+2*(s23*s23)+s24*s24)))+(45*s23*s24+3*s14*(3*s23+8*s24)-6*(s14*s14)+19*(s23*s23)+18*(s24*s24))*pow(s13,3)+(9*s14+20*s23+24*s24)*pow(s13,4)+7*pow(s13,5)+s13*s13*(-3*(9*s23+2*s24)*(s14*s14)-6*s14*(-3*s23*s24+s23*s23-s24*s24)+3*s23*(7*s23*s24+2*(s23*s23)+5*(s24*s24))-11*pow(s14,3))-s13*s14*((19*s23+6*s24)*(s14*s14)+6*s23*(s23*s23-s24*s24)+3*s14*(5*s23*s24+8*(s23*s23)+s24*s24)+3*pow(s14,3))))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-3)-4*(-4*(s13+s23)*(s12*s13+(s13+s14)*(s13+s23))*(4*s12+s13+s24)*(-(s14*s23)+s13*(s14+s23+2*s24)+s12*(3*s13+2*(s14+s23+s24))+2*(s12*s12)+s13*s13)-4*(3*s12+s13+s24)*(s13*(s13+2*s23)*(2*s13+s14+2*s23+s24)*(s12*s12)-(s13+s14)*(s13*(s14-s24)+s14*(s14+2*s23+s24))*((s13+s23)*(s13+s23))+s12*(2*s13*(s23+s24)+s13*s13-s14*s14)*((s13+s23)*(s13+s23))+s13*(s13+2*s23)*pow(s12,3)))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-2)-8*(s12*s13+(s13+s14)*(s13+s23))*(-(s23*(4*s14+3*s24))+s13*(-3*s14+4*s24)+s12*(13*s13-4*s14-4*s23+13*s24)+28*(s12*s12))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-1))+32*pow(s12+s13+s14,-1)*pow(s23,-1)*(-56*s12+8*s13-16*s14-8*s23+16*(s12+s23)-8*(s13+s23)+8*s12*(s23*(s13+2*s23)+s12*(3*s13+2*s23))*pow(s12+s23,-2)+8*(-3*s13*(s23+s24)-s12*(9*s13+s14+6*s23+3*s24)-s23*(7*s14+2*s23+6*s24)+2*(s12*s12))*pow(s12+s23,-1)-8*(s12+s23)*(s23*(s13+s23)+s12*(3*s13+s23))*pow(s13+s23,-2)-8*(s12+s13)*(s12+s13+s23)*(s12-s13+s14-s23+s24)*pow(s13+s23,-2)+8*(-((s13-2*s14-s23)*s23*(s13+s23))+(8*s13+5*s23)*(s12*s12)+s12*(2*s23*(s14+3*s23)+s13*(4*s14+6*s23)-2*(s13*s13)))*pow(s13+s23,-2)-8*(-2*s12*(3*s13-s14+s24)-2*s13*(2*s14-s23+s24)-s23*(5*s14+2*s23+6*s24)+7*(s12*s12)+3*(s13*s13))*pow(s13+s23,-1)-24*(-(s13*s23)+s12*(s13+s23)+s12*s12)*(s13*(s23+s24)+s12*(s13+s14+2*s23+s24)+s23*(s14+s23+2*s24)+s12*s12)*pow(s23,-1)*pow(s12+s23,-1)*pow(s13+s23,-1)-24*(s12+s23)*(s12+s23-2*s24)*pow(s12+s13+s23,-1)-8*(s13+s23)*(-2*s12+s13-2*s14+s23-2*s24)*pow(s12+s13+s23,-1)+(16*(7*s12-2*s13+2*s14)*(s12+s23)-8*(8*s12-5*s13+4*s14-s23)*s24)*pow(s12+s13+s23,-1)+(-16*(5*s12-s13+s14)*(s13+s23)+8*(5*s12-3*s13+2*s14-2*s23)*(s12+s14+s24))*pow(s12+s13+s23,-1)-24*(s12*(s14+s24)+s13*(-s23+s24)+s23*(s14-s23+2*s24)+s12*s12)*pow(s12+s13+s23,-1)-8*(s12*(-26*s13+9*s14-2*s24)+3*s23*(-2*s14+s23-s24)-2*s13*(6*s14-s23+s24)+23*(s12*s12)-s13*s13)*pow(s12+s13+s23,-1)-8*pow(s12+s23,-2)*pow(s12+s13+s23,-1)*((19*s23*s24-4*s13*(s14+3*s23+2*s24)+2*s14*(11*s23+5*s24)+4*(s14*s14)+8*(s23*s23)+6*(s24*s24))*pow(s12,4)+(-4*s13+8*s14+12*s23+9*s24)*pow(s12,5)+4*pow(s12,6)-(2*s13*s14*s23-s24*(s13*s13)+(2*s23+s24)*(s14*s14)+2*s14*((s23+s24)*(s23+s24))+s24*((s23+s24)*(s23+s24)))*pow(s23,3)-s23*(s12*s12)*(6*(s23+s24)*(s13*s13)-(6*s23+s24)*(s14*s14)+18*s24*(s23*s23)+s14*(-2*s23*s24+4*(s23*s23)-2*(s24*s24))+4*s23*(s24*s24)+2*s13*(10*s23*s24+s14*(s23+4*s24)+6*(s23*s23)+4*(s24*s24))+12*pow(s23,3)-pow(s24,3))+pow(s12,3)*(-6*s23*(s13*s13)+(10*s23+s24)*(s14*s14)+2*s24*(s23*s23)+8*s23*(s24*s24)+2*s14*(9*s23*s24+8*(s23*s23)+s24*s24)-2*s13*(s14*(3*s23+2*s24)+2*(5*s23*s24+4*(s23*s23)+s24*s24))-8*pow(s23,3)+pow(s24,3))-s12*(s23*s23)*(3*s24*(s13*s13)+(2*s23+s24)*(s14*s14)+11*s24*(s23*s23)+8*s23*(s24*s24)+2*s14*(5*s23*s24+4*(s23*s23)+s24*s24)+2*s13*(s14*(s23+2*s24)+2*((s23+s24)*(s23+s24)))+4*pow(s23,3)+pow(s24,3)))*pow(s12+s23+s24,-2)+8*(s23*(s13+s14+s23+s24)+s12*(s14+2*s23+s24)+s12*s12)*(s12*(-5*s13+5*s14+2*s23-2*s24)+s23*(-s14+3*s23-2*s24)+2*s13*(s23-s24)+11*(s12*s12))*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)+8*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*((3*s13*s23*(6*s14+17*s23+8*s24)+3*(9*s23+s24)*(s13*s13)+(12*s14+22*s23+15*s24)*(s23*s23))*pow(s12,4)+3*s23*(3*s13+2*s23)*pow(s12,5)+pow(s12,3)*(3*(s13*s13)*(16*s23*s24+2*s14*(6*s23+s24)+30*(s23*s23)+s24*s24)+s23*s23*(37*s23*s24+2*s14*(20*s23+9*s24)+6*(s14*s14)+31*(s23*s23)+9*(s24*s24))+s13*s23*(84*s23*s24+s14*(81*s23+30*s24)+9*(s14*s14)+94*(s23*s23)+15*(s24*s24))+3*(9*s23+2*s24)*pow(s13,3))+3*(s12*s12)*((6*s23*s24+2*s14*(3*s23+s24)+17*(s23*s23)-s24*s24)*pow(s13,3)+(3*s23+s24)*pow(s13,4)+s13*s23*(5*s14*s23*(8*s23+5*s24)+2*(5*s23+s24)*(s14*s14)+26*s24*(s23*s23)+2*s23*(s24*s24)+25*pow(s23,3)-2*pow(s24,3))+s23*s23*(s14*s23*(16*s23+13*s24)+(6*s23+s24)*(s14*s14)+10*s24*(s23*s23)+2*s23*(s24*s24)+7*pow(s23,3)-pow(s24,3))+s13*s13*(6*s14*s23*(5*s23+2*s24)+(3*s23+s24)*(s14*s14)+21*s24*(s23*s23)-2*s23*(s24*s24)+32*pow(s23,3)-pow(s24,3)))+(s23+s24)*((s13+s23)*(s13+s23))*(s13*s13*((s23-2*s24)*(s23-2*s24))+s23*((6*s23-3*s24)*(s14*s14)+s14*(-(s23*s24)+4*(s23*s23)-5*(s24*s24))+(s23-2*s24)*((s23+s24)*(s23+s24)))+s13*(-4*s24*(s23*s23)-5*s23*(s24*s24)+s14*(-13*s23*s24+4*(s23*s23)+s24*s24)+2*pow(s23,3)+pow(s24,3)))+s12*(s13+s23)*(6*(-(s23*s24)+s23*s23-s24*s24)*pow(s13,3)+s23*(3*(s14*s14)*(2*s23*s24+6*(s23*s23)-s24*s24)+(-5*s23*s24+7*(s23*s23)-3*(s24*s24))*((s23+s24)*(s23+s24))+6*s14*(4*s24*(s23*s23)-s23*(s24*s24)+4*pow(s23,3)-pow(s24,3)))+s13*s13*(-6*s24*(s23*s23)+3*s14*(7*(s23*s23)-3*(s24*s24))-24*s23*(s24*s24)+19*pow(s23,3)-8*pow(s24,3))+s13*(3*(s14*s14)*(2*s23*s24+5*(s23*s23)-s24*s24)-27*(s23*s23)*(s24*s24)+9*s24*pow(s23,3)+20*pow(s23,4)+3*s14*(6*s24*(s23*s23)-5*s23*(s24*s24)+15*pow(s23,3)-2*pow(s24,3))-19*s23*pow(s24,3)-3*pow(s24,4))))*pow(s12+s13+s14+s23+s24,-3)+4*(-4*(3*s12-s13+s14)*(s13+s23)*(s12*s23+(s13+s23)*(s23+s24))*(s13*(s23-s24)+s23*(2*s14+s23+s24)+s12*(2*s13+2*s14+3*s23+2*s24)+2*(s12*s12))-4*(2*s12-s13+s14)*(s23*(2*s13+s23)*(2*s13+s14+2*s23+s24)*(s12*s12)-(s23+s24)*(s14*(-s23+s24)+s24*(2*s13+s23+s24))*((s13+s23)*(s13+s23))+s12*((s13+s23)*(s13+s23))*(2*s13*s23+2*s14*s23+s23*s23-s24*s24)+s23*(2*s13+s23)*pow(s12,3)))*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-2)+8*(s12*s23+(s13+s23)*(s23+s24))*(s13*(-9*s14+s23)-s12*(16*s13-7*s14+s23)-s23*(4*s14+s24)+15*(s12*s12)+s13*s13)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-1))+32*pow(s12+s23+s24,-1)*(-8*(s12+s23)*pow(s13,-1)+8*(2*s12+s13+s23)*pow(s13,-1)+8*(s23*(s13+s23)+s12*(2*s13+s23))*pow(s13,-1)*pow(s12+s23,-1)-8*(s12+s13+s23)*s24*pow(s13,-1)*pow(s12+s23,-1)-8*(s12*(3*s13-3*s14+s23-3*s24)+s23*(-3*s14+3*s23-2*s24)+s13*(6*s23+s24)-2*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)+8*(s12+s23)*(s23*(s13+s23)+s12*(3*s13+s23))*pow(s13,-1)*pow(s13+s23,-2)+8*(s12+s23)*(s12+s13+s23)*(s12+s14+s24)*pow(s13,-1)*pow(s13+s23,-2)-8*((5*s13+4*s23)*(s12*s12)+2*(s13+s23)*(s23*s23)+s12*(s13*(7*s23-2*s24)+s13*s13+6*(s23*s23)))*pow(s13,-1)*pow(s13+s23,-2)+8*(s13*(-3*s14+2*s23)+s23*(-4*s14+3*s23-2*s24)-2*s12*(s14+3*s24)+s12*s12-2*(s13*s13))*pow(s13,-1)*pow(s13+s23,-1)-24*s12*(s13*(s23+s24)+s12*(s13+s14+2*s23+s24)+s23*(s14+s23+2*s24)+s12*s12)*pow(s23,-1)*pow(s12+s23,-1)*pow(s13+s23,-1)-8*(s12+s23)*(s12+s23-2*s24)*pow(s13,-1)*pow(s12+s13+s23,-1)+8*(2*s12+s13+s23-2*s24)*(s12+s23-s24)*pow(s13,-1)*pow(s12+s13+s23,-1)-8*(s12+s23)*(s12-s13+s14-s23+s24)*pow(s13,-1)*pow(s12+s13+s23,-1)-8*(2*s14*s23+s12*(s13+2*s14+4*s23-s24)+4*s14*s24-s13*(s14-5*s23+3*s24)+s12*s12-s13*s13+3*(s23*s23)+4*(s24*s24))*pow(s13,-1)*pow(s12+s13+s23,-1)-8*(s12*(s13-5*s24)+s13*(s23+s24)-s24*(5*s23+2*s24))*(s23*(s13+s14+s23+s24)+s12*(s14+2*s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)+8*pow(s13,-1)*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*((3*s13*s23*(6*s14+17*s23+8*s24)+3*(9*s23+s24)*(s13*s13)+(12*s14+22*s23+15*s24)*(s23*s23))*pow(s12,4)+3*s23*(3*s13+2*s23)*pow(s12,5)+pow(s12,3)*(3*(s13*s13)*(16*s23*s24+2*s14*(6*s23+s24)+30*(s23*s23)+s24*s24)+s23*s23*(37*s23*s24+2*s14*(20*s23+9*s24)+6*(s14*s14)+31*(s23*s23)+9*(s24*s24))+s13*s23*(84*s23*s24+s14*(81*s23+30*s24)+9*(s14*s14)+94*(s23*s23)+15*(s24*s24))+3*(9*s23+2*s24)*pow(s13,3))+3*(s12*s12)*((6*s23*s24+2*s14*(3*s23+s24)+17*(s23*s23)-s24*s24)*pow(s13,3)+(3*s23+s24)*pow(s13,4)+s13*s23*(5*s14*s23*(8*s23+5*s24)+2*(5*s23+s24)*(s14*s14)+26*s24*(s23*s23)+2*s23*(s24*s24)+25*pow(s23,3)-2*pow(s24,3))+s23*s23*(s14*s23*(16*s23+13*s24)+(6*s23+s24)*(s14*s14)+10*s24*(s23*s23)+2*s23*(s24*s24)+7*pow(s23,3)-pow(s24,3))+s13*s13*(6*s14*s23*(5*s23+2*s24)+(3*s23+s24)*(s14*s14)+21*s24*(s23*s23)-2*s23*(s24*s24)+32*pow(s23,3)-pow(s24,3)))+(s23+s24)*((s13+s23)*(s13+s23))*(s13*s13*((s23-2*s24)*(s23-2*s24))+s23*((6*s23-3*s24)*(s14*s14)+s14*(-(s23*s24)+4*(s23*s23)-5*(s24*s24))+(s23-2*s24)*((s23+s24)*(s23+s24)))+s13*(-4*s24*(s23*s23)-5*s23*(s24*s24)+s14*(-13*s23*s24+4*(s23*s23)+s24*s24)+2*pow(s23,3)+pow(s24,3)))+s12*(s13+s23)*(6*(-(s23*s24)+s23*s23-s24*s24)*pow(s13,3)+s23*(3*(s14*s14)*(2*s23*s24+6*(s23*s23)-s24*s24)+(-5*s23*s24+7*(s23*s23)-3*(s24*s24))*((s23+s24)*(s23+s24))+6*s14*(4*s24*(s23*s23)-s23*(s24*s24)+4*pow(s23,3)-pow(s24,3)))+s13*s13*(-6*s24*(s23*s23)+3*s14*(7*(s23*s23)-3*(s24*s24))-24*s23*(s24*s24)+19*pow(s23,3)-8*pow(s24,3))+s13*(3*(s14*s14)*(2*s23*s24+5*(s23*s23)-s24*s24)-27*(s23*s23)*(s24*s24)+9*s24*pow(s23,3)+20*pow(s23,4)+3*s14*(6*s24*(s23*s23)-5*s23*(s24*s24)+15*pow(s23,3)-2*pow(s24,3))-19*s23*pow(s24,3)-3*pow(s24,4))))*pow(s12+s13+s14+s23+s24,-3)+4*(-4*(s13+s23)*(2*s12+s23-s24)*(s12*s23+(s13+s23)*(s23+s24))*(s13*(s23-s24)+s23*(2*s14+s23+s24)+s12*(2*s13+2*s14+3*s23+2*s24)+2*(s12*s12))-4*(s12+s23-s24)*(s23*(2*s13+s23)*(2*s13+s14+2*s23+s24)*(s12*s12)-(s23+s24)*(s14*(-s23+s24)+s24*(2*s13+s23+s24))*((s13+s23)*(s13+s23))+s12*((s13+s23)*(s13+s23))*(2*s13*s23+2*s14*s23+s23*s23-s24*s24)+s23*(2*s13+s23)*pow(s12,3)))*pow(s13,-1)*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-2)+8*(s12*s23+(s13+s23)*(s23+s24))*(2*s14*s23+s12*(3*s13+4*s14+6*s23-7*s24)+4*s14*s24-5*s23*s24+s13*(2*s14+4*s23+s24)+7*(s12*s12)+s13*s13+2*(s14*s14)+3*(s23*s23)+2*(s24*s24))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-1))+32*pow(s12+s13+s14,-1)*(-8*(s12+s13)*pow(s23,-1)+8*(2*s12+s13+s23)*pow(s23,-1)-8*s14*(s12+s13+s23)*pow(s12+s13,-1)*pow(s23,-1)+8*(s13*(s13+s23)+s12*(s13+2*s23))*pow(s12+s13,-1)*pow(s23,-1)+8*(-(s14*s23)+s13*(2*s14-6*s23+3*s24)-s12*(s13-3*(s14-s23+s24))+2*(s12*s12)-3*(s13*s13))*pow(s12+s13,-1)*pow(s23,-1)+8*(s12+s13)*(s13*(s13+s23)+s12*(s13+3*s23))*pow(s23,-1)*pow(s13+s23,-2)+8*(s12+s13)*(s12+s13+s23)*(s12+s14+s24)*pow(s23,-1)*pow(s13+s23,-2)-8*((4*s13+5*s23)*(s12*s12)+2*(s13+s23)*(s13*s13)+s12*(7*s13*s23+s23*(-2*s14+s23)+6*(s13*s13)))*pow(s23,-1)*pow(s13+s23,-2)-24*s12*(s14*s23+s12*(2*s13+s14+s23+s24)+s13*(2*s14+s23+s24)+s12*s12+s13*s13)*pow(s13,-1)*pow(s12+s13,-1)*pow(s13+s23,-1)+8*(-2*s12*(3*s14+s24)-2*s13*(s14-s23+2*s24)-s23*(2*s23+3*s24)+s12*s12+3*(s13*s13))*pow(s23,-1)*pow(s13+s23,-1)-8*(s12+s13)*(s12+s13-2*s14)*pow(s23,-1)*pow(s12+s13+s23,-1)+8*(s12+s13-s14)*(2*s12+s13-2*s14+s23)*pow(s23,-1)*pow(s12+s13+s23,-1)-8*(s12+s13)*(s12-s13+s14-s23+s24)*pow(s23,-1)*pow(s12+s13+s23,-1)-8*(-3*s14*s23+4*s14*s24-s23*s24+s12*(4*s13-s14+s23+2*s24)+s13*(5*s23+2*s24)+s12*s12+3*(s13*s13)+4*(s14*s14)-s23*s23)*pow(s23,-1)*pow(s12+s13+s23,-1)+8*(s14*(2*s14-s23)+s12*(5*s14-s23)+s13*(5*s14-s23))*(s12*(2*s13+s14+s24)+s13*(s13+s14+s23+s24)+s12*s12)*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)+8*(3*s13*(2*s13+3*s23)*pow(s12,5)+pow(s12,4)*(3*s13*s23*(8*s14+9*s23+6*s24)+3*(5*s14+17*s23+4*s24)*(s13*s13)+3*s14*(s23*s23)+22*pow(s13,3))+(s13+s14)*((s13+s23)*(s13+s23))*(s23*(s14+4*s23+s24)*(s14*s14)-s13*s14*(13*s23*s24+5*s14*(s23+s24)+2*(s14*s14)+4*(s23*s23)+3*(s24*s24))+s13*s13*(4*s23*s24-s14*(4*s23+s24)-3*(s14*s14)+s23*s23+6*(s24*s24))+2*(s23+2*s24)*pow(s13,3)+pow(s13,4))+pow(s12,3)*(3*s14*(s14+2*(s23+s24))*(s23*s23)+3*(s13*s13)*(27*s23*s24+s14*(28*s23+6*s24)+3*(s14*s14)+30*(s23*s23)+2*(s24*s24))+3*s13*s23*(2*s14*(8*s23+5*s24)+5*(s14*s14)+3*(4*s23*s24+3*(s23*s23)+s24*s24))+(37*s14+94*s23+40*s24)*pow(s13,3)+31*pow(s13,4))+3*(s12*s12)*(s14*(s23*s23)*(-(s14*s23)-s14*s14+(s23+s24)*(s23+s24))+(40*s23*s24+13*s14*(2*s23+s24)+2*(s14*s14)+32*(s23*s23)+6*(s24*s24))*pow(s13,3)+(10*s14+25*s23+16*s24)*pow(s13,4)+7*pow(s13,5)+s13*s23*(-2*s23*(s14*s14)+2*s14*(6*s23*s24+3*(s23*s23)+s24*s24)+3*s23*((s23+s24)*(s23+s24))-2*pow(s14,3))+s13*s13*(2*s23*(s14*s14)+s14*(25*s23*s24+21*(s23*s23)+s24*s24)+s23*(30*s23*s24+17*(s23*s23)+10*(s24*s24))-pow(s14,3)))+s12*(s13+s23)*(-(s23*(s14*s14)*(s14*(8*s23+6*s24)+3*(s14*s14)+3*(3*s23*s24+2*(s23*s23)+s24*s24)))+(45*s23*s24+3*s14*(3*s23+8*s24)-6*(s14*s14)+19*(s23*s23)+18*(s24*s24))*pow(s13,3)+(9*s14+20*s23+24*s24)*pow(s13,4)+7*pow(s13,5)+s13*s13*(-3*(9*s23+2*s24)*(s14*s14)-6*s14*(-3*s23*s24+s23*s23-s24*s24)+3*s23*(7*s23*s24+2*(s23*s23)+5*(s24*s24))-11*pow(s14,3))-s13*s14*((19*s23+6*s24)*(s14*s14)+6*s23*(s23*s23-s24*s24)+3*s14*(5*s23*s24+8*(s23*s23)+s24*s24)+3*pow(s14,3))))*pow(s23,-1)*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-3)+4*(-4*(2*s12+s13-s14)*(s13+s23)*(s12*s13+(s13+s14)*(s13+s23))*(-(s14*s23)+s13*(s14+s23+2*s24)+s12*(3*s13+2*(s14+s23+s24))+2*(s12*s12)+s13*s13)-4*(s12+s13-s14)*(s13*(s13+2*s23)*(2*s13+s14+2*s23+s24)*(s12*s12)-(s13+s14)*(s13*(s14-s24)+s14*(s14+2*s23+s24))*((s13+s23)*(s13+s23))+s12*(2*s13*(s23+s24)+s13*s13-s14*s14)*((s13+s23)*(s13+s23))+s13*(s13+2*s23)*pow(s12,3)))*pow(s23,-1)*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-2)+8*(s12*s13+(s13+s14)*(s13+s23))*(s14*s23+4*s14*s24+2*s23*s24+s13*(-5*s14+4*s23+2*s24)+s12*(6*s13-7*s14+3*s23+4*s24)+7*(s12*s12)+3*(s13*s13)+2*(s14*s14)+s23*s23+2*(s24*s24))*pow(s23,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-1))+32*(-8*(s12+s23)*pow(s13,-1)*pow(s24,-1)-8*(s12+2*(s23+s24))*pow(s13,-1)*pow(s24,-1)+8*(s23*(s13+s23)+s12*(2*s13+s23))*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)+8*(s12+s13+s23)*(s12+s23-s24)*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)+8*((s14-2*s23)*s23-s13*(6*s23+s24)+s12*(-2*s13+s14+s23+3*s24)+3*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)+8*(s12+s23)*(s23*(s13+s23)+s12*(3*s13+s23))*pow(s13,-1)*pow(s13+s23,-2)*pow(s24,-1)+8*(s12+s23)*(s12+s13+s23)*(s12-s13+s14-s23+s24)*pow(s13,-1)*pow(s13+s23,-2)*pow(s24,-1)+8*(s23*(s13+s23)*(s13+s23+2*s24)-s23*(s12*s12)+2*s12*(s23*s24+s13*(s23+2*s24)+s13*s13))*pow(s13,-1)*pow(s13+s23,-2)*pow(s24,-1)+8*(2*s23*(-s14+s23)+s13*(s14+7*s23+6*s24)+s12*(5*s13-2*(2*s14+s24))+2*(s13*s13))*pow(s13,-1)*pow(s13+s23,-1)*pow(s24,-1)-8*(s13*(s23+s24)+s12*(s13+s14+2*s23+s24)+s23*(s14+s23+2*s24)+s12*s12)*pow(s12+s23,-1)*pow(s13+s23,-1)*pow(s24,-1)+8*(s12+s23)*(s12+s23-2*s24)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)+8*(s12+s23)*(s12-s13+s14-s23+s24)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)+8*(s12+s23-s24)*(s13+s23+2*s24)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)-8*(4*s14*s23+s13*(2*s14-4*s23-s24)-4*s14*s24+4*s23*s24+s12*(5*s13+4*s14+4*s23+5*s24)+6*(s12*s12)+s13*s13-2*(s23*s23)-4*(s24*s24))*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)+8*(s12+2*s13+s23-2*s24)*(s23*(s13+s14+s23+s24)+s12*(s14+2*s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)-8*pow(s13,-1)*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s24,-1)*((3*s13*s23*(6*s14+17*s23+8*s24)+3*(9*s23+s24)*(s13*s13)+(12*s14+22*s23+15*s24)*(s23*s23))*pow(s12,4)+3*s23*(3*s13+2*s23)*pow(s12,5)+pow(s12,3)*(3*(s13*s13)*(16*s23*s24+2*s14*(6*s23+s24)+30*(s23*s23)+s24*s24)+s23*s23*(37*s23*s24+2*s14*(20*s23+9*s24)+6*(s14*s14)+31*(s23*s23)+9*(s24*s24))+s13*s23*(84*s23*s24+s14*(81*s23+30*s24)+9*(s14*s14)+94*(s23*s23)+15*(s24*s24))+3*(9*s23+2*s24)*pow(s13,3))+3*(s12*s12)*((6*s23*s24+2*s14*(3*s23+s24)+17*(s23*s23)-s24*s24)*pow(s13,3)+(3*s23+s24)*pow(s13,4)+s13*s23*(5*s14*s23*(8*s23+5*s24)+2*(5*s23+s24)*(s14*s14)+26*s24*(s23*s23)+2*s23*(s24*s24)+25*pow(s23,3)-2*pow(s24,3))+s23*s23*(s14*s23*(16*s23+13*s24)+(6*s23+s24)*(s14*s14)+10*s24*(s23*s23)+2*s23*(s24*s24)+7*pow(s23,3)-pow(s24,3))+s13*s13*(6*s14*s23*(5*s23+2*s24)+(3*s23+s24)*(s14*s14)+21*s24*(s23*s23)-2*s23*(s24*s24)+32*pow(s23,3)-pow(s24,3)))+(s23+s24)*((s13+s23)*(s13+s23))*(s13*s13*((s23-2*s24)*(s23-2*s24))+s23*((6*s23-3*s24)*(s14*s14)+s14*(-(s23*s24)+4*(s23*s23)-5*(s24*s24))+(s23-2*s24)*((s23+s24)*(s23+s24)))+s13*(-4*s24*(s23*s23)-5*s23*(s24*s24)+s14*(-13*s23*s24+4*(s23*s23)+s24*s24)+2*pow(s23,3)+pow(s24,3)))+s12*(s13+s23)*(6*(-(s23*s24)+s23*s23-s24*s24)*pow(s13,3)+s23*(3*(s14*s14)*(2*s23*s24+6*(s23*s23)-s24*s24)+(-5*s23*s24+7*(s23*s23)-3*(s24*s24))*((s23+s24)*(s23+s24))+6*s14*(4*s24*(s23*s23)-s23*(s24*s24)+4*pow(s23,3)-pow(s24,3)))+s13*s13*(-6*s24*(s23*s23)+3*s14*(7*(s23*s23)-3*(s24*s24))-24*s23*(s24*s24)+19*pow(s23,3)-8*pow(s24,3))+s13*(3*(s14*s14)*(2*s23*s24+5*(s23*s23)-s24*s24)-27*(s23*s23)*(s24*s24)+9*s24*pow(s23,3)+20*pow(s23,4)+3*s14*(6*s24*(s23*s23)-5*s23*(s24*s24)+15*pow(s23,3)-2*pow(s24,3))-19*s23*pow(s24,3)-3*pow(s24,4))))*pow(s12+s13+s14+s23+s24,-3)-4*(-4*(s13+s23)*(s12-s13-s24)*(s12*s23+(s13+s23)*(s23+s24))*(s13*(s23-s24)+s23*(2*s14+s23+s24)+s12*(2*s13+2*s14+3*s23+2*s24)+2*(s12*s12))+4*(s13+s24)*(s23*(2*s13+s23)*(2*s13+s14+2*s23+s24)*(s12*s12)-(s23+s24)*(s14*(-s23+s24)+s24*(2*s13+s23+s24))*((s13+s23)*(s13+s23))+s12*((s13+s23)*(s13+s23))*(2*s13*s23+2*s14*s23+s23*s23-s24*s24)+s23*(2*s13+s23)*pow(s12,3)))*pow(s13,-1)*pow(s13+s23,-2)*pow(s12+s13+s23,-1)*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-2)+8*(s12*s23+(s13+s23)*(s23+s24))*(6*s14*s23+s13*(3*s14-4*s23-6*s24)-4*s14*s24+3*s23*s24+s12*(5*s13+4*s14+4*s23+5*s24)+2*(s12*s12)-2*(s13*s13)-2*(s14*s14)-2*(s23*s23)-2*(s24*s24))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)))/512.;
}

// Coefficient order epsilon^1 of master 10
template<>
double qq2yygCAm2CF<10,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (256*(s13*s14*(2*s14*(13*s23+s24)+s23*(6*s23+13*s24)+2*(s14*s14))+s12*s12*(4*s23*(s23+3*s24)+s14*(36*s23+22*s24)+s13*(98*s14+30*s23+39*s24)+39*(s13*s13)+24*(s14*s14))+s13*s13*(12*s23*s24+11*s14*(3*s23+2*s24)+30*(s14*s14))+5*(s14*s14)*(s23*s23)+(39*s13+35*s14+15*s23+13*s24)*pow(s12,3)+13*pow(s12,4)+(28*s14+13*s24)*pow(s13,3)+s12*((91*s14+15*s23+39*s24)*(s13*s13)+s14*(s14*(21*s23+2*s24)+s23*(9*s23+13*s24)+2*(s14*s14))+s13*(4*s23*(s23+6*s24)+s14*(69*s23+44*s24)+54*(s14*s14))+13*pow(s13,3)))*pow(s12+s13,-1)*pow(s12+s13+s14,-2)*pow(s23,-1)*pow(s12+s13+s23,-1)-256*(2*s14*(4*s14+4*s23+s24)*(s13*s13)+s12*s12*(s14*(7*s23+2*s24)+2*s13*(9*s14+2*s23+3*s24)+6*(s13*s13))-s13*s14*(s23*s24+2*s14*(-6*s23+s24)+2*(s14*s14))+7*(s14*s14)*(s23*s23)+2*(3*s13+2*s14+s23+s24)*pow(s12,3)+2*pow(s12,4)+2*(5*s14+s24)*pow(s13,3)+s12*(s13*s14*(8*s14+15*s23+4*s24)+2*(12*s14+s23+3*s24)*(s13*s13)-s14*(s23*(-5*s23+s24)+s14*(-5*s23+2*s24)+2*(s14*s14))+2*pow(s13,3)))*pow(s12+s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)+256*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-2)*(s13*s23*(s14*(s23+13*s24)+s24*(37*s23+24*s24))+s24*(17*s23+5*s24)*(s13*s13)+s12*s12*(76*s23*s24+3*s14*(7*s23+6*s24)+s13*(s14+16*s23+37*s24)+s13*s13+21*(s23*s23)+16*(s24*s24))+s23*(s14*(18*s23*s24+7*(s23*s23)-2*(s24*s24))-2*s24*(-12*s23*s24-13*(s23*s23)+s24*s24))+(8*s13+7*s14+21*s23+25*s24)*pow(s12,3)+7*pow(s12,4)+s12*((s23+14*s24)*(s13*s13)+77*s24*(s23*s23)+s14*(36*s23*s24+21*(s23*s23)-2*(s24*s24))+40*s23*(s24*s24)+s13*(74*s23*s24+s14*(2*s23+13*s24)+8*(s23*s23)+19*(s24*s24))+7*pow(s23,3)-2*pow(s24,3)))+128*pow(s13,-1)*pow(s12+s13,-2)*pow(s12+s13+s14,-3)*pow(s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*((9*s23*s24+s13*(-48*s14+97*s23+6*s24)+s14*(6*s23+13*s24)+57*(s13*s13)-42*(s14*s14)+23*(s23*s23)-s24*s24)*pow(s12,6)+(6*s13-16*s14+10*s23-s24)*pow(s12,7)-pow(s12,8)+pow(s12,5)*((339*s23+59*s24)*(s13*s13)+(-42*s23+31*s24)*(s14*s14)+10*s24*(s23*s23)+s13*(76*s23*s24+3*s14*(51*s23+37*s24)-144*(s14*s14)+145*(s23*s23)-11*(s24*s24))-3*s23*(s24*s24)+s14*(59*s23*s24+60*(s23*s23)+4*(s24*s24))+160*pow(s13,3)-40*pow(s14,3)+12*pow(s23,3)+3*pow(s24,3))+s13*(((26*s23+62*s24)*(s14*s14)+s14*(113*s23*s24+47*(s23*s23)-12*(s24*s24))+s24*(2*s23*s24+13*(s23*s23)+3*(s24*s24)))*pow(s13,4)+(23*s23*s24+4*s14*(6*s23+13*s24)+6*(s23*s23)-6*(s24*s24))*pow(s13,5)+2*(3*s23+7*s24)*pow(s13,6)+s13*s23*(s14*(-7*s23+2*s24)+2*(15*s23*s24+10*(s23*s23)+s24*s24))*pow(s14,3)+2*pow(s14,4)*pow(s23,3)+s13*s13*(s14*s14)*(-4*s23*(s14*s14)+70*s24*(s23*s23)+3*s23*(s24*s24)+s14*(75*s23*s24+23*(s23*s23)+2*(s24*s24))+33*pow(s23,3)+2*pow(s24,3))+s14*pow(s13,3)*(4*(s23+6*s24)*(s14*s14)+65*s24*(s23*s23)+s14*(163*s23*s24+71*(s23*s23)-4*(s24*s24))+15*s23*(s24*s24)+19*pow(s23,3)+9*pow(s24,3)))+pow(s12,4)*(s13*s13*(237*s23*s24+s14*(572*s23+366*s24)-156*(s14*s14)+359*(s23*s23)-40*(s24*s24))+2*(80*s14+296*s23+85*s24)*pow(s13,3)+225*pow(s13,4)+s14*((-62*s23+19*s24)*(s14*s14)+46*s24*(s23*s23)-2*s23*(s24*s24)+s14*(93*s23*s24+42*(s23*s23)+9*(s24*s24))-13*pow(s14,3)+38*pow(s23,3)+9*pow(s24,3))+s13*((-33*s23+180*s24)*(s14*s14)+52*s24*(s23*s23)-10*s23*(s24*s24)+s14*(367*s23*s24+345*(s23*s23)+4*(s24*s24))-120*pow(s14,3)+54*pow(s23,3)+15*pow(s24,3)))+s12*((132*s23*s24+s14*(221*s23+267*s24)+24*(s14*s14)+80*(s23*s23)-31*(s24*s24))*pow(s13,5)+(32*s14+75*s23+81*s24)*pow(s13,6)+12*pow(s13,7)+4*s13*s23*(14*s23*s24+s14*(-4*s23+s24)+10*(s23*s23)+s24*s24)*pow(s14,3)+2*pow(s14,4)*pow(s23,3)+s13*s13*(s14*s14)*((-28*s23+2*s24)*(s14*s14)+202*s24*(s23*s23)+9*s23*(s24*s24)+s14*(195*s23*s24+50*(s23*s23)+8*(s24*s24))+117*pow(s23,3)+6*pow(s24,3))+pow(s13,4)*(13*(13*s23+21*s24)*(s14*s14)+61*s24*(s23*s23)+s14*(529*s23*s24+310*(s23*s23)-44*(s24*s24))+5*s23*(s24*s24)+19*pow(s23,3)+15*pow(s24,3))+s14*pow(s13,3)*((-5*s23+89*s24)*(s14*s14)+228*s24*(s23*s23)+s14*(592*s23*s24+298*(s23*s23)-3*(s24*s24))+43*s23*(s24*s24)-4*pow(s14,3)+101*pow(s23,3)+36*pow(s24,3)))+pow(s12,3)*((368*s23*s24+s14*(882*s23+614*s24)-24*(s14*s14)+443*(s23*s23)-70*(s24*s24))*pow(s13,3)+(240*s14+568*s23+245*s24)*pow(s13,4)+174*pow(s13,5)+s14*s14*((-24*s23+2*s24)*(s14*s14)+62*s24*(s23*s23)+3*s23*(s24*s24)+s14*(45*s23*s24-4*(s23*s23)+4*(s24*s24))+42*pow(s23,3)+2*pow(s24,3))+s13*s13*((177*s23+416*s24)*(s14*s14)+109*s24*(s23*s23)+s14*(860*s23*s24+726*(s23*s23)-24*(s24*s24))-10*s23*(s24*s24)-120*pow(s14,3)+91*pow(s23,3)+30*pow(s24,3))+s13*s14*((-137*s23+79*s24)*(s14*s14)+190*s24*(s23*s23)+9*s23*(s24*s24)+s14*(452*s23*s24+239*(s23*s23)+23*(s24*s24))-30*pow(s14,3)+144*pow(s23,3)+36*pow(s24,3)))+s12*s12*((307*s23*s24+s14*(654*s23+561*s24)+54*(s14*s14)+280*(s23*s23)-65*(s24*s24))*pow(s13,4)+(144*s14+297*s23+194*s24)*pow(s13,5)+71*pow(s13,6)+s23*(s14*(-9*s23+2*s24)+2*(13*s23*s24+9*(s23*s23)+s24*s24))*pow(s14,3)+s13*(s14*s14)*((-48*s23+4*s24)*(s14*s14)+194*s24*(s23*s23)+9*s23*(s24*s24)+s14*(165*s23*s24+23*(s23*s23)+10*(s24*s24))+128*pow(s23,3)+6*pow(s24,3))+pow(s13,3)*((311*s23+478*s24)*(s14*s14)+115*s24*(s23*s23)+8*s14*(121*s23*s24+88*(s23*s23)-7*(s24*s24))-40*pow(s14,3)+68*pow(s23,3)+30*pow(s24,3))+s14*(s13*s13)*((-84*s23+125*s24)*(s14*s14)+307*s24*(s23*s23)+39*s23*(s24*s24)+s14*(788*s23*s24+424*(s23*s23)+15*(s24*s24))-21*pow(s14,3)+188*pow(s23,3)+54*pow(s24,3))))+128*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s23,-2)*pow(s12+s13+s23,-1)*pow(s24,-3)*((26*s23*s24+3*s13*(8*s14+16*s23+7*s24)+s14*(60*s23+19*s24)+12*(s13*s13)+12*(s14*s14)+40*(s23*s23)+9*(s24*s24))*pow(s12,6)+(12*s13+12*s14+20*s23+7*s24)*pow(s12,7)+4*pow(s12,8)+s12*(s23*s24*(s13*s13)*(s24*(47*s23*s24+44*(s23*s23)-20*(s24*s24))+s14*(20*s23*s24+6*(s23*s23)+48*(s24*s24)))+2*(s24*s24)*(14*s23*s24+7*(s23*s23)+s24*s24)*pow(s13,3)+s13*s23*(s23*(21*s23*s24+40*(s23*s23)-32*(s24*s24))*(s24*s24)+s14*s24*(86*s24*(s23*s23)+151*s23*(s24*s24)+2*pow(s23,3)-4*pow(s24,3))+s14*s14*(17*s24*(s23*s23)-27*s23*(s24*s24)+12*pow(s23,3)-4*pow(s24,3)))+s23*s23*(2*s23*(4*s23*s24+5*(s23*s23)-2*(s24*s24))*(s24*s24)+(20*s23*s24+20*(s23*s23)-6*(s24*s24))*pow(s14,3)+s14*s14*(9*s24*(s23*s23)-39*s23*(s24*s24)+12*pow(s23,3)-8*pow(s24,3))+s14*s24*(34*s24*(s23*s23)+77*s23*(s24*s24)-4*pow(s23,3)-2*pow(s24,3))))+pow(s12,5)*(3*(4*s14+12*s23+7*s24)*(s13*s13)+(60*s23+17*s24)*(s14*s14)+34*s24*(s23*s23)+41*s23*(s24*s24)+2*s14*(36*s23*s24+60*(s23*s23)+s24*s24)+s13*(65*s23*s24+s14*(96*s23+38*s24)+12*(s14*s14)+72*(s23*s23)+29*(s24*s24))+4*pow(s13,3)+4*pow(s14,3)+40*pow(s23,3)-5*pow(s24,3))+s23*(s14*s23*((8*s23+26*s24)*(s13*s13)+2*(5*s23+12*s24)*(s23*s23)+s13*(63*s23*s24+30*(s23*s23)-2*(s24*s24)))*(s24*s24)+s23*s23*(5*s23*s24+4*(s23*s23)-2*(s24*s24))*pow(s14,3)-s23*s24*(s14*s14)*(s23*s24*(9*s13+2*s24)+10*s24*(s23*s23)+2*s13*(s24*s24)+2*pow(s23,3))+s13*(s13*s23*(14*s23-9*s24)+2*(8*s23+s24)*(s13*s13)+4*(s23-s24)*(s23*s23))*pow(s24,3))+s12*s12*(s24*(27*s23*s24+6*(s23*s23)+14*(s24*s24))*pow(s13,3)+s13*s13*(s24*(118*s24*(s23*s23)+56*s23*(s24*s24)+10*pow(s23,3)-11*pow(s24,3))+s14*(31*s24*(s23*s23)+16*s23*(s24*s24)+12*pow(s23,3)+22*pow(s24,3)))+s23*((30*s23*s24+40*(s23*s23)-6*(s24*s24))*pow(s14,3)+s23*s24*(44*s24*(s23*s23)+19*s23*(s24*s24)-2*pow(s23,3)-23*pow(s24,3))+s14*s14*(56*s24*(s23*s23)-57*s23*(s24*s24)+60*pow(s23,3)-10*pow(s24,3))+s14*(44*(s23*s23)*(s24*s24)+3*s24*pow(s23,3)+12*pow(s23,4)+85*s23*pow(s24,3)-4*pow(s24,4)))+s13*(s23*s24*(141*s24*(s23*s23)+34*s23*(s24*s24)+2*pow(s23,3)-56*pow(s24,3))+s14*s14*(51*s24*(s23*s23)-27*s23*(s24*s24)+48*pow(s23,3)-2*pow(s24,3))+s14*(88*(s23*s23)*(s24*s24)+44*s24*pow(s23,3)+24*pow(s23,4)+113*s23*pow(s24,3)-2*pow(s24,4))))+pow(s12,3)*((13*s23*s24+4*(s23*s23)+11*(s24*s24))*pow(s13,3)+(20*s23*s24+40*(s23*s23)-2*(s24*s24))*pow(s14,3)+s14*s14*(94*s24*(s23*s23)-37*s23*(s24*s24)+120*pow(s23,3)-4*pow(s24,3))+s13*s13*(41*s24*(s23*s23)+105*s23*(s24*s24)+4*s14*(11*s23*s24+9*(s23*s23)+s24*s24)+12*pow(s23,3)+23*pow(s24,3))+s23*(81*(s23*s23)*(s24*s24)-s24*pow(s23,3)+4*pow(s23,4)+9*s23*pow(s24,3)-34*pow(s24,4))+s13*(s14*s14*(51*s23*s24+72*(s23*s23)-9*(s24*s24))+191*(s23*s23)*(s24*s24)+27*s24*pow(s23,3)+12*pow(s23,4)+21*s23*pow(s24,3)+s14*(120*s24*(s23*s23)+38*s23*(s24*s24)+96*pow(s23,3)+25*pow(s24,3))-28*pow(s24,4))+s14*(28*(s23*s23)*(s24*s24)+52*s24*pow(s23,3)+60*pow(s23,4)+35*s23*pow(s24,3)-2*pow(s24,4)))+pow(s12,4)*(3*(s14*s14)*(22*s23*s24+40*(s23*s23)-3*(s24*s24))+79*(s23*s23)*(s24*s24)+s13*s13*(52*s23*s24+s14*(36*s23+19*s24)+36*(s23*s23)+31*(s24*s24))+(8*s23+7*s24)*pow(s13,3)+5*(4*s23+s24)*pow(s14,3)+16*s24*pow(s23,3)+20*pow(s23,4)-7*s23*pow(s24,3)+s14*(98*s24*(s23*s23)+10*s23*(s24*s24)+120*pow(s23,3)+3*pow(s24,3))+s13*((48*s23+17*s24)*(s14*s14)+69*s24*(s23*s23)+119*s23*(s24*s24)+2*s14*(58*s23*s24+72*(s23*s23)+3*(s24*s24))+48*pow(s23,3)+4*pow(s24,3))-15*pow(s24,4)))+32*pow(s13,-1)*pow(s24,-1)*(-8*s12+16*(s12+s13)+32*s23-8*(s13+s23)+16*s24+8*(-(s13*(s13+s23))+s12*(s13+2*s23))*pow(s12+s13,-1)-8*(s14*s23-s13*(3*s14+2*s23+s24)+s12*(3*s13+7*s14+8*s23+s24)+4*(s12*s12)-2*(s13*s13))*pow(s12+s13,-1)-8*(s12+s23)*(s12+s13+s23)*(s12+s14+s24)*pow(s13+s23,-2)+8*(s13*(s13+s23)*(s13-3*s23-2*s24)+(s13+2*s23)*(s12*s12)+2*s12*(-(s13*(s23+s24))+s13*s13-s23*s23))*pow(s13+s23,-2)-8*(s13*(3*s14+13*s23+4*s24)+s12*(4*s13+8*s23+6*s24)+s23*(6*s14+9*s23+8*s24)+4*(s12*s12)+2*(s13*s13))*pow(s13+s23,-1)-8*((s12+s13)*(s12+s13))*pow(s13+s23,-1)+8*(s13*s23+s12*(4*s13+s23)+s12*s12)*(s14*s23+s12*(2*s13+s14+s23+s24)+s13*(2*s14+s23+s24)+s12*s12+s13*s13)*pow(s13,-1)*pow(s12+s13,-1)*pow(s13+s23,-1)+24*(s12+s13)*(s13+s23)*pow(s12+s13+s23,-1)+(8*(s12+s13+s14)*(s13-s23)+8*(s12+s13)*(4*s12-s13-9*s23-4*s24))*pow(s12+s13+s23,-1)-8*(2*s13*(s14-3*s23)+s12*(6*s13+s14+3*s23+s24)-s23*(s14+6*s23+3*s24)+s12*s12)*pow(s12+s13+s23,-1)-24*((s12+s13)*(s12+s13))*pow(s12+s13+s23,-1)-8*(8*s14*s23+12*s14*s24+10*s23*s24+s13*(16*s14+18*s23+9*s24)+s12*(23*s13+5*(4*s14+s24))+17*(s12*s12)+13*(s13*s13)+12*(s14*s14)+15*(s23*s23))*pow(s12+s13+s23,-1)-8*((s13+s23)*(s13+s23))*pow(s12+s13+s23,-1)-8*(-2*s12*s13*(s13*(s14*(-s23+s24)+2*(s14*s14)-s24*s24)+s14*(2*s23*s24+2*s14*(s23+s24)+s14*s14-s23*s23+s24*s24))-s12*s12*((s14-4*s24)*(s13*s13)+2*s13*(s14*s23-2*s24*(s23+s24)+2*(s14*s14))+s14*(4*s23*s24+2*s14*(2*s23+s24)+s14*s14+3*(s23*s23)+s24*s24))-s14*(s13*s13)*((s14+s24)*(s14+s24))+2*(2*s23*s24+s24*(s14+s24)+s13*(s14+2*s23+4*s24)+s13*s13+s23*s23)*pow(s12,3)+(4*s13+3*s14+4*(s23+s24))*pow(s12,4)+2*pow(s12,5))*pow(s12+s13,-1)*pow(s14,-2)*pow(s12+s13+s23,-1)+8*(s13*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(2*s14*(3*s14+s23)+s12*(9*s13+8*s14-7*s23-3*s24)+s13*(7*s14+4*s23+s24)+6*(s12*s12)+7*(s13*s13))*pow(s12+s13,-1)*pow(s14,-1)*pow(s12+s13+s23,-1)+8*(s13*s14+(s12+s14)*s23)*(-(s13*s14*s23*(s14+3*s24))+s12*(s14*s23*(-3*s14+2*s23-3*s24)+3*(s14+2*s24)*(s13*s13)+s13*(-3*(s23-2*s24)*s24+s14*(-4*s23+9*s24)+3*(s14*s14)))+s14*s14*(s23*s23)+s13*s13*(3*s14*s24+s14*s14+3*(s24*s24))+s12*s12*(-6*s14*(s23-s24)-3*s23*s24+3*s13*(3*s14-s23+4*s24)+3*(s13*s13)+3*(s14*s14)+s23*s23+3*(s24*s24))+(6*s13+6*s14-3*s23+6*s24)*pow(s12,3)+3*pow(s12,4))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-3)+16*(s13*s14+(s12+s14)*s23)*(-s12+2*s23+s24)*(-(s14*s23)+s13*(s14+2*s24)+s12*(2*s13+2*s14-s23+2*s24)+2*(s12*s12))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)+8*(s13*s14+(s12+s14)*s23)*(6*s14*s23+12*s14*s24+11*s23*s24+s12*(14*s13+12*s14+4*s23+9*s24)+s13*(9*s14+14*s23+10*s24)+11*(s12*s12)+6*(s13*s13)+6*(s14*s14)+12*(s23*s23)+6*(s24*s24))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1))+32*pow(s12+s13+s14,-1)*pow(s23,-1)*(-24*s12+16*s13+16*s14-16*s23+16*(s12+s23)-8*(s13+s23)+8*(-(s23*(s13+s23))+s12*(2*s13+s23))*pow(s12+s23,-1)+8*(s13*(2*s23+3*s24)+s12*(-5*s13-7*s14+12*s23+9*s24)+s23*(s14+2*(s23+s24))+5*(s12*s12))*pow(s12+s23,-1)+((-32*s12*s13*(s12+s13+2*s14)+16*(s12+s23)*(s13+s23)*(3*s12-s13-2*s14+3*s23))*pow(s13+s23,-2))/2.+8*(s12+s13)*(s12+s13+s23)*(2*s12+3*s13+2*s14+3*s23+2*s24)*pow(s13+s23,-2)-8*(-2*s12*(3*s13+8*s14-7*s23-3*s24)+3*(s12*s12)+2*(-2*s13*(s14-s23)+s23*(-3*s14+s23+s24)+s13*s13))*pow(s13+s23,-1)-8*((s12+s23)*(s12+s23))*pow(s13+s23,-1)+8*(s13*(s23+s24)+s12*(s13+s14+2*s23+s24)+s23*(s14+s23+2*s24)+s12*s12)*(s12*(4*s13-s23)-3*s13*s23+4*(s12*s12))*pow(s23,-1)*pow(s12+s23,-1)*pow(s13+s23,-1)-24*(s12+s23)*(s13+s23)*pow(s12+s13+s23,-1)+(-8*(s12+s23)*(8*s12-5*s13-4*s14+3*s23)+8*(s13-s23)*(s12+s23+s24))*pow(s12+s13+s23,-1)+(8*(5*s12-3*s13-2*s14)*(s13+s23)+8*(s12-s13+2*s23)*(s12+s13+s14+s23+s24))*pow(s12+s13+s23,-1)+24*((s12+s23)*(s12+s23))*pow(s12+s13+s23,-1)+8*((s13+s23)*(s13+s23))*pow(s12+s13+s23,-1)+8*(2*s14*s23+12*s14*s24+19*s23*s24+s13*(-s14+17*s23+14*s24)+s12*(-6*s13-6*s14+35*s23+26*s24)+21*(s12*s12)+5*(s13*s13)+18*(s23*s23)+12*(s24*s24))*pow(s12+s13+s23,-1)+8*(2*s12*s23*(-(s14*s24*(2*s13+s23+2*s24))+s24*(s13*(s23-2*s24)-s24*(2*s23+s24)+s13*s13)+(s23-s24)*(s14*s14))-s12*s12*(s13*(-4*s14*(s23-s24)+2*s24*(s23+2*s24))+3*s24*(s13*s13)+(-4*s23+s24)*(s14*s14)+s24*(4*s23*s24+s23*s23+s24*s24)+s14*(-4*(s23*s23)+2*(s24*s24)))-s24*(s23*s23)*((s14+s24)*(s14+s24))+2*(2*s13*(s14+s23)+s23*(s23+s24)+s14*(4*s23+s24)+s13*s13+s14*s14)*pow(s12,3)+(4*s13+4*s14+4*s23+3*s24)*pow(s12,4)+2*pow(s12,5))*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-2)-8*(s23*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(2*s13*s23+s14*s23+9*s23*s24+s12*(-5*s13-3*s14+12*s23+6*s24)+8*(s12*s12)+8*(s23*s23)+6*(s24*s24))*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)-8*(s12*s13+(s13+s23)*s24)*(3*s14*s23*(-s13+s23)*s24+s12*(3*s23*(2*s14+s24)*(s14+s23+s24)-s13*(3*s14*(s23+s24)+s24*(4*s23+3*s24))+2*s24*(s13*s13))+3*(s14*s14)*(s23*s23)+(-(s13*s23)+s13*s13+s23*s23)*(s24*s24)+s12*s12*(-3*s13*(s14+s23+2*s24)+s13*s13+3*(3*s23*s24+2*s14*(2*s23+s24)+s14*s14+s23*s23+s24*s24))+(-3*s13+6*(s14+s23+s24))*pow(s12,3)+3*pow(s12,4))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-3)+16*(2*s12-s13-s14+s23)*(s12*s13+(s13+s23)*s24)*(2*s14*s23+(-s13+s23)*s24+s12*(-s13+2*(s14+s23+s24))+2*(s12*s12))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)-8*(s12*s13+(s13+s23)*s24)*(4*s12*(3*s13+2*s14+6*s23+5*s24)+21*(s12*s12)+2*(5*s23*s24+s14*(s23+6*s24)+s13*(5*s14+8*s23+7*s24)+5*(s13*s13)+3*(s14*s14)+5*(s23*s23)+3*(s24*s24)))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1))+32*pow(s24,-1)*(8+8*s23*pow(s13,-1)-8*(s12+s23)*pow(s13,-1)+8*(3*s12+2*(s13+s23+s24))*pow(s13,-1)+8*(s12+s13+s23)*(3*s12+3*s23+2*s24)*pow(s13,-1)*pow(s12+s23,-1)-8*(s12*(11*s13+8*s14+27*s23+14*s24)+2*(s13*(7*s23+3*s24)+2*s23*(2*s14+3*(s23+s24)))+15*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)-8*(s12+s23)*(s12+s13+s23)*(2*s12+3*s13+2*s14+3*s23+2*s24)*pow(s13,-1)*pow(s13+s23,-2)-((32*s12*s13*(s12+s23+2*s24)+16*(s12+s23)*(s13+s23)*(3*s12+s13+3*s23+2*s24))*pow(s13,-1)*pow(s13+s23,-2))/2.+8*(2*s13*(s14+6*s23+s24)+4*s23*(2*s14+3*(s23+s24))+s12*(9*s13+2*(s14+13*s23+8*s24))+13*(s12*s12)+s13*s13)*pow(s13,-1)*pow(s13+s23,-1)+8*((s12+s23)*(s12+s23))*pow(s13,-1)*pow(s13+s23,-1)+8*(5*s12+3*s23)*(s13*(s23+s24)+s12*(s13+s14+2*s23+s24)+s23*(s14+s23+2*s24)+s12*s12)*pow(s23,-1)*pow(s12+s23,-1)*pow(s13+s23,-1)+8*(s12+s23)*(s13+s23)*pow(s13,-1)*pow(s12+s13+s23,-1)-2*(8*s13*(s12+s23+s24)-4*(s12+s23)*(4*s12+s13+3*s23+2*s24))*pow(s13,-1)*pow(s12+s13+s23,-1)-8*((s12+s23)*(s12+s23))*pow(s13,-1)*pow(s12+s13+s23,-1)-8*(s12*(11*s13+6*s14+23*s23+26*s24)+s13*(3*s14+13*(s23+s24))+13*(s12*s12)+4*(s13*s13)+2*(9*s23*s24+3*s14*(s23+2*s24)+5*(s23*s23)+6*(s24*s24)))*pow(s13,-1)*pow(s12+s13+s23,-1)+8*(s23*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(-4*s12*(s23-s24)+4*s23*s24+3*s24*(s13+2*s24)-2*(s12*s12)-2*(s23*s23))*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)+8*(s12*s13+(s13+s23)*s24)*(3*s14*s23*(-s13+s23)*s24+s12*(3*s23*(2*s14+s24)*(s14+s23+s24)-s13*(3*s14*(s23+s24)+s24*(4*s23+3*s24))+2*s24*(s13*s13))+3*(s14*s14)*(s23*s23)+(-(s13*s23)+s13*s13+s23*s23)*(s24*s24)+s12*s12*(-3*s13*(s14+s23+2*s24)+s13*s13+3*(3*s23*s24+2*s14*(2*s23+s24)+s14*s14+s23*s23+s24*s24))+(-3*s13+6*(s14+s23+s24))*pow(s12,3)+3*pow(s12,4))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-3)-16*(2*s12+2*s23+s24)*(s12*s13+(s13+s23)*s24)*(2*s14*s23+(-s13+s23)*s24+s12*(-s13+2*(s14+s23+s24))+2*(s12*s12))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)+8*(s12*s13+(s13+s23)*s24)*(s12*(15*s13+4*(3*s14+6*s23+5*s24))+17*(s12*s12)+2*(7*s23*s24+3*s14*(s23+2*s24)+s13*(3*s14+7*s23+5*s24)+3*(s13*s13)+3*(s14*s14)+6*(s23*s23)+3*(s24*s24)))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1))+32*(-8*(s12+s13)*pow(s12+s13+s14,-1)*pow(s23,-1)+8*(s12+2*s14)*pow(s12+s13+s14,-1)*pow(s23,-1)+8*(s13+s23)*pow(s12+s13+s14,-1)*pow(s23,-1)-8*s14*(s12+s13+s23)*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)+8*(6*s14*s23+s13*(6*s14+s23+3*s24)+s12*(2*s13+3*s14+7*s23+3*s24)+2*(s12*s12))*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)+8*(s12+s13)*(s12+s13+s23)*(s12+s14+s24)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-2)-8*(s13*(s13+2*s14-s23)*(s13+s23)+s13*(s12*s12)+2*s12*(s13*s14+s13*s13-s23*s23))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-2)-8*(3*s12+s13)*(s14*s23+s12*(2*s13+s14+s23+s24)+s13*(2*s14+s23+s24)+s12*s12+s13*s13)*pow(s13,-1)*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s13+s23,-1)-8*(s12*(6*s13+6*s14+3*s23-2*s24)+s23*(5*s14-s23+2*s24)+s13*(6*s14-s23+4*s24)+s12*s12)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-1)+8*((s12+s13)*(s12+s13))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-1)-8*(2*s12+2*s13+6*s14-s23)*(s13*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s12+s13,-1)*pow(s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)-8*(s12+s13)*(s13+s23)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)-2*(4*(s12+s13)*(2*s12+s13+2*s14-s23)-8*(s12+s13+s14)*s23)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)+8*((s12+s13)*(s12+s13))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)+8*(-(s14*s23)+12*s14*s24-s23*s24+s12*(17*s13+21*s14-s23+10*s24)+s13*(13*s14+6*s23+10*s24)+10*(s12*s12)+7*(s13*s13)+12*(s14*s14)+s23*s23)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)-8*(s13*s14+(s12+s14)*s23)*(-(s13*s14*s23*(s14+3*s24))+s12*(s14*s23*(-3*s14+2*s23-3*s24)+3*(s14+2*s24)*(s13*s13)+s13*(-3*(s23-2*s24)*s24+s14*(-4*s23+9*s24)+3*(s14*s14)))+s14*s14*(s23*s23)+s13*s13*(3*s14*s24+s14*s14+3*(s24*s24))+s12*s12*(-6*s14*(s23-s24)-3*s23*s24+3*s13*(3*s14-s23+4*s24)+3*(s13*s13)+3*(s14*s14)+s23*s23+3*(s24*s24))+(6*s13+6*s14-3*s23+6*s24)*pow(s12,3)+3*pow(s12,4))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-3)+16*(s12+s13+s14-s23)*(s13*s14+(s12+s14)*s23)*(-(s14*s23)+s13*(s14+2*s24)+s12*(2*s13+2*s14-s23+2*s24)+2*(s12*s12))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)-8*(s13*s14+(s12+s14)*s23)*(12*s14*s24+5*s23*s24+s12*(10*s13+11*s14+6*s23+12*s24)+s13*(5*s14+6*(s23+s24))+10*(s12*s12)+5*(s13*s13)+6*(s14*s14)+5*(s23*s23)+6*(s24*s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1))-128*pow(s13,-1)*pow(s12+s13,-2)*pow(s14,-3)*pow(s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*((5*s14*(9*s23+7*s24)+6*s13*(11*s14+8*s23+10*s24)+40*(s13*s13)+27*(s14*s14)+12*((s23+s24)*(s23+s24)))*pow(s12,6)+(20*s13+3*(5*s14+4*(s23+s24)))*pow(s12,7)+4*pow(s12,8)+pow(s12,4)*(3*(s13*s13)*(48*s23*s24+s14*(71*s23+86*s24)+65*(s14*s14)+12*(s23*s23)+40*(s24*s24))+24*(4*s14+2*s23+5*s24)*pow(s13,3)+20*pow(s13,4)+s14*((46*s23+15*s24)*(s14*s14)+7*s14*(10*s23*s24+11*(s23*s23)+s24*s24)+5*(3*s23+s24)*((s23+s24)*(s23+s24))+pow(s14,3))+s13*((279*s23+148*s24)*(s14*s14)+2*s14*(122*s23*s24+62*(s23*s23)+53*(s24*s24))+4*(2*s23+5*s24)*((s23+s24)*(s23+s24))+77*pow(s14,3)))+s13*(s13*s13*(s14*s14)*(8*s23*(s14*s14)+s24*(7*s23*s24+14*(s23*s23)-2*(s24*s24))+s14*(55*s23*s24+38*(s23*s23)-2*(s24*s24)))+s14*(6*s14*s24*(5*s23+s24)+2*(9*s23+10*s24)*(s14*s14)+(8*s23+5*s24)*(s24*s24))*pow(s13,3)+2*s24*(3*s14*s24+6*(s14*s14)+2*(s24*s24))*pow(s13,4)+s13*s23*(s14*(3*s23-2*s24)+26*s23*s24+18*(s23*s23)-2*(s24*s24))*pow(s14,3)-2*pow(s14,4)*pow(s23,3))+s12*(12*(s14*s24+s14*s14+s24*s24)*pow(s13,5)-4*s13*s23*(-10*s23*s24+s24*(s14+s24)-8*(s23*s23))*pow(s14,3)+s14*pow(s13,3)*((117*s23+77*s24)*(s14*s14)+s24*(49*s23*s24+22*(s23*s23)+20*(s24*s24))+s14*(150*s23*s24+66*(s23*s23)+25*(s24*s24))+8*pow(s14,3))+pow(s13,4)*(s14*s24*(34*s23+49*s24)+(50*s23+76*s24)*(s14*s14)+4*(3*s23+5*s24)*(s24*s24)+26*pow(s14,3))-2*pow(s14,4)*pow(s23,3)+s13*s13*(s14*s14)*((20*s23-2*s24)*(s14*s14)+62*s24*(s23*s23)+s14*(139*s23*s24+125*(s23*s23)-8*(s24*s24))+21*s23*(s24*s24)+28*pow(s23,3)-6*pow(s24,3)))+s12*s12*((12*s24*(2*s23+5*s24)+s14*(26*s23+83*s24)+70*(s14*s14))*pow(s13,4)+6*(s14+2*s24)*pow(s13,5)+s23*(-(s14*(3*s23+2*s24))+2*(7*s23*s24+6*(s23*s23)-s24*s24))*pow(s14,3)+pow(s13,3)*((221*s23+192*s24)*(s14*s14)+4*s24*(12*s23*s24+3*(s23*s23)+10*(s24*s24))+2*s14*(86*s23*s24+17*(s23*s23)+68*(s24*s24))+95*pow(s14,3))+s13*(s14*s14)*(4*(3*s23-s24)*(s14*s14)+82*s24*(s23*s23)+s14*(113*s23*s24+128*(s23*s23)-10*(s24*s24))+21*s23*(s24*s24)+55*pow(s23,3)-6*pow(s24,3))+s14*(s13*s13)*((226*s23+109*s24)*(s14*s14)+79*s24*(s23*s23)+99*s23*(s24*s24)+s14*(280*s23*s24+208*(s23*s23)+39*(s24*s24))+17*pow(s14,3)+14*pow(s23,3)+30*pow(s24,3)))+pow(s12,3)*((s14*(123*s23+212*s24)+165*(s14*s14)+12*(8*s23*s24+s23*s23+10*(s24*s24)))*pow(s13,3)+3*(13*s14+4*(s23+5*s24))*pow(s13,4)+4*pow(s13,5)+s14*s14*(-2*s24*(s14*s14)+34*s24*(s23*s23)+s14*(29*s23*s24+41*(s23*s23)-4*(s24*s24))+7*s23*(s24*s24)+25*pow(s23,3)-2*pow(s24,3))+s13*s14*((173*s23+67*s24)*(s14*s14)+92*s24*(s23*s23)+83*s23*(s24*s24)+s14*(230*s23*s24+219*(s23*s23)+27*(s24*s24))+10*pow(s14,3)+29*pow(s23,3)+20*pow(s24,3))+s13*s13*((371*s23+240*s24)*(s14*s14)+s14*(312*s23*s24+113*(s23*s23)+174*(s24*s24))+129*pow(s14,3)+4*(9*s24*(s23*s23)+18*s23*(s24*s24)+pow(s23,3)+10*pow(s24,3))))+pow(s12,5)*(6*(19*s14+12*s23+20*s24)*(s13*s13)+(79*s23+36*s24)*(s14*s14)+5*s14*(14*s23*s24+9*(s23*s23)+5*(s24*s24))+s13*(s14*(161*s23+152*s24)+115*(s14*s14)+12*(8*s23*s24+3*(s23*s23)+5*(s24*s24)))+40*pow(s13,3)+17*pow(s14,3)+4*pow(s23+s24,3)))-128*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s23,-2)*pow(s12+s13+s23,-1)*((104*s23*s24+15*s14*(4*s23+3*s24)+s13*(13*s14+85*s23+40*s24)+9*(s13*s13)+7*(s14*s14)+87*(s23*s23)+24*(s24*s24))*pow(s12,6)+(12*s13+9*s14+32*s23+18*s24)*pow(s12,7)+5*pow(s12,8)+pow(s12,5)*((4*s14+67*s23+26*s24)*(s13*s13)+(37*s23+28*s24)*(s14*s14)+s13*(257*s23*s24+s14*(104*s23+71*s24)+5*(s14*s14)+241*(s23*s23)+48*(s24*s24))+s14*(255*s23*s24+173*(s23*s23)+65*(s24*s24))+2*pow(s13,3)+3*pow(s14,3)+2*(125*s24*(s23*s23)+63*s23*(s24*s24)+65*pow(s23,3)+7*pow(s24,3)))+pow(s12,4)*(264*(s23*s23)*(s24*s24)+s13*s13*(181*s23*s24+s14*(38*s23+26*s24)+175*(s23*s23)+24*(s24*s24))+s14*s14*(124*s23*s24+80*(s23*s23)+25*(s24*s24))+2*(7*s23+2*s24)*pow(s13,3)+3*(5*s23+3*s24)*pow(s14,3)+320*s24*pow(s23,3)+115*pow(s23,4)+68*s23*pow(s24,3)+s13*((30*s23+22*s24)*(s14*s14)+638*s24*(s23*s23)+279*s23*(s24*s24)+s14*(439*s23*s24+317*(s23*s23)+105*(s24*s24))+352*pow(s23,3)+24*pow(s24,3))+s14*(606*s24*(s23*s23)+302*s23*(s24*s24)+280*pow(s23,3)+31*pow(s24,3))+3*pow(s24,4))+pow(s12,3)*(s23*(27*s23+28*s24)*pow(s13,3)+2*(18*s23*s24+15*(s23*s23)+s24*s24)*pow(s14,3)+s14*s14*(216*s24*(s23*s23)+87*s23*(s24*s24)+90*pow(s23,3)+4*pow(s24,3))+s13*s13*(s14*(166*s23*s24+113*(s23*s23)+40*(s24*s24))+3*(138*s24*(s23*s23)+55*s23*(s24*s24)+69*pow(s23,3)+2*pow(s24,3)))+s14*(564*(s23*s23)*(s24*s24)+774*s24*pow(s23,3)+275*pow(s23,4)+111*s23*pow(s24,3)+2*pow(s24,4))+s13*(589*(s23*s23)*(s24*s24)+s14*s14*(105*s23*s24+70*(s23*s23)+19*(s24*s24))+786*s24*pow(s23,3)+278*pow(s23,4)+127*s23*pow(s24,3)+s14*(1028*s24*(s23*s23)+496*s23*(s24*s24)+488*pow(s23,3)+49*pow(s24,3))+4*pow(s24,4))+2*s23*(138*(s23*s23)*(s24*s24)+115*s24*pow(s23,3)+30*pow(s23,4)+60*s23*pow(s24,3)+7*pow(s24,4)))+s23*(s14*(s23*s23)*(s14*s14*(9*s23*s24+3*(s23*s23)+2*(s24*s24))+4*s23*(2*s23+5*s24)*((s23+s24)*(s23+s24))+2*s14*(6*s24*(s23*s23)+6*s23*(s24*s24)+pow(s23,3)+pow(s24,3)))+pow(s13,3)*(13*(s23*s23)*(s24*s24)+9*s24*pow(s23,3)-4*pow(s23,4)+2*s23*pow(s24,3)-2*pow(s24,4))+s23*(s13*s13)*(63*(s23*s23)*(s24*s24)+23*s24*pow(s23,3)-6*pow(s23,4)+39*s23*pow(s24,3)+s14*(101*s24*(s23*s23)+96*s23*(s24*s24)+23*pow(s23,3)+30*pow(s24,3))+5*pow(s24,4))+s13*s23*(-2*s23*(-9*s23*s24+s23*s23-4*(s24*s24))*((s23+s24)*(s23+s24))+s14*s14*(39*s24*(s23*s23)+19*s23*(s24*s24)+10*pow(s23,3)+2*pow(s24,3))+s14*(171*(s23*s23)*(s24*s24)+137*s24*pow(s23,3)+31*pow(s23,4)+67*s23*pow(s24,3)+2*pow(s24,4))))+s12*s12*(4*pow(s13,3)*(12*s24*(s23*s23)+3*s23*(s24*s24)+4*pow(s23,3)-pow(s24,3))+s13*s13*(322*(s23*s23)*(s24*s24)+412*s24*pow(s23,3)+106*pow(s23,4)+55*s23*pow(s24,3)+s14*(355*s24*(s23*s23)+176*s23*(s24*s24)+151*pow(s23,3)+18*pow(s24,3))-pow(s24,4))+s23*(s23*(54*s23*s24+17*(s23*s23)+19*(s24*s24))*((s23+s24)*(s23+s24))+6*(9*s23*s24+5*(s23*s23)+s24*s24)*pow(s14,3)+s14*s14*(184*s24*(s23*s23)+111*s23*(s24*s24)+55*pow(s23,3)+10*pow(s24,3))+s14*(530*(s23*s23)*(s24*s24)+561*s24*pow(s23,3)+164*pow(s23,4)+149*s23*pow(s24,3)+4*pow(s24,4)))+s13*(s14*s14*(183*s24*(s23*s23)+57*s23*(s24*s24)+80*pow(s23,3)+2*pow(s24,3))+s14*(848*(s23*s23)*(s24*s24)+1160*s24*pow(s23,3)+407*pow(s23,4)+165*s23*pow(s24,3)+2*pow(s24,4))+s23*(575*(s23*s23)*(s24*s24)+500*s24*pow(s23,3)+109*pow(s23,4)+216*s23*pow(s24,3)+20*pow(s24,4))))+s12*(pow(s13,3)*(23*(s23*s23)*(s24*s24)+33*s24*pow(s23,3)-3*pow(s23,4)-4*s23*pow(s24,3)-2*pow(s24,4))+s23*(s13*s13)*(s14*(316*s24*(s23*s23)+232*s23*(s24*s24)+95*pow(s23,3)+48*pow(s24,3))+2*(122*(s23*s23)*(s24*s24)+88*s24*pow(s23,3)+5*pow(s23,4)+44*s23*pow(s24,3)+2*pow(s24,4)))+s13*s23*(s14*s14*(139*s24*(s23*s23)+57*s23*(s24*s24)+45*pow(s23,3)+4*pow(s24,3))+s14*(628*(s23*s23)*(s24*s24)+637*s24*pow(s23,3)+176*pow(s23,4)+183*s23*pow(s24,3)+4*pow(s24,4))+s23*(259*(s23*s23)*(s24*s24)+149*s24*pow(s23,3)+13*pow(s23,4)+147*s23*pow(s24,3)+24*pow(s24,4)))+s23*s23*(3*(12*s23*s24+5*(s23*s23)+2*(s24*s24))*pow(s14,3)+s14*s14*(76*s24*(s23*s23)+61*s23*(s24*s24)+17*pow(s23,3)+8*pow(s24,3))+s14*(251*(s23*s23)*(s24*s24)+219*s24*pow(s23,3)+55*pow(s23,4)+89*s23*pow(s24,3)+2*pow(s24,4))+2*s23*(s23+4*s24)*pow(s23+s24,3))))*pow(s12+s23+s24,-3)+256*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*(s13*s23*(s14*(12*s23+13*s24)+s24*(33*s23+26*s24))+s24*(6*s23+5*s24)*(s13*s13)+s12*s12*(98*s23*s24+6*s13*(2*s14+5*s23+6*s24)+s14*(39*s23+22*s24)+4*(s13*s13)+39*(s23*s23)+24*(s24*s24))+s23*(2*s24*(15*s23*s24+14*(s23*s23)+s24*s24)+s14*(22*s23*s24+13*(s23*s23)+2*(s24*s24)))+(15*s13+13*s14+39*s23+35*s24)*pow(s12,3)+13*pow(s12,4)+s12*((4*s23+9*s24)*(s13*s13)+91*s24*(s23*s23)+54*s23*(s24*s24)+s14*(44*s23*s24+39*(s23*s23)+2*(s24*s24))+s13*(s14*(24*s23+13*s24)+3*(23*s23*s24+5*(s23*s23)+7*(s24*s24)))+13*pow(s23,3)+2*pow(s24,3)))*pow(s12+s23+s24,-2)-256*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*((s13*(4*s23+7*s24)+2*(s14*(3*s23+s24)+3*s23*(s23+3*s24)))*(s12*s12)+s14*s23*(2*s23*s24-s24*(s13+2*s24)+2*(s23*s23))+s24*(4*s13*s23*(2*s23+3*s24)+7*s24*(s13*s13)+2*s23*(4*s23*s24+5*(s23*s23)-s24*s24))+2*(s13+s14+3*s23+2*s24)*pow(s12,3)+2*pow(s12,4)+s12*(5*s24*(s13*s13)+s13*(15*s23*s24+s24*(-s14+5*s24)+2*(s23*s23))+2*(12*s24*(s23*s23)+s14*(2*s23*s24+3*(s23*s23)-s24*s24)+4*s23*(s24*s24)+pow(s23,3)-pow(s24,3))))*pow(s12+s23+s24,-1)-256*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*(s13*s13*(13*s23*s24+6*(s23*s23)+7*(s24*s24))+s12*s12*(28*s23*s24+6*s14*(s23+s24)+s13*(-s14+8*(s23+s24))+s13*s13+6*(s23*s23)+8*(s24*s24))+s13*s23*(22*s23*s24-s14*(s23+s24)+6*(s23*s23)+14*(s24*s24))+2*s23*(s14*(3*s23*s24+s23*s23+s24*s24)+s24*(7*s23*s24+6*(s23*s23)+s24*s24))+(s13+2*s14+6*s23+8*s24)*pow(s12,3)+2*pow(s12,4)+s12*((7*s23+8*s24)*(s13*s13)+s13*(30*s23*s24-s14*(2*s23+s24)+13*(s23*s23)+7*(s24*s24))+2*(16*s24*(s23*s23)+11*s23*(s24*s24)+s14*(6*s23*s24+3*(s23*s23)+s24*s24)+pow(s23,3)+pow(s24,3))))*pow(s12+s23+s24,-1)-128*pow(s13,-1)*pow(s12+s13,-2)*pow(s12+s13+s14,-3)*pow(s23,-1)*pow(s12+s13+s23,-1)*((13*s23*s24+5*s14*(8*s23+9*s24)+s13*(104*s14+85*s23+60*s24)+87*(s13*s13)+24*(s14*s14)+9*(s23*s23)+7*(s24*s24))*pow(s12,6)+(32*s13+18*s14+12*s23+9*s24)*pow(s12,7)+5*pow(s12,8)+pow(s12,5)*((250*s14+241*s23+173*s24)*(s13*s13)+(48*s23+65*s24)*(s14*s14)+4*s24*(s23*s23)+5*s23*(s24*s24)+s14*(71*s23*s24+26*(s23*s23)+28*(s24*s24))+s13*(104*s23*s24+s14*(257*s23+255*s24)+126*(s14*s14)+67*(s23*s23)+37*(s24*s24))+130*pow(s13,3)+14*pow(s14,3)+2*pow(s23,3)+3*pow(s24,3))+s13*((31*s23*s24+2*s14*(7*s23+18*s24)-6*(s23*s23)+2*(s24*s24))*pow(s13,5)-2*(s23-4*s24)*pow(s13,6)+s13*s23*(s14*(5*s23+2*s24)+2*(15*s23*s24+s23*s23+s24*s24))*pow(s14,3)-2*pow(s14,4)*pow(s23,3)+s13*s13*(s14*s14)*(8*s23*(s14*s14)+96*s24*(s23*s23)+19*s23*(s24*s24)+s14*(67*s23*s24+39*(s23*s23)+2*(s24*s24))+13*pow(s23,3)+2*pow(s24,3))+pow(s13,4)*(6*(7*s23+8*s24)*(s14*s14)+23*s24*(s23*s23)+10*s23*(s24*s24)+s14*(137*s23*s24+23*(s23*s23)+12*(s24*s24))-4*pow(s23,3)+3*pow(s24,3))+s14*pow(s13,3)*((34*s23+20*s24)*(s14*s14)+101*s24*(s23*s23)+39*s23*(s24*s24)+3*s14*(57*s23*s24+21*(s23*s23)+4*(s24*s24))+9*pow(s23,3)+9*pow(s24,3)))+pow(s12,4)*(s13*s13*(317*s23*s24+s14*(638*s23+606*s24)+264*(s14*s14)+175*(s23*s23)+80*(s24*s24))+8*(40*s14+44*s23+35*s24)*pow(s13,3)+115*pow(s13,4)+s14*((24*s23+31*s24)*(s14*s14)+26*s24*(s23*s23)+22*s23*(s24*s24)+s14*(105*s23*s24+24*(s23*s23)+25*(s24*s24))+3*pow(s14,3)+4*pow(s23,3)+9*pow(s24,3))+s13*((279*s23+302*s24)*(s14*s14)+38*s24*(s23*s23)+30*s23*(s24*s24)+s14*(439*s23*s24+181*(s23*s23)+124*(s24*s24))+68*pow(s14,3)+14*pow(s23,3)+15*pow(s24,3)))+pow(s12,3)*(s14*s14*(2*(2*s23+s24)*(s14*s14)+s24*(19*s23*s24+40*(s23*s23)+2*(s24*s24))+s14*(49*s23*s24+6*(s23*s23)+4*(s24*s24)))+(488*s23*s24+s14*(786*s23+774*s24)+276*(s14*s14)+207*(s23*s23)+90*(s24*s24))*pow(s13,3)+(230*s14+278*s23+275*s24)*pow(s13,4)+60*pow(s13,5)+s13*s13*((589*s23+564*s24)*(s14*s14)+113*s24*(s23*s23)+70*s23*(s24*s24)+2*s14*(514*s23*s24+207*(s23*s23)+108*(s24*s24))+120*pow(s14,3)+27*pow(s23,3)+30*pow(s24,3))+s13*s14*((127*s23+111*s24)*(s14*s14)+166*s24*(s23*s23)+105*s23*(s24*s24)+s14*(496*s23*s24+165*(s23*s23)+87*(s24*s24))+14*pow(s14,3)+28*pow(s23,3)+36*pow(s24,3)))+s12*((176*s23*s24+s14*(149*s23+219*s24)+30*(s14*s14)+10*(s23*s23)+17*(s24*s24))*pow(s13,5)+(14*s14+13*s23+55*s24)*pow(s13,6)+2*pow(s13,7)+4*s13*s23*(12*s23*s24+s14*(s23+s24)-s23*s23+s24*s24)*pow(s14,3)-2*pow(s14,4)*pow(s23,3)+s13*s13*(s14*s14)*(2*(12*s23+s24)*(s14*s14)+232*s24*(s23*s23)+57*s23*(s24*s24)+s14*(183*s23*s24+88*(s23*s23)+8*(s24*s24))+23*pow(s23,3)+6*pow(s24,3))+pow(s13,4)*((259*s23+251*s24)*(s14*s14)+95*s24*(s23*s23)+45*s23*(s24*s24)+s14*(637*s23*s24+176*(s23*s23)+76*(s24*s24))+26*pow(s14,3)-3*pow(s23,3)+15*pow(s24,3))+s14*pow(s13,3)*((147*s23+89*s24)*(s14*s14)+316*s24*(s23*s23)+139*s23*(s24*s24)+s14*(628*s23*s24+244*(s23*s23)+61*(s24*s24))+8*pow(s14,3)+33*pow(s23,3)+36*pow(s24,3)))+s12*s12*((407*s23*s24+s14*(500*s23+561*s24)+144*(s14*s14)+106*(s23*s23)+55*(s24*s24))*pow(s13,4)+(88*s14+109*s23+164*s24)*pow(s13,5)+17*pow(s13,6)+s23*(-(s14*(s23-2*s24))+2*(9*s23*s24-2*(s23*s23)+s24*s24))*pow(s14,3)+s13*(s14*s14)*(4*(5*s23+s24)*(s14*s14)+176*s24*(s23*s23)+57*s23*(s24*s24)+5*s14*(33*s23*s24+11*(s23*s23)+2*(s24*s24))+12*pow(s23,3)+6*pow(s24,3))+pow(s13,3)*((575*s23+530*s24)*(s14*s14)+151*s24*(s23*s23)+80*s23*(s24*s24)+4*s14*(290*s23*s24+103*(s23*s23)+46*(s24*s24))+92*pow(s14,3)+16*pow(s23,3)+30*pow(s24,3))+s14*(s13*s13)*((216*s23+149*s24)*(s14*s14)+355*s24*(s23*s23)+183*s23*(s24*s24)+s14*(848*s23*s24+322*(s23*s23)+111*(s24*s24))+19*pow(s14,3)+48*pow(s23,3)+54*pow(s24,3))))*pow(s12+s23+s24,-1)+32*pow(s13,-1)*(-24*s12-16*s13+16*(s12+s13)-8*(s13+s23)+16*(s23+s24)+8*(-(s13*(s13+s23))+s12*(s13+2*s23))*pow(s12+s13,-1)+8*(3*s14*s23+s12*(12*s13+9*s14-5*s23-7*s24)+s13*(2*s14+2*s23+s24)+5*(s12*s12)+2*(s13*s13))*pow(s12+s13,-1)+8*(s12+s23)*(s12+s13+s23)*(2*s12+3*s13+2*s14+3*s23+2*s24)*pow(s13+s23,-2)+((16*(s12+s13)*(s13+s23)*(3*s12+3*s13-s23-2*s24)-32*s12*s23*(s12+s23+2*s24))*pow(s13+s23,-2))/2.-8*(2*s12*(7*s13+3*s14-3*s23-8*s24)+3*(s12*s12)+2*(s13*(s14+2*s23-3*s24)+s23*(s23-2*s24)+s13*s13))*pow(s13+s23,-1)-8*((s12+s13)*(s12+s13))*pow(s13+s23,-1)+8*(-(s12*(s13-4*s23))-3*s13*s23+4*(s12*s12))*(s14*s23+s12*(2*s13+s14+s23+s24)+s13*(2*s14+s23+s24)+s12*s12+s13*s13)*pow(s13,-1)*pow(s12+s13,-1)*pow(s13+s23,-1)-24*(s12+s13)*(s13+s23)*pow(s12+s13+s23,-1)+(-8*(s12+s13+s14)*(s13-s23)-8*(s12+s13)*(8*s12+3*s13-5*s23-4*s24))*pow(s12+s13+s23,-1)+(8*(s12+2*s13-s23)*(s12+s13+s14+s23+s24)-8*(s13+s23)*(-5*s12+3*s23+2*s24))*pow(s12+s13+s23,-1)+24*((s12+s13)*(s12+s13))*pow(s12+s13+s23,-1)+8*(14*s14*s23+12*s14*s24-s23*s24+s13*(19*s14+17*s23+2*s24)+s12*(35*s13+26*s14-6*(s23+s24))+21*(s12*s12)+18*(s13*s13)+12*(s14*s14)+5*(s23*s23))*pow(s12+s13+s23,-1)+8*((s13+s23)*(s13+s23))*pow(s12+s13+s23,-1)+8*(-2*s12*s13*(s13*(s14*(-s23+s24)+2*(s14*s14)-s24*s24)+s14*(2*s23*s24+2*s14*(s23+s24)+s14*s14-s23*s23+s24*s24))-s12*s12*((s14-4*s24)*(s13*s13)+2*s13*(s14*s23-2*s24*(s23+s24)+2*(s14*s14))+s14*(4*s23*s24+2*s14*(2*s23+s24)+s14*s14+3*(s23*s23)+s24*s24))-s14*(s13*s13)*((s14+s24)*(s14+s24))+2*(2*s23*s24+s24*(s14+s24)+s13*(s14+2*s23+4*s24)+s13*s13+s23*s23)*pow(s12,3)+(4*s13+3*s14+4*(s23+s24))*pow(s12,4)+2*pow(s12,5))*pow(s12+s13,-1)*pow(s14,-2)*pow(s12+s13+s23,-1)-8*(s13*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(s12*(12*s13+6*s14-5*s23-3*s24)+s13*(9*s14+2*s23+s24)+8*(s12*s12)+8*(s13*s13)+6*(s14*s14))*pow(s12+s13,-1)*pow(s14,-1)*pow(s12+s13+s23,-1)-8*(s13*s14+(s12+s14)*s23)*(-(s13*s14*s23*(s14+3*s24))+s12*(s14*s23*(-3*s14+2*s23-3*s24)+3*(s14+2*s24)*(s13*s13)+s13*(-3*(s23-2*s24)*s24+s14*(-4*s23+9*s24)+3*(s14*s14)))+s14*s14*(s23*s23)+s13*s13*(3*s14*s24+s14*s14+3*(s24*s24))+s12*s12*(-6*s14*(s23-s24)-3*s23*s24+3*s13*(3*s14-s23+4*s24)+3*(s13*s13)+3*(s14*s14)+s23*s23+3*(s24*s24))+(6*s13+6*s14-3*s23+6*s24)*pow(s12,3)+3*pow(s12,4))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-3)+16*(s13*s14+(s12+s14)*s23)*(2*s12+s13-s23-s24)*(-(s14*s23)+s13*(s14+2*s24)+s12*(2*s13+2*s14-s23+2*s24)+2*(s12*s12))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)-8*(s13*s14+(s12+s14)*s23)*(4*s12*(6*s13+5*s14+3*s23+2*s24)+21*(s12*s12)+2*(5*s23*s24+s13*(5*s14+8*s23+s24)+s14*(7*s23+6*s24)+5*(s13*s13)+3*(s14*s14)+5*(s23*s23)+3*(s24*s24)))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1))*pow(s12+s23+s24,-1)+128*pow(s13,-1)*pow(s12+s13,-2)*pow(s14,-3)*pow(s23,-1)*pow(s12+s13+s23,-1)*((s14*(21*s23+19*s24)+s13*(26*s14+48*s23+60*s24)+40*(s13*s13)+9*(s14*s14)+12*((s23+s24)*(s23+s24)))*pow(s12,6)+(20*s13+7*s14+12*(s23+s24))*pow(s12,7)+4*pow(s12,8)+pow(s12,4)*(s13*s13*(s14*(69*s23+98*s24)+79*(s14*s14)+12*(12*s23*s24+3*(s23*s23)+10*(s24*s24)))+8*(2*s14+6*s23+15*s24)*pow(s13,3)+20*pow(s13,4)+s14*((4*s23+3*s24)*(s14*s14)+s14*(6*s23*s24+31*(s23*s23)-9*(s24*s24))+(7*s23+5*s24)*((s23+s24)*(s23+s24))-15*pow(s14,3))+s13*((119*s23+10*s24)*(s14*s14)+2*s14*(58*s23*s24+26*(s23*s23)+33*(s24*s24))+4*(2*s23+5*s24)*((s23+s24)*(s23+s24))-7*pow(s14,3)))+s12*(2*(-2*s14*s24+5*(s14*s14)+6*(s24*s24))*pow(s13,5)+s14*pow(s13,3)*(7*(3*s23+11*s24)*(s14*s14)+s14*(86*s23*s24+44*(s23*s23)-39*(s24*s24))+s24*(17*s23*s24+6*(s23*s23)+20*(s24*s24))-4*pow(s14,3))-4*s13*s23*(-12*s23*s24+s14*(5*s23+s24)-7*(s23*s23)+s24*s24)*pow(s14,3)+pow(s13,4)*(s14*s24*(2*s23+9*s24)+(40*s23+34*s24)*(s14*s14)+4*(3*s23+5*s24)*(s24*s24)+8*pow(s14,3))+2*pow(s14,4)*pow(s23,3)+s13*s13*(s14*s14)*(-2*(16*s23+s24)*(s14*s14)+20*s24*(s23*s23)+s14*(151*s23*s24+47*(s23*s23)-8*(s24*s24))-27*s23*(s24*s24)+14*pow(s23,3)-6*pow(s24,3)))+s13*(s13*s13*(s14*s14)*(-4*s23*(s14*s14)+s24*(-9*s23*s24+8*(s23*s23)-2*(s24*s24))+s14*(63*s23*s24+14*(s23*s23)-2*(s24*s24)))+2*s24*(-(s14*s24)+5*(s14*s14)+2*(s24*s24))*pow(s13,4)+s13*s23*(26*s23*s24-s14*(9*s23+2*s24)+16*(s23*s23)-2*(s24*s24))*pow(s14,3)+2*pow(s14,4)*pow(s23,3)+s14*pow(s13,3)*(10*s14*(3*s23-s24)*s24+4*(s23+6*s24)*(s14*s14)+5*pow(s24,3)))+s12*s12*((s14*(2*s23+3*s24)+12*s24*(2*s23+5*s24)+44*(s14*s14))*pow(s13,4)-2*(s14-6*s24)*pow(s13,5)+s23*(22*s23*s24-s14*(11*s23+2*s24)+14*(s23*s23)-2*(s24*s24))*pow(s14,3)+pow(s13,3)*((141*s23+44*s24)*(s14*s14)+4*s24*(12*s23*s24+3*(s23*s23)+10*(s24*s24))+2*s14*(22*s23*s24+5*(s23*s23)+28*(s24*s24))+19*pow(s14,3))+s13*(s14*s14)*(-4*(14*s23+s24)*(s14*s14)+16*s24*(s23*s23)+s14*(113*s23*s24+56*(s23*s23)-10*(s24*s24))-27*s23*(s24*s24)+27*pow(s23,3)-6*pow(s24,3))+s14*(s13*s13)*(17*(2*s23+5*s24)*(s14*s14)+31*s24*(s23*s23)+s14*(88*s23*s24+118*(s23*s23)-57*(s24*s24))+51*s23*(s24*s24)-23*pow(s14,3)+6*pow(s23,3)+30*pow(s24,3)))+pow(s12,3)*((s14*(27*s23+52*s24)+81*(s14*s14)+12*(8*s23*s24+s23*s23+10*(s24*s24)))*pow(s13,3)+(-s14+12*(s23+5*s24))*pow(s13,4)+4*pow(s13,5)+s14*s14*(-2*(14*s23+s24)*(s14*s14)+4*s24*(s23*s23)+s14*(25*s23*s24+23*(s23*s23)-4*(s24*s24))-9*s23*(s24*s24)+11*pow(s23,3)-2*pow(s24,3))+s13*s14*(7*(3*s23+5*s24)*(s14*s14)+44*s24*(s23*s23)+s14*(38*s23*s24+105*(s23*s23)-37*(s24*s24))+51*s23*(s24*s24)-34*pow(s14,3)+13*pow(s23,3)+20*pow(s24,3))+s13*s13*((191*s23+28*s24)*(s14*s14)+s14*(120*s23*s24+41*(s23*s23)+94*(s24*s24))+9*pow(s14,3)+4*(9*s24*(s23*s23)+18*s23*(s24*s24)+pow(s23,3)+10*pow(s24,3))))+pow(s12,5)*(2*(17*s14+36*s23+60*s24)*(s13*s13)+(29*s23+2*s24)*(s14*s14)+s14*(38*s23*s24+21*(s23*s23)+17*(s24*s24))+s13*(s14*(65*s23+72*s24)+41*(s14*s14)+12*(8*s23*s24+3*(s23*s23)+5*(s24*s24)))+40*pow(s13,3)-5*pow(s14,3)+4*pow(s23+s24,3)))*pow(s12+s23+s24,-1)+32*(8*(-2*s12+s13-2*(s23+3*s24))*(s23*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)-8*(s12+s23)*pow(s13,-1)*pow(s12+s23+s24,-1)+8*(s13+s23)*pow(s13,-1)*pow(s12+s23+s24,-1)+8*(s12+2*s24)*pow(s13,-1)*pow(s12+s23+s24,-1)-8*(s12+s13+s23)*s24*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s23+s24,-1)+8*(3*s23*(s14+2*s24)+s12*(7*s13+3*s14+2*s23+3*s24)+s13*(s23+6*s24)+2*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s23+s24,-1)+8*(s12+s23)*(s12+s13+s23)*(s12+s14+s24)*pow(s13,-1)*pow(s13+s23,-2)*pow(s12+s23+s24,-1)-8*(s23*(s13+s23)*(-s13+s23+2*s24)+s23*(s12*s12)+2*s12*(s23*(s23+s24)-s13*s13))*pow(s13,-1)*pow(s13+s23,-2)*pow(s12+s23+s24,-1)-8*(2*s23*(2*s14+3*s24)+s13*(2*s14-s23+5*s24)+s12*(3*s13-2*s14+6*(s23+s24))+s12*s12-s13*s13)*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s23+s24,-1)+8*((s12+s23)*(s12+s23))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s23+s24,-1)-8*(3*s12+s23)*(s13*(s23+s24)+s12*(s13+s14+2*s23+s24)+s23*(s14+s23+2*s24)+s12*s12)*pow(s23,-1)*pow(s12+s23,-1)*pow(s13+s23,-1)*pow(s12+s23+s24,-1)-8*(s12+s23)*(s13+s23)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)-2*(-8*s13*(s12+s23+s24)+4*(s12+s23)*(2*s12-s13+s23+2*s24))*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)+8*((s12+s23)*(s12+s23))*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)+8*(10*s14*s23+12*s14*s24+13*s23*s24-s13*(s14-6*s23+s24)+s12*(-s13+10*s14+17*s23+21*s24)+10*(s12*s12)+s13*s13+7*(s23*s23)+12*(s24*s24))*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)-8*(s12*s13+(s13+s23)*s24)*(3*s14*s23*(-s13+s23)*s24+s12*(3*s23*(2*s14+s24)*(s14+s23+s24)-s13*(3*s14*(s23+s24)+s24*(4*s23+3*s24))+2*s24*(s13*s13))+3*(s14*s14)*(s23*s23)+(-(s13*s23)+s13*s13+s23*s23)*(s24*s24)+s12*s12*(-3*s13*(s14+s23+2*s24)+s13*s13+3*(3*s23*s24+2*s14*(2*s23+s24)+s14*s14+s23*s23+s24*s24))+(-3*s13+6*(s14+s23+s24))*pow(s12,3)+3*pow(s12,4))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-3)*pow(s12+s23+s24,-1)+16*(s12-s13+s23+s24)*(s12*s13+(s13+s23)*s24)*(2*s14*s23+(-s13+s23)*s24+s12*(-s13+2*(s14+s23+s24))+2*(s12*s12))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-2)*pow(s12+s23+s24,-1)-8*(s12*s13+(s13+s23)*s24)*(6*s14*s23+s13*(5*s14+6*s23)+12*s14*s24+5*s23*s24+s12*(6*s13+12*s14+10*s23+11*s24)+10*(s12*s12)+5*(s13*s13)+6*(s14*s14)+5*(s23*s23)+6*(s24*s24))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s14+s24,-1)*pow(s12+s23+s24,-1))+32*pow(s12+s13+s14,-1)*pow(s23,-1)*(24*s12-16*s13+16*s14-16*(s12+s23)+8*(s13+s23)+8*(s23*(s13+s23)-s12*(2*s13+s23))*pow(s12+s23,-1)-8*(s13*(2*s23+s24)-s23*(s14+s23+3*s24)+s12*(-6*s13+s14+7*s24)+4*(s12*s12))*pow(s12+s23,-1)+((-16*(s12+s23)*(s13+s23)*(3*s12-s13+2*s14+s23)+16*s12*s13*(s12+s13+2*s14+s23))*pow(s13+s23,-2))/2.-8*(s12+s13)*(s12+s13+s23)*(s12+s13+s14+s23+s24)*pow(s13+s23,-2)-8*(3*s12*(4*s13+2*s14+s23)+s23*(4*s14+s23+3*s24)+s13*(8*s14-3*s23+6*s24)+2*(s12*s12)-s13*s13)*pow(s13+s23,-1)+8*((s12+s23)*(s12+s23))*pow(s13+s23,-1)+8*(s13*s23+s12*(s13+4*s23)+s12*s12)*(s13*(s23+s24)+s12*(s13+s14+2*s23+s24)+s23*(s14+s23+2*s24)+s12*s12)*pow(s23,-1)*pow(s12+s23,-1)*pow(s13+s23,-1)-24*(s12+s23)*(s13+s23)*pow(s12+s13+s23,-1)+(-8*(8*s12-5*s13+4*s14-s23)*(s12+s23)-8*(s13-s23)*s24)*pow(s12+s13+s23,-1)+(-8*(s13+s23)*(-5*s12+3*s13-2*s14+2*s23)-8*(s12-s13+2*s23)*(s12+s14+s24))*pow(s12+s13+s23,-1)+24*((s12+s23)*(s12+s23))*pow(s12+s13+s23,-1)+8*((s13+s23)*(s13+s23))*pow(s12+s13+s23,-1)+8*(3*s14*s23+12*s14*s24+8*s23*s24+s13*(-10*s14+13*s23+4*s24)+s12*(-11*s13+7*s14+14*s23+16*s24)+16*(s12*s12)+5*(s13*s13)+9*(s23*s23)+12*(s24*s24))*pow(s12+s13+s23,-1)+8*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*(s12*s23*(2*s13*s23*(3*s14+s23+s24)-(s23+4*s24)*(s13*s13)+(5*s23+2*s24)*(s14*s14)+4*s14*(3*s23*s24+2*(s23*s23)+s24*s24)+(3*s23+2*s24)*((s23+s24)*(s23+s24)))+(s23+s24)*(s23*s23)*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(16*s23*s24+8*s14*(2*s23+s24)-2*s13*(s14+s23+2*s24)+3*(s14*s14)+10*(s23*s23)+5*(s24*s24))*pow(s12,3)+(-2*s13+6*s14+9*s23+7*s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(2*s13*(s14*(s23-s24)-s24*(s23+s24))-4*s23*(s13*s13)+(7*s23+s24)*(s14*s14)+14*s24*(s23*s23)+9*s23*(s24*s24)+2*s14*(8*s23*s24+8*(s23*s23)+s24*s24)+6*pow(s23,3)+pow(s24,3)))*pow(s12+s23+s24,-2)-8*(s23*(s13+s14+s23+s24)+s12*(s14+2*s23+s24)+s12*s12)*(-(s14*s23)+s13*(s23-2*s24)+5*s23*s24+s12*(-6*s13+3*s14+5*s23+4*s24)+7*(s12*s12)+6*(s23*s23)+6*(s24*s24))*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)-8*(s12*s23+(s13+s23)*(s23+s24))*(s13*s23*(3*s14*(s23-s24)+s23*s24+2*(s23*s23)-s24*s24)+s13*s13*(-(s23*s24)+s23*s23+s24*s24)+s12*s12*(12*s23*s24+3*s13*(2*s14+4*s23+s24)+3*s14*(5*s23+2*s24)+3*(s13*s13)+3*(s14*s14)+10*(s23*s23)+3*(s24*s24))+s12*(3*(s23-s24)*(s13*s13)+s13*(s14*(9*s23-3*s24)+2*s23*s24+8*(s23*s23)-3*(s24*s24))+s23*(8*s23*s24+3*s14*(4*s23+3*s24)+6*(s14*s14)+5*(s23*s23)+3*(s24*s24)))+s23*s23*(3*s14*(s23+s24)+3*(s14*s14)+(s23+s24)*(s23+s24))+(6*s13+6*s14+9*s23+6*s24)*pow(s12,3)+3*pow(s12,4))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-3)+16*(2*s12-s13+s14)*(s12*s23+(s13+s23)*(s23+s24))*(s13*(s23-s24)+s23*(2*s14+s23+s24)+s12*(2*s13+2*s14+3*s23+2*s24)+2*(s12*s12))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-2)-8*(s12*s23+(s13+s23)*(s23+s24))*(2*s14*s23+12*s14*s24+3*s23*s24+s13*(s14+10*s23+6*s24)+s12*(2*s13+15*s14+7*s23+12*s24)+14*(s12*s12)+7*(s13*s13)+6*(s14*s14)+3*(s23*s23)+6*(s24*s24))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-1))+32*pow(s13,-1)*pow(s12+s23+s24,-1)*(24*s12-16*(s12+s13)-16*s23+8*(s13+s23)+16*s24+8*(s13*(s13+s23)-s12*(s13+2*s23))*pow(s12+s13,-1)-8*(s14*s23+s12*(7*s14-6*s23+s24)-s13*(3*s14-2*s23+s24)+4*(s12*s12)-s13*s13)*pow(s12+s13,-1)-8*(s12+s23)*(s12+s13+s23)*(s12+s13+s14+s23+s24)*pow(s13+s23,-2)-8*(s13*(s13+s23)*(s13-s23+2*s24)+(3*s13+2*s23)*(s12*s12)+2*s12*(s13*(s23+s24)+2*(s13*s13)-s23*s23))*pow(s13+s23,-2)-8*(3*s12*(s13+4*s23+2*s24)+s13*(3*s14-3*s23+4*s24)+s23*(6*s14-s23+8*s24)+2*(s12*s12)+s13*s13)*pow(s13+s23,-1)+8*((s12+s13)*(s12+s13))*pow(s13+s23,-1)+8*(s13*s23+s12*(4*s13+s23)+s12*s12)*(s14*s23+s12*(2*s13+s14+s23+s24)+s13*(2*s14+s23+s24)+s12*s12+s13*s13)*pow(s13,-1)*pow(s12+s13,-1)*pow(s13+s23,-1)-24*(s12+s13)*(s13+s23)*pow(s12+s13+s23,-1)+(-8*(s13+s23)*(-5*s12+2*s13+3*s23-2*s24)-8*(s12+2*s13-s23)*(s12+s14+s24))*pow(s12+s13+s23,-1)+(8*s14*(s13-s23)-8*(s12+s13)*(8*s12-s13-5*s23+4*s24))*pow(s12+s13+s23,-1)+24*((s12+s13)*(s12+s13))*pow(s12+s13+s23,-1)+8*(4*s14*s23+12*s14*s24-10*s23*s24+s13*(8*s14+13*s23+3*s24)+s12*(14*s13+16*s14-11*s23+7*s24)+16*(s12*s12)+9*(s13*s13)+12*(s14*s14)+5*(s23*s23))*pow(s12+s13+s23,-1)+8*((s13+s23)*(s13+s23))*pow(s12+s13+s23,-1)+8*((s13+s14)*(s13*s13)*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(-4*s14*(s23-2*s24)+s24*(-2*s23+3*s24)+2*s13*(8*s14-s23+8*s24)+10*(s13*s13)+5*(s14*s14))*pow(s12,3)+(9*s13+7*s14-2*s23+6*s24)*pow(s12,4)+3*pow(s12,5)+s12*s13*(2*(4*s14+s23+4*s24)*(s13*s13)+2*s14*(2*s14*s24+s14*s14-2*(s23*s23)+s24*s24)+s13*(6*s23*s24+2*s14*(s23+6*s24)+7*(s14*s14)-s23*s23+5*(s24*s24))+3*pow(s13,3))+s12*s12*(s14*(s14+s24)*(s14-2*s23+s24)+2*(7*s14+8*s24)*(s13*s13)+s13*(-2*s14*(s23-8*s24)+2*s23*s24+9*(s14*s14)-4*(s23*s23)+7*(s24*s24))+6*pow(s13,3)))*pow(s12+s13,-1)*pow(s12+s13+s14,-2)*pow(s12+s13+s23,-1)-8*(s12*(2*s13+s14+s24)+s13*(s13+s14+s23+s24)+s12*s12)*(2*s14*(3*s14-s23)+s13*(5*s14+s23-s24)+s12*(5*s13+4*s14-6*s23+3*s24)+7*(s12*s12)+6*(s13*s13))*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-1)-8*(s12*s13+(s13+s14)*(s13+s23))*(-(s13*s14*s23*(s14+s23+3*s24))+s14*s14*(s23*s23)+s13*s13*(3*s23*s24+s14*(s23+3*s24)+s14*s14+s23*s23+3*(s24*s24))+s12*s12*(3*s13*(4*s14+4*s23+5*s24)+10*(s13*s13)+3*(s14*(s23+2*s24)+s14*s14+(s23+s24)*(s23+s24)))+(9*s13+6*(s14+s23+s24))*pow(s12,3)+3*pow(s12,4)+(2*s14+2*s23+3*s24)*pow(s13,3)+s12*(-3*s14*s23*(s14+s23+s24)+4*(2*s14+2*s23+3*s24)*(s13*s13)+s13*(2*s14*s23+9*s14*s24+9*s23*s24+3*(s14*s14)+3*(s23*s23)+6*(s24*s24))+5*pow(s13,3))+pow(s13,4))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-3)+16*(s12*s13+(s13+s14)*(s13+s23))*(2*s12-s23+s24)*(-(s14*s23)+s13*(s14+s23+2*s24)+s12*(3*s13+2*(s14+s23+s24))+2*(s12*s12)+s13*s13)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-2)-8*(s12*s13+(s13+s14)*(s13+s23))*(6*s14*s23+12*s14*s24+s23*s24+s13*(3*s14+10*s23+2*s24)+s12*(7*s13+12*s14+2*s23+15*s24)+14*(s12*s12)+3*(s13*s13)+6*(s14*s14)+7*(s23*s23)+6*(s24*s24))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-1))+32*pow(s13,-1)*pow(s24,-1)*(40*s12+16*s13-16*(s12+s13)+8*(s13+s23)+16*s24+8*(s13*(s13+s23)-s12*(s13+2*s23))*pow(s12+s13,-1)+8*(3*s14*s23+s12*(9*s14+s23-7*s24)+s13*(2*s14+2*s23+s24)-3*(s12*s12))*pow(s12+s13,-1)+(s12+s23)*(s12+s13+s23)*(-8*(s13+s23)+16*(s12+s14+s24))*pow(s13+s23,-2)-((32*s12*s23*(s12+s23+2*s24)+16*(s12+s13)*(s13+s23)*(5*s12+3*s13+s23+2*s24))*pow(s13+s23,-2))/2.+8*(-2*s13*(s14-5*s23-3*s24)+2*s23*(3*s23+2*s24)+2*s12*(6*s13-3*s14+7*s23+8*s24)+13*(s12*s12))*pow(s13+s23,-1)+8*((s12+s13)*(s12+s13))*pow(s13+s23,-1)+8*(-(s12*(s13-4*s23))-3*s13*s23+4*(s12*s12))*(s14*s23+s12*(2*s13+s14+s23+s24)+s13*(2*s14+s23+s24)+s12*s12+s13*s13)*pow(s13,-1)*pow(s12+s13,-1)*pow(s13+s23,-1)+24*(s12+s13)*(s13+s23)*pow(s12+s13+s23,-1)+(8*(s13+s23)*(-7*s12+s23-2*s24)+8*(s12+2*s13-s23)*(s12+s14+s24))*pow(s12+s13+s23,-1)+(-8*s14*(s13-s23)+8*(s12+s13)*(12*s12+3*s13-s23+4*s24))*pow(s12+s13+s23,-1)-24*((s12+s13)*(s12+s13))*pow(s12+s13+s23,-1)-8*(-2*s14*s23+12*s14*s24+s23*s24+s13*(5*s14+13*s23+10*s24)+s12*(24*s13+10*s14-s23+18*s24)+25*(s12*s12)+11*(s13*s13)+12*(s14*s14)+6*(s23*s23))*pow(s12+s13+s23,-1)-8*((s13+s23)*(s13+s23))*pow(s12+s13+s23,-1)-8*((s13+s14)*(s13*s13)*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(-4*s14*(s23-2*s24)+s24*(-2*s23+3*s24)+2*s13*(8*s14-s23+8*s24)+10*(s13*s13)+5*(s14*s14))*pow(s12,3)+(9*s13+7*s14-2*s23+6*s24)*pow(s12,4)+3*pow(s12,5)+s12*s13*(2*(4*s14+s23+4*s24)*(s13*s13)+2*s14*(2*s14*s24+s14*s14-2*(s23*s23)+s24*s24)+s13*(6*s23*s24+2*s14*(s23+6*s24)+7*(s14*s14)-s23*s23+5*(s24*s24))+3*pow(s13,3))+s12*s12*(s14*(s14+s24)*(s14-2*s23+s24)+2*(7*s14+8*s24)*(s13*s13)+s13*(-2*s14*(s23-8*s24)+2*s23*s24+9*(s14*s14)-4*(s23*s23)+7*(s24*s24))+6*pow(s13,3)))*pow(s12+s13,-1)*pow(s12+s13+s14,-2)*pow(s12+s13+s23,-1)+8*(s12*(2*s13+s14+s24)+s13*(s13+s14+s23+s24)+s12*s12)*(s13*(3*s14+s23-s24)+s12*(8*s13+6*s14-2*s23+3*s24)+11*(s12*s12)+5*(s13*s13)+6*(s14*s14))*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-1)+8*(s12*s13+(s13+s14)*(s13+s23))*(-(s13*s14*s23*(s14+s23+3*s24))+s14*s14*(s23*s23)+s13*s13*(3*s23*s24+s14*(s23+3*s24)+s14*s14+s23*s23+3*(s24*s24))+s12*s12*(3*s13*(4*s14+4*s23+5*s24)+10*(s13*s13)+3*(s14*(s23+2*s24)+s14*s14+(s23+s24)*(s23+s24)))+(9*s13+6*(s14+s23+s24))*pow(s12,3)+3*pow(s12,4)+(2*s14+2*s23+3*s24)*pow(s13,3)+s12*(-3*s14*s23*(s14+s23+s24)+4*(2*s14+2*s23+3*s24)*(s13*s13)+s13*(2*s14*s23+9*s14*s24+9*s23*s24+3*(s14*s14)+3*(s23*s23)+6*(s24*s24))+5*pow(s13,3))+pow(s13,4))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-3)-16*(s12*s13+(s13+s14)*(s13+s23))*(3*s12+s13+s24)*(-(s14*s23)+s13*(s14+s23+2*s24)+s12*(3*s13+2*(s14+s23+s24))+2*(s12*s12)+s13*s13)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-2)+8*(s12*s13+(s13+s14)*(s13+s23))*(4*s12*(4*s13+s14+s23+4*s24)+17*(s12*s12)+2*(-(s14*(s23-6*s24))+s23*s24+s13*(s14+6*s23+5*s24)+3*(s13*s13)+3*(s14*s14)+3*(s23*s23)+3*(s24*s24)))*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-1))+32*pow(s12+s23+s24,-1)*(-8-8*s23*pow(s13,-1)+8*(s12+s23)*pow(s13,-1)-8*(s12+2*s13-2*s24)*pow(s13,-1)-8*(s12+s13+s23)*(s12+s23-2*s24)*pow(s13,-1)*pow(s12+s23,-1)-8*(8*s14*s23+6*(s13+2*s23)*s24+s12*(3*s13+8*s14+7*s23+14*s24)+7*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)+8*(s12+s23)*(s12+s13+s23)*(s13+s23-2*(s12+s14+s24))*pow(s13,-1)*pow(s13+s23,-2)+((16*(s12+s23)*(s13+s23)*(s12+s13+s23-2*s24)-32*s12*s13*(s12+s23+2*s24))*pow(s13,-1)*pow(s13+s23,-2))/2.+8*(2*s13*(s14-s23+s24)+4*s23*(2*s14+3*s24)+s12*(-3*s13+2*(s14+5*s23+8*s24))+5*(s12*s12)+s13*s13)*pow(s13,-1)*pow(s13+s23,-1)-8*((s12+s23)*(s12+s23))*pow(s13,-1)*pow(s13+s23,-1)+8*(5*s12+3*s23)*(s13*(s23+s24)+s12*(s13+s14+2*s23+s24)+s23*(s14+s23+2*s24)+s12*s12)*pow(s23,-1)*pow(s12+s23,-1)*pow(s13+s23,-1)-8*(s12+s23)*(s13+s23)*pow(s13,-1)*pow(s12+s13+s23,-1)-2*(4*(s12+s23)*(2*s12+s13+s23-2*s24)+8*s13*s24)*pow(s13,-1)*pow(s12+s13+s23,-1)+8*((s12+s23)*(s12+s23))*pow(s13,-1)*pow(s12+s13+s23,-1)+8*(-(s13*(3*s14-6*s23+s24))+s12*(s13+6*s14+9*s23+10*s24)+5*(s12*s12)+s13*s13+2*(3*s23*s24+3*s14*(s23+2*s24)+2*(s23*s23)+6*(s24*s24)))*pow(s13,-1)*pow(s12+s13+s23,-1)+8*(s12*(3*s13-8*s24)+3*s13*(s23+s24)-2*s24*(4*s23+3*s24))*(s23*(s13+s14+s23+s24)+s12*(s14+2*s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)-8*(s12*s23+(s13+s23)*(s23+s24))*(s13*s23*(3*s14*(s23-s24)+s23*s24+2*(s23*s23)-s24*s24)+s13*s13*(-(s23*s24)+s23*s23+s24*s24)+s12*s12*(12*s23*s24+3*s13*(2*s14+4*s23+s24)+3*s14*(5*s23+2*s24)+3*(s13*s13)+3*(s14*s14)+10*(s23*s23)+3*(s24*s24))+s12*(3*(s23-s24)*(s13*s13)+s13*(s14*(9*s23-3*s24)+2*s23*s24+8*(s23*s23)-3*(s24*s24))+s23*(8*s23*s24+3*s14*(4*s23+3*s24)+6*(s14*s14)+5*(s23*s23)+3*(s24*s24)))+s23*s23*(3*s14*(s23+s24)+3*(s14*s14)+(s23+s24)*(s23+s24))+(6*s13+6*s14+9*s23+6*s24)*pow(s12,3)+3*pow(s12,4))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-3)+16*(s12+s23-s24)*(s12*s23+(s13+s23)*(s23+s24))*(s13*(s23-s24)+s23*(2*s14+s23+s24)+s12*(2*s13+2*s14+3*s23+2*s24)+2*(s12*s12))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-2)-8*(s12*s23+(s13+s23)*(s23+s24))*(s12*(11*s13+4*(3*s14+2*s23+s24))+9*(s12*s12)+2*(-(s23*s24)+s13*(3*s14+5*s23+s24)+3*s14*(s23+2*s24)+3*(s13*s13)+3*(s14*s14)+2*(s23*s23)+3*(s24*s24)))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-1))+32*pow(s12+s13+s14,-1)*(-8-8*s13*pow(s23,-1)+8*(s12+s13)*pow(s23,-1)-8*(s12-2*s14+2*s23)*pow(s23,-1)-8*(s12+s13-2*s14)*(s12+s13+s23)*pow(s12+s13,-1)*pow(s23,-1)-8*(6*s14*s23+4*s13*(3*s14+2*s24)+s12*(7*s13+14*s14+3*s23+8*s24)+7*(s12*s12))*pow(s12+s13,-1)*pow(s23,-1)+((-32*s12*(s12+s13+2*s14)*s23+16*(s12+s13)*(s13+s23)*(s12+s13-2*s14+s23))*pow(s23,-1)*pow(s13+s23,-2))/2.+8*(s12+s13)*(s12+s13+s23)*(s13+s23-2*(s12+s14+s24))*pow(s23,-1)*pow(s13+s23,-2)+8*(5*s12+3*s13)*(s14*s23+s12*(2*s13+s14+s23+s24)+s13*(2*s14+s23+s24)+s12*s12+s13*s13)*pow(s13,-1)*pow(s12+s13,-1)*pow(s13+s23,-1)+8*(s12*(10*s13+16*s14-3*s23+2*s24)+s23*(2*s14+s23+2*s24)+2*s13*(6*s14-s23+4*s24)+5*(s12*s12))*pow(s23,-1)*pow(s13+s23,-1)-8*((s12+s13)*(s12+s13))*pow(s23,-1)*pow(s13+s23,-1)-8*(s12+s13)*(s13+s23)*pow(s23,-1)*pow(s12+s13+s23,-1)-2*(8*s14*s23+4*(s12+s13)*(2*s12+s13-2*s14+s23))*pow(s23,-1)*pow(s12+s13+s23,-1)+8*((s12+s13)*(s12+s13))*pow(s23,-1)*pow(s12+s13+s23,-1)+8*(-(s14*s23)+12*s14*s24-3*s23*s24+6*s13*(s14+s23+s24)+s12*(9*s13+10*s14+s23+6*s24)+5*(s12*s12)+4*(s13*s13)+12*(s14*s14)+s23*s23)*pow(s23,-1)*pow(s12+s13+s23,-1)-8*(s12*(8*s14-3*s23)+s13*(8*s14-3*s23)+3*s14*(2*s14-s23))*(s12*(2*s13+s14+s24)+s13*(s13+s14+s23+s24)+s12*s12)*pow(s12+s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-1)-8*(s12*s13+(s13+s14)*(s13+s23))*(-(s13*s14*s23*(s14+s23+3*s24))+s14*s14*(s23*s23)+s13*s13*(3*s23*s24+s14*(s23+3*s24)+s14*s14+s23*s23+3*(s24*s24))+s12*s12*(3*s13*(4*s14+4*s23+5*s24)+10*(s13*s13)+3*(s14*(s23+2*s24)+s14*s14+(s23+s24)*(s23+s24)))+(9*s13+6*(s14+s23+s24))*pow(s12,3)+3*pow(s12,4)+(2*s14+2*s23+3*s24)*pow(s13,3)+s12*(-3*s14*s23*(s14+s23+s24)+4*(2*s14+2*s23+3*s24)*(s13*s13)+s13*(2*s14*s23+9*s14*s24+9*s23*s24+3*(s14*s14)+3*(s23*s23)+6*(s24*s24))+5*pow(s13,3))+pow(s13,4))*pow(s23,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-3)+16*(s12+s13-s14)*(s12*s13+(s13+s14)*(s13+s23))*(-(s14*s23)+s13*(s14+s23+2*s24)+s12*(3*s13+2*(s14+s23+s24))+2*(s12*s12)+s13*s13)*pow(s23,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-2)-8*(s12*s13+(s13+s14)*(s13+s23))*(s12*(8*s13+4*s14+11*s23+12*s24)+9*(s12*s12)+2*(s13*(-s14+5*s23+3*s24)+s14*(s23+6*s24)+2*(s13*s13)+3*(s14*s14)+3*(s23*s24+s23*s23+s24*s24)))*pow(s23,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s13+s14+s23+s24,-1))+32*(8*(s12+s23)*pow(s13,-1)*pow(s24,-1)-8*(s13+s23)*pow(s13,-1)*pow(s24,-1)+8*(s12+2*(s23+s24))*pow(s13,-1)*pow(s24,-1)-8*(s12+s13+s23)*(s12+s23+s24)*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)+8*(s12*(2*s13+3*s14+10*s23+3*s24)+s13*(8*s23+6*s24)+3*s23*(s14+2*(s23+s24))+4*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)+8*(s12+s23)*(s12+s13+s23)*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s13+s23,-2)*pow(s24,-1)-8*(s23*(s13+s23)*(s13+s23+2*s24)+s23*(s12*s12)+2*s12*(s13*s23+s23*(s23+s24)+s13*s13))*pow(s13,-1)*pow(s13+s23,-2)*pow(s24,-1)-8*(2*s12*(s13-s14+5*s23+3*s24)+2*s23*(2*s14+3*(s23+s24))+s13*(2*s14+5*(2*s23+s24))+3*(s12*s12)+3*(s13*s13))*pow(s13,-1)*pow(s13+s23,-1)*pow(s24,-1)-8*((s12+s23)*(s12+s23))*pow(s13,-1)*pow(s13+s23,-1)*pow(s24,-1)-8*(3*s12+s23)*(s13*(s23+s24)+s12*(s13+s14+2*s23+s24)+s23*(s14+s23+2*s24)+s12*s12)*pow(s23,-1)*pow(s12+s23,-1)*pow(s13+s23,-1)*pow(s24,-1)+8*(s12+s23)*(s13+s23)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)-2*(-8*s13*s24+4*(s12+s23)*(s13+s23+2*s24))*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)-8*((s12+s23)*(s12+s23))*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)-8*(2*s14*s23+12*s14*s24+11*s23*s24+s13*(s14+9*s23+13*s24)+s12*(3*s13+2*s14+9*s23+15*s24)+3*(s12*s12)+2*(s13*s13)+6*(s23*s23)+12*(s24*s24))*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)+8*(4*s12+s13+4*s23+6*s24)*(s23*(s13+s14+s23+s24)+s12*(s14+2*s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)+8*(s12*s23+(s13+s23)*(s23+s24))*(s13*s23*(3*s14*(s23-s24)+s23*s24+2*(s23*s23)-s24*s24)+s13*s13*(-(s23*s24)+s23*s23+s24*s24)+s12*s12*(12*s23*s24+3*s13*(2*s14+4*s23+s24)+3*s14*(5*s23+2*s24)+3*(s13*s13)+3*(s14*s14)+10*(s23*s23)+3*(s24*s24))+s12*(3*(s23-s24)*(s13*s13)+s13*(s14*(9*s23-3*s24)+2*s23*s24+8*(s23*s23)-3*(s24*s24))+s23*(8*s23*s24+3*s14*(4*s23+3*s24)+6*(s14*s14)+5*(s23*s23)+3*(s24*s24)))+s23*s23*(3*s14*(s23+s24)+3*(s14*s14)+(s23+s24)*(s23+s24))+(6*s13+6*s14+9*s23+6*s24)*pow(s12,3)+3*pow(s12,4))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-3)+16*(s13+s24)*(s12*s23+(s13+s23)*(s23+s24))*(s13*(s23-s24)+s23*(2*s14+s23+s24)+s12*(2*s13+2*s14+3*s23+2*s24)+2*(s12*s12))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-2)+8*(s12*s23+(s13+s23)*(s23+s24))*(6*s14*s23+12*s14*s24+7*s23*s24+s12*(13*s13+12*s14+12*s23+13*s24)+s13*(7*s14+12*(s23+s24))+11*(s12*s12)+6*(s13*s13)+6*(s14*s14)+6*(s23*s23)+6*(s24*s24))*pow(s13,-1)*pow(s13+s23,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)))/512.;
}

// Coefficient of master 10 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yygCAm2CF<10>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(-1,{
        qq2yygCAm2CF<10,-1>(s12,s13,s14,s23,s24),
        qq2yygCAm2CF<10,0>(s12,s13,s14,s23,s24),
        qq2yygCAm2CF<10,1>(s12,s13,s14,s23,s24)
    });
}

