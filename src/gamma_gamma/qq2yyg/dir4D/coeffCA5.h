/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 5: bubble(s24)

// Coefficient order epsilon^-1 of master 5
template<>
double qq2yygCA<5,-1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (2*s13*(s12+s13+s14)*(s12+s23+s24)*pow(s23,-1)*pow(s13-s24,-3)-2*(s12+s13+s14)*(s13*s13)*pow(s23,-1)*pow(s13-s24,-3)-2*(s12+s13+s14-s24)*s24*((s12+s23+s24)*(s12+s23+s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13-s24,-3)+(2*s13-s24)*(s12+s23+s24)*pow(s13,-1)*pow(s13-s24,-2)-s24*(s12+s23+2*s24)*pow(s13,-1)*pow(s13-s24,-2)+(s12+s23+s24)*(s12*(s13+s14-4*s24)-2*s13*(s23+3*s24)+s24*(-4*s14+s23+3*s24)+s12*s12)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13-s24,-2)+(s12-s13+2*s23)*pow(s13,-1)*pow(s24,-1)+2*(s12+s23+s24)*pow(s13,-1)*pow(s24,-1)-(2*s12+s23+2*s24)*pow(s13,-1)*pow(s24,-1)-2*pow(s13,-1)*(-(s13*s24*(s24*(3*s23+2*s24)+s14*(4*s23+3*s24)))+(s14*(s23-3*s24)-s24*(3*s23+2*s24))*(s13*s13)+(2*s24*(s23+s24)+s14*(s23+2*s24))*(s24*s24)+s12*s12*(-4*s13*s24+s13*s13+s24*s24)+2*(s14+s23-s24)*pow(s13,3)+s12*(-(s13*s24*(4*s14+4*s23+5*s24))+(s14+s23-5*s24)*(s13*s13)+(s14+s23+3*s24)*(s24*s24)+3*pow(s13,3))+2*pow(s13,4))*pow(s13-s24,-3)*pow(s24,-1)+(s12+s13+s14)*(s12+s13+s23+s24)*pow(s13-s24,-2)*pow(s24,-1)+s13*(s14*s23+2*s14*s24-s23*s24+s12*(-s13-s14+s23+s24)+s13*(2*s23+3*s24)-s12*s12+s24*s24)*pow(s23,-1)*pow(s13-s24,-2)*pow(s24,-1)+pow(s13,-1)*(-(s23*s24*(2*s24*(3*s23+2*s24)+s14*(2*s23+3*s24)))+s23*(2*s14+5*s24)*(s13*s13)+s12*s12*(s13*(s14+2*s23-3*s24)-s24*(2*s14+4*s23+5*s24)+3*(s13*s13))+s13*(s24*(-6*s23*s24+4*(s23*s23)-3*(s24*s24))+s14*(-2*s23*s24+s23*s23-2*(s24*s24)))+(s13-2*s24)*pow(s12,3)+s12*((2*s14+3*s23-s24)*(s13*s13)+s13*(2*s14*(s23-s24)+s23*s24+s23*s23-5*(s24*s24))-s24*(11*s23*s24+s14*(4*s23+3*s24)+2*(s23*s23)+3*(s24*s24))+2*pow(s13,3)))*pow(s12+s13+s23,-1)*pow(s13-s24,-2)*pow(s24,-1)-(s13*s14-s12*(s13+s24)+s24*(s23+s24)+s13*s13)*pow(s13,-1)*pow(s13-s24,-1)*pow(s24,-1)+(s14*s23+2*s14*s24+s23*s24+s12*(2*s13+s14+s23+2*s24)+s13*(3*s14+s23+2*s24)+s12*s12+s13*s13+s24*s24)*pow(s13,-1)*pow(s13-s24,-1)*pow(s24,-1)-(s12-s13+s23)*(s12*s13+s13*(s14+s23)-s23*s24+s13*s13)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s13-s24,-1)*pow(s24,-1)-(s12+3*s13+s23-2*s24)*(s12*s13+s13*(s14+s23)-s23*s24+s13*s13)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s13-s24,-1)*pow(s24,-1)+pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13-s24,-1)*pow(s24,-1)*(2*s14*s23*s24+s13*((s23-s24)*s24+2*s14*(s23+2*s24))+(2*s13-2*s14+s23+2*s24)*(s12*s12)+(s23+2*s24)*(s13*s13)+s12*(s24*(s23+s24)+2*s13*(s14+s23+2*s24)+2*s14*(s23+3*s24)+3*(s13*s13)-s14*s14)+s23*(s14*s14)+2*s24*(s14*s14)+s23*(s24*s24)-pow(s12,3)+pow(s24,3))+pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13-s24,-3)*pow(s24,-1)*(-((s13-s24)*(s14*s23*(2*s14-s23-2*s24)*(s24*s24)+s13*s24*(-2*s23*(s14*s14)+2*s14*(2*s23*s24+s23*s23-s24*s24)+(s23+2*s24)*(s24*s24))-s13*s13*(s14*(s23-2*s24)*s24+s23*(s14*s14)+2*(s23+2*s24)*(s24*s24))+(s14*(-s23+s24)+s24*s24)*pow(s13,3)+s24*pow(s13,4)))+pow(s12,3)*(-5*s24*(s13*s13)+5*s13*(s24*s24)+pow(s13,3)-pow(s24,3))+s12*s12*(s24*(-12*s14+s23+5*s24)*(s13*s13)+s13*(3*s14+6*s23-2*s24)*(s24*s24)+(4*s14-s23-4*s24)*pow(s13,3)+(s14-2*s23+s24)*pow(s24,3))+s12*(s13*(2*s14*s23-2*s23*s24-2*(s14*s14)+3*(s23*s23)-5*(s24*s24))*(s24*s24)+s24*(s13*s13)*(6*s23*s24+2*s14*(s23+s24)-7*(s14*s14)-2*(s23*s23)+4*(s24*s24))+(-8*s14*s24-2*s23*s24+3*(s14*s14))*pow(s13,3)+(2*s14+s23)*pow(s13,4)-pow(s13,5)+(s23*s24+2*(s14*s14)-s23*s23+2*(s24*s24))*pow(s24,3)))+pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-3)*pow(s13-s24,-3)*pow(s24,-1)*(s24*(-7*s13*s24+4*(s13*s13)+3*(s24*s24))*pow(s12,6)+((3*s23-s24)*(s14*s14)-2*s24*(-8*s23*s24+s23*s23+5*(s24*s24))+s14*(-9*s23*s24+4*(s23*s23)+5*(s24*s24)))*pow(s13,6)+(2*s23-3*s24)*(s14-2*s24)*pow(s13,7)-2*s24*pow(s13,8)+s13*(s24*s24)*((4*s23-6*s24)*(s14*s14)-(s23+2*s24)*(s24*s24)+s14*(-5*s23*s24-3*(s23*s23)+11*(s24*s24))+pow(s14,3))*pow(s23,3)+pow(s13,5)*(s14*s14*(-4*s23*s24+3*(s23*s23)-s24*s24)+s24*s24*(-28*s23*s24+9*(s23*s23)+8*(s24*s24))+s23*pow(s14,3)+s14*(-16*s24*(s23*s23)+22*s23*(s24*s24)+2*pow(s23,3)-7*pow(s24,3)))+s14*(-3*s14+s23+2*s24)*pow(s23,4)*pow(s24,3)+pow(s12,5)*(2*(3*s14+7*s23-20*s24)*s24*(s13*s13)+s13*(-5*s14-28*s23+19*s24)*(s24*s24)+24*s24*pow(s13,3)-2*pow(s13,4)+(s14+12*s23-s24)*pow(s24,3))+pow(s12,4)*(s13*(s24*s24)*(-2*s14*(9*s23-5*s24)+59*s23*s24+3*(s14*s14)-45*(s23*s23)+4*(s24*s24))+s24*(s13*s13)*(s14*(17*s23-32*s24)-118*s23*s24+3*(s14*s14)+20*(s23*s23)+34*(s24*s24))+(29*s14+64*s23-78*s24)*s24*pow(s13,3)-(s14+6*(s23-8*s24))*pow(s13,4)-6*pow(s13,5)+(3*s14*s23-5*s23*s24-2*(s14*s14)+19*(s23*s23)-2*(s24*s24))*pow(s24,3))+pow(s13,4)*(s23*s24*(-12*s23+s24)*(s14*s14)+s23*(-s23+s24)*pow(s14,3)-s24*s24*(21*s24*(s23*s23)-24*s23*(s24*s24)+3*pow(s23,3)+2*pow(s24,3))+s14*s24*(34*s24*(s23*s23)-29*s23*(s24*s24)-9*pow(s23,3)+3*pow(s24,3)))+s24*(s13*s13)*(s23*s23)*(s14*s14*(10*s23*s24-3*(s23*s23)-11*(s24*s24))+(5*s23*s24+3*(s23*s23)-8*(s24*s24))*(s24*s24)+(s23-s24)*pow(s14,3)+2*s14*(-(s24*(s23*s23))-15*s23*(s24*s24)+pow(s23,3)+6*pow(s24,3)))+s23*s24*pow(s13,3)*(-2*(s14*s14)*(-10*s23*s24+3*(s23*s23)+s24*s24)+6*s23*pow(s14,3)-2*s24*(-(s24*(s23*s23))-13*s23*(s24*s24)+pow(s23,3)+3*pow(s24,3))+s14*(24*s24*(s23*s23)-34*s23*(s24*s24)+3*pow(s23,3)+12*pow(s24,3)))+pow(s12,3)*(s24*(s14*(63*s23-41*s24)-154*s23*s24+14*(s14*s14)+61*(s23*s23)+8*(s24*s24))*pow(s13,3)+(86*s23*s24+s14*(-4*s23+30*s24)-6*(s23*s23)-58*(s24*s24))*pow(s13,4)+(3*s14-12*s23+38*s24)*pow(s13,5)-6*pow(s13,6)+s13*(s24*s24)*((13*s23-2*s24)*(s14*s14)+66*s24*(s23*s23)+7*s23*(s24*s24)+s14*(18*s23*s24-27*(s23*s23)+5*(s24*s24))+pow(s14,3)-37*pow(s23,3)-8*pow(s24,3))+s23*(-8*s23*s24+s14*(4*s23+s24)-9*(s14*s14)+15*(s23*s23)-6*(s24*s24))*pow(s24,3)+s24*(s13*s13)*((6*s23-2*s24)*(s14*s14)-127*s24*(s23*s23)+75*s23*(s24*s24)+s14*(-74*s23*s24+17*(s23*s23)+7*(s24*s24))+pow(s14,3)+16*pow(s23,3)+26*pow(s24,3)))+s12*(2*(s14*(6*s23-8*s24)+s24*(-4*s23+9*s24)+3*(s14*s14))*pow(s13,6)+(5*s14-6*s24)*pow(s13,7)+pow(s13,5)*((9*s23-10*s24)*(s14*s14)+s14*(-31*s23*s24+5*(s23*s23)+18*(s24*s24))-s24*(-30*s23*s24+s23*s23+35*(s24*s24))+pow(s14,3))+(-(s23*s24)+s14*(3*s23+5*s24)-11*(s14*s14)+s23*s23-2*(s24*s24))*pow(s23,3)*pow(s24,3)-s13*(s23*s23)*(s24*s24)*((-15*s23+14*s24)*(s14*s14)-5*s24*(s23*s23)+2*s14*(6*s23*s24+6*(s23*s23)-13*(s24*s24))+2*s23*(s24*s24)-3*pow(s14,3)+3*pow(s23,3)+14*pow(s24,3))+pow(s13,4)*(2*s24*(-5*s23+2*s24)*(s14*s14)+(-2*s23+s24)*pow(s14,3)-s14*(15*s24*(s23*s23)-60*s23*(s24*s24)+2*pow(s23,3)+24*pow(s24,3))+s24*(-5*s24*(s23*s23)-63*s23*(s24*s24)+4*pow(s23,3)+31*pow(s24,3)))+s23*s24*(s13*s13)*(s14*s14*(18*s23*s24-6*(s23*s23)-13*(s24*s24))+20*(s23*s23)*(s24*s24)+(3*s23-2*s24)*pow(s14,3)-11*s24*pow(s23,3)+2*pow(s23,4)+36*s23*pow(s24,3)+s14*(-14*s24*(s23*s23)-69*s23*(s24*s24)+5*pow(s23,3)+31*pow(s24,3))-18*pow(s24,4))+s24*pow(s13,3)*(2*(s14*s14)*(10*s23*s24+s23*s23-s24*s24)-10*(s23*s23)*(s24*s24)+12*s23*pow(s14,3)-22*s24*pow(s23,3)+5*pow(s23,4)+65*s23*pow(s24,3)+s14*(47*s24*(s23*s23)-76*s23*(s24*s24)+11*pow(s23,3)+11*pow(s24,3))-8*pow(s24,4)))-s12*s12*((-6*s14*(s23-s24)-32*s23*s24-6*(s14*s14)+6*(s23*s23)+s24*s24)*pow(s13,5)+(-9*s14+6*s23-6*s24)*pow(s13,6)+2*pow(s13,7)+s24*pow(s13,3)*(-22*s23*(s14*s14)+96*s24*(s23*s23)+7*s23*(s24*s24)+s14*(18*s23*s24-42*(s23*s23)+19*(s24*s24))-6*pow(s14,3)-26*pow(s23,3)-44*pow(s24,3))-s13*s23*(s24*s24)*((21*s23-10*s24)*(s14*s14)+31*s24*(s23*s23)+2*s23*(s24*s24)+s14*(s23*s24-23*(s23*s23)+20*(s24*s24))+3*pow(s14,3)-16*pow(s23,3)-18*pow(s24,3))+s23*s23*(5*s23*s24-4*s14*(s23+s24)+15*(s14*s14)-6*(s23*s23)+6*(s24*s24))*pow(s24,3)+pow(s13,4)*(-2*s24*(s14*s14)-42*s24*(s23*s23)+50*s23*(s24*s24)+s14*(-24*s23*s24+5*(s23*s23)+s24*s24)+pow(s14,3)+2*pow(s23,3)+35*pow(s24,3))+s24*(s13*s13)*(2*s24*(-3*s23+s24)*(s14*s14)-58*(s23*s23)*(s24*s24)+(-3*s23+s24)*pow(s14,3)+60*s24*pow(s23,3)-8*pow(s23,4)+s14*(54*s24*(s23*s23)+32*s23*(s24*s24)-9*pow(s23,3)-13*pow(s24,3))-53*s23*pow(s24,3)+12*pow(s24,4))))-4*(s12+s13+s14)*(s12+s13+s14+s23+s24)*pow(s12+s13+s14+s24,-3)-2*(s12+s13+s14-s24)*s24*((s12+s13+s14+s23+s24)*(s12+s13+s14+s23+s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s24,-3)+(s12+s14)*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s12+s13+s14+s24,-2)+(-s12+s13-s14+s24)*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s12+s13+s14+s24,-2)+(s12+s13+s14+s23+s24)*(3*s14*s24-s23*s24+s12*(2*s14+5*s24)+s13*(2*s14+2*s23+5*s24)+2*(s14*s14)-3*(s24*s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s24,-2)-2*s13*(s12+s13+s14)*pow(s24,-1)*pow(s12+s13+s14+s24,-2)+(s12+s13+s14)*(2*s13-s24)*pow(s24,-1)*pow(s12+s13+s14+s24,-2)-2*(s12+s13+s14)*(s12+s13-s14+s23-s24)*pow(s24,-1)*pow(s12+s13+s14+s24,-2)+2*pow(s13,-1)*pow(s23,-2)*pow(s24,-1)*(-(s13*(s14+s24)*(-3*s14+2*s23+s24)*(s23*s23))-(-s14+s23+s24)*(s23*s23)*((s14+s24)*(s14+s24))+(2*s23*s24+s14*(4*s23+6*s24)+s13*(6*s14+4*s23+8*s24)+3*(s13*s13)+3*(s14*s14)-s23*s23+3*(s24*s24))*pow(s12,3)+(3*s13+3*s14+s23+3*s24)*pow(s12,4)+pow(s12,5)+(s23+s24)*(s23+s24)*pow(s13,3)+s12*(s23*(s14+s24)*(s14*(s23+2*s24)-s23*(2*s23+3*s24)+2*(s14*s14))+s13*s13*(6*s23*s24+s14*(6*s23+4*s24)+s23*s23+5*(s24*s24))+2*s13*((3*s23+s24)*(s14*s14)+s14*(4*s23*s24+s23*s23+2*(s24*s24))-(s23-s24)*((s23+s24)*(s23+s24)))+2*(s23+s24)*pow(s13,3))+s13*s13*(s24*(s23*s23)+s23*(s24*s24)+s14*(2*s23*s24+3*(s23*s23)+s24*s24)-pow(s23,3)+pow(s24,3))+s12*s12*((3*s14+5*s23+7*s24)*(s13*s13)+(5*s23+3*s24)*(s14*s14)-3*s24*(s23*s23)+s23*(s24*s24)+s14*(6*s23*s24-s23*s23+3*(s24*s24))+s13*(6*s23*s24+10*s14*(s23+s24)+3*(s14*s14)-s23*s23+7*(s24*s24))+pow(s13,3)+pow(s14,3)-pow(s23,3)+pow(s24,3)))*pow(s12+s13+s14+s24,-2)-(-s12-s14+s24)*pow(s23,-1)*pow(s13-s24,-2)*pow(s24,-1)*(s13*s13*((4*s23*s24+2*(s23*s23)-s24*s24)*(s24*s24)+2*s14*s24*(4*s23*s24+s23*s23+s24*s24)+s14*s14*(2*s23*s24+s23*s23+3*(s24*s24)))-2*s24*(s14+s24)*(s24*s24*(4*s23*s24+3*(s23*s23)+s24*s24)+s14*s24*(6*s23*s24+3*(s23*s23)+2*(s24*s24))+s14*s14*((s23+s24)*(s23+s24)))+(s13*(3*s14+2*s23)-2*s24*(3*s14+2*s23+5*s24)+3*(s13*s13))*pow(s12,4)+(s13-2*s24)*pow(s12,5)+(3*s14+2*(s23+s24))*(s24*s24)*pow(s13,3)+pow(s12,3)*((6*s14+4*s23+8*s24)*(s13*s13)+s13*(2*s23*s24+2*s14*(3*s23+s24)+3*(s14*s14)+s23*s23-10*(s24*s24))-2*s24*(9*s23*s24+6*s14*(s23+2*s24)+3*(s14*s14)+s23*s23+10*(s24*s24))+3*pow(s13,3))+s24*s24*pow(s13,4)+s12*s12*(s13*s13*(10*s23*s24+2*s14*(4*s23+7*s24)+3*(s14*s14)+s23*s23+6*(s24*s24))+(3*s14+2*s23+8*s24)*pow(s13,3)+pow(s13,4)+s13*((6*s23+4*s24)*(s14*s14)+2*s24*(-3*s23*s24+s23*s23-10*(s24*s24))+3*s14*(2*s23*s24+s23*s23-4*(s24*s24))+pow(s14,3))-2*s24*((6*s23+9*s24)*(s14*s14)+2*s24*(8*s23*s24+2*(s23*s23)+5*(s24*s24))+s14*(20*s23*s24+3*(s23*s23)+18*(s24*s24))+pow(s14,3)))+s12*(2*(s13*s13)*(s23*s24*(s23+5*s24)+(2*s23+3*s24)*(s14*s14)+s14*(6*s23*s24+s23*s23+5*(s24*s24)))+(2*s14*(s23+3*s24)+s24*(4*s23+7*s24))*pow(s13,3)+2*s24*pow(s13,4)+s13*(s14*s14*(6*s23*s24+3*(s23*s23)-s24*s24)+(-12*s23*s24+2*(s23*s23)-15*(s24*s24))*(s24*s24)-2*s14*s24*(s23*s24-2*(s23*s23)+9*(s24*s24))+2*(s23+s24)*pow(s14,3))-2*s24*(4*s14*s24*(6*s23*s24+2*(s23*s23)+3*(s24*s24))+s24*s24*(13*s23*s24+6*(s23*s23)+5*(s24*s24))+s14*s14*(13*s23*s24+3*(s23*s23)+9*(s24*s24))+2*(s23+s24)*pow(s14,3)))+s13*(2*s24*(s14*s14)*(2*s23*s24+s23*s23-s24*s24)+s14*(-4*s23*s24+2*(s23*s23)-7*(s24*s24))*(s24*s24)+(s23+s24)*(s23+s24)*pow(s14,3)-2*(3*s23+2*s24)*pow(s24,4)))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s24,-2)+(2*s14*s23-s23*s24+s13*(-s14+s24)+s12*(s13+4*s14+2*s23+s24)+4*(s12*s12)-3*(s13*s13)-s24*s24)*pow(s13,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)+(s14*s23+s14*s24+s23*s24+s13*(2*s14+4*s23+s24)+s12*(5*s13+3*s14+s23+2*s24)+s12*s12+4*(s13*s13)+2*(s14*s14)+s24*s24)*pow(s13,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)-(2*s13+s23)*(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)-(s13*s24*(2*s14+2*s23+3*s24)+(s14+s24)*(-(s24*(s23+s24))+s14*(s23+2*s24))+s12*(2*s14*(s23+s24)+s24*(2*s23+3*s24))+s23*(s12*s12)-s23*(s13*s13))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)-(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*((2*s14+s23)*(s14+s24)+s13*(3*s14+2*s24)+s12*(5*s13+4*s14+s23+4*s24)+2*(s12*s12)+s13*s13)*pow(s23,-1)*pow(s13-s24,-1)*pow(s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1)+(s12+s14-s24)*(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*pow(s24,-1)*pow(-s13+s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1)+(s13+s24)*(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*pow(s24,-1)*pow(-s13+s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1)+pow(s23,-1)*(-4*s13*s24*(s12+s23+s24)*pow(s13-s24,-3)+4*(s12+s13+s14)*(s13*s13)*pow(s13-s24,-3)-s13*(3*s12+4*s13+4*s14+5*s23+9*s24)*pow(s13-s24,-2)+s24*(s12+s23+s24)*(4*s12+5*s13+5*s14+3*s23+3*s24)*pow(s12+s13+s14,-1)*pow(s13-s24,-2)+(s14*s23-s12*(s13+s14-3*s23-6*s24)+5*s14*s24+7*s23*s24+s13*(s23+5*s24)+s12*s12+2*(s23*s23)+5*(s24*s24))*pow(s12+s13+s14,-1)*pow(s13-s24,-1)-2*(s23+s24)*(s12+s23+s24)*pow(s12+s13+s14,-1)*pow(s24,-1)+2*s12*(s12+s13+s14+s23+s24)*pow(s12+s13+s14,-1)*pow(s24,-1)+2*((s23+s24)*(s13+s14+s23+s24)+s12*(s13+s14+2*s23+s24)+s12*s12)*pow(s12+s13+s14,-1)*pow(s24,-1)+2*(s23+s24)*((s14+s23)*(s23*(s23-7*s24)+s14*(s23-s24))*(s13*s13)+(2*s14+s23+s24)*(s23*s23)*(s24*s24)+2*s13*s23*s24*(-2*s14*(s23-s24)+s23*s24-s23*s23+s24*s24)+s13*s13*pow(s12,3)+2*(s23*(2*s23-3*s24)+s14*(3*s23-s24)+s14*s14)*pow(s13,3)+s12*s12*(-4*s13*s23*s24+(2*s14+3*s23-s24)*(s13*s13)+2*s23*(s24*s24)+4*pow(s13,3))+(4*s14+5*s23-s24)*pow(s13,4)+s12*(2*s13*s23*s24*(-2*s14-3*s23+s24)+s13*s13*(s23*(3*s23-10*s24)+s14*(4*s23-2*s24)+s14*s14)+s23*(2*s14+3*s23+2*s24)*(s24*s24)+(6*s14+8*s23-2*s24)*pow(s13,3)+5*pow(s13,4))+2*pow(s13,5))*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-2)*pow(s13-s24,-2)*pow(s24,-1)-2*((s23+s24)*(s13+s14+s23+2*s24)+s12*(s13+s14+2*(s23+s24))+2*(s12*s12))*(s12*s13+s13*(s14+s23)-s23*s24+s13*s13)*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-1)*pow(s13-s24,-1)*pow(s24,-1)+2*s13*(s23+s24)*pow(s12+s13+s14+s24,-2)-s24*(s12+s13+s14+s23+s24)*(4*s12+4*s13+4*s14+3*s23+3*s24)*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s24,-2)+pow(s13-s24,-2)*(s13*s13*((4*s23*s24+2*(s23*s23)-s24*s24)*(s24*s24)+2*s14*s24*(4*s23*s24+s23*s23+s24*s24)+s14*s14*(2*s23*s24+s23*s23+3*(s24*s24)))-2*s24*(s14+s24)*(s24*s24*(4*s23*s24+3*(s23*s23)+s24*s24)+s14*s24*(6*s23*s24+3*(s23*s23)+2*(s24*s24))+s14*s14*((s23+s24)*(s23+s24)))+(s13*(3*s14+2*s23)-2*s24*(3*s14+2*s23+5*s24)+3*(s13*s13))*pow(s12,4)+(s13-2*s24)*pow(s12,5)+(3*s14+2*(s23+s24))*(s24*s24)*pow(s13,3)+pow(s12,3)*((6*s14+4*s23+8*s24)*(s13*s13)+s13*(2*s23*s24+2*s14*(3*s23+s24)+3*(s14*s14)+s23*s23-10*(s24*s24))-2*s24*(9*s23*s24+6*s14*(s23+2*s24)+3*(s14*s14)+s23*s23+10*(s24*s24))+3*pow(s13,3))+s24*s24*pow(s13,4)+s12*s12*(s13*s13*(10*s23*s24+2*s14*(4*s23+7*s24)+3*(s14*s14)+s23*s23+6*(s24*s24))+(3*s14+2*s23+8*s24)*pow(s13,3)+pow(s13,4)+s13*((6*s23+4*s24)*(s14*s14)+2*s24*(-3*s23*s24+s23*s23-10*(s24*s24))+3*s14*(2*s23*s24+s23*s23-4*(s24*s24))+pow(s14,3))-2*s24*((6*s23+9*s24)*(s14*s14)+2*s24*(8*s23*s24+2*(s23*s23)+5*(s24*s24))+s14*(20*s23*s24+3*(s23*s23)+18*(s24*s24))+pow(s14,3)))+s12*(2*(s13*s13)*(s23*s24*(s23+5*s24)+(2*s23+3*s24)*(s14*s14)+s14*(6*s23*s24+s23*s23+5*(s24*s24)))+(2*s14*(s23+3*s24)+s24*(4*s23+7*s24))*pow(s13,3)+2*s24*pow(s13,4)+s13*(s14*s14*(6*s23*s24+3*(s23*s23)-s24*s24)+(-12*s23*s24+2*(s23*s23)-15*(s24*s24))*(s24*s24)-2*s14*s24*(s23*s24-2*(s23*s23)+9*(s24*s24))+2*(s23+s24)*pow(s14,3))-2*s24*(4*s14*s24*(6*s23*s24+2*(s23*s23)+3*(s24*s24))+s24*s24*(13*s23*s24+6*(s23*s23)+5*(s24*s24))+s14*s14*(13*s23*s24+3*(s23*s23)+9*(s24*s24))+2*(s23+s24)*pow(s14,3)))+s13*(2*s24*(s14*s14)*(2*s23*s24+s23*s23-s24*s24)+s14*(-4*s23*s24+2*(s23*s23)-7*(s24*s24))*(s24*s24)+(s23+s24)*(s23+s24)*pow(s14,3)-2*(3*s23+2*s24)*pow(s24,4)))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s24,-2)+(2*s14*s23+6*s14*s24+7*s23*s24+2*s13*(s23+3*s24)+2*s12*(s13+s14+2*s23+4*s24)+2*(s12*s12)+2*(s23*s23)+5*(s24*s24))*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s24,-1)+2*(s23+s24)*(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s24,-1)+(3*s12+s23)*(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*pow(s13-s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1))-(s12+s13+s14)*(2*s12-s13+2*s23+s24)*pow(s13-s24,-2)*pow(s12+s23+s24,-1)+(2*s14*s23+s13*(2*s14+7*s23+3*s24)+s12*(4*s13+2*s14+3*(s23+s24))+2*(s12*s12)+s13*s13+s23*s23-s24*s24)*pow(s13,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1)-(s12+s23)*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s24,-1)*pow(s12+s23+s24,-1)+(4*s13*s23+s14*s23+s12*(3*s13+s14+4*s23)-2*s14*s24+2*s23*s24+4*(s23*s23)-2*(s24*s24))*pow(s13,-1)*pow(s24,-1)*pow(s12+s23+s24,-1)-pow(s13,-1)*(s23*(s14-2*s24)*(s23+s24)*(s24*s24)-s24*(s13*s13)*(-3*s14*s23+3*s23*s24+2*(s23*s23)+s24*s24)+s13*s24*(s14*s23*(s23-s24)+s24*(7*s23*s24+8*(s23*s23)+s24*s24))+s24*(s13+s24)*pow(s12,3)+s12*s12*(s13*s24*(s14+2*s23+s24)+4*s24*(s13*s13)+(s14+2*(s23+s24))*(s24*s24)-pow(s13,3))+(-(s14*s23)+s24*(8*s23+3*s24))*pow(s13,3)+s12*(s24*(3*s14+2*s23+3*s24)*(s13*s13)+s13*s24*(s14*(2*s23-s24)+9*s23*s24+s23*s23+s24*s24)+s24*s24*(s14*(2*s23+s24)+s23*s23+s24*s24)-(s14+s23-2*s24)*pow(s13,3)-pow(s13,4))-(4*s23+s24)*pow(s13,4))*pow(s13-s24,-3)*pow(s24,-1)*pow(s12+s23+s24,-1)-pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s13-s24,-3)*pow(s24,-1)*(2*(s13+s24)*(s24*s24)*pow(s12,3)+s24*(8*s23*s24+s14*(9*s23+10*s24)+14*(s23*s23)-5*(s24*s24))*pow(s13,3)+(6*s23*s24-s14*(3*s23+2*s24)-4*(s23*s23)+9*(s24*s24))*pow(s13,4)-(4*s23+3*s24)*pow(s13,5)+s24*(s13*s13)*(-(s23*s24*(3*s14+16*s24))-18*s24*(s23*s23)+(-8*s14+s24)*(s24*s24)+2*pow(s23,3))+2*s23*(s14+2*s23)*(s23+s24)*pow(s24,3)+s12*s12*((2*s23-3*s24)*s24*(s13*s13)+s13*(2*s14-2*s23+5*s24)*(s24*s24)+9*s24*pow(s13,3)-3*pow(s13,4)+2*(s14+4*s23+2*s24)*pow(s24,3))+s12*(-(s24*(s13*s13)*(21*s23*s24+s24*(3*s14+2*s24)-4*(s23*s23)))+s13*(s24*s24)*(13*s23*s24+s14*(4*s23+3*s24)-10*(s23*s23)+5*(s24*s24))+s24*(9*s14+23*s23+4*s24)*pow(s13,3)+(-3*s14-7*s23+6*s24)*pow(s13,4)-3*pow(s13,5)+2*(4*s23*s24+s14*(2*s23+s24)+5*(s23*s23)+s24*s24)*pow(s24,3))+s13*(s24*s24)*(s14*(3*s23*s24+2*(s23*s23)+4*(s24*s24))+2*(4*s24*(s23*s23)+7*s23*(s24*s24)-3*pow(s23,3)+pow(s24,3))))*pow(s12+s23+s24,-1)+4*(s12+s13+s14)*s24*(s12+s13+s14+s23+s24)*pow(s12+s13+s14+s24,-3)*pow(s12+s23+s24,-1)+4*s13*((s12+s13+s14)*(s12+s13+s14))*pow(s12+s13+s14+s24,-3)*pow(s12+s23+s24,-1)-(s12+s13+s14)*(-2*s12+6*s13+2*s14+s23)*pow(s12+s13+s14+s24,-2)*pow(s12+s23+s24,-1)+s24*(s12+s13+s14+s23+s24)*(2*s12-s13+s23+2*s24)*pow(s13,-1)*pow(s12+s13+s14+s24,-2)*pow(s12+s23+s24,-1)-2*(2*s12+s23+s24)*pow(s13,-1)*pow(s23,-2)*pow(s24,-1)*(-(s13*(s14+s24)*(-3*s14+2*s23+s24)*(s23*s23))-(-s14+s23+s24)*(s23*s23)*((s14+s24)*(s14+s24))+(2*s23*s24+s14*(4*s23+6*s24)+s13*(6*s14+4*s23+8*s24)+3*(s13*s13)+3*(s14*s14)-s23*s23+3*(s24*s24))*pow(s12,3)+(3*s13+3*s14+s23+3*s24)*pow(s12,4)+pow(s12,5)+(s23+s24)*(s23+s24)*pow(s13,3)+s12*(s23*(s14+s24)*(s14*(s23+2*s24)-s23*(2*s23+3*s24)+2*(s14*s14))+s13*s13*(6*s23*s24+s14*(6*s23+4*s24)+s23*s23+5*(s24*s24))+2*s13*((3*s23+s24)*(s14*s14)+s14*(4*s23*s24+s23*s23+2*(s24*s24))-(s23-s24)*((s23+s24)*(s23+s24)))+2*(s23+s24)*pow(s13,3))+s13*s13*(s24*(s23*s23)+s23*(s24*s24)+s14*(2*s23*s24+3*(s23*s23)+s24*s24)-pow(s23,3)+pow(s24,3))+s12*s12*((3*s14+5*s23+7*s24)*(s13*s13)+(5*s23+3*s24)*(s14*s14)-3*s24*(s23*s23)+s23*(s24*s24)+s14*(6*s23*s24-s23*s23+3*(s24*s24))+s13*(6*s23*s24+10*s14*(s23+s24)+3*(s14*s14)-s23*s23+7*(s24*s24))+pow(s13,3)+pow(s14,3)-pow(s23,3)+pow(s24,3)))*pow(s12+s13+s14+s24,-2)*pow(s12+s23+s24,-1)-pow(s13-s24,-2)*(s13*s13*((4*s23*s24+2*(s23*s23)-s24*s24)*(s24*s24)+2*s14*s24*(4*s23*s24+s23*s23+s24*s24)+s14*s14*(2*s23*s24+s23*s23+3*(s24*s24)))-2*s24*(s14+s24)*(s24*s24*(4*s23*s24+3*(s23*s23)+s24*s24)+s14*s24*(6*s23*s24+3*(s23*s23)+2*(s24*s24))+s14*s14*((s23+s24)*(s23+s24)))+(s13*(3*s14+2*s23)-2*s24*(3*s14+2*s23+5*s24)+3*(s13*s13))*pow(s12,4)+(s13-2*s24)*pow(s12,5)+(3*s14+2*(s23+s24))*(s24*s24)*pow(s13,3)+pow(s12,3)*((6*s14+4*s23+8*s24)*(s13*s13)+s13*(2*s23*s24+2*s14*(3*s23+s24)+3*(s14*s14)+s23*s23-10*(s24*s24))-2*s24*(9*s23*s24+6*s14*(s23+2*s24)+3*(s14*s14)+s23*s23+10*(s24*s24))+3*pow(s13,3))+s24*s24*pow(s13,4)+s12*s12*(s13*s13*(10*s23*s24+2*s14*(4*s23+7*s24)+3*(s14*s14)+s23*s23+6*(s24*s24))+(3*s14+2*s23+8*s24)*pow(s13,3)+pow(s13,4)+s13*((6*s23+4*s24)*(s14*s14)+2*s24*(-3*s23*s24+s23*s23-10*(s24*s24))+3*s14*(2*s23*s24+s23*s23-4*(s24*s24))+pow(s14,3))-2*s24*((6*s23+9*s24)*(s14*s14)+2*s24*(8*s23*s24+2*(s23*s23)+5*(s24*s24))+s14*(20*s23*s24+3*(s23*s23)+18*(s24*s24))+pow(s14,3)))+s12*(2*(s13*s13)*(s23*s24*(s23+5*s24)+(2*s23+3*s24)*(s14*s14)+s14*(6*s23*s24+s23*s23+5*(s24*s24)))+(2*s14*(s23+3*s24)+s24*(4*s23+7*s24))*pow(s13,3)+2*s24*pow(s13,4)+s13*(s14*s14*(6*s23*s24+3*(s23*s23)-s24*s24)+(-12*s23*s24+2*(s23*s23)-15*(s24*s24))*(s24*s24)-2*s14*s24*(s23*s24-2*(s23*s23)+9*(s24*s24))+2*(s23+s24)*pow(s14,3))-2*s24*(4*s14*s24*(6*s23*s24+2*(s23*s23)+3*(s24*s24))+s24*s24*(13*s23*s24+6*(s23*s23)+5*(s24*s24))+s14*s14*(13*s23*s24+3*(s23*s23)+9*(s24*s24))+2*(s23+s24)*pow(s14,3)))+s13*(2*s24*(s14*s14)*(2*s23*s24+s23*s23-s24*s24)+s14*(-4*s23*s24+2*(s23*s23)-7*(s24*s24))*(s24*s24)+(s23+s24)*(s23+s24)*pow(s14,3)-2*(3*s23+2*s24)*pow(s24,4)))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s24,-2)*pow(s12+s23+s24,-1)+(5*s14*s23-s14*s24+s13*(4*s14+8*s23+s24)+s12*(9*s13+6*s14+7*s23+5*s24)+8*(s12*s12)+4*(s13*s13)+s23*s23-s24*s24)*pow(s13,-1)*pow(s12+s13+s14+s24,-1)*pow(s12+s23+s24,-1)+(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(s12*(6*s13+2*s14-3*s23)+4*s14*s24-3*s23*s24+2*s13*(s23+3*s24)-2*(s12*s12)-3*(s23*s23))*pow(s13,-1)*pow(s23,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)*pow(s12+s23+s24,-1)-(4*s12+3*s13+4*s14)*(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*pow(s13-s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1)*pow(s12+s23+s24,-1)+(2*s24*(s13+s24)*((s12+s23+s24)*(s12+s23+s24))*pow(s13,-1)*pow(s13-s24,-3)+(s12+s23+s24)*(-2*s14*s23-s12*(s13+2*(s14+s23))+2*s23*s24+s13*(2*s14-s23+3*s24)-2*(s12*s12)+s13*s13+3*(s24*s24))*pow(s13,-1)*pow(s13-s24,-2)-s13*(s12+s13+s14)*(s12+s23+2*s24)*pow(s13-s24,-2)*pow(s24,-1)-(-(s13*s24*(2*s14+s24))+(s23+s24)*(s14*s23+(s23-s24)*s24)+(s13+s14+2*(s23+s24))*(s12*s12)+s12*(s13*s23+s14*(2*s23+s24)+s23*(s23+3*s24)-2*(s13*s13))+(s23-3*s24)*(s13*s13)+pow(s12,3))*pow(s13,-1)*pow(s13-s24,-1)*pow(s24,-1)+2*s13*(s12+s13+s14)*(s12+s13+s14+s23+s24)*pow(s12+s13+s14+s24,-3)-2*s13*((s12+s13+s14)*(s12+s13+s14))*pow(s12+s13+s14+s24,-3)+2*s24*(s13+s24)*((s12+s13+s14+s23+s24)*(s12+s13+s14+s23+s24))*pow(s13,-1)*pow(s12+s13+s14+s24,-3)+(s12+s13+s14+s23+s24)*(4*s14*s23+s13*(-2*s14+s23-4*s24)-2*s23*s24+s12*(3*s13+4*s14+4*s23+s24)+4*(s12*s12)-2*(s13*s13)-3*(s24*s24))*pow(s13,-1)*pow(s12+s13+s14+s24,-2)+(s12+s13+s14)*(s12*(4*s13-s24)+2*s13*(s23+s24)-s24*s24)*pow(s24,-1)*pow(s12+s13+s14+s24,-2)+(-2*s12-2*s14+s24)*pow(s13-s24,-2)*pow(s24,-1)*(s13*s13*((4*s23*s24+2*(s23*s23)-s24*s24)*(s24*s24)+2*s14*s24*(4*s23*s24+s23*s23+s24*s24)+s14*s14*(2*s23*s24+s23*s23+3*(s24*s24)))-2*s24*(s14+s24)*(s24*s24*(4*s23*s24+3*(s23*s23)+s24*s24)+s14*s24*(6*s23*s24+3*(s23*s23)+2*(s24*s24))+s14*s14*((s23+s24)*(s23+s24)))+(s13*(3*s14+2*s23)-2*s24*(3*s14+2*s23+5*s24)+3*(s13*s13))*pow(s12,4)+(s13-2*s24)*pow(s12,5)+(3*s14+2*(s23+s24))*(s24*s24)*pow(s13,3)+pow(s12,3)*((6*s14+4*s23+8*s24)*(s13*s13)+s13*(2*s23*s24+2*s14*(3*s23+s24)+3*(s14*s14)+s23*s23-10*(s24*s24))-2*s24*(9*s23*s24+6*s14*(s23+2*s24)+3*(s14*s14)+s23*s23+10*(s24*s24))+3*pow(s13,3))+s24*s24*pow(s13,4)+s12*s12*(s13*s13*(10*s23*s24+2*s14*(4*s23+7*s24)+3*(s14*s14)+s23*s23+6*(s24*s24))+(3*s14+2*s23+8*s24)*pow(s13,3)+pow(s13,4)+s13*((6*s23+4*s24)*(s14*s14)+2*s24*(-3*s23*s24+s23*s23-10*(s24*s24))+3*s14*(2*s23*s24+s23*s23-4*(s24*s24))+pow(s14,3))-2*s24*((6*s23+9*s24)*(s14*s14)+2*s24*(8*s23*s24+2*(s23*s23)+5*(s24*s24))+s14*(20*s23*s24+3*(s23*s23)+18*(s24*s24))+pow(s14,3)))+s12*(2*(s13*s13)*(s23*s24*(s23+5*s24)+(2*s23+3*s24)*(s14*s14)+s14*(6*s23*s24+s23*s23+5*(s24*s24)))+(2*s14*(s23+3*s24)+s24*(4*s23+7*s24))*pow(s13,3)+2*s24*pow(s13,4)+s13*(s14*s14*(6*s23*s24+3*(s23*s23)-s24*s24)+(-12*s23*s24+2*(s23*s23)-15*(s24*s24))*(s24*s24)-2*s14*s24*(s23*s24-2*(s23*s23)+9*(s24*s24))+2*(s23+s24)*pow(s14,3))-2*s24*(4*s14*s24*(6*s23*s24+2*(s23*s23)+3*(s24*s24))+s24*s24*(13*s23*s24+6*(s23*s23)+5*(s24*s24))+s14*s14*(13*s23*s24+3*(s23*s23)+9*(s24*s24))+2*(s23+s24)*pow(s14,3)))+s13*(2*s24*(s14*s14)*(2*s23*s24+s23*s23-s24*s24)+s14*(-4*s23*s24+2*(s23*s23)-7*(s24*s24))*(s24*s24)+(s23+s24)*(s23+s24)*pow(s14,3)-2*(3*s23+2*s24)*pow(s24,4)))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s24,-2)+pow(s13,-1)*pow(s24,-1)*(-3*s14*s23*s24+s13*s24*(2*s14+3*s24)+(s13+s14-2*s24)*(s12*s12)-4*s23*(s13*s13)-s14*(s23*s23)-s24*(s23*s23)-s12*(s13*s23+5*s23*s24+2*s24*(s14+s24)+4*(s13*s13)+s23*s23)+pow(s12,3)+pow(s24,3))*pow(s12+s13+s14+s24,-1)-(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*(s13*(-2*s14+s23)+4*s14*(s23+s24)+s12*(s13+2*s14+4*s23+4*s24)+2*(s12*s12))*pow(s24,-1)*pow(-s13+s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1))*pow(s12+s23+s24,-1))/4.;
}

// Coefficient order epsilon^0 of master 5
template<>
double qq2yygCA<5,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (8*pow(s13,-1)+8*pow(s23,-1)+8*(s12+s13+s14+s24)*pow(s12+s13+s14,-1)*pow(s23,-1)-8*(s13*(-2*s24*(2*s23+s24)+s14*(s23+2*s24))+s12*(s13*(s14+s23)-s24*(s14+s23+2*s24))+(s13-s24)*(s12*s12)+(-s14+2*(s23+s24))*(s13*s13)-s24*(s14*(s23+s24)+s24*s24)-pow(s13,3))*pow(s23,-1)*pow(s13-s24,-3)+8*(s12+s13+s14-s24)*s24*(6*s23*s24-2*s13*(s23+2*s24)+s12*(-2*s13+4*s23+6*s24)+2*(s12*s12)+s13*s13+2*(s23*s23)+5*(s24*s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13-s24,-3)+8*(s13+s24)*(s12+s23+s24)*pow(s13,-1)*pow(s13-s24,-2)+8*((s13-s24)*(s12*(s13+s14-4*s24)-2*s13*(s23+3*s24)+s24*(-4*s14+s23+3*s24)+s12*s12)+(s12+s23+s24)*(3*s14*s23+13*s14*s24-2*s23*s24+2*s13*(s14+s23+5*s24)+s12*(4*s13+6*s14+3*s23+11*s24)+4*(s12*s12)+2*(s14*s14)-5*(s24*s24)))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13-s24,-2)+8*((3*s13-s24)*(s12*s12)+3*(2*s14+s24)*(s13*s13)+2*s12*(-(s24*(s14+s24))+s13*(3*s14+s24)+3*(s13*s13))+s13*(2*s14*s24+3*(s14*s14)-s24*s24)-s24*((s14+s24)*(s14+s24))+3*pow(s13,3))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13-s24,-2)-16*pow(s24,-1)-16*(s12-s13+s23+2*s24)*pow(s13,-1)*pow(s24,-1)+8*(2*s12+5*s13+2*s14-s23+3*s24)*pow(s13,-1)*pow(s24,-1)+8*(2*s12*(s13+s14-s24)-s24*(2*s13+2*s14-s23+s24)+2*(s12*s12))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s24,-1)+16*pow(s13,-1)*(-(s13*s24*(13*s14*(s23+s24)+s24*(13*s23+9*s24)))+(s14*(4*s23-9*s24)-s24*(9*s23+7*s24))*(s13*s13)+5*(2*s24*(s23+s24)+s14*(s23+2*s24))*(s24*s24)+s12*s12*(-13*s13*s24+4*(s13*s13)+5*(s24*s24))+(8*s14+8*s23-6*s24)*pow(s13,3)+s12*(-(s13*s24*(13*s14+13*s23+20*s24))+(4*s14+4*s23-15*s24)*(s13*s13)+5*(s14+s23+3*s24)*(s24*s24)+12*pow(s13,3))+8*pow(s13,4))*pow(s13-s24,-3)*pow(s24,-1)-8*(s12+s13+s14)*(s13+s24)*pow(s13-s24,-2)*pow(s24,-1)+((16*(s13-s24)*(s12+s13+s14+s24)*(-(s14*s23)+s12*(s13+s14-s23-s24)-2*s14*s24+s23*s24-s13*(2*s23+3*s24)+s12*s12-s24*s24)-16*s13*(s12+s13+s14)*(2*s14*s23+4*s14*s24+3*s23*s24+3*s13*(s23+2*s24)+s12*(2*s23+7*s24)+s24*s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13-s24,-2)*pow(s24,-1))/2.-8*pow(s13,-1)*(-(s23*s24*(22*s24*(s23+s24)+s14*(7*s23+17*s24)))+s12*s12*(2*s13*(3*s14+6*s23+s24)-s24*(7*s14+14*s23+24*s24)+15*(s13*s13))+s13*(s24*(-13*s23*s24+16*(s23*s23)-17*(s24*s24))+3*s14*(s23*s24+2*(s23*s23)-4*(s24*s24)))+s13*s13*(24*s23*s24+s14*(9*s23+8*s24)+4*(s23*s23)+7*(s24*s24))+(6*s13-7*s24)*pow(s12,3)+(4*s23+5*s24)*pow(s13,3)+s12*((9*s14+19*s23+14*s24)*(s13*s13)+s13*(18*s23*s24+3*s14*(4*s23+s24)+6*(s23*s23)-17*(s24*s24))-s24*(46*s23*s24+s14*(14*s23+17*s24)+7*(s23*s23)+17*(s24*s24))+9*pow(s13,3)))*pow(s12+s13+s23,-1)*pow(s13-s24,-2)*pow(s24,-1)+32*(s12*(s13+s24)+s13*(2*s14+s23+2*s24)+s24*(s14+2*(s23+s24))+2*(s13*s13))*pow(s13,-1)*pow(s13-s24,-1)*pow(s24,-1)+8*(3*s12+8*s13+3*s23-5*s24)*(s12*s13+s13*(s14+s23)-s23*s24+s13*s13)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s13-s24,-1)*pow(s24,-1)+8*(s12-5*s13+s23-2*s24)*(s12*s13+s13*(s14+s23)-s23*s24+s13*s13)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s13-s24,-1)*pow(s24,-1)+8*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13-s24,-1)*pow(s24,-1)*(s14*s23*s24+s13*(3*s24*(3*s23+4*s24)-s14*(5*s23+7*s24))+(-6*s13+6*s14-3*s23+7*s24)*(s12*s12)-(4*s23+3*s24)*(s13*s13)-3*s23*(s14*s14)-4*s24*(s14*s14)+s12*(s13*(-6*s14-5*s23+4*s24)-s14*(6*s23+5*s24)+s24*(8*s23+9*s24)-9*(s13*s13)+3*(s14*s14))+2*s24*(s23*s23)+7*s14*(s24*s24)+3*pow(s12,3)-3*pow(s24,3))+8*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13-s24,-3)*pow(s24,-1)*(-(s13*(s24*s24)*(-11*s23*(s14*s14)+s14*(17*s23*s24+8*(s23*s23)-10*(s24*s24))+3*(s23+2*s24)*(s24*s24)))+s24*(s13*s13)*(-6*s23*(s14*s14)+s14*(6*s23*s24+s23*s23-13*(s24*s24))+(6*s23+17*s24)*(s24*s24))-(s23*(s14*s14)-2*s14*(-5*s23*s24+s23*s23-3*(s24*s24))+3*(s23+4*s24)*(s24*s24))*pow(s13,3)+(-2*s24*(4*s23+3*s24)+s14*(5*s23+7*s24))*pow(s13,4)+(4*s23+5*s24)*pow(s13,5)+s14*s23*(-6*s14+5*(s23+2*s24))*pow(s24,3)+pow(s12,3)*(s24*(s13*s13)-9*s13*(s24*s24)+pow(s13,3)+5*pow(s24,3))+s12*s12*((7*s14-10*s23-16*s24)*s24*(s13*s13)+s13*(-2*s14-13*s23+11*s24)*(s24*s24)+(-4*s14+7*s23-6*s24)*pow(s13,3)+6*pow(s13,4)-(s14-10*s23+s24)*pow(s24,3))+s12*(s24*(s13*s13)*(-17*s23*s24-s14*(16*s23+7*s24)+6*(s14*s14)+s23*s23-6*(s24*s24))+s13*(s24*s24)*(12*s23*s24-2*s14*(s23+2*s24)+7*(s14*s14)-8*(s23*s23)+16*(s24*s24))+(-11*s23*s24+s14*(6*s23+5*s24)-5*(s14*s14)+2*(s23*s23)-13*(s24*s24))*pow(s13,3)+(7*s23-2*s24)*pow(s13,4)+5*pow(s13,5)+(-(s23*s24)+4*s14*(s23+s24)-6*(s14*s14)+5*(s23*s23)-6*(s24*s24))*pow(s24,3)))-8*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-3)*pow(s13-s24,-3)*pow(s24,-1)*(-2*(-(s23*s24)+s14*(s23+3*s24)+6*(s23*s23)-13*(s24*s24))*pow(s13,7)-2*(2*s23+3*s24)*pow(s13,8)+pow(s13,6)*(4*s23*(s14*s14)+38*s24*(s23*s23)+45*s23*(s24*s24)+s14*(-5*s23*s24-10*(s23*s23)+26*(s24*s24))-12*pow(s23,3)-34*pow(s24,3))+s14*(-3*s14*s23+10*s23*s24+5*(s23*s23)+6*(s24*s24))*pow(s23,3)*pow(s24,3)+pow(s12,6)*(-3*s24*(s13*s13)-6*s13*(s24*s24)+4*pow(s13,3)+7*pow(s24,3))+pow(s12,5)*(-(s24*(5*s23+64*s24)*(s13*s13))+s13*(-2*s14-35*s23+45*s24)*(s24*s24)+(2*s14+14*s23+21*s24)*pow(s13,3)+8*pow(s13,4)+2*(3*s14+16*s23+s24)*pow(s24,3))+pow(s12,4)*(s13*(s24*s24)*(-4*s14*(4*s23-5*s24)+136*s23*s24+5*(s14*s14)-81*(s23*s23)+46*(s24*s24))+s24*(s13*s13)*(s14*(3*s23-40*s24)+4*(s14*s14)+5*(-43*s23*s24+2*(s23*s23)+8*(s24*s24)))+(s14*(5*s23+43*s24)-2*(s14*s14)+6*(14*s23*s24+3*(s23*s23)-22*(s24*s24)))*pow(s13,3)+(-5*s14+16*s23+85*s24)*pow(s13,4)-2*pow(s13,5)+(11*s23*s24+2*s14*(13*s23+5*s24)-s14*s14+59*(s23*s23)-7*(s24*s24))*pow(s24,3))+s13*(s23*s23)*(s24*s24)*(3*(s24*s24)*(2*s23*s24-s23*s23+2*(s24*s24))+s14*s14*(-6*s23*s24+7*(s23*s23)+6*(s24*s24))+s23*pow(s14,3)+s14*(39*s23*(s24*s24)-12*pow(s23,3)+30*pow(s24,3)))+pow(s12,3)*((-7*s14*(5*s23-9*s24)+212*s23*s24-10*(s14*s14)+6*(s23*s23)-46*(s24*s24))*pow(s13,4)+(-10*s14-22*s23+93*s24)*pow(s13,5)-14*pow(s13,6)+pow(s13,3)*((-9*s23+30*s24)*(s14*s14)+131*s24*(s23*s23)-274*s23*(s24*s24)+s14*(159*s23*s24+3*(s23*s23)+8*(s24*s24))+10*pow(s23,3)-114*pow(s24,3))+s13*(s24*s24)*(2*(11*s23+s24)*(s14*s14)+148*s24*(s23*s23)+118*s23*(s24*s24)+s14*(48*s23*s24-48*(s23*s23)+62*(s24*s24))+pow(s14,3)-93*pow(s23,3)-23*pow(s24,3))+s23*(21*s23*s24+s14*(47*s23+39*s24)-6*(s14*s14)+55*(s23*s23)-13*(s24*s24))*pow(s24,3)+s24*(s13*s13)*((11*s23-2*s24)*(s14*s14)-278*s24*(s23*s23)+s14*(-139*s23*s24+16*(s23*s23)-71*(s24*s24))+47*s23*(s24*s24)+pow(s14,3)+30*pow(s23,3)+144*pow(s24,3)))+pow(s13,5)*(-23*(s23*s23)*(s24*s24)+s14*s14*(-9*s23*s24-5*(s23*s23)+2*(s24*s24))+2*s23*pow(s14,3)+46*s24*pow(s23,3)-4*pow(s23,4)+s14*(9*s24*(s23*s23)+78*s23*(s24*s24)-14*pow(s23,3)-21*pow(s24,3))-73*s23*pow(s24,3)+18*pow(s24,4))-pow(s13,4)*(2*s23*(s14*s14)*(7*s23*s24+6*(s23*s23)-16*(s24*s24))+3*(s23*s23)*pow(s14,3)+s14*(-94*(s23*s23)*(s24*s24)-36*s24*pow(s23,3)+6*pow(s23,4)+61*s23*pow(s24,3)+pow(s24,4))+s24*(9*(s23*s23)*(s24*s24)+67*s24*pow(s23,3)-16*pow(s23,4)-49*s23*pow(s24,3)+2*pow(s24,4)))+pow(s13,3)*(11*s24*(s23*s23)*pow(s14,3)+s23*(s14*s14)*(9*s24*(s23*s23)+70*s23*(s24*s24)-3*pow(s23,3)-21*pow(s24,3))+s23*(s24*s24)*(51*s24*(s23*s23)+24*s23*(s24*s24)-25*pow(s23,3)-17*pow(s24,3))+s14*s24*(-92*(s23*s23)*(s24*s24)+30*s24*pow(s23,3)+35*pow(s23,4)-22*s23*pow(s24,3)+6*pow(s24,4)))+s23*s24*(s13*s13)*(s23*(s23-4*s24)*pow(s14,3)-s14*s14*(-17*s24*(s23*s23)+39*s23*(s24*s24)+pow(s23,3)-6*pow(s24,3))+2*(s24*s24)*(-10*s24*(s23*s23)-7*s23*(s24*s24)+8*pow(s23,3)+3*pow(s24,3))+s14*(-87*(s23*s23)*(s24*s24)-39*s24*pow(s23,3)+7*pow(s23,4)-7*s23*pow(s24,3)+30*pow(s24,4)))+s12*s12*((154*s23*s24-s14*(53*s23+9*s24)+2*(s14*s14)-36*(s23*s23)+104*(s24*s24))*pow(s13,5)+(3*s14-40*s23+24*s24)*pow(s13,6)-10*pow(s13,7)+pow(s13,4)*((-32*s23+s24)*(s14*s14)+195*s24*(s23*s23)+2*s23*(s24*s24)+s14*(164*s23*s24-61*(s23*s23)+154*(s24*s24))-3*pow(s14,3)-4*pow(s23,3)-237*pow(s24,3))+s23*pow(s24,3)*(-12*s23*(s14*s14)+17*s24*(s23*s23)-6*s23*(s24*s24)+s14*(58*s23*s24+45*(s23*s23)+6*(s24*s24))+26*pow(s23,3)+6*pow(s24,3))+s13*(s24*s24)*(s14*s14*(-2*s23*s24+36*(s23*s23)+6*(s24*s24))+3*s23*pow(s14,3)+s23*(68*s24*(s23*s23)+94*s23*(s24*s24)-53*pow(s23,3)-43*pow(s24,3))+s14*(36*s24*(s23*s23)+164*s23*(s24*s24)-68*pow(s23,3)+6*pow(s24,3)))+s24*(s13*s13)*(s14*s14*(13*s23*s24+9*(s23*s23)-20*(s24*s24))+15*(s23*s23)*(s24*s24)+(3*s23-4*s24)*pow(s14,3)-167*s24*pow(s23,3)+25*pow(s23,4)+252*s23*pow(s24,3)+s14*(-197*s24*(s23*s23)-259*s23*(s24*s24)+30*pow(s23,3)+93*pow(s24,3))-27*pow(s24,4))+pow(s13,3)*(-214*(s23*s23)*(s24*s24)+s14*s14*(69*s23*s24-15*(s23*s23)+35*(s24*s24))+11*s24*pow(s14,3)+94*s24*pow(s23,3)+2*pow(s23,4)-259*s23*pow(s24,3)-s14*(-224*s24*(s23*s23)-86*s23*(s24*s24)+pow(s23,3)+199*pow(s24,3))+176*pow(s24,4)))+s12*((33*s23*s24-5*s14*(3*s23+7*s24)+10*(s14*s14)-36*(s23*s23)+102*(s24*s24))*pow(s13,6)+2*(3*s14-10*s23-7*s24)*pow(s13,7)-2*pow(s13,8)+pow(s13,5)*(-((3*s23+25*s24)*(s14*s14))+112*s24*(s23*s23)+141*s23*(s24*s24)+s14*(3*s23*s24-57*(s23*s23)+134*(s24*s24))+2*pow(s14,3)-20*pow(s23,3)-155*pow(s24,3))+s23*s23*pow(s24,3)*(-10*s23*(s14*s14)+5*s24*(s23*s23)+s14*(39*s23*s24+23*(s23*s23)+12*(s24*s24))+5*pow(s23,3)+6*pow(s24,3))-pow(s13,4)*(s14*s14*(13*s23*s24+34*(s23*s23)-44*(s24*s24))+40*(s23*s23)*(s24*s24)+6*s23*pow(s14,3)-84*s24*pow(s23,3)+2*pow(s23,4)+275*s23*pow(s24,3)+s14*(-137*s24*(s23*s23)-287*s23*(s24*s24)+37*pow(s23,3)+135*pow(s24,3))-94*pow(s24,4))+s13*s23*(s24*s24)*(19*(s23*s23)*(s24*s24)+2*(s14*s14)*(-5*s23*s24+13*(s23*s23)+6*(s24*s24))+3*s23*pow(s14,3)+11*s24*pow(s23,3)-12*pow(s23,4)-20*s23*pow(s24,3)+s14*(8*s24*(s23*s23)+141*s23*(s24*s24)-46*pow(s23,3)+36*pow(s24,3))+12*pow(s24,4))+s24*(s13*s13)*(s23*(3*s23-8*s24)*pow(s14,3)+s14*s14*(32*s24*(s23*s23)-59*s23*(s24*s24)+pow(s23,3)+6*pow(s24,3))+s23*(24*(s23*s23)*(s24*s24)-40*s24*pow(s23,3)+7*pow(s23,4)+97*s23*pow(s24,3)-47*pow(s24,4))+s14*(-275*(s23*s23)*(s24*s24)-137*s24*pow(s23,3)+24*pow(s23,4)+103*s23*pow(s24,3)+12*pow(s24,4)))+pow(s13,3)*(22*s23*s24*pow(s14,3)+s14*s14*(48*s24*(s23*s23)+105*s23*(s24*s24)-11*pow(s23,3)-23*pow(s24,3))+s24*(-83*(s23*s23)*(s24*s24)-97*s24*pow(s23,3)+26*pow(s23,4)+194*s23*pow(s24,3)-13*pow(s24,4))+s14*(108*(s23*s23)*(s24*s24)+143*s24*pow(s23,3)-pow(s23,4)-342*s23*pow(s24,3)+40*pow(s24,4)))))+8*(s12+s13+s14-s24)*s24*(6*s14*s23+10*s14*s24+6*s23*s24+2*s13*(5*s14+3*s23+5*s24)+2*s12*(5*s13+5*s14+3*s23+5*s24)+5*(s12*s12)+5*(s13*s13)+5*(s14*s14)+2*(s23*s23)+5*(s24*s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s24,-3)+(-8*(s12+s13+s14+s23+s24)*(-2*s14*s23+8*s14*s24-2*s23*s24+2*s12*(s13+3*s14-s23+6*s24)+2*s13*(3*s14+s23+6*s24)+s12*s12+s13*s13+5*(s14*s14)-5*(s24*s24))-8*(s12+s13+s14+s24)*(3*s14*s24-s23*s24+s12*(2*s14+5*s24)+s13*(2*s14+2*s23+5*s24)+2*(s14*s14)-3*(s24*s24)))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s24,-2)-16*(s12*(-2*s13+s24)+s13*(-2*s14+s24)+s24*(s14+s24)-2*(s13*s13))*pow(s24,-1)*pow(s12+s13+s14+s24,-2)+(-16*s13*(s12+s13+s14)*(s12+2*s13+s14-s24)-8*(s13-s24)*(2*s13-s24)*(s12+s13+s14+s24))*pow(s13,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-2)-16*pow(s13,-1)*pow(s23,-2)*pow(s24,-1)*(2*s13*s23*(s14+s24)*(s14*(4*s23+s24)-s23*s23)-(-2*s14+s23+2*s24)*(s23*s23)*((s14+s24)*(s14+s24))+2*(3*s24*(s23+s24)+s14*(5*s23+6*s24)+s13*(6*s14+6*s23+8*s24)+3*(s13*s13)+3*(s14*s14))*pow(s12,3)+3*(2*s13+2*s14+s23+2*s24)*pow(s12,4)+2*pow(s12,5)+2*(3*s23*s24+2*(s23*s23)+s24*s24)*pow(s13,3)+s13*s13*(6*s24*(s23*s23)+5*s23*(s24*s24)+2*s14*(4*s23*s24+5*(s23*s23)+s24*s24)-pow(s23,3)+2*pow(s24,3))+s12*s12*((6*s14+15*s23+14*s24)*(s13*s13)+(11*s23+6*s24)*(s14*s14)-2*s24*(s23*s23)+3*s23*(s24*s24)+2*s14*(7*s23*s24+s23*s23+3*(s24*s24))+2*s13*(10*s23*s24+s14*(13*s23+10*s24)+3*(s14*s14)+2*(s23*s23)+7*(s24*s24))+2*pow(s13,3)+2*pow(s14,3)-pow(s23,3)+2*pow(s24,3))+2*s12*(s23*(s14+s24)*(2*s14*(s23+s24)-s23*(s23+2*s24)+2*(s14*s14))+s13*s13*(10*s23*s24+4*s14*(2*s23+s24)+4*(s23*s23)+5*(s24*s24))+(3*s23+2*s24)*pow(s13,3)+s13*((7*s23+2*s24)*(s14*s14)+2*s24*(s23*s23)+4*s23*(s24*s24)+2*s14*(6*s23*s24+3*(s23*s23)+2*(s24*s24))-pow(s23,3)+2*pow(s24,3))))*pow(s12+s13+s14+s24,-2)-8*pow(s23,-1)*pow(s13-s24,-1)*pow(s24,-1)*(s13*s13*((12*s23*s24+8*(s23*s23)-9*(s24*s24))*(s24*s24)+2*s14*s24*(17*s23*s24+4*(s23*s23)+4*(s24*s24))+s14*s14*(10*s23*s24+4*(s23*s23)+17*(s24*s24)))+(s14*(8*s23-2*s24)-6*s23*s24+s13*(21*s14+12*s23+13*s24)+15*(s13*s13)+6*(s14*s14)+s23*s23-29*(s24*s24))*pow(s12,4)+(7*s13+4*s14+2*s23-2*s24)*pow(s12,5)+pow(s12,6)+(13*s14+8*s23+7*s24)*(s24*s24)*pow(s13,3)+4*(s24*s24)*pow(s13,4)+pow(s12,3)*(2*(15*s14+9*s23+20*s24)*(s13*s13)+s13*(22*s23*s24+4*s14*(9*s23+11*s24)+21*(s14*s14)+5*(s23*s23)-26*(s24*s24))+13*pow(s13,3)+2*(3*(2*s23+s24)*(s14*s14)+s14*(-7*s23*s24+2*(s23*s23)-30*(s24*s24))-s24*(29*s23*s24+2*(s23*s23)+38*(s24*s24))+2*pow(s14,3)))+s12*s12*(6*(s14*s14)*(-(s23*s24)+s23*s23-5*(s24*s24))+s13*s13*(44*s23*s24+36*s14*(s23+2*s24)+15*(s14*s14)+4*(s23*s23)+26*(s24*s24))-4*s14*s24*(30*s23*s24+3*(s23*s23)+32*(s24*s24))-s24*s24*(130*s23*s24+29*(s23*s23)+89*(s24*s24))+(13*s14+8*s23+33*s24)*pow(s13,3)+4*pow(s13,4)+2*(4*s23+5*s24)*pow(s14,3)+s13*((36*s23+49*s24)*(s14*s14)+s24*(-16*s23*s24+11*(s23*s23)-86*(s24*s24))+s14*(58*s23*s24+15*(s23*s23)-10*(s24*s24))+7*pow(s14,3))+pow(s14,4))+(s14+s24)*(-(s24*(s14*s14)*(8*s23*s24+5*(s23*s23)+5*(s24*s24)))-s14*(s24*s24)*(52*s23*s24+24*(s23*s23)+19*(s24*s24))+(4*s23*s24+s23*s23+3*(s24*s24))*pow(s14,3)-(40*s23*s24+28*(s23*s23)+11*(s24*s24))*pow(s24,3))+s13*(s24*(s14*s14)*(28*s23*s24+11*(s23*s23)-s24*s24)+s14*(-22*s23*s24+8*(s23*s23)-35*(s24*s24))*(s24*s24)+(14*s23*s24+5*(s23*s23)+11*(s24*s24))*pow(s14,3)-(36*s23*s24+4*(s23*s23)+23*(s24*s24))*pow(s24,3))+s12*(2*(s13*s13)*((9*s23+16*s24)*(s14*s14)+s24*(19*s23*s24+4*(s23*s23)-4*(s24*s24))+s14*(27*s23*s24+4*(s23*s23)+25*(s24*s24)))+(s14*(8*s23+26*s24)+s24*(16*s23+27*s24))*pow(s13,3)+8*s24*pow(s13,4)+s13*(2*s14*s24*(6*s23*s24+11*(s23*s23)-34*(s24*s24))+(-62*s23*s24+8*(s23*s23)-77*(s24*s24))*(s24*s24)+s14*s14*(50*s23*s24+15*(s23*s23)+27*(s24*s24))+6*(2*s23+3*s24)*pow(s14,3))+2*(-3*s24*(s14*s14)*(11*s23*s24+2*(s23*s23)+9*(s24*s24))-s14*(s24*s24)*(95*s23*s24+29*(s23*s23)+52*(s24*s24))+(3*s23*s24+2*(s23*s23)+2*(s24*s24))*pow(s14,3)+(s23+2*s24)*pow(s14,4)-(60*s23*s24+26*(s23*s23)+25*(s24*s24))*pow(s24,3))))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s24,-2)-8*(2*s12+s13+2*s14+s23+s24)*pow(s13,-1)*pow(s12+s13+s14+s24,-1)+8*(-4*s14*s23+s14*s24+8*s23*s24+s12*(5*s13-4*s14-4*s23+s24)+s13*(9*s14+4*s23+2*s24)-8*(s12*s12)+13*(s13*s13)+4*(s14*s14)+8*(s24*s24))*pow(s13,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)-8*(2*s12-4*s13+4*s14+s24)*(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)+8*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s24,-1)*(4*s14*s23*s24+4*s13*(4*s24*(s23+s24)+s14*(s23+3*s24))+(4*s13+4*s14+5*(s23+s24))*(s12*s12)-(s23-3*s24)*(s13*s13)+5*s23*(s14*s14)+9*s24*(s14*s14)+2*s12*(2*s13*(s14+s23+2*s24)+2*s24*(3*s23+4*s24)+s14*(5*s23+7*s24)+s13*s13+s14*s14)+2*s24*(s23*s23)+6*s14*(s24*s24)+2*pow(s12,3)-3*pow(s24,3))*pow(s12+s13+s14+s24,-1)+8*(s12-2*s13+s14-5*s24)*(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*pow(s13-s24,-1)*pow(s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1)+8*(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*(s12*(9*s13+9*s14+5*s24)+s13*(4*s14+2*s23+5*s24)+3*(s12*s12)+2*(s13*s13)+6*(s14*s14-s24*s24))*pow(s23,-1)*pow(s13-s24,-1)*pow(s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1)+pow(s23,-1)*(-16*s24*pow(s12+s13+s14,-1)-16*(s12+s13+s14+s24)*pow(s12+s13+s14,-1)+8*(2*s12+4*s13+4*s14+3*s23+7*s24)*pow(s12+s13+s14,-1)+s24*(8*(s13-s24)*(4*s12+5*s13+5*s14+3*s23+3*s24)-8*(s12+s23+s24)*(4*s12+3*s13+4*s14+4*s23+3*s24))*pow(s12+s13+s14,-1)*pow(s13-s24,-2)+(8*s13*(s12+s13+s14)*(8*s12+6*s13+4*s14+4*s23+9*s24)+8*(s13-s24)*(s12+s13+s14+s24)*(3*s12+4*s13+4*s14+5*s23+9*s24))*pow(s12+s13+s14,-1)*pow(s13-s24,-2)+16*s24*(s14*s23+s14*s24+s13*(-s14+2*s23+s24)+s12*(s14+s23+2*s24)+s12*s12-s13*s13+s24*s24)*pow(s12+s13+s14,-1)*pow(s13-s24,-2)-16*((3*s13-s24)*(s12*s12)+3*(2*s14+s24)*(s13*s13)+2*s12*(-(s24*(s14+s24))+s13*(3*s14+s24)+3*(s13*s13))+s13*(2*s14*s24+3*(s14*s14)-s24*s24)-s24*((s14+s24)*(s14+s24))+3*pow(s13,3))*pow(s12+s13+s14,-1)*pow(s13-s24,-2)-8*(5*s14*s23-s12*(s13+2*s14-15*s23-20*s24)-3*s13*(s14-s23-4*s24)+16*s14*s24+26*s23*s24+6*(s12*s12)+s13*s13+8*(s23*s23)+17*(s24*s24))*pow(s12+s13+s14,-1)*pow(s13-s24,-1)+16*(s23+s24)*(s12-s13+s23+2*s24)*pow(s12+s13+s14,-1)*pow(s24,-1)+(-16*s12*(s12+s13+s14+s24)+2*(-8*s12+4*s23)*(s12+s13+s14+s23+s24))*pow(s12+s13+s14,-1)*pow(s24,-1)-8*(7*s14*s23+9*s14*s24+6*s23*s24+s13*(7*s23+5*s24)+s12*(6*s13+6*s14+13*s23+7*s24)+6*(s12*s12)+7*(s23*s23)+8*(s24*s24))*pow(s12+s13+s14,-1)*pow(s24,-1)+8*(s12*s13+s13*(s14+s23)-s23*s24+s13*s13)*(7*s14*s23+6*s14*s24+16*s23*s24+3*s13*(2*s23+s24)+s12*(5*s13+7*s14+14*s23+13*s24)+13*(s12*s12)+7*(s23*s23)+14*(s24*s24))*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-1)*pow(s13-s24,-1)*pow(s24,-1)-8*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-2)*pow(s13-s24,-2)*pow(s24,-1)*(s23*s23*(s24*s24)*(7*s23*s24+2*s14*(5*s23+4*s24)+3*(s23*s23)+4*(s24*s24))+s13*s13*pow(s12,4)+pow(s12,3)*(-4*s13*s24*(2*s23+s24)+(2*s14+10*s23+5*s24)*(s13*s13)+2*s23*(s24*s24)+4*pow(s13,3))+(17*s23*s24+4*s14*(6*s23+5*s24)+27*(s23*s23)-4*(s24*s24))*pow(s13,4)+s12*s12*(s13*s13*(-9*s23*s24+2*s14*(9*s23+5*s24)+s14*s14+20*(s23*s23)-12*(s24*s24))+s23*(2*s14+13*s23+10*s24)*(s24*s24)-2*s13*s24*(11*s23*s24+s14*(6*s23+4*s24)+15*(s23*s23)+2*(s24*s24))+(6*s14+34*s23+20*s24)*pow(s13,3)+5*pow(s13,4))+2*(6*s23+5*s24)*pow(s13,5)+s12*(s23*(s24*s24)*(21*s23*s24+4*s14*(3*s23+2*s24)+14*(s23*s23)+8*(s24*s24))-2*s13*s24*(2*(s23+s24)*(s14*s14)+s23*(6*s23*s24+14*(s23*s23)-3*(s24*s24))+2*s14*(6*s23*s24+8*(s23*s23)+s24*s24))+2*(8*s23*s24+s14*(22*s23+15*s24)+s14*s14+24*(s23*s23)-6*(s24*s24))*pow(s13,3)+(4*s14+36*s23+25*s24)*pow(s13,4)+2*pow(s13,5)+s13*s13*((8*s23+5*s24)*(s14*s14)-51*s24*(s23*s23)+2*s14*(-5*s23*s24+13*(s23*s23)-10*(s24*s24))-52*s23*(s24*s24)+14*pow(s23,3)-8*pow(s24,3)))+s13*s13*(s14*s14*(-3*s23*s24+7*(s23*s23)-8*(s24*s24))+s23*(-29*s24*(s23*s23)-28*s23*(s24*s24)+3*pow(s23,3)-4*pow(s24,3))+2*s14*(-18*s24*(s23*s23)-20*s23*(s24*s24)+5*pow(s23,3)-2*pow(s24,3)))-2*s13*s23*s24*(2*(s23+s24)*(s14*s14)-2*s24*(s23*s23)+2*s14*(5*(s23*s23)-3*(s24*s24))-8*s23*(s24*s24)+3*pow(s23,3)-4*pow(s24,3))+2*pow(s13,3)*((6*s23+5*s24)*(s14*s14)-8*s24*(s23*s23)+s14*(7*s23*s24+17*(s23*s23)-6*(s24*s24))-14*s23*(s24*s24)+9*pow(s23,3)-2*pow(s24,3)))+s24*(8*(s12+s13+s14+s24)*(4*s12+4*s13+4*s14+3*s23+3*s24)+8*(s12+s13+s14+s23+s24)*(7*s12+7*s13+7*s14+4*s23+3*s24))*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s24,-2)+16*(s23+s24)*(-2*s13*s14+s12*(-2*s13+s24)+s24*(s14+s24)-2*(s13*s13))*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s24,-2)-8*(8*s14*s23+26*s14*s24+26*s23*s24+2*s12*(2*s13+3*s14+8*s23+15*s24)+s13*(-2*s14+8*s23+22*s24)+6*(s12*s12)-2*(s13*s13)+8*(s23*s23)+17*(s24*s24))*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s24,-1)-16*(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(s12*s23+s13*s23+s14*s23+5*s23*s24+3*(s24*s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)-8*(s14*s14*(4*s23*s24+s23*s23+3*(s24*s24))+2*s14*s24*(6*s23*s24+s13*(s23+2*s24)+2*(s23*s23)+3*(s24*s24))+s24*s24*(8*s23*s24+4*s13*(s23+s24)+s13*s13+4*(s23*s23)+3*(s24*s24))+s12*s12*(10*s23*s24+2*s13*(s14+s23+4*s24)+2*s14*(2*s23+5*s24)+s13*s13+s14*s14+s23*s23+12*(s24*s24))+2*s12*(s13*(s14*(s23+3*s24)+s24*(3*s23+5*s24))+s24*(s13*s13)+(s23+2*s24)*(s14*s14)+s24*(8*s23*s24+2*(s23*s23)+5*(s24*s24))+s14*(7*s23*s24+s23*s23+7*(s24*s24)))+2*(s13+s14+s23+3*s24)*pow(s12,3)+pow(s12,4))*pow(s13-s24,-1)*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s24,-1)-8*(5*s12-3*s13-7*s14+6*s23+2*s24)*(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*pow(s13-s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1))+2*(8*pow(s13,-1)+4*(-2*s12+s13-2*s23-3*s24)*(2*s13-s24)*pow(s13,-1)*pow(s13-s24,-2)+(s12+s23+s24)*(-8*s13+4*s24)*pow(s13,-1)*pow(s13-s24,-2)+4*(s12+s13-s14+s23-3*s24)*pow(s13,-1)*pow(s24,-1)-4*(s12+s13+s14)*(s12+s13+s23+s24)*pow(s13-s24,-2)*pow(s24,-1)-4*(s12+s13+s14+s24)*(s12+s13+s23+s24)*pow(s13,-1)*pow(s13-s24,-1)*pow(s24,-1)-4*(s14*s23+2*s14*s24+s23*s24+s12*(2*s13+s14+s23+2*s24)+s13*(3*s14+s23+2*s24)+s12*s12+s13*s13+s24*s24)*pow(s13,-1)*pow(s13-s24,-1)*pow(s24,-1)-4*(5*s14*s23+8*s14*s24+4*s23*s24+s12*(16*s13+5*s14+5*s23+9*s24)+s13*(12*s14+11*(s23+s24))+5*(s12*s12)+11*(s13*s13)+4*(s24*s24))*pow(s13,-1)*pow(s13-s24,-1)*pow(s24,-1)+16*(s12+s13+s14)*(s12+s13+s14+s23+s24)*pow(s12+s13+s14+s24,-3)+4*(s12-s13+s14-s24)*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s12+s13+s14+s24,-2)-2*(-2*(s12-s13+s14-s24)*(s12+s13+s14+s24)-4*(s13-s24)*(s12+s13+s14+s23+s24))*pow(s13,-1)*pow(s12+s13+s14+s24,-2)+8*(s14*s23+s12*(4*s13+s14+s23)-s14*s24+s13*(3*s14+2*s23+s24)+s12*s12+3*(s13*s13)-s24*s24)*pow(s13,-1)*pow(s12+s13+s14+s24,-2)+8*(s12+s13+s14)*(s12+s13-s14+s23-s24)*pow(s24,-1)*pow(s12+s13+s14+s24,-2)-2*(-4*(s13-s24)*(s12+s13-s14+s23-s24)*(s12+s13+s14+s24)-4*s13*(s12+s13+s14)*(3*s12+3*s13+s14+3*s23+s24))*pow(s13,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-2)-4*(s14*s23+s14*s24+s23*s24+s13*(2*s14+4*s23+s24)+s12*(5*s13+3*s14+s23+2*s24)+s12*s12+4*(s13*s13)+2*(s14*s14)+s24*s24)*pow(s13,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)-4*(6*s14*s23+6*s14*s24+4*s23*s24+s12*(25*s13+14*s14+6*s23+10*s24)+s13*(15*s14+19*s23+11*s24)+6*(s12*s12)+19*(s13*s13)+8*(s14*s14)+4*(s24*s24))*pow(s13,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)-4*(s13+s24)*(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*pow(s24,-1)*pow(-s13+s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1)-4*(s12+4*s13+s14+3*s24)*(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*pow(s24,-1)*pow(-s13+s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1))-16*s24*pow(s13,-1)*pow(s12+s23+s24,-1)+16*(-s13+s24)*pow(s13,-1)*pow(s12+s23+s24,-1)+8*(2*s12+2*s13+s14+3*s23+s24)*pow(s13,-1)*pow(s12+s23+s24,-1)+8*s24*(s12+s23+2*s24)*(s12-s13+s23+2*s24)*pow(s13,-1)*pow(s13-s24,-2)*pow(s12+s23+s24,-1)+(16*s13*(s12+s13+s14)*(s12-s13+s23+s24)+8*(s13-s24)*(s12+s13+s14+s24)*(2*s12-s13+2*s23+s24))*pow(s13,-1)*pow(s13-s24,-2)*pow(s12+s23+s24,-1)-8*(5*s14*s23+4*s14*s24-5*s23*s24+s12*(7*s13+5*s14+9*s23+4*s24)+s13*(5*s14+17*s23+9*s24)+5*(s12*s12)-2*(s13*s13)+4*(s23*s23)-5*(s24*s24))*pow(s13,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1)+8*(s12+s23)*(s12+s13+s14+s24)*pow(s13,-1)*pow(s24,-1)*pow(s12+s23+s24,-1)-8*(4*s13*s23-5*s14*s24+21*s23*s24+s12*(2*s13+19*s23+14*s24)+2*(s12*s12)+17*(s23*s23)+8*(s24*s24))*pow(s13,-1)*pow(s24,-1)*pow(s12+s23+s24,-1)+(-8*(s13-s24)*(2*s12+s23+2*s24)+48*((s12+s23+s24)*(s12+s23+s24)))*pow(s13,-1)*pow(s24,-1)*pow(s12+s23+s24,-1)+8*pow(s13,-1)*(-(s24*(s13*s13)*(5*s23*s24+s14*(-5*s23+2*s24)+4*(s23*s23)+4*(s24*s24)))-s24*s24*(4*s24*(3*s23*s24+2*(s23*s23)+s24*s24)+s14*(s23*s24-s23*s23+4*(s24*s24)))+s13*s24*(s14*(4*s23*s24+3*(s23*s23)+8*(s24*s24))+s24*(23*s23*s24+20*(s23*s23)+9*(s24*s24)))+s24*(3*s13+s24)*pow(s12,3)+s12*s12*(s13*s24*(3*s14+6*s23+8*s24)+8*s24*(s13*s13)+(s14+2*s23)*(s24*s24)-4*pow(s13,3))+(-2*s14*(2*s23+s24)+s24*(18*s23+7*s24))*pow(s13,3)+s12*(s24*(5*s14+4*(s23+s24))*(s13*s13)+(s14*(2*s23-s24)-8*s23*s24+s23*s23-5*(s24*s24))*(s24*s24)+s13*s24*(28*s23*s24+s14*(6*s23+4*s24)+3*(s23*s23)+14*(s24*s24))+(-4*s14-4*s23+3*s24)*pow(s13,3)-4*pow(s13,4))-4*(3*s23+s24)*pow(s13,4))*pow(s13-s24,-3)*pow(s24,-1)*pow(s12+s23+s24,-1)+8*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s13-s24,-3)*pow(s24,-1)*((29*s23*s24-s14*(11*s23+12*s24)-4*(s23*s23)+41*(s24*s24))*pow(s13,4)-(12*s23+13*s24)*pow(s13,5)+pow(s13,3)*(40*s24*(s23*s23)+15*s23*(s24*s24)+s14*(41*s23*s24+3*(s23*s23)+50*(s24*s24))+8*pow(s23,3)-31*pow(s24,3))-s24*(s13*s13)*(78*s24*(s23*s23)+69*s23*(s24*s24)+s14*(31*s23*s24+3*(s23*s23)+54*(s24*s24))+16*pow(s23,3)-pow(s24,3))+s23*(s14*(s23+6*s24)+4*(-(s23*s24)+s23*s23-2*(s24*s24)))*pow(s24,3)+pow(s12,3)*(-3*s24*(s13*s13)+3*s13*(s24*s24)+3*pow(s13,3)+pow(s24,3))+s13*(s24*s24)*(50*s24*(s23*s23)+53*s23*(s24*s24)+s14*(3*s23*s24+3*(s23*s23)+20*(s24*s24))+4*pow(s23,3)+6*pow(s24,3))+s12*s12*(-(s24*(3*s14+22*s23+29*s24)*(s13*s13))+s13*(3*s14+10*s23+5*s24)*(s24*s24)+(3*s14+14*s23+37*s24)*pow(s13,3)-8*pow(s13,4)+(s14+6*s23+7*s24)*pow(s24,3))+s12*(s13*(s24*s24)*(55*s23*s24+3*s14*(2*s23+s24)+11*(s23*s23)+8*(s24*s24))-s24*(s13*s13)*(107*s23*s24+s14*(6*s23+31*s24)+35*(s23*s23)+27*(s24*s24))+(77*s23*s24+s14*(6*s23+41*s24)+19*(s23*s23)+9*(s24*s24))*pow(s13,3)+(-11*s14-12*s23+27*s24)*pow(s13,4)-11*pow(s13,5)+(3*s23*s24+2*s14*(s23+3*s24)+9*(s23*s23)+6*(s24*s24))*pow(s24,3)))*pow(s12+s23+s24,-1)+s24*(-8*(s12+s13+s14+s24)*(2*s12-s13+s23+2*s24)-8*(s12+s13+s14+s23+s24)*(s12-2*s13-s14+s23+2*s24))*pow(s13,-1)*pow(s12+s13+s14+s24,-2)*pow(s12+s23+s24,-1)+(8*(-2*s12+6*s13+2*s14+s23)*(s13-s24)*(s12+s13+s14+s24)+8*s13*(s12+s13+s14)*(6*s12+6*s13+2*s14+4*s23+3*s24))*pow(s13,-1)*pow(s12+s13+s14+s24,-2)*pow(s12+s23+s24,-1)-16*(s13-s24)*(3*s13*s14+s12*(3*s13-s24)-s24*(s14+s24)+3*(s13*s13))*pow(s13,-1)*pow(s12+s13+s14+s24,-2)*pow(s12+s23+s24,-1)-16*s24*(s14*s23+s12*(4*s13+s14+s23)-s14*s24+s13*(3*s14+2*s23+s24)+s12*s12+3*(s13*s13)-s24*s24)*pow(s13,-1)*pow(s12+s13+s14+s24,-2)*pow(s12+s23+s24,-1)+16*pow(s13,-1)*pow(s23,-2)*pow(s24,-1)*((29*s23*s24+4*s14*(8*s23+9*s24)+4*s13*(6*s14+9*s23+11*s24)+12*(s13*s13)+12*(s14*s14)+5*(s23*s23)+24*(s24*s24))*pow(s12,4)+2*(6*s13+6*s14+5*s23+8*s24)*pow(s12,5)+4*pow(s12,6)+2*pow(s12,3)*((6*s14+21*s23+20*s24)*(s13*s13)+(17*s23+12*s24)*(s14*s14)+2*s24*(s23*s23)+14*s23*(s24*s24)+2*s13*(23*s23*s24+s14*(19*s23+16*s24)+3*(s14*s14)+7*(s23*s23)+15*(s24*s24))+s14*(35*s23*s24+11*(s23*s23)+18*(s24*s24))+2*pow(s13,3)+2*pow(s14,3)-2*pow(s23,3)+8*pow(s24,3))+(s23+s24)*(2*s13*s23*(s14+s24)*(-(s23*(3*s23+s24))+s14*(7*s23+s24))+(4*s14-3*s23-4*s24)*(s23*s23)*((s14+s24)*(s14+s24))+2*(5*s23*s24+3*(s23*s23)+2*(s24*s24))*pow(s13,3)+s13*s13*(8*s24*(s23*s23)+7*s23*(s24*s24)+4*s14*(3*s23*s24+4*(s23*s23)+s24*s24)-3*pow(s23,3)+4*pow(s24,3)))+s12*s12*(-11*(s23*s23)*(s24*s24)+s14*s14*(49*s23*s24+29*(s23*s23)+12*(s24*s24))+s13*s13*(93*s23*s24+4*s14*(11*s23+7*s24)+41*(s23*s23)+48*(s24*s24))+4*(4*s23+3*s24)*pow(s13,3)+4*(3*s23+s24)*pow(s14,3)-15*s24*pow(s23,3)-3*pow(s23,4)+9*s23*pow(s24,3)+s14*(26*s24*(s23*s23)+46*s23*(s24*s24)-4*pow(s23,3)+12*pow(s24,3))+2*s13*(10*(2*s23+s24)*(s14*s14)+21*s24*(s23*s23)+38*s23*(s24*s24)+s14*(67*s23*s24+35*(s23*s23)+28*(s24*s24))-pow(s23,3)+18*pow(s24,3))+4*pow(s24,4))+2*s12*(3*(5*s23*s24+3*(s23*s23)+2*(s24*s24))*pow(s13,3)+s13*s13*(27*s24*(s23*s23)+31*s23*(s24*s24)+2*s14*(15*s23*s24+12*(s23*s23)+5*(s24*s24))+4*pow(s23,3)+12*pow(s24,3))+s23*(-(s23*s24*(9*s23*s24+3*(s23*s23)+7*(s24*s24)))+s14*s14*(13*s23*s24+2*(s23*s23)+8*(s24*s24))+(6*s23+4*s24)*pow(s14,3)+s14*(-7*s24*(s23*s23)-3*pow(s23,3)+4*pow(s24,3)))+s13*(6*(s23*s23)*(s24*s24)+s14*s14*(19*s23*s24+21*(s23*s23)+4*(s24*s24))-5*s24*pow(s23,3)-3*pow(s23,4)+10*s23*pow(s24,3)+s14*(36*s24*(s23*s23)+30*s23*(s24*s24)+6*pow(s23,3)+8*pow(s24,3))+4*pow(s24,4))))*pow(s12+s13+s14+s24,-2)*pow(s12+s23+s24,-1)+8*pow(s13-s24,-2)*(-(s24*(s14+s24)*(s14*s14*(8*s23*s24+3*(s23*s23)+5*(s24*s24))+2*s14*s24*(12*s23*s24+5*(s23*s23)+5*(s24*s24))+s24*s24*(16*s23*s24+10*(s23*s23)+5*(s24*s24))))+s13*s13*(s24*s24*(12*s23*s24+6*(s23*s23)+s24*s24)+2*(s14*s14)*(4*s23*s24+s23*s23+5*(s24*s24))+s14*s24*(24*s23*s24+6*(s23*s23)+11*(s24*s24)))+(-(s24*(9*s14+6*s23+17*s24))+s13*(6*s14+4*(s23+s24))+6*(s13*s13))*pow(s12,4)+(2*s13-3*s24)*pow(s12,5)+2*s24*(3*s24*(s23+s24)+s14*(s23+4*s24))*pow(s13,3)+pow(s12,3)*((12*s14+8*s23+21*s24)*(s13*s13)+2*s13*(5*s23*s24+s14*(6*s23+7*s24)+3*(s14*s14)+s23*s23-4*(s24*s24))-s24*(30*s23*s24+6*s14*(3*s23+7*s24)+9*(s14*s14)+3*(s23*s23)+38*(s24*s24))+6*pow(s13,3))+2*(s24*s24)*pow(s13,4)+s12*s12*(s13*s13*(26*s23*s24+s14*(16*s23+37*s24)+6*(s14*s14)+2*(s23*s23)+25*(s24*s24))+2*(3*s14+2*s23+9*s24)*pow(s13,3)+2*pow(s13,4)+2*s13*((6*s23+8*s24)*(s14*s14)+s24*(s23*s24+3*(s23*s23)-14*(s24*s24))+s14*(13*s23*s24+3*(s23*s23)-s24*s24)+pow(s14,3))-s24*(3*(6*s23+11*s24)*(s14*s14)+s24*(58*s23*s24+13*(s23*s23)+42*(s24*s24))+s14*(68*s23*s24+9*(s23*s23)+72*(s24*s24))+3*pow(s14,3)))+s12*(s13*s13*(8*(s23+2*s24)*(s14*s14)+s24*(30*s23*s24+6*(s23*s23)+11*(s24*s24))+s14*(34*s23*s24+4*(s23*s23)+36*(s24*s24)))+2*(s14*(2*s23+7*s24)+s24*(5*s23+9*s24))*pow(s13,3)+4*s24*pow(s13,4)+2*s13*(s14*s24*(8*s23*s24+6*(s23*s23)-11*(s24*s24))+(-7*s23*s24+3*(s23*s23)-13*(s24*s24))*(s24*s24)+s14*s14*(11*s23*s24+3*(s23*s23)+5*(s24*s24))+(2*s23+3*s24)*pow(s14,3))-s24*(s24*s24*(50*s23*s24+20*(s23*s23)+23*(s24*s24))+2*s14*s24*(45*s23*s24+13*(s23*s23)+27*(s24*s24))+s14*s14*(46*s23*s24+9*(s23*s23)+39*(s24*s24))+(6*s23+8*s24)*pow(s14,3)))+2*s13*(s23*s24*(3*s23+7*s24)*(s14*s14)-s14*(s24*s24)*(s23*s24-3*(s23*s23)+6*(s24*s24))+(3*s23*s24+s23*s23+2*(s24*s24))*pow(s14,3)-(5*s23+4*s24)*pow(s24,4)))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s24,-2)*pow(s12+s23+s24,-1)-8*(4*s14*s23-s14*s24-5*s23*s24+s12*(21*s13+12*s14+10*s23+s24)+2*s13*(6*s14+11*s23+2*s24)+14*(s12*s12)+8*(s13*s13)+4*(s14*s14)+4*(s23*s23)-5*(s24*s24))*pow(s13,-1)*pow(s12+s13+s14+s24,-1)*pow(s12+s23+s24,-1)+8*(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(-2*s14*s23-6*s14*s24+23*s23*s24-4*s13*(3*s23+4*s24)+s12*(-18*s13-6*s14+12*s23+11*s24)+6*(s12*s12)+14*(s23*s23)+13*(s24*s24))*pow(s13,-1)*pow(s23,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)*pow(s12+s23+s24,-1)+8*(s12+4*s13+s14+s23-4*s24)*(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*pow(s13-s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1)*pow(s12+s23+s24,-1)+(16-8*s24*(s13+s24)*(6*s23*s24-2*s13*(s23+2*s24)+s12*(-2*s13+4*s23+6*s24)+2*(s12*s12)+s13*s13+2*(s23*s23)+5*(s24*s24))*pow(s13,-1)*pow(s13-s24,-3)-16*s12*pow(s24,-1)-8*s23*pow(s24,-1)+8*(s13*(s24*(s23+s24)+s14*(s23+4*s24))+s13*(s12*s12)+(s23+4*s24)*(s13*s13)+s12*(s13*(s14+s23+5*s24)+s13*s13-2*(s24*s24))-(s14+s23+2*s24)*(s24*s24))*pow(s13-s24,-2)*pow(s24,-1)+8*(7*s14*s23*s24+s13*(s14*(3*s23-2*s24)-s24*(2*s23+7*s24))+(7*s13+4*s14+8*s23+10*s24)*(s12*s12)+(10*s23-3*s24)*(s13*s13)+4*s14*(s23*s23)+3*s24*(s23*s23)+2*s14*(s24*s24)+3*s23*(s24*s24)+s12*(s13*(3*s14+7*s23)+13*s23*s24+s14*(8*s23+7*s24)+s13*s13+4*(s23*s23)+6*(s24*s24))+4*pow(s12,3))*pow(s13,-1)*pow(s13-s24,-1)*pow(s24,-1)+8*pow(s13,-1)*pow(s13-s24,-2)*(6*s14*s23*s24-s13*(5*s14*(s23+s24)+s24*(7*s23+10*s24))+(-s13+4*s14+8*s23+5*s24)*(s12*s12)+(2*s14+3*s24)*(s13*s13)+4*s14*(s23*s23)-5*s24*(s23*s23)-11*s23*(s24*s24)-s12*(-2*s14*(4*s23+3*s24)+s13*(5*s14+s23+8*s24)-4*(s23*s23)+5*(s24*s24))+4*pow(s12,3)+pow(s13,3)-7*pow(s24,3))-8*s24*(s13+s24)*(6*s14*s23+10*s14*s24+6*s23*s24+2*s13*(5*s14+3*s23+5*s24)+2*s12*(5*s13+5*s14+3*s23+5*s24)+5*(s12*s12)+5*(s13*s13)+5*(s14*s14)+2*(s23*s23)+5*(s24*s24))*pow(s13,-1)*pow(s12+s13+s14+s24,-3)-8*(3*s14*s23*s24+(5*s13+2*s14+s23+3*s24)*(s12*s12)+2*(3*s14+s23+3*s24)*(s13*s13)+s23*(s14*s14)+s24*(s14*s14)+s12*(s24*(3*s23+s24)+2*s14*(s23+2*s24)+s13*(8*s14+3*s23+9*s24)+7*(s13*s13)+s14*s14)+s13*(2*s24*(2*s23+s24)+s14*(3*s23+7*s24)+3*(s14*s14))+pow(s12,3)+3*pow(s13,3)-pow(s24,3))*pow(s12+s13+s14+s24,-3)+8*(s13-s24)*(3*s13*s14+s12*(3*s13-s24)-s24*(s14+s24)+3*(s13*s13))*pow(s13,-1)*pow(s12+s13+s14+s24,-2)+(-8*(s12+s13+s14+s23+s24)*(4*s14*s23+s12*(2*s13+4*s14+4*s23-s24)+s14*s24-5*s23*s24-2*s13*(s14+5*s24)+4*(s12*s12)-4*(s24*s24))-8*(s12+s13+s14+s24)*(4*s14*s23+s13*(-2*s14+s23-4*s24)-2*s23*s24+s12*(3*s13+4*s14+4*s23+s24)+4*(s12*s12)-2*(s13*s13)-3*(s24*s24)))*pow(s13,-1)*pow(s12+s13+s14+s24,-2)+(-8*s13*(s12+s13+s14)*(6*s13*s23+2*s14*s23+2*s12*(3*s13+s14+s23-2*s24)-2*s14*s24-6*s23*s24+2*(s12*s12)-5*(s24*s24))-8*(s13-s24)*(s12+s13+s14+s24)*(s12*(4*s13-s24)+2*s13*(s23+s24)-s24*s24))*pow(s13,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-2)+8*pow(s13-s24,-2)*pow(s24,-1)*((2*(6*s14+2*s23+7*s24)*(s13*s13)+s24*(-10*s23*s24-s14*(16*s23+29*s24)-12*(s14*s14)-2*(s23*s23)+s24*s24)+2*s13*(8*s23*s24+8*s14*(s23+2*s24)+6*(s14*s14)+s23*s23+10*(s24*s24)))*pow(s12,4)+(4*s13*(2*s14+s23+2*s24)-s24*(8*s14+4*s23+7*s24)+4*(s13*s13))*pow(s12,5)+2*(s13-s24)*pow(s12,6)-2*(s14*s14*(s23*s23-2*(s24*s24))+s24*s24*(9*s23*s24+2*(s23*s23)+4*(s24*s24))+s14*s24*(5*s23*s24+2*(s23*s23)+5*(s24*s24)))*pow(s13,3)-4*(s14+s23+2*s24)*(s24*s24)*pow(s13,4)-2*(s24*s24)*pow(s13,5)+s24*(s13*s13)*(6*s24*(2*s23+s24)*(s14*s14)+s14*s24*(-16*s23*s24-6*(s23*s23)+3*(s24*s24))+s24*s24*(-8*s23*s24-10*(s23*s23)+9*(s24*s24))+4*(2*s23+3*s24)*pow(s14,3))+pow(s12,3)*(s13*s13*(3*s24*(4*s23+7*s24)+4*s14*(3*s23+11*s24)+12*(s14*s14))-4*(s23+2*s24)*pow(s13,3)-4*pow(s13,4)+s24*(-3*(8*s23+15*s24)*(s14*s14)-2*s14*(19*s23*s24+4*(s23*s23)+9*(s24*s24))+s24*(14*s23*s24-3*(s23*s23)+34*(s24*s24))-8*pow(s14,3))+s13*(24*(s23+2*s24)*(s14*s14)+2*s24*(19*s23*s24+4*(s23*s23)+26*(s24*s24))+s14*(56*s23*s24+8*(s23*s23)+54*(s24*s24))+8*pow(s14,3)))+s12*s12*(-2*(8*s23*s24+2*s14*(2*s23+s24)+s23*s23+12*(s24*s24))*pow(s13,3)-4*(s14+s23+4*s24)*pow(s13,4)-2*pow(s13,5)+s13*s13*(s14*s24*(32*s23+49*s24)+2*(6*s23+23*s24)*(s14*s14)+(6*s23+25*s24)*(s24*s24)+4*pow(s14,3))+s24*(-3*(s14*s14)*(18*s23*s24+4*(s23*s23)+15*(s24*s24))+s14*s24*(12*s23*s24-9*(s23*s23)+40*(s24*s24))+s24*s24*(74*s23*s24+13*(s23*s23)+56*(s24*s24))-(16*s23+31*s24)*pow(s14,3)-2*pow(s14,4))+2*s13*(3*(s14*s14)*(12*s23*s24+2*(s23*s23)+9*(s24*s24))+s14*s24*(47*s23*s24+12*(s23*s23)+37*(s24*s24))+s24*s24*(35*s23*s24+7*(s23*s23)+43*(s24*s24))+8*(s23+2*s24)*pow(s14,3)+pow(s14,4)))+s24*(s14+s24)*(-(s24*(s14*s14)*(8*s23*s24+s23*s23+3*(s24*s24)))+2*s14*(s24*s24)*(16*s23*s24+7*(s23*s23)+6*(s24*s24))-2*(4*s23*s24+s23*s23+3*(s24*s24))*pow(s14,3)+(32*s23*s24+22*(s23*s23)+9*(s24*s24))*pow(s24,3))+s12*(-2*(2*(s23-s24)*(s14*s14)+s14*(8*s23*s24+2*(s23*s23)+7*(s24*s24))+s24*(15*s23*s24+2*(s23*s23)+12*(s24*s24)))*pow(s13,3)-4*(s14*(s23+2*s24)+s24*(2*s23+5*s24))*pow(s13,4)-4*s24*pow(s13,5)+s13*s13*(4*s24*(7*s23+10*s24)*(s14*s14)+2*s14*(9*s23+10*s24)*(s24*s24)+s24*s24*(-10*s23*s24-6*(s23*s23)+23*(s24*s24))+4*(s23+4*s24)*pow(s14,3))+2*s13*(s24*(s14*s14)*(37*s23*s24+12*(s23*s23)+12*(s24*s24))+s14*(s24*s24)*(42*s23*s24+14*(s23*s23)+37*(s24*s24))+(20*s23*s24+4*(s23*s23)+13*(s24*s24))*pow(s14,3)+2*(s23+2*s24)*pow(s14,4)+(41*s23*s24+7*(s23*s23)+34*(s24*s24))*pow(s24,3))+s24*(-3*s24*(s14*s14)*(6*s23*s24+3*(s23*s23)+s24*s24)+2*s14*(s24*s24)*(49*s23*s24+13*(s23*s23)+29*(s24*s24))-2*(17*s23*s24+4*(s23*s23)+16*(s24*s24))*pow(s14,3)-4*(s23+2*s24)*pow(s14,4)+(86*s23*s24+36*(s23*s23)+37*(s24*s24))*pow(s24,3)))+2*s13*(s14*s14*(s24*s24)*(7*s23*s24+7*(s23*s23)+3*(s24*s24))+s24*(9*s23*s24+4*(s23*s23)+s24*s24)*pow(s14,3)+(4*s23*s24+s23*s23+3*(s24*s24))*pow(s14,4)+s14*(21*s23*s24+7*(s23*s23)+15*(s24*s24))*pow(s24,3)+(19*s23*s24+6*(s23*s23)+10*(s24*s24))*pow(s24,4)))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s24,-2)+8*(9*s14*s23*s24+s13*(s14*(8*s23-4*s24)-s24*(5*s23+13*s24))+(7*s13+5*s14+6*s23+8*s24)*(s12*s12)+2*(9*s23+s24)*(s13*s13)+4*s23*(s14*s14)+2*s24*(s14*s14)+5*s14*(s23*s23)+3*s24*(s23*s23)+s14*(s24*s24)+3*s23*(s24*s24)+s12*(15*s23*s24+s13*(10*s14+13*s23+3*s24)+s14*(10*s23+11*s24)+18*(s13*s13)+4*(s14*s14)+5*(s23*s23)+7*(s24*s24))+pow(s12,3))*pow(s13,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)+8*(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*(13*s14*s23+2*s13*(s23-s24)+10*s14*s24-2*s23*s24+s12*(8*s13+13*s14+13*s23+9*s24)+9*(s12*s12)+2*(s13*s13)+4*(s14*s14)-3*(s24*s24))*pow(s24,-1)*pow(-s13+s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1))*pow(s12+s23+s24,-1))/32.;
}

// Coefficient order epsilon^1 of master 5
template<>
double qq2yygCA<5,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (16*pow(s13,-1)-8*(s13+s24)*(s12-s13+s23+2*s24)*pow(s13,-1)*pow(s13-s24,-2)-16*pow(s24,-1)+8*(s12+5*s13+s14-s24)*pow(s13,-1)*pow(s24,-1)-8*(5*s12+s13+5*s14+3*s23+6*s24)*pow(s13,-1)*pow(s24,-1)-16*pow(s13,-1)*(-(s13*s24*(s24*(23*s23+16*s24)+s14*(16*s23+23*s24)))+(s14*(6*s23-9*s24)-s24*(9*s23+10*s24))*(s13*s13)+2*(9*s24*(s23+s24)+s14*(4*s23+9*s24))*(s24*s24)+2*(s12*s12)*(-8*s13*s24+3*(s13*s13)+4*(s24*s24))+6*(2*s14+2*s23-s24)*pow(s13,3)+2*s12*(-8*s13*s24*(s14+s23+2*s24)+(3*s14+3*s23-8*s24)*(s13*s13)+(4*s14+4*s23+13*s24)*(s24*s24)+9*pow(s13,3))+12*pow(s13,4))*pow(s13-s24,-3)*pow(s24,-1)+8*(s13+s24)*(2*s13*s14+s12*(2*s13-s24)-s24*(s14+s24)+2*(s13*s13))*pow(s13,-1)*pow(s13-s24,-2)*pow(s24,-1)+8*pow(s13,-1)*(-(s23*s24*(6*s24*(6*s23+7*s24)+s14*(12*s23+37*s24)))+s12*s12*(s13*(13*s14+26*s23+28*s24)-s24*(12*s14+24*s23+49*s24)+28*(s13*s13))+s13*(s24*(-14*s23*s24+30*(s23*s23)-37*(s24*s24))+s14*(27*s23*s24+13*(s23*s23)-32*(s24*s24)))+s13*s13*(55*s23*s24+3*s14*(5*s23+12*s24)+8*(s23*s23)+19*(s24*s24))+(13*s13-12*s24)*pow(s12,3)+(8*s23+23*s24)*pow(s13,3)+s12*(3*(5*s14+12*s23+21*s24)*(s13*s13)+s13*(58*s23*s24+s14*(26*s23+27*s24)+13*(s23*s23)-30*(s24*s24))-s24*(85*s23*s24+s14*(24*s23+37*s24)+12*(s23*s23)+37*(s24*s24))+15*pow(s13,3)))*pow(s12+s13+s23,-1)*pow(s13-s24,-2)*pow(s24,-1)-8*(19*s12*(s13+s24)+s13*(17*s14+12*s23+16*s24)+s24*(12*s14+17*s23+20*s24)+20*(s13*s13))*pow(s13,-1)*pow(s13-s24,-1)*pow(s24,-1)+8*(3*s12+7*s13+3*s23+5*s24)*(s12*s13+s13*(s14+s23)-s23*s24+s13*s13)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s13-s24,-1)*pow(s24,-1)-8*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13-s24,-3)*pow(s24,-1)*(s13*(s24*s24)*(4*s23*(s14*s14)+(3*s23-2*s24)*(s24*s24)+s14*(-17*s23*s24-9*(s23*s23)+18*(s24*s24)))-s24*(s13*s13)*(6*s23*(s14*s14)+(s23-15*s24)*(s24*s24)+s14*(9*s23*s24+2*(s23*s23)+24*(s24*s24)))+(2*s23*(s14*s14)+4*s14*(-3*s23*s24+s23*s23-2*(s24*s24))-(2*s23+17*s24)*(s24*s24))*pow(s13,3)+2*(-3*s24*(2*s23+s24)+s14*(7*s23+6*s24))*pow(s13,4)+8*(s23+s24)*pow(s13,5)+s14*s23*(-2*s14+7*s23+18*s24)*pow(s24,3)+pow(s12,3)*(-6*s24*(s13*s13)-11*s13*(s24*s24)+6*pow(s13,3)+9*pow(s24,3))+s12*s12*(-2*s24*(4*s14+6*s23+13*s24)*(s13*s13)-9*s13*(s14+2*s23-s24)*(s24*s24)+2*(3*s14+6*s23-5*s24)*pow(s13,3)+14*pow(s13,4)+(7*s14+16*s23+7*s24)*pow(s24,3))+s12*(-(s24*(s13*s13)*(26*s23*s24+3*s14*(6*s23+5*s24)+2*(s14*s14)+2*(s23*s23)+17*(s24*s24)))+s13*(s24*s24)*(15*s23*s24-s14*(14*s23+15*s24)+2*(s14*s14)-9*(s23*s23)+22*(s24*s24))+(14*s14*s23-18*s23*s24+4*(s23*s23)-21*(s24*s24))*pow(s13,3)+2*(4*s14+9*s23+2*s24)*pow(s13,4)+8*pow(s13,5)+(5*s23*s24+2*s14*(7*s23+8*s24)-2*(s14*s14)+7*(s23*s23)-2*(s24*s24))*pow(s24,3)))-8*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-3)*pow(s13-s24,-2)*pow(s24,-1)*((2*s13*s24-7*(s13*s13)+3*(s24*s24))*pow(s12,6)+pow(s12,5)*(s13*s24*(6*s14+s23+37*s24)-(7*s14+29*s23+30*s24)*(s13*s13)+(-2*s14+19*s23-2*s24)*(s24*s24)-21*pow(s13,3))-pow(s12,4)*(s13*s13*(139*s23*s24+s14*(29*s23+23*s24)-s14*s14+48*(s23*s23)-87*(s24*s24))+s24*s24*(s14*(s23-16*s24)-2*s23*s24+5*(s14*s14)-45*(s23*s23)+3*(s24*s24))-s13*s24*(s14*(17*s23-4*s24)+148*s23*s24+3*(s14*s14)-13*(s23*s23)+15*(s24*s24))+(8*s14+66*s23+133*s24)*pow(s13,3)+16*pow(s13,4))+((2*s23-s24)*(s14*s14)+s14*(-16*s23*s24+26*(s23*s23)-43*(s24*s24))+s24*(-101*s23*s24-72*(s23*s23)+53*(s24*s24)))*pow(s13,5)+(-14*s23*s24+s14*(11*s23+6*s24)+16*(s23*s23)-47*(s24*s24))*pow(s13,6)+(8*s23+7*s24)*pow(s13,7)+s14*(s24*s24)*(15*s23*s24+s14*(-5*s23+6*s24)+6*(s23*s23)+4*(s24*s24))*pow(s23,3)+s13*s24*(s23*s23)*(2*(s14*s14)*(-9*s23*s24+2*(s23*s23)+5*(s24*s24))-s23*pow(s14,3)+s24*(-8*s24*(s23*s23)+s23*(s24*s24)-8*pow(s23,3)+4*pow(s24,3))+s14*(31*s24*(s23*s23)+95*s23*(s24*s24)-4*pow(s23,3)+8*pow(s24,3)))+pow(s12,3)*((-429*s23*s24-15*s14*(s23+6*s24)+11*(s14*s14)-86*(s23*s23)+22*(s24*s24))*pow(s13,3)+2*(5*s14-11*s23-96*s24)*pow(s13,4)+8*pow(s13,5)+s13*s24*((13*s23-18*s24)*(s14*s14)+220*s24*(s23*s23)+76*s23*(s24*s24)+s14*(18*s23*s24+11*(s23*s23)+53*(s24*s24))-pow(s14,3)-25*pow(s23,3)-34*pow(s24,3))+s24*s24*((-20*s23+6*s24)*(s14*s14)+15*s24*(s23*s23)-7*s23*(s24*s24)+s14*(65*s23*s24+15*(s23*s23)+12*(s24*s24))+51*pow(s23,3)+6*pow(s24,3))+s13*s13*(3*(s23-s24)*(s14*s14)-217*s24*(s23*s23)+252*s23*(s24*s24)-s14*(132*s23*s24+48*(s23*s23)+31*(s24*s24))+pow(s14,3)-40*pow(s23,3)+110*pow(s24,3)))-pow(s13,4)*(s23*(-11*s23+9*s24)*(s14*s14)+24*(s23*s23)*(s24*s24)+s23*pow(s14,3)+58*s24*pow(s23,3)+16*pow(s23,4)-124*s23*pow(s24,3)-2*s14*(-39*s24*(s23*s23)-76*s23*(s24*s24)+8*pow(s23,3)+13*pow(s24,3))+25*pow(s24,4))+s23*(s13*s13)*(4*(-7*s23+s24)*(s14*s14)*(s24*s24)+s23*(s23-5*s24)*pow(s14,3)+s14*(-30*(s23*s23)*(s24*s24)-50*s24*pow(s23,3)-3*pow(s23,4)+166*s23*pow(s24,3)+8*pow(s24,4))+s24*(-3*(s23*s23)*(s24*s24)+14*s24*pow(s23,3)+16*pow(s23,4)-24*s23*pow(s24,3)+10*pow(s24,4)))+s12*s12*((s14*(52*s23-81*s24)-451*s23*s24+9*(s14*s14)-18*(s23*s23)-131*(s24*s24))*pow(s13,4)+2*(8*s14+23*s23-54*s24)*pow(s13,5)+15*pow(s13,6)+s23*(s24*s24)*(-6*(5*s23-3*s24)*(s14*s14)+16*s24*(s23*s23)-7*s23*(s24*s24)+s14*(97*s23*s24+31*(s23*s23)+28*(s24*s24))+28*pow(s23,3)+10*pow(s24,3))+pow(s13,3)*((31*s23-3*s24)*(s14*s14)-451*s24*(s23*s23)+35*s23*(s24*s24)-s14*(299*s23*s24+8*(s23*s23)+101*(s24*s24))+4*pow(s14,3)-66*pow(s23,3)+220*pow(s24,3))+s13*s13*(s14*s14*(-6*s23*s24+3*(s23*s23)-22*(s24*s24))+275*(s23*s23)*(s24*s24)+(3*s23-5*s24)*pow(s14,3)-121*s24*pow(s23,3)-17*pow(s23,4)-s14*(245*s24*(s23*s23)+103*s23*(s24*s24)+40*pow(s23,3)-84*pow(s24,3))+270*s23*pow(s24,3)-84*pow(s24,4))+s13*s24*(93*(s23*s23)*(s24*s24)+s14*s14*(-54*s23*s24+21*(s23*s23)+10*(s24*s24))-3*s23*pow(s14,3)+136*s24*pow(s23,3)-17*pow(s23,4)-60*s23*pow(s24,3)+s14*(79*s24*(s23*s23)+208*s23*(s24*s24)-9*pow(s23,3)+28*pow(s24,3))+18*pow(s24,4)))+pow(s13,3)*(4*(s23*s23)*pow(s14,3)+52*(s24*s24)*pow(s23,3)+s14*s14*(-3*s23*(s24*s24)+9*pow(s23,3))+9*s24*pow(s23,4)-8*pow(s23,5)+80*(s23*s23)*pow(s24,3)-2*s14*(76*(s23*s23)*(s24*s24)+51*s24*pow(s23,3)+pow(s23,4)-62*s23*pow(s24,3)-2*pow(s24,4))-46*s23*pow(s24,4)+6*pow(s24,5))+s12*(-((-7*s14*(7*s23-2*s24)+176*s23*s24+s14*s14-36*(s23*s23)+147*(s24*s24))*pow(s13,5))+(5*s14+39*s23-10*s24)*pow(s13,6)+5*pow(s13,7)-pow(s13,4)*(-2*(10*s23+s24)*(s14*s14)+319*s24*(s23*s23)+189*s23*(s24*s24)+s14*(166*s23*s24-58*(s23*s23)+115*(s24*s24))+pow(s14,3)+28*pow(s23,3)-180*pow(s24,3))+s23*s23*(s24*s24)*((-20*s23+18*s24)*(s14*s14)+5*s24*(s23*s23)-3*s23*(s24*s24)+s14*(63*s23*s24+23*(s23*s23)+20*(s24*s24))+6*pow(s23,3)+4*pow(s24,3))+pow(s13,3)*(s14*s14*(-3*s23*s24+29*(s23*s23)-9*(s24*s24))+76*(s23*s23)*(s24*s24)+8*s23*pow(s14,3)-146*s24*pow(s23,3)-33*pow(s23,4)-s14*(311*s24*(s23*s23)+274*s23*(s24*s24)+3*pow(s23,3)-73*pow(s24,3))+320*s23*pow(s24,3)-78*pow(s24,4))+s13*s23*s24*(24*(s23*s23)*(s24*s24)+s14*s14*(-54*s23*s24+15*(s23*s23)+20*(s24*s24))-3*s23*pow(s14,3)+19*s24*pow(s23,3)-4*pow(s23,4)-31*s23*pow(s24,3)+s14*(88*s24*(s23*s23)+250*s23*(s24*s24)-13*pow(s23,3)+36*pow(s24,3))+20*pow(s24,4))+s13*s13*(s23*(3*s23-10*s24)*pow(s14,3)+124*(s24*s24)*pow(s23,3)+3*s24*pow(s23,4)-3*pow(s23,5)+158*(s23*s23)*pow(s24,3)+s14*s14*(-3*s24*(s23*s23)-50*s23*(s24*s24)+pow(s23,3)+4*pow(s24,3))-99*s23*pow(s24,4)+s14*(-102*(s23*s23)*(s24*s24)-186*s24*pow(s23,3)-17*pow(s23,4)+267*s23*pow(s24,3)+20*pow(s24,4))+18*pow(s24,5))))+8*((s13+s24)*(s12+s13+s14+s23+s24)+(s12+s13+s14+s24)*(s12+s13+s14+s24))*pow(s13,-1)*pow(s12+s13+s14+s24,-2)+(40*s13*(s12+s13+s14)*s24+16*(s13-s24)*(s12+2*s13+s14-s24)*(s12+s13+s14+s24))*pow(s13,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-2)+8*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13-s24,-2)*pow(s24,-1)*((s13*(22*s14+17*s23-4*s24)-2*s24*(13*s14+10*s23+13*s24)+24*(s13*s13))*pow(s12,6)+(5*s13-6*s24)*pow(s12,7)+pow(s12,5)*((90*s14+59*s23+60*s24)*(s13*s13)+s13*(-13*s23*s24+2*s14*(44*s23+7*s24)+35*(s14*s14)+6*(s23*s23)-75*(s24*s24))-s24*(70*s23*s24+6*s14*(17*s23+20*s24)+40*(s14*s14)+8*(s23*s23)+39*(s24*s24))+44*pow(s13,3))+(s14*s24*(4*s23+27*s24)+(4*s23-9*s24)*(s14*s14)+2*(8*s23+7*s24)*(s24*s24))*pow(s13,5)+2*s24*(-3*s14+s24)*pow(s13,6)+pow(s13,4)*(s24*s24*(-(s23*s24)+12*(s23*s23)+3*(s24*s24))+3*s14*s24*(19*s23*s24+2*(s23*s23)+25*(s24*s24))+s14*s14*(33*s23*s24+2*(s23*s23)+101*(s24*s24))+(19*s23+9*s24)*pow(s14,3))+pow(s12,4)*(s13*s13*(70*s23*s24+s14*(253*s23+293*s24)+120*(s14*s14)+14*(s23*s23)-9*(s24*s24))+9*(14*s14+9*s23+16*s24)*pow(s13,3)+38*pow(s13,4)-2*s24*(5*(21*s23+22*s24)*(s14*s14)+s24*(39*s23*s24+11*(s23*s23)+10*(s24*s24))+s14*(157*s23*s24+20*(s23*s23)+109*(s24*s24))+10*pow(s14,3))+s13*((185*s23+96*s24)*(s14*s14)+3*s14*(-11*s23*s24+10*(s23*s23)-68*(s24*s24))-s24*(148*s23*s24+4*(s23*s23)+145*(s24*s24))+20*pow(s14,3)))+pow(s12,3)*((139*s23*s24+s14*(272*s23+471*s24)+114*(s14*s14)+10*(s23*s23)+140*(s24*s24))*pow(s13,3)+(64*s14+53*s23+126*s24)*pow(s13,4)+15*pow(s13,5)+s13*s13*((422*s23+528*s24)*(s14*s14)+s24*(-112*s23*s24+15*(s23*s23)-135*(s24*s24))+s14*(291*s23*s24+56*(s23*s23)+206*(s24*s24))+60*pow(s14,3))-s13*(s24*s24*(186*s23*s24+46*(s23*s23)+103*(s24*s24))+s14*s14*(2*s23*s24-60*(s23*s23)+152*(s24*s24))+s14*s24*(460*s23*s24+16*(s23*s23)+465*(s24*s24))-4*(50*s23+41*s24)*pow(s14,3)+5*pow(s14,4))+s24*(s24*s24*(-8*s23*s24-5*(s23*s23)+4*(s24*s24))-4*(s14*s14)*(139*s23*s24+20*(s23*s23)+110*(s24*s24))-s14*s24*(339*s23*s24+88*(s23*s23)+206*(s24*s24))-20*(11*s23+10*s24)*pow(s14,3)+10*pow(s14,4)))-s14*s24*(s14+s24)*(s14*(s24*s24)*(34*s23*s24-9*(s23*s23)+20*(s24*s24))+s24*(s14*s14)*(73*s23*s24+14*(s23*s23)+40*(s24*s24))+4*(8*s23*s24+2*(s23*s23)+5*(s24*s24))*pow(s14,3)+2*s23*pow(s14,4)-s23*(23*s23+9*s24)*pow(s24,3))+pow(s13,3)*(s14*(s24*s24)*(-3*s23*s24+11*(s23*s23)+6*(s24*s24))+s24*(s14*s14)*(134*s23*s24+19*(s23*s23)+137*(s24*s24))+(89*s23*s24+10*(s23*s23)+147*(s24*s24))*pow(s14,3)+(29*s23+21*s24)*pow(s14,4)-(37*s23*s24+20*(s23*s23)+11*(s24*s24))*pow(s24,3))+s12*s12*((106*s23*s24+s14*(125*s23+251*s24)+14*(s14*s14)+2*(s23*s23)+141*(s24*s24))*pow(s13,4)+2*(7*s23+22*s24)*pow(s13,5)+2*pow(s13,6)+pow(s13,3)*((330*s23+531*s24)*(s14*s14)+s24*(4*s23*s24+19*(s23*s23)+13*(s24*s24))+s14*(367*s23*s24+30*(s23*s23)+523*(s24*s24))+26*pow(s14,3))+s13*s13*(s14*s24*(-107*s23*s24+45*(s23*s23)-130*(s24*s24))-4*(s24*s24)*(52*s23*s24+10*(s23*s23)+31*(s24*s24))+s14*s14*(453*s23*s24+84*(s23*s23)+520*(s24*s24))+(338*s23+426*s24)*pow(s14,3))+s24*(-3*s14*(s24*s24)*(41*s23*s24+5*(s23*s23)+36*(s24*s24))-s24*(s14*s14)*(549*s23*s24+132*(s23*s23)+412*(s24*s24))-2*(242*s23*s24+40*(s23*s23)+201*(s24*s24))*pow(s14,3)-30*(4*s23+3*s24)*pow(s14,4)+14*pow(s14,5)+2*(19*s23*s24+16*(s23*s23)+3*(s24*s24))*pow(s24,3))-s13*(s14*(s24*s24)*(530*s23*s24+138*(s23*s23)+411*(s24*s24))+s24*(s14*s14)*(492*s23*s24+24*(s23*s23)+541*(s24*s24))-2*(31*s23*s24+30*(s23*s23)+9*(s24*s24))*pow(s14,3)-(115*s23+116*s24)*pow(s14,4)+10*pow(s14,5)+(38*s23*s24+37*(s23*s23)+20*(s24*s24))*pow(s24,3)))+s13*s13*(-4*(s14*s14)*(s24*s24)*(11*s23*s24+10*(s23*s23)+16*(s24*s24))+s24*(117*s23*s24+15*(s23*s23)+58*(s24*s24))*pow(s14,3)+(81*s23*s24+14*(s23*s23)+81*(s24*s24))*pow(s14,4)+(17*s23+9*s24)*pow(s14,5)-s14*(88*s23*s24+89*(s23*s23)+51*(s24*s24))*pow(s24,3)-(3*s23*s24+28*(s23*s23)+s24*s24)*pow(s24,4))+s12*((9*s14*(2*s23+3*s24)+s24*(30*s23+43*s24)-15*(s14*s14))*pow(s13,5)+(-6*s14+4*s24)*pow(s13,6)+pow(s13,4)*((91*s23+134*s24)*(s14*s14)+2*s24*(26*s23*s24+3*(s23*s23)+28*(s24*s24))+s14*(139*s23*s24+4*(s23*s23)+262*(s24*s24))-12*pow(s14,3))+pow(s13,3)*((-91*s23*s24+11*(s23*s23)-38*(s24*s24))*(s24*s24)+2*s14*s24*(69*s23*s24+19*(s23*s23)+92*(s24*s24))+s14*s14*(317*s23*s24+30*(s23*s23)+530*(s24*s24))+3*(56*s23+75*s24)*pow(s14,3)-6*pow(s14,4))+s13*s13*(-4*s14*(s24*s24)*(63*s23*s24+20*(s23*s23)+46*(s24*s24))+s24*(s14*s14)*(122*s23*s24+45*(s23*s23)+63*(s24*s24))+(313*s23*s24+56*(s23*s23)+386*(s24*s24))*pow(s14,3)+(127*s23+140*s24)*pow(s14,4)-6*pow(s14,5)-(88*s23*s24+89*(s23*s23)+35*(s24*s24))*pow(s24,3))+s24*(-(s14*s14*(s24*s24)*(222*s23*s24+15*(s23*s23)+172*(s24*s24)))-s24*(393*s23*s24+88*(s23*s23)+286*(s24*s24))*pow(s14,3)-(206*s23*s24+40*(s23*s23)+161*(s24*s24))*pow(s14,4)-2*(15*s23+8*s24)*pow(s14,5)+4*pow(s14,6)+s14*(13*s23*s24+64*(s23*s23)-26*(s24*s24))*pow(s24,3)+(18*s23*s24+23*(s23*s23)+s24*s24)*pow(s24,4))-s13*(s14*s14*(s24*s24)*(502*s23*s24+138*(s23*s23)+463*(s24*s24))+s24*(196*s23*s24+16*(s23*s23)+267*(s24*s24))*pow(s14,3)-3*(21*s23*s24+10*(s23*s23)+17*(s24*s24))*pow(s14,4)-2*(16*s23+15*s24)*pow(s14,5)+3*pow(s14,6)+s14*(184*s23*s24+74*(s23*s23)+173*(s24*s24))*pow(s24,3)-(55*s23*s24+41*(s23*s23)+5*(s24*s24))*pow(s24,4)))+s13*(-(s24*s24*(158*s23*s24+46*(s23*s23)+155*(s24*s24))*pow(s14,3))-2*s24*(8*s23*s24+2*(s23*s23)+23*(s24*s24))*pow(s14,4)+(19*s23*s24+6*(s23*s23)+10*(s24*s24))*pow(s14,5)+3*s23*pow(s14,6)-s14*s14*(146*s23*s24+37*(s23*s23)+131*(s24*s24))*pow(s24,3)+s14*(5*s23*s24+41*(s23*s23)-31*(s24*s24))*pow(s24,4)+(25*s23*s24+36*(s23*s23)+s24*s24)*pow(s24,5)))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s24,-2)+8*pow(s13,-1)*pow(s13-s24,-2)*pow(s24,-1)*(-2*s14*s24*(s14+s24)*(2*s14*s24*(8*s23+5*s24)+7*s23*(s14*s14)+(11*s23+10*s24)*(s24*s24))+(s13*(52*s14+13*s23-29*s24)-2*s24*(28*s14+7*s23+30*s24)+78*(s13*s13))*pow(s12,4)+(13*s13-14*s24)*pow(s12,5)+pow(s12,3)*((280*s14+65*s23+76*s24)*(s13*s13)-2*s24*(s24*(23*s23+50*s24)+s14*(28*s23+90*s24)+42*(s14*s14))+s13*(s14*(52*s23-135*s24)-s24*(28*s23+183*s24)+78*(s14*s14))+164*pow(s13,3))+(2*s24*(21*s23+23*s24)+s14*(47*s23+185*s24)+142*(s14*s14))*pow(s13,4)+(52*s14+47*s24)*pow(s13,5)+pow(s13,3)*(10*s14*s24*(12*s23+s24)+(99*s23+175*s24)*(s14*s14)+3*(8*s23-9*s24)*(s24*s24)+136*pow(s14,3))+s12*s12*(3*(s13*s13)*(2*(9*s23-20*s24)*s24+s14*(65*s23+51*s24)+124*(s14*s14))+(464*s14+99*s23+236*s24)*pow(s13,3)+146*pow(s13,4)-2*s24*(s14*s24*(69*s23+110*s24)+6*(7*s23+15*s24)*(s14*s14)+(27*s23+38*s24)*(s24*s24)+28*pow(s14,3))+s13*(-6*s14*s24*(14*s23+83*s24)+3*(26*s23-77*s24)*(s14*s14)-(127*s23+263*s24)*(s24*s24)+52*pow(s14,3)))-s13*(s14+s24)*(s24*(41*s23+84*s24)*(s14*s14)+2*s14*(43*s23+46*s24)*(s24*s24)+(-13*s23+48*s24)*pow(s14,3)+2*(18*s23+17*s24)*pow(s24,3))+s13*s13*(2*(27*s23-71*s24)*s24*(s14*s14)-s14*(59*s23+149*s24)*(s24*s24)+(65*s23+s24)*pow(s14,3)+46*pow(s14,4)-2*(23*s23+26*s24)*pow(s24,3))+s12*((15*s24*(8*s23+3*s24)+3*s14*(66*s23+137*s24)+436*(s14*s14))*pow(s13,3)+(288*s14+47*s23+192*s24)*pow(s13,4)+47*pow(s13,5)+s13*s13*(2*s14*(54*s23-131*s24)*s24+39*(5*s23+2*s24)*(s14*s14)-(59*s23+170*s24)*(s24*s24)+216*pow(s14,3))-2*s24*(s24*(69*s23+70*s24)*(s14*s14)+2*s14*(27*s23+29*s24)*(s24*s24)+(28*s23+30*s24)*pow(s14,3)+7*pow(s14,4)+11*(s23+s24)*pow(s24,3))+s13*(-3*s24*(28*s23+149*s24)*(s14*s14)-s14*(254*s23+439*s24)*(s24*s24)+(52*s23-173*s24)*pow(s14,3)+13*pow(s14,4)-2*(61*s23+78*s24)*pow(s24,3))))*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-2)-8*(2*s14*s23+10*s14*s24+17*s23*s24+3*s13*(7*s14+4*s23+6*s24)+s12*(23*s13+16*s14+2*s23+17*s24)+4*(s12*s12)+19*(s13*s13)+12*(s14*s14)+20*(s24*s24))*pow(s13,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)+16*(2*s13*s23*(s23*s24+s14*(2*s23+s24))+s23*s23*(s14*s14-s24*s24)+s13*s13*(4*s23*s24+3*(s23*s23)+s24*s24)+2*s12*(s14*s23*(s14+s23+s24)+(2*s23+s24)*(s13*s13)+s13*(3*s23*s24+s14*(3*s23+s24)+2*(s23*s23)+s24*s24))+s12*s12*(2*s14*(2*s23+s24)+2*s13*(s14+3*s23+2*s24)+s13*s13+s14*s14+(s23+s24)*(s23+s24))+2*(s13+s14+s23+s24)*pow(s12,3)+pow(s12,4))*pow(s13,-1)*pow(s23,-2)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)-8*(4*s13-6*s14-s24)*(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)-8*(3*s12+5*s13+3*s14+7*s24)*(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*pow(s24,-1)*pow(-s13+s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1)+pow(s23,-1)*(16*s24*pow(s12+s13+s14,-1)+16*(s12+s13+s14+s24)*pow(s12+s13+s14,-1)-8*(5*s12+7*s13+7*s14+2*s23+7*s24)*pow(s12+s13+s14,-1)+s24*(-8*(3*s12+3*s13+4*s14-s23-2*s24)*(s12+s23+s24)-8*(s13-s24)*(4*s12+3*s13+4*s14+4*s23+3*s24))*pow(s12+s13+s14,-1)*pow(s13-s24,-2)+(8*s13*(s12+s13+s14)*(s12-2*s13+s14-s24)-8*(s13-s24)*(s12+s13+s14+s24)*(8*s12+6*s13+4*s14+4*s23+9*s24))*pow(s12+s13+s14,-1)*pow(s13-s24,-2)+16*s24*(s12+s13+s14+s24)*pow(s12+s13+s14,-1)*pow(s13-s24,-1)-8*(4*s14*s23+s12*(s13+15*s14-12*s23-13*s24)-5*s14*s24-28*s23*s24+s13*(6*s14-s23+3*s24)+s12*s12-10*(s13*s13)+4*(s14*s14)-10*(s23*s23)-24*(s24*s24))*pow(s12+s13+s14,-1)*pow(s13-s24,-1)+16*((s12+s13+s14+s24)*(s12+s13+s14+s24))*pow(s12+s13+s14,-1)*pow(s13-s24,-1)+16*(s13-s24)*(s23+s24)*pow(s12+s13+s14,-1)*pow(s24,-1)+(8*(2*s12-s23)*(s12+s13+s14+s24)+8*(s12+s13+s14+s23+s24)*(3*s23+s24))*pow(s12+s13+s14,-1)*pow(s24,-1)+8*(3*s14*s23+20*s14*s24+3*s23*s24+s13*(3*s23+8*s24)+s12*(4*s13+4*s14+7*s23+14*s24)+4*(s12*s12)+6*(s23*s23)+15*(s24*s24))*pow(s12+s13+s14,-1)*pow(s24,-1)-8*(s12*s13+s13*(s14+s23)-s23*s24+s13*s13)*(-4*s13*s23-s14*s24+19*s23*s24+s12*(-6*s13+6*s23+13*s24)+4*(s12*s12)+6*(s23*s23)+19*(s24*s24))*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-1)*pow(s13-s24,-1)*pow(s24,-1)-8*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-2)*pow(s13-s24,-2)*pow(s24,-1)*(s23*s23*(s23*s24-s24*(2*s14+s24)+3*(s23*s23))*(s24*s24)+s13*(s13+2*s24)*pow(s12,4)+pow(s12,3)*(2*s13*s24*(2*s14+3*s24)+(2*s14+2*s23-s24)*(s13*s13)+4*s23*(s24*s24)+5*pow(s13,3))+(-7*s23*s24-2*s14*(3*s23+4*s24)-3*(s23*s23)+s24*s24)*pow(s13,4)+s12*s12*(s23*(4*s14+7*s23+2*s24)*(s24*s24)+s13*s13*(-4*s14*s24-11*s23*s24+s14*s14+4*(s23*s23)+13*(s24*s24))+2*s13*s24*(s14*(4*s23+5*s24)+s14*s14+2*(5*s23*s24-2*(s23*s23)+s24*s24))+(8*s14+5*s23-12*s24)*pow(s13,3)+7*pow(s13,4))-(3*s23+4*s24)*pow(s13,5)+s13*s23*s24*(10*s14*s23*s24+(6*s23+4*s24)*(s14*s14)+s24*(s23*s23)-6*pow(s23,3)-2*pow(s24,3))+pow(s13,3)*(-((3*s23+4*s24)*(s14*s14))-2*s24*(s23*s23)+12*s23*(s24*s24)+s14*(-4*s23*s24-6*(s23*s23)+6*(s24*s24))+3*pow(s23,3)+4*pow(s24,3))+s13*s13*(2*s14*s24*(9*s23*s24+2*(s23*s23)+2*(s24*s24))+s14*s14*(3*s23*s24-3*(s23*s23)+5*(s24*s24))+s23*(-5*s24*(s23*s23)+9*s23*(s24*s24)+3*pow(s23,3)+4*pow(s24,3)))+s12*(s23*(2*s23-s24)*(2*s14+3*s23+2*s24)*(s24*s24)+s13*s24*(4*(2*s23+s24)*(s14*s14)+4*s14*(7*s23*s24+s23*s23+s24*s24)+s23*(13*s23*s24-12*(s23*s23)+6*(s24*s24)))+(-18*s23*s24-2*s14*(s23+8*s24)+3*(s14*s14)+3*(s23*s23)+8*(s24*s24))*pow(s13,3)+(6*s14-13*s24)*pow(s13,4)+3*pow(s13,5)+s13*s13*(-((2*s23+3*s24)*(s14*s14))-11*s24*(s23*s23)-2*s14*(2*s23*s24+s23*s23-8*(s24*s24))+28*s23*(s24*s24)+6*pow(s23,3)+8*pow(s24,3))))+s24*(8*(3*s12+3*s13+3*s14-s23-2*s24)*(s12+s13+s14+s23+s24)-8*(s12+s13+s14+s24)*(7*s12+7*s13+7*s14+4*s23+3*s24))*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s24,-2)-8*pow(s13-s24,-2)*(s13*s13*((4*s23*s24+2*(s23*s23)-s24*s24)*(s24*s24)+2*s14*s24*(4*s23*s24+s23*s23+s24*s24)+s14*s14*(2*s23*s24+s23*s23+3*(s24*s24)))-2*s24*(s14+s24)*(s24*s24*(4*s23*s24+3*(s23*s23)+s24*s24)+s14*s24*(6*s23*s24+3*(s23*s23)+2*(s24*s24))+s14*s14*((s23+s24)*(s23+s24)))+(s13*(3*s14+2*s23)-2*s24*(3*s14+2*s23+5*s24)+3*(s13*s13))*pow(s12,4)+(s13-2*s24)*pow(s12,5)+(3*s14+2*(s23+s24))*(s24*s24)*pow(s13,3)+pow(s12,3)*((6*s14+4*s23+8*s24)*(s13*s13)+s13*(2*s23*s24+2*s14*(3*s23+s24)+3*(s14*s14)+s23*s23-10*(s24*s24))-2*s24*(9*s23*s24+6*s14*(s23+2*s24)+3*(s14*s14)+s23*s23+10*(s24*s24))+3*pow(s13,3))+s24*s24*pow(s13,4)+s12*s12*(s13*s13*(10*s23*s24+2*s14*(4*s23+7*s24)+3*(s14*s14)+s23*s23+6*(s24*s24))+(3*s14+2*s23+8*s24)*pow(s13,3)+pow(s13,4)+s13*((6*s23+4*s24)*(s14*s14)+2*s24*(-3*s23*s24+s23*s23-10*(s24*s24))+3*s14*(2*s23*s24+s23*s23-4*(s24*s24))+pow(s14,3))-2*s24*((6*s23+9*s24)*(s14*s14)+2*s24*(8*s23*s24+2*(s23*s23)+5*(s24*s24))+s14*(20*s23*s24+3*(s23*s23)+18*(s24*s24))+pow(s14,3)))+s12*(2*(s13*s13)*(s23*s24*(s23+5*s24)+(2*s23+3*s24)*(s14*s14)+s14*(6*s23*s24+s23*s23+5*(s24*s24)))+(2*s14*(s23+3*s24)+s24*(4*s23+7*s24))*pow(s13,3)+2*s24*pow(s13,4)+s13*(s14*s14*(6*s23*s24+3*(s23*s23)-s24*s24)+(-12*s23*s24+2*(s23*s23)-15*(s24*s24))*(s24*s24)-2*s14*s24*(s23*s24-2*(s23*s23)+9*(s24*s24))+2*(s23+s24)*pow(s14,3))-2*s24*(4*s14*s24*(6*s23*s24+2*(s23*s23)+3*(s24*s24))+s24*s24*(13*s23*s24+6*(s23*s23)+5*(s24*s24))+s14*s14*(13*s23*s24+3*(s23*s23)+9*(s24*s24))+2*(s23+s24)*pow(s14,3)))+s13*(2*s24*(s14*s14)*(2*s23*s24+s23*s23-s24*s24)+s14*(-4*s23*s24+2*(s23*s23)-7*(s24*s24))*(s24*s24)+(s23+s24)*(s23+s24)*pow(s14,3)-2*(3*s23+2*s24)*pow(s24,4)))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s24,-2)+16*(s13-s24)*(s23+s24)*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s24,-1)+8*(9*s14*s23+41*s14*s24+28*s23*s24+s13*(12*s14+9*s23+29*s24)+s12*(16*s13+22*s14+19*s23+39*s24)+13*(s12*s12)+3*(s13*s13)+9*(s14*s14)+10*(s23*s23)+24*(s24*s24))*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s24,-1)+16*(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(3*s12*s23+3*s13*s23+3*s14*s23+8*s23*s24+2*(s24*s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)+8*(2*s12-7*s13-13*s14+11*s23+10*s24)*(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*pow(s13-s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1))+8*pow(s13,-1)*(s24*(-(s14*s23)+s24*(-5*s23+7*s24))*(s13*s13)+s24*s24*(8*s24*(3*s23*s24+s23*s23+2*(s24*s24))+s14*(13*s23*s24+s23*s23+16*(s24*s24)))-s13*s24*(3*s14*(7*s23*s24+s23*s23+8*(s24*s24))+s24*(29*s23*s24+12*(s23*s23)+25*(s24*s24)))+s24*(-3*s13+s24)*pow(s12,3)+(-(s24*(8*s23+7*s24))+s14*(7*s23+8*s24))*pow(s13,3)+s12*s12*(-(s13*s24*(3*s14+6*s23+23*s24))-4*s24*(s13*s13)+(s14+2*s23+14*s24)*(s24*s24)+7*pow(s13,3))+(12*s23+7*s24)*pow(s13,4)+s12*(-((s14+4*s23-3*s24)*s24*(s13*s13))+s24*s24*(22*s23*s24+s14*(2*s23+13*s24)+s23*s23+29*(s24*s24))-s13*s24*(35*s23*s24+3*s14*(2*s23+7*s24)+3*(s23*s23)+45*(s24*s24))+7*(s14+s23)*pow(s13,3)+7*pow(s13,4)))*pow(s13-s24,-3)*pow(s24,-1)*pow(s12+s23+s24,-1)+8*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s13-s24,-2)*pow(s24,-1)*(s23*(s24*s24)*(s14*(3*s23+14*s24)-2*(9*s23*s24+2*(s23*s23)+7*(s24*s24)))+(-3*s13*s24-8*(s13*s13)+3*(s24*s24))*pow(s12,3)+(-34*s23*s24+s14*(13*s23+18*s24)-4*(s23*s23)-43*(s24*s24))*pow(s13,3)+s12*s12*(s13*s24*(-3*s14+16*s23+4*s24)-2*(4*s14+16*s23+25*s24)*(s13*s13)+(3*s14+2*s23+17*s24)*(s24*s24)+5*pow(s13,3))+(12*s23+17*s24)*pow(s13,4)+s12*(s24*s24*(-(s23*s24)+2*s14*(3*s23+7*s24)-5*(s23*s23)+14*(s24*s24))+s13*s24*(70*s23*s24+s14*(-6*s23+14*s24)+41*(s23*s23)+21*(s24*s24))-s13*s13*(100*s23*s24+s14*(16*s23+55*s24)+40*(s23*s23)+42*(s24*s24))+(13*s14+s23-30*s24)*pow(s13,3)+13*pow(s13,4))-s13*s13*(50*s24*(s23*s23)+43*s23*(s24*s24)+s14*(55*s23*s24+8*(s23*s23)+66*(s24*s24))+16*pow(s23,3)-4*pow(s24,3))+s13*s24*(66*s24*(s23*s23)+63*s23*(s24*s24)+s14*(14*s23*s24-3*(s23*s23)+42*(s24*s24))+22*pow(s23,3)+14*pow(s24,3)))*pow(s12+s23+s24,-1)+(16*s24*pow(s13,-1)-16*s24*(s13+s24)*(s12-s13+s23+2*s24)*pow(s13,-1)*pow(s13-s24,-2)+((-16*(s12+s23+s24)*(2*s14*s23-s13*(2*s14+s23-7*s24)-3*s23*s24-s12*(s13-2*s14-2*s23+s24)+2*(s12*s12)-6*(s13*s13)-6*(s24*s24))+16*(s13-s24)*(4*s14*s23+s12*(s13+4*s14+4*s23-s24)-5*s23*s24-s13*(3*s14+10*s24)+4*(s12*s12)+s13*s13-4*(s24*s24)))*pow(s13,-1)*pow(s13-s24,-2))/2.+8*(s14*s23+s12*(7*s13+s14+s23-6*s24)+s13*(6*s23-2*s24)-s14*s24-7*s23*s24+s12*s12-6*(s24*s24))*pow(s13,-1)*pow(s24,-1)+8*pow(s13,-1)*((s14*(s23-2*s24)-s24*(s23+s24))*(s13*s13)+(s14+s24)*(s23+s24)*(s24*s24)+s12*s12*(-(s13*s24)+s13*s13+s24*s24)+s13*s24*(s14*(-s23+s24)+2*(s24*s24))+(s23-2*s24)*pow(s13,3)+s12*(s13*s24*(-s14-s23+s24)+(s14+s23-3*s24)*(s13*s13)+(s14+s23+2*s24)*(s24*s24)+pow(s13,3)))*pow(s13-s24,-2)*pow(s24,-1)-8*pow(s13,-1)*pow(s13-s24,-1)*pow(s24,-1)*(16*s14*s23*s24+s13*(4*(s23-s24)*s24+s14*(9*s23+8*s24))+(14*s13+5*s14+10*s23+18*s24)*(s12*s12)+(21*s23+10*s24)*(s13*s13)+5*s14*(s23*s23)+2*s24*(s23*s23)+8*s14*(s24*s24)+6*s23*(s24*s24)+s12*(20*s23*s24+2*s14*(5*s23+8*s24)+s13*(9*s14+14*s23+10*s24)+15*(s13*s13)+5*(s23*s23)+17*(s24*s24))+5*pow(s12,3)+4*pow(s24,3))+16*s24*(s13+s24)*(2*s12+2*s13+2*s14+s23+2*s24)*pow(s13,-1)*pow(s12+s13+s14+s24,-2)+(-8*(s12+s13+s14+s23+s24)*(s13*(2*s14+s23-4*s24)+3*s12*(s13+s24)+3*s24*(s23+2*s24)+4*(s13*s13))+8*(s12+s13+s14+s24)*(4*s14*s23+s12*(2*s13+4*s14+4*s23-s24)+s14*s24-5*s23*s24-2*s13*(s14+5*s24)+4*(s12*s12)-4*(s24*s24)))*pow(s13,-1)*pow(s12+s13+s14+s24,-2)+8*pow(s13,-1)*(2*s13*(s14+s23)*s24+s24*(s12*s12)+(s14+3*s24)*(s13*s13)+s12*(3*s13*s24+(s14+s23)*s24+s13*s13)-s24*(s14*(-s23+s24)+s24*s24)+pow(s13,3))*pow(s12+s13+s14+s24,-2)+(8*s13*(s12+s13+s14)*s24*(7*s12+4*s13+2*s14+7*s23+4*s24)+8*(s13-s24)*(s12+s13+s14+s24)*(6*s13*s23+2*s14*s23+2*s12*(3*s13+s14+s23-2*s24)-2*s14*s24-6*s23*s24+2*(s12*s12)-5*(s24*s24)))*pow(s13,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-2)-8*((s13-s24)*(s13-s24))*pow(s13,-1)*pow(s12+s13+s14+s24,-1)-8*pow(s13,-1)*pow(s24,-1)*(15*s14*s23*s24+2*s13*((4*s23-s24)*s24+s14*(11*s23+6*s24))+(26*s13+22*s14+18*s23+19*s24)*(s12*s12)+4*(5*s23+3*s24)*(s13*s13)+12*s23*(s14*s14)+8*s24*(s14*s14)+8*s14*(s23*s23)+2*s24*(s23*s23)+6*s14*(s24*s24)+6*s23*(s24*s24)+s12*(19*s23*s24+30*s14*(s23+s24)+s13*(28*s14+30*s23+28*s24)+24*(s13*s13)+12*(s14*s14)+8*(s23*s23)+13*(s24*s24))+10*pow(s12,3)+4*pow(s24,3))*pow(s12+s13+s14+s24,-1)+8*(2*s13+3*s24)*(s14*s14*(4*s23*s24+s23*s23+3*(s24*s24))+2*s14*s24*(6*s23*s24+s13*(s23+2*s24)+2*(s23*s23)+3*(s24*s24))+s24*s24*(8*s23*s24+4*s13*(s23+s24)+s13*s13+4*(s23*s23)+3*(s24*s24))+s12*s12*(10*s23*s24+2*s13*(s14+s23+4*s24)+2*s14*(2*s23+5*s24)+s13*s13+s14*s14+s23*s23+12*(s24*s24))+2*s12*(s13*(s14*(s23+3*s24)+s24*(3*s23+5*s24))+s24*(s13*s13)+(s23+2*s24)*(s14*s14)+s24*(8*s23*s24+2*(s23*s23)+5*(s24*s24))+s14*(7*s23*s24+s23*s23+7*(s24*s24)))+2*(s13+s14+s23+3*s24)*pow(s12,3)+pow(s12,4))*pow(s13-s24,-1)*pow(s24,-1)*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s24,-1)-8*(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*(12*s14*s23+7*s14*s24-3*s23*s24+2*s13*(4*s14+s24)+s12*(12*s13+22*s14+12*s23+5*s24)+12*(s12*s12)+10*(s14*s14)-7*(s24*s24))*pow(s24,-1)*pow(-s13+s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1))*pow(s12+s23+s24,-1)+2*(4*(6*s13-s23-6*s24)*pow(s13,-1)*pow(s24,-1)-4*(2*s12+3*s13+2*s23-2*s24)*(s12*s13+s13*(s14+s23)-s23*s24+s13*s13)*pow(s13,-1)*pow(s12+s13+s23,-1)*pow(s13-s24,-1)*pow(s24,-1)+8*(s13-s24)*pow(s13,-1)*pow(s12+s23+s24,-1)+8*s24*pow(s13,-1)*pow(s12+s23+s24,-1)-4*(6*s12+2*s13+2*s14+6*s23+5*s24)*pow(s13,-1)*pow(s12+s23+s24,-1)+4*s24*(2*s12*(3*s13+s24)+s24*(2*s23+s24)+s13*(6*s23+7*s24))*pow(s13,-1)*pow(s13-s24,-2)*pow(s12+s23+s24,-1)-4*(s13*(-3*s14+2*s23)+2*(s14+s24)*(s23+s24)+s12*(-s13+2*(s14+s23+2*s24))+2*(s12*s12)-3*(s13*s13))*pow(s13,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1)+4*(s14*s23+12*s14*s24-s23*s24+s12*(s13+s14+6*s23+5*s24)+s13*(2*s14+9*s23+6*s24)+s12*s12-3*(s13*s13)+5*(s23*s23)+6*(s24*s24))*pow(s13,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1)+4*(s12+s23)*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s24,-1)*pow(s12+s23+s24,-1)+4*(-7*s14*s23-2*s14*s24+27*s23*s24-8*s13*(2*s23+s24)+s12*(-15*s13-7*s14+19*s23+20*s24)+s12*s12+18*(s23*s23)+21*(s24*s24))*pow(s13,-1)*pow(s24,-1)*pow(s12+s23+s24,-1)+(s24*(8*(s12+s13+s14+s24)*(s12-2*s13-s14+s23+2*s24)-8*(s12+s13+s14+s23+s24)*(s13+3*s24))*pow(s13,-1)*pow(s12+s13+s14+s24,-2)*pow(s12+s23+s24,-1))/2.-((24*s13*(s12+s13+s14)*s24+8*(s13-s24)*(s12+s13+s14+s24)*(6*s12+6*s13+2*s14+4*s23+3*s24))*pow(s13,-1)*pow(s12+s13+s14+s24,-2)*pow(s12+s23+s24,-1))/2.+8*(s13-s24)*s24*pow(s13,-1)*pow(s12+s13+s14+s24,-1)*pow(s12+s23+s24,-1)+8*((s13-s24)*(s13-s24))*pow(s13,-1)*pow(s12+s13+s14+s24,-1)*pow(s12+s23+s24,-1)+4*(-9*s14*s23+s12*(15*s13+8*s14-5*s23-4*s24)+10*s14*s24-s23*s24+s13*(18*s14+11*s23+9*s24)+6*(s13*s13)+12*(s14*s14)+5*(s23*s23)+6*(s24*s24))*pow(s13,-1)*pow(s12+s13+s14+s24,-1)*pow(s12+s23+s24,-1)-8*(2*s12+3*(s23+s24))*(2*s13*s23*(s23*s24+s14*(2*s23+s24))+s23*s23*(s14*s14-s24*s24)+s13*s13*(4*s23*s24+3*(s23*s23)+s24*s24)+2*s12*(s14*s23*(s14+s23+s24)+(2*s23+s24)*(s13*s13)+s13*(3*s23*s24+s14*(3*s23+s24)+2*(s23*s23)+s24*s24))+s12*s12*(2*s14*(2*s23+s24)+2*s13*(s14+3*s23+2*s24)+s13*s13+s14*s14+(s23+s24)*(s23+s24))+2*(s13+s14+s23+s24)*pow(s12,3)+pow(s12,4))*pow(s13,-1)*pow(s23,-2)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)*pow(s12+s23+s24,-1)-4*(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(-6*s14*s23+2*s14*s24+27*s23*s24-2*s13*(9*s23+5*s24)+s12*(-12*s13-4*s14+10*s23+17*s24)+4*(s12*s12)+16*(s23*s23)+23*(s24*s24))*pow(s13,-1)*pow(s23,-1)*pow(s24,-1)*pow(s12+s13+s14+s24,-1)*pow(s12+s23+s24,-1)-4*(s14*s14*(4*s23*s24+s23*s23+3*(s24*s24))+2*s14*s24*(6*s23*s24+s13*(s23+2*s24)+2*(s23*s23)+3*(s24*s24))+s24*s24*(8*s23*s24+4*s13*(s23+s24)+s13*s13+4*(s23*s23)+3*(s24*s24))+s12*s12*(10*s23*s24+2*s13*(s14+s23+4*s24)+2*s14*(2*s23+5*s24)+s13*s13+s14*s14+s23*s23+12*(s24*s24))+2*s12*(s13*(s14*(s23+3*s24)+s24*(3*s23+5*s24))+s24*(s13*s13)+(s23+2*s24)*(s14*s14)+s24*(8*s23*s24+2*(s23*s23)+5*(s24*s24))+s14*(7*s23*s24+s23*s23+7*(s24*s24)))+2*(s13+s14+s23+3*s24)*pow(s12,3)+pow(s12,4))*pow(s13-s24,-1)*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s24,-1)*pow(s12+s23+s24,-1)+4*(7*s12+7*s14-3*s23+s24)*(s14*(s23+s24)+s24*(s13+2*s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12)*pow(s13-s24,-1)*pow(s12+s14+s24,-1)*pow(s12+s13+s14+s24,-1)*pow(s12+s23+s24,-1)))/32.;
}

// Coefficient of master 5 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yygCA<5>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(-1,{
        qq2yygCA<5,-1>(s12,s13,s14,s23,s24),
        qq2yygCA<5,0>(s12,s13,s14,s23,s24),
        qq2yygCA<5,1>(s12,s13,s14,s23,s24)
    });
}

