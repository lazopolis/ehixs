/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 4: bubble(s23)

// Coefficient order epsilon^-1 of master 4
template<>
double qq2yygCF<4,-1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23,-3)*pow(s24,-3)*((10*s24*(s13*s13)+s24*(s23*(5*s23+2*s24)+s14*(17*s23+3*s24)+10*(s14*s14))+s13*(14*s23*s24+5*s24*(4*s14+s24)-s23*s23))*pow(s12,6)+s24*(5*s13+5*s14+4*s23+s24)*pow(s12,7)+s24*pow(s12,8)+pow(s12,5)*(2*(s13*s13)*(8*s23*s24+5*s24*(3*s14+s24)-2*(s23*s23))+s13*(30*s24*(s14*s14)-4*s14*(-11*s23*s24+s23*s23-3*(s24*s24))+s23*(6*s23*s24-4*(s23*s23)+7*(s24*s24)))+10*s24*pow(s13,3)+s24*(2*(14*s23+s24)*(s14*s14)+s14*(16*(s23*s23)-s24*s24)+s24*(s23*s24-s23*s23+s24*s24)+10*pow(s14,3)))+s14*s23*s24*(s23+s24)*(-(s14*s23)+s24*(s23+s24))*pow(s14+s23,3)+(s23+s24)*pow(s13,5)*pow(s24,3)+s24*pow(s13,4)*(s23*s24*(7*s23*s24+2*(s23*s23)+4*(s24*s24))+s14*(4*s24*(s23*s23)+6*s23*(s24*s24)+pow(s23,3)+3*pow(s24,3)))+pow(s13,3)*(2*s23*(s24*s24)*(8*s24*(s23*s23)+4*s23*(s24*s24)+3*pow(s23,3)-pow(s24,3))-s14*s14*(-8*(s23*s23)*(s24*s24)+s24*pow(s23,3)+pow(s23,4)-11*s23*pow(s24,3)-3*pow(s24,4))+s14*s24*(26*(s23*s23)*(s24*s24)+15*s24*pow(s23,3)+2*pow(s23,4)+10*s23*pow(s24,3)-pow(s24,4)))-s13*(s23+s24)*(s14*(s23*s23)*(s24*s24)*(-10*s23*s24-10*(s23*s23)+3*(s24*s24))+s23*(4*s23*s24+s23*s23-2*(s24*s24))*pow(s14,4)+s24*s24*(-3*s23*s24-2*(s23*s23)+s24*s24)*pow(s23,3)+s23*(s14*s14)*(-16*(s23*s23)*(s24*s24)+3*s24*pow(s23,3)+pow(s23,4)-12*s23*pow(s24,3)+pow(s24,4))+pow(s14,3)*(-11*(s23*s23)*(s24*s24)+7*s24*pow(s23,3)+2*pow(s23,4)-5*s23*pow(s24,3)+pow(s24,4)))+pow(s12,4)*((4*s23*s24+10*s24*(2*s14+s24)-6*(s23*s23))*pow(s13,3)+5*s24*pow(s13,4)+s13*s13*(30*s24*(s14*s14)-13*s24*(s23*s23)-6*s14*(-5*s23*s24+2*(s23*s23)-3*(s24*s24))+8*s23*(s24*s24)-12*pow(s23,3)+pow(s24,3))+s24*(s14*s14*(-14*s23*s24+17*(s23*s23)-3*(s24*s24))+6*(s23*s23)*(s24*s24)+(22*s23-2*s24)*pow(s14,3)+5*pow(s14,4)-4*s24*pow(s23,3)-5*pow(s23,4)+6*s23*pow(s24,3)+s14*(-17*s24*(s23*s23)+s23*(s24*s24)-6*pow(s23,3)+4*pow(s24,3))+pow(s24,4))+s13*(-6*(s14*s14)*(-8*s23*s24+s23*s23-s24*s24)-2*(s23*s23)*(s24*s24)+20*s24*pow(s14,3)-16*s24*pow(s23,3)-6*pow(s23,4)+s14*(s24*(s23*s23)-6*s23*(s24*s24)-14*pow(s23,3)-3*pow(s24,3))+6*s23*pow(s24,3)+3*pow(s24,4)))-s12*s12*((2*s23*s24+s23*s23-s24*s24)*pow(s13,5)+pow(s13,4)*(12*s24*(s23*s23)+s14*(7*s23*s24+4*(s23*s23)-3*(s24*s24))+2*s23*(s24*s24)+4*pow(s23,3)-3*pow(s24,3))+pow(s13,3)*(s14*s14*(8*s23*s24+6*(s23*s23)-2*(s24*s24))+22*s24*pow(s23,3)+6*pow(s23,4)+s14*(47*s24*(s23*s23)+18*s23*(s24*s24)+18*pow(s23,3)-5*pow(s24,3))-21*s23*pow(s24,3)-4*pow(s24,4))-(s14+s23)*s24*(-(s23*(-4*s23*s24+s23*s23-3*(s24*s24))*((s23+s24)*(s23+s24)))-(11*s23*s24+3*(s23*s23)+s24*s24)*pow(s14,3)+(s23-s24)*pow(s14,4)+s14*s14*(-23*s24*(s23*s23)+2*s23*(s24*s24)-16*pow(s23,3)+4*pow(s24,3))+s14*(19*(s23*s23)*(s24*s24)-5*s24*pow(s23,3)-10*pow(s23,4)+17*s23*pow(s24,3)+3*pow(s24,4)))+s13*((-2*s23*s24+s23*s23+3*(s24*s24))*pow(s14,4)+pow(s14,3)*(27*s24*(s23*s23)+38*s23*(s24*s24)+10*pow(s23,3)+3*pow(s24,3))+s14*s14*(58*(s23*s23)*(s24*s24)+75*s24*pow(s23,3)+19*pow(s23,4)-16*s23*pow(s24,3)-7*pow(s24,4))+s14*(-(s24*s24*pow(s23,3))+47*s24*pow(s23,4)+10*pow(s23,5)-67*(s23*s23)*pow(s24,3)-35*s23*pow(s24,4)-5*pow(s24,5))+s23*(-19*(s24*s24)*pow(s23,3)+6*s24*pow(s23,4)+pow(s23,5)-43*(s23*s23)*pow(s24,3)-21*s23*pow(s24,4)-4*pow(s24,5)))+s13*s13*(6*s23*(s14*s14)*(10*s23*s24+4*(s23*s23)+7*(s24*s24))+2*(s23*s24+2*(s23*s23)+s24*s24)*pow(s14,3)-20*(s24*s24)*pow(s23,3)+17*s24*pow(s23,4)+4*pow(s23,5)-48*(s23*s23)*pow(s24,3)+s14*(21*(s23*s23)*(s24*s24)+75*s24*pow(s23,3)+24*pow(s23,4)-37*s23*pow(s24,3)-7*pow(s24,4))-16*s23*pow(s24,4)-3*pow(s24,5)))+s13*s13*(3*(s23*s23)*(s24*s24)*(5*s24*(s23*s23)+2*s23*(s24*s24)+2*pow(s23,3)-pow(s24,3))+s14*s23*s24*(38*(s23*s23)*(s24*s24)+20*s24*pow(s23,3)+pow(s23,4)+16*s23*pow(s24,3)-3*pow(s24,4))+pow(s14,3)*(3*(s23*s23)*(s24*s24)-6*s24*pow(s23,3)-2*pow(s23,4)+8*s23*pow(s24,3)+pow(s24,4))+s14*s14*(19*(s24*s24)*pow(s23,3)-4*s24*pow(s23,4)-2*pow(s23,5)+33*(s23*s23)*pow(s24,3)+9*s23*pow(s24,4)-2*pow(s24,5)))+pow(s12,3)*((-4*s23*s24+5*s24*(s14+s24)-4*(s23*s23))*pow(s13,4)+s24*pow(s13,5)+pow(s13,3)*(10*s24*(s14*s14)-25*s24*(s23*s23)-4*s14*(s23*s24+3*(s23*s23)-3*(s24*s24))+2*s23*(s24*s24)-12*pow(s23,3)+3*pow(s24,3))+s13*s13*(-(s23*s23*(s24*s24))+6*(s14*s14)*(2*s23*s24-2*(s23*s23)+s24*s24)-6*s14*s23*(9*s23*s24+5*(s23*s23)+3*(s24*s24))+10*s24*pow(s14,3)-35*s24*pow(s23,3)-12*pow(s23,4)+17*s23*pow(s24,3)+4*pow(s24,4))+s24*((-22*s23*s24+5*(s23*s23)-3*(s24*s24))*pow(s14,3)+(8*s23-3*s24)*pow(s14,4)+pow(s14,5)-2*(s14*s14)*(20*s24*(s23*s23)+9*pow(s23,3)-3*pow(s24,3))+s23*(12*(s23*s23)*(s24*s24)-s24*pow(s23,3)-4*pow(s23,4)+12*s23*pow(s24,3)+3*pow(s24,4))+s14*(17*(s23*s23)*(s24*s24)-20*s24*pow(s23,3)-19*pow(s23,4)+19*s23*pow(s24,3)+3*pow(s24,4)))+s13*(-4*(-5*s23*s24+s23*s23+s24*s24)*pow(s14,3)+5*s24*pow(s14,4)+4*(s24*s24)*pow(s23,3)-19*s24*pow(s23,4)-4*pow(s23,5)+27*(s23*s23)*pow(s24,3)-6*(s14*s14)*(4*s24*(s23*s23)+7*s23*(s24*s24)+3*pow(s23,3)+pow(s24,3))+15*s23*pow(s24,4)+s14*(-37*(s23*s23)*(s24*s24)-60*s24*pow(s23,3)-18*pow(s23,4)+13*s23*pow(s24,3)+8*pow(s24,4))+3*pow(s24,5)))+s12*(s24*(-(s23*s24)-s23*s23+s24*s24)*pow(s13,5)+pow(s13,4)*(-3*s24*pow(s23,3)-s14*(8*s24*(s23*s23)+6*s23*(s24*s24)+2*pow(s23,3)-3*pow(s24,3))+10*s23*pow(s24,3)+3*pow(s24,4))+pow(s13,3)*(-(s14*s14*(19*s24*(s23*s23)+14*s23*(s24*s24)+6*pow(s23,3)-3*pow(s24,3)))+s24*(34*(s23*s23)*(s24*s24)+14*s24*pow(s23,3)-3*pow(s23,4)+11*s23*pow(s24,3)+pow(s24,4))+s14*(3*(s23*s23)*(s24*s24)-20*s24*pow(s23,3)-6*pow(s23,4)+31*s23*pow(s24,3)+6*pow(s24,4)))+s13*s13*(pow(s14,3)*(-19*s24*(s23*s23)-16*s23*(s24*s24)-6*pow(s23,3)+pow(s24,3))-s23*s24*(-49*(s23*s23)*(s24*s24)-25*s24*pow(s23,3)+pow(s23,4)-17*s23*pow(s24,3)+pow(s24,4))+s14*s14*(-11*(s23*s23)*(s24*s24)-45*s24*pow(s23,3)-14*pow(s23,4)+31*s23*pow(s24,3)+4*pow(s24,4))+s14*(34*(s24*s24)*pow(s23,3)-20*s24*pow(s23,4)-6*pow(s23,5)+81*(s23*s23)*pow(s24,3)+26*s23*pow(s24,4)+pow(s24,5)))+s13*(-(s23*(8*s23*s24+2*(s23*s23)+9*(s24*s24))*pow(s14,4))+s24*s24*(27*s23*s24+13*(s23*s23)+12*(s24*s24))*pow(s23,3)+pow(s14,3)*(-25*(s23*s23)*(s24*s24)-36*s24*pow(s23,3)-8*pow(s23,4)+11*s23*pow(s24,3)+2*pow(s24,4))+s14*s14*(3*(s24*s24)*pow(s23,3)-37*s24*pow(s23,4)-8*pow(s23,5)+59*(s23*s23)*pow(s24,3)+24*s23*pow(s24,4)+pow(s24,5))+s14*s23*(30*(s24*s24)*pow(s23,3)-10*s24*pow(s23,4)-2*pow(s23,5)+71*(s23*s23)*pow(s24,3)+32*s23*pow(s24,4)+3*pow(s24,5)))-s24*((s14+s23)*(s14+s23))*(s23*(s23+2*s24)*pow(s14,3)+s14*s14*(7*s24*(s23*s23)-s23*(s24*s24)+6*pow(s23,3)-pow(s24,3))+s14*(-10*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)+2*pow(s23,4)-7*s23*pow(s24,3)-pow(s24,4))-s23*s24*pow(s23+s24,3))))*pow(s12+s23+s24,-1);
}

// Coefficient order epsilon^0 of master 4
template<>
double qq2yygCF<4,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23,-3)*pow(s24,-3)*((s14*(5*s14*(s23-3*s24)-11*s23*s24+5*(s23*s23)-8*(s24*s24))+s13*(5*s14*(s23-3*s24)-6*(s24*s24)))*pow(s12,7)+s14*(s23-3*s24)*pow(s12,8)-(s23*s24*(4*s23+s24)+s14*(7*s23*s24+2*(s23*s23)-s24*s24))*(s24*s24)*pow(s13,5)+pow(s12,6)*(2*(s13*s13)*(5*s14*(s23-3*s24)-12*(s24*s24))+s13*(20*(s23-3*s24)*(s14*s14)+s14*(-35*s23*s24+26*(s23*s23)-66*(s24*s24))-(24*s23+11*s24)*(s24*s24))+s14*(10*(s23-3*s24)*(s14*s14)-10*s24*(s23*s23)+s14*(-47*s23*s24+23*(s23*s23)-30*(s24*s24))-31*s23*(s24*s24)+10*pow(s23,3)-11*pow(s24,3)))-s24*pow(s13,4)*(3*(4*s23+3*s24)*(s23*s23)*(s24*s24)+2*s14*s24*(25*s24*(s23*s23)+6*s23*(s24*s24)+10*pow(s23,3)-3*pow(s24,3))+s14*s14*(18*s24*(s23*s23)+28*s23*(s24*s24)+4*pow(s23,3)-pow(s24,3)))+pow(s12,5)*(s13*s13*(30*(s23-3*s24)*(s14*s14)+2*s14*(-15*s23*s24+27*(s23*s23)-80*(s24*s24))-(78*s23+43*s24)*(s24*s24))+2*(5*s14*(s23-3*s24)-18*(s24*s24))*pow(s13,3)+s13*(4*(s14*s14)*(-27*s23*s24+24*(s23*s23)-41*(s24*s24))-s24*s24*(36*s23*s24+36*(s23*s23)+5*(s24*s24))+30*(s23-3*s24)*pow(s14,3)+s14*(12*s24*(s23*s23)-211*s23*(s24*s24)+54*pow(s23,3)-91*pow(s24,3)))+s14*(s14*s14*(-78*s23*s24+42*(s23*s23)-40*(s24*s24))+10*(s23-3*s24)*pow(s14,3)+s14*(-31*s24*(s23*s23)-94*s23*(s24*s24)+42*pow(s23,3)-41*pow(s24,3))+2*(-24*(s23*s23)*(s24*s24)+5*s24*pow(s23,3)+5*pow(s23,4)-26*s23*pow(s24,3)-7*pow(s24,4))))+s23*(s14*s14)*((s23-s24)*((s23+2*s24)*(s23+2*s24))*pow(s14,4)-s24*s24*(12*s23*s24+8*(s23*s23)+11*(s24*s24))*pow(s23,3)+s14*s24*(s23*s23)*(-19*s24*(s23*s23)-36*s23*(s24*s24)+4*pow(s23,3)-31*pow(s24,3))+s23*(s14*s14)*(-16*(s23*s23)*(s24*s24)+10*s24*pow(s23,3)+pow(s23,4)-40*s23*pow(s24,3)-28*pow(s24,4))+pow(s14,3)*(-5*(s23*s23)*(s24*s24)+9*s24*pow(s23,3)+2*pow(s23,4)-20*s23*pow(s24,3)-8*pow(s24,4)))+pow(s13,6)*pow(s24,4)+pow(s13,3)*(-(s14*s23*(s24*s24)*(105*s24*(s23*s23)+34*s23*(s24*s24)+50*pow(s23,3)-28*pow(s24,3)))-(12*s23+11*s24)*pow(s23,3)*pow(s24,3)-s24*(s14*s14)*(124*(s23*s23)*(s24*s24)+85*s24*pow(s23,3)+8*pow(s23,4)+7*s23*pow(s24,3)-22*pow(s24,4))+pow(s14,3)*(-30*(s23*s23)*(s24*s24)+5*s24*pow(s23,3)+6*pow(s23,4)-43*s23*pow(s24,3)+7*pow(s24,4)))+pow(s12,3)*((5*(s23-3*s24)*(s14*s14)+s14*(25*s23*s24+29*(s23*s23)-72*(s24*s24))-2*(21*s23+19*s24)*(s24*s24))*pow(s13,4)+(s14*(s23-3*s24)-6*(s24*s24))*pow(s13,5)+pow(s13,3)*(4*(s14*s14)*(13*s23*s24+26*(s23*s23)-45*(s24*s24))-2*(s24*s24)*(63*s23*s24+36*(s23*s23)+13*(s24*s24))+10*(s23-3*s24)*pow(s14,3)+s14*(128*s24*(s23*s23)-295*s23*(s24*s24)+82*pow(s23,3)-224*pow(s24,3)))+s13*s13*(-2*s23*(s24*s24)*(53*s23*s24+21*(s23*s23)+20*(s24*s24))+6*(s23*s24+23*(s23*s23)-28*(s24*s24))*pow(s14,3)+10*(s23-3*s24)*pow(s14,4)+3*(s14*s14)*(99*s24*(s23*s23)-166*s23*(s24*s24)+82*pow(s23,3)-114*pow(s24,3))+s14*(-435*(s23*s23)*(s24*s24)+174*s24*pow(s23,3)+82*pow(s23,4)-520*s23*pow(s24,3)-74*pow(s24,4)))+s14*(s23*(17*s23-23*s24)*pow(s14,4)+(s23-3*s24)*pow(s14,5)+pow(s14,3)*(-4*s24*(s23*s23)-28*s23*(s24*s24)+55*pow(s23,3)-47*pow(s24,3))+s14*s14*(-94*(s23*s23)*(s24*s24)+83*s24*pow(s23,3)+55*pow(s23,4)-212*s23*pow(s24,3)-78*pow(s24,4))+s23*(-40*(s24*s24)*pow(s23,3)+17*s24*pow(s23,4)+pow(s23,5)-120*(s23*s23)*pow(s24,3)-110*s23*pow(s24,4)-28*pow(s24,5))+s14*(-106*(s24*s24)*pow(s23,3)+82*s24*pow(s23,4)+17*pow(s23,5)-289*(s23*s23)*pow(s24,3)-194*s23*pow(s24,4)-24*pow(s24,5)))+s13*(-(s23*s23*(s24*s24)*(14*s23*s24+6*(s23*s23)+9*(s24*s24)))+(-44*s23*s24+80*(s23*s23)-54*(s24*s24))*pow(s14,4)+5*(s23-3*s24)*pow(s14,5)+pow(s14,3)*(165*s24*(s23*s23)-273*s23*(s24*s24)+219*pow(s23,3)-203*pow(s24,3))+s14*s14*(-462*(s23*s23)*(s24*s24)+298*s24*pow(s23,3)+164*pow(s23,4)-556*s23*pow(s24,3)-115*pow(s24,4))+s14*(-270*(s24*s24)*pow(s23,3)+91*s24*pow(s23,4)+29*pow(s23,5)-397*(s23*s23)*pow(s24,3)-153*s23*pow(s24,4)-18*pow(s24,5))))+s12*s12*((s14*(9*s23*s24+6*(s23*s23)-10*(s24*s24))-(6*s23+7*s24)*(s24*s24))*pow(s13,5)+pow(s13,4)*(s14*s14*(33*s23*s24+27*(s23*s23)-38*(s24*s24))-2*(s24*s24)*(27*s23*s24+9*(s23*s23)+7*(s24*s24))+s14*(54*s24*(s23*s23)-82*s23*(s24*s24)+24*pow(s23,3)-97*pow(s24,3)))+pow(s13,3)*(-6*s23*(s24*s24)*(16*s23*s24+3*(s23*s23)+7*(s24*s24))+(42*s23*s24+48*(s23*s23)-52*(s24*s24))*pow(s14,3)+s14*s14*(215*s24*(s23*s23)-211*s23*(s24*s24)+120*pow(s23,3)-230*pow(s24,3))+4*s14*(-62*(s23*s23)*(s24*s24)+25*s24*pow(s23,3)+9*pow(s23,4)-97*s23*pow(s24,3)-11*pow(s24,4)))+s13*((-3*s23*s24+18*(s23*s23)-2*(s24*s24))*pow(s14,5)+pow(s14,4)*(123*s24*(s23*s23)-55*s23*(s24*s24)+114*pow(s23,3)-97*pow(s24,3))+(3*s23+s24)*pow(s23,3)*pow(s24,3)+pow(s14,3)*(-266*(s23*s23)*(s24*s24)+325*s24*pow(s23,3)+168*pow(s23,4)-443*s23*pow(s24,3)-87*pow(s24,4))+s14*s23*(-218*(s24*s24)*pow(s23,3)+27*s24*pow(s23,4)+6*pow(s23,5)-329*(s23*s23)*pow(s24,3)-148*s23*pow(s24,4)-28*pow(s24,5))+s14*s14*(-440*(s24*s24)*pow(s23,3)+209*s24*pow(s23,4)+72*pow(s23,5)-678*(s23*s23)*pow(s24,3)-257*s23*pow(s24,4)-26*pow(s24,5)))+s14*((-3*s23*s24+3*(s23*s23)+2*(s24*s24))*pow(s14,5)+pow(s14,4)*(8*s24*(s23*s23)+5*s23*(s24*s24)+21*pow(s23,3)-20*pow(s24,3))+pow(s14,3)*(-23*(s23*s23)*(s24*s24)+68*s24*pow(s23,3)+37*pow(s23,4)-135*s23*pow(s24,3)-50*pow(s24,4))+s24*(s23*s23)*(-75*(s23*s23)*(s24*s24)-27*s24*pow(s23,3)+4*pow(s23,4)-82*s23*pow(s24,3)-31*pow(s24,4))+s14*s23*(-89*(s24*s24)*pow(s23,3)+44*s24*pow(s23,4)+3*pow(s23,5)-258*(s23*s23)*pow(s24,3)-237*s23*pow(s24,4)-56*pow(s24,5))+s14*s14*(-86*(s24*s24)*pow(s23,3)+98*s24*pow(s23,4)+21*pow(s23,5)-297*(s23*s23)*pow(s24,3)-201*s23*pow(s24,4)-24*pow(s24,5)))+s13*s13*(-(s23*s23*(s24*s24)*(46*s23*s24+6*(s23*s23)+27*(s24*s24)))+2*(9*s23*s24+21*(s23*s23)-14*(s24*s24))*pow(s14,4)+pow(s14,3)*(276*s24*(s23*s23)-195*s23*(s24*s24)+189*pow(s23,3)-217*pow(s24,3))+s14*s14*(-485*(s23*s23)*(s24*s24)+343*s24*pow(s23,3)+162*pow(s23,4)-645*s23*pow(s24,3)-67*pow(s24,4))+s14*(-365*(s24*s24)*pow(s23,3)+78*s24*pow(s23,4)+24*pow(s23,5)-544*(s23*s23)*pow(s24,3)-123*s23*pow(s24,4)-6*pow(s24,5))))+pow(s12,4)*(2*(10*(s23-3*s24)*(s14*s14)+s14*(5*s23*s24+28*(s23*s23)-82*(s24*s24))-(45*s23+31*s24)*(s24*s24))*pow(s13,3)+(5*s14*(s23-3*s24)-24*(s24*s24))*pow(s13,4)+s13*s13*(6*(s14*s14)*(-7*s23*s24+25*(s23*s23)-46*(s24*s24))-s24*s24*(114*s23*s24+90*(s23*s23)+19*(s24*s24))+30*(s23-3*s24)*pow(s14,3)+s14*(100*s24*(s23*s23)-399*s23*(s24*s24)+102*pow(s23,3)-220*pow(s24,3)))+s13*(-(s23*(s24*s24)*(40*s23*s24+24*(s23*s23)+13*(s24*s24)))+6*(-19*s23*s24+22*(s23*s23)-26*(s24*s24))*pow(s14,3)+20*(s23-3*s24)*pow(s14,4)+s14*s14*(85*s24*(s23*s23)-405*s23*(s24*s24)+180*pow(s23,3)-206*pow(s24,3))+s14*(-284*(s23*s23)*(s24*s24)+96*s24*pow(s23,3)+56*pow(s23,4)-289*s23*pow(s24,3)-53*pow(s24,4)))+s14*((-62*s23*s24+38*(s23*s23)-20*(s24*s24))*pow(s14,3)+5*(s23-3*s24)*pow(s14,4)-46*(s24*s24)*pow(s23,3)+25*s24*pow(s23,4)+5*pow(s23,5)+s14*s14*(-30*s24*(s23*s23)-94*s23*(s24*s24)+69*pow(s23,3)-61*pow(s24,3))-106*(s23*s23)*pow(s24,3)+s14*(-119*(s23*s23)*(s24*s24)+47*s24*pow(s23,3)+38*pow(s23,4)-167*s23*pow(s24,3)-54*pow(s24,4))-65*s23*pow(s24,4)-8*pow(s24,5)))+s13*s14*(-(s14*(s23*s23)*(s24*s24)*(100*s24*(s23*s23)+35*s23*(s24*s24)+71*pow(s23,3)-31*pow(s24,3)))-s24*s24*pow(s23,3)*(28*s24*(s23*s23)+8*s23*(s24*s24)+16*pow(s23,3)-11*pow(s24,3))+pow(s14,4)*(19*s24*pow(s23,3)+8*pow(s23,4)-16*s23*pow(s24,3)+4*pow(s24,4))+pow(s14,3)*(-39*(s24*s24)*pow(s23,3)+35*s24*pow(s23,4)+14*pow(s23,5)-75*(s23*s23)*pow(s24,3)-2*s23*pow(s24,4)+10*pow(s24,5))+s23*(s14*s14)*(-90*(s24*s24)*pow(s23,3)+17*s24*pow(s23,4)+6*pow(s23,5)-129*(s23*s23)*pow(s24,3)-46*s23*pow(s24,4)+22*pow(s24,5)))+s13*s13*(-3*s14*(s23*s23)*(s24*s24)*(30*s24*(s23*s23)+9*s23*(s24*s24)+16*pow(s23,3)-11*pow(s24,3))-4*(s23+s24)*pow(s23,4)*pow(s24,3)-s23*s24*(s14*s14)*(182*(s23*s23)*(s24*s24)+130*s24*pow(s23,3)+4*pow(s23,4)+43*s23*pow(s24,3)-50*pow(s24,4))+pow(s14,4)*(-14*(s23*s23)*(s24*s24)+25*s24*pow(s23,3)+13*pow(s23,4)-34*s23*pow(s24,3)+10*pow(s24,4))+pow(s14,3)*(-99*(s24*s24)*pow(s23,3)+18*s24*pow(s23,4)+12*pow(s23,5)-133*(s23*s23)*pow(s24,3)+10*s23*pow(s24,4)+26*pow(s24,5)))+s12*(-(s24*((6*s23+s24)*(s24*s24)+s14*(6*s23*s24-4*(s23*s23)+13*(s24*s24)))*pow(s13,5))+pow(s13,6)*pow(s24,3)+pow(s13,4)*(s14*s14*(34*s24*(s23*s23)-24*s23*(s24*s24)+12*pow(s23,3)-53*pow(s24,3))-2*s23*(17*s23+8*s24)*pow(s24,3)-s14*s24*(51*s24*(s23*s23)+112*s23*(s24*s24)-12*pow(s23,3)+8*pow(s24,3)))+pow(s13,3)*(pow(s14,3)*(81*s24*(s23*s23)-34*s23*(s24*s24)+39*pow(s23,3)-75*pow(s24,3))-(44*s23+27*s24)*(s23*s23)*pow(s24,3)+s14*s14*(-178*(s23*s23)*(s24*s24)+88*s24*pow(s23,3)+36*pow(s23,4)-284*s23*pow(s24,3)-5*pow(s24,4))+s14*s24*(-303*(s23*s23)*(s24*s24)-167*s24*pow(s23,3)+12*pow(s23,4)-47*s23*pow(s24,3)+10*pow(s24,4)))+s14*(pow(s14,5)*(3*s24*(s23*s23)+2*s23*(s24*s24)+3*pow(s23,3)-4*pow(s24,3))-s24*s24*pow(s23,3)*(20*s24*(s23*s23)+23*s23*(s24*s24)+8*pow(s23,3)+11*pow(s24,3))+s14*s24*(s23*s23)*(-107*(s23*s23)*(s24*s24)-46*s24*pow(s23,3)+8*pow(s23,4)-109*s23*pow(s24,3)-31*pow(s24,4))+pow(s14,4)*(25*s24*pow(s23,3)+11*pow(s23,4)-42*s23*pow(s24,3)-12*pow(s24,4))+s23*(s14*s14)*(-65*(s24*s24)*pow(s23,3)+37*s24*pow(s23,4)+3*pow(s23,5)-183*(s23*s23)*pow(s24,3)-155*s23*pow(s24,4)-28*pow(s24,5))+pow(s14,3)*(-31*(s24*s24)*pow(s23,3)+50*s24*pow(s23,4)+11*pow(s23,5)-134*(s23*s23)*pow(s24,3)-80*s23*pow(s24,4)-8*pow(s24,5)))+s13*(pow(s14,5)*(31*s24*(s23*s23)+21*pow(s23,3)-20*pow(s24,3))-s14*(s23*s23)*(s24*s24)*(158*s24*(s23*s23)+59*s23*(s24*s24)+103*pow(s23,3)-2*pow(s24,3))+2*(s23+s24)*pow(s23,4)*pow(s24,3)+2*pow(s14,4)*(-26*(s23*s23)*(s24*s24)+71*s24*pow(s23,3)+34*pow(s23,4)-78*s23*pow(s24,3)-8*pow(s24,4))+s23*(s14*s14)*(-290*(s24*s24)*pow(s23,3)+44*s24*pow(s23,4)+12*pow(s23,5)-431*(s23*s23)*pow(s24,3)-176*s23*pow(s24,4)-6*pow(s24,5))+pow(s14,3)*(-240*(s24*s24)*pow(s23,3)+153*s24*pow(s23,4)+57*pow(s23,5)-413*(s23*s23)*pow(s24,3)-119*s23*pow(s24,4)+2*pow(s24,5)))+s13*s13*(pow(s14,4)*(79*s24*(s23*s23)-18*s23*(s24*s24)+45*pow(s23,3)-52*pow(s24,3))-5*(3*s23+2*s24)*pow(s23,3)*pow(s24,3)+pow(s14,3)*(-179*(s23*s23)*(s24*s24)+193*s24*pow(s23,3)+93*pow(s23,4)-292*s23*pow(s24,3)-2*pow(s24,4))+s14*s23*s24*(-340*(s23*s23)*(s24*s24)-217*s24*pow(s23,3)+4*pow(s23,4)-72*s23*pow(s24,3)+28*pow(s24,4))+s14*s14*(-392*(s24*s24)*pow(s23,3)+90*s24*pow(s23,4)+36*pow(s23,5)-549*(s23*s23)*pow(s24,3)-70*s23*pow(s24,4)+20*pow(s24,5)))))*pow(s12+s23+s24,-1))/2.;
}

// Coefficient order epsilon^1 of master 4
template<>
double qq2yygCF<4,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23,-3)*pow(s24,-3)*((-10*(s23-s24)*(s14*s14)-2*s13*(5*s14*(s23-s24)-9*(s24*s24))+6*(2*s23+s24)*(s24*s24)+s14*(9*s23*s24-10*(s23*s23)+20*(s24*s24)))*pow(s12,7)+2*(s14*(-s23+s24)+s24*s24)*pow(s12,8)+s24*s24*(s14*(37*s23*s24+6*(s23*s23)-4*(s24*s24))+s24*(4*s23*s24+14*(s23*s23)+5*(s24*s24)))*pow(s13,5)+(2*s23-3*s24)*pow(s13,6)*pow(s24,3)+s24*pow(s13,4)*(15*s23*(s24*s24)*(2*s23*s24+2*(s23*s23)+s24*s24)+s23*(s14*s14)*(12*s23*s24-2*(s23*s23)+105*(s24*s24))+s14*s24*(137*s24*(s23*s23)+22*s23*(s24*s24)+38*pow(s23,3)+pow(s24,3)))+pow(s12,6)*(6*(s24*s24)*(5*s23*s24+5*(s23*s23)+s24*s24)+s13*s13*(-20*s14*(s23-s24)+54*(s24*s24))+s14*s14*(40*s23*s24-46*(s23*s23)+59*(s24*s24))+s13*(-40*(s23-s24)*(s14*s14)+2*(45*s23+22*s24)*(s24*s24)+s14*(30*s23*s24-46*(s23*s23)+124*(s24*s24)))-20*(s23-s24)*pow(s14,3)+s14*(18*s24*(s23*s23)+116*s23*(s24*s24)-20*pow(s23,3)+50*pow(s24,3)))+pow(s13,3)*(2*s14*s23*(s24*s24)*(93*s24*(s23*s23)+24*s23*(s24*s24)+40*pow(s23,3)-12*pow(s24,3))+s23*s23*(36*s23*s24+26*(s23*s23)+15*(s24*s24))*pow(s24,3)+s24*(s14*s14)*(263*(s23*s23)*(s24*s24)+89*s24*pow(s23,3)-6*pow(s23,4)+3*s23*pow(s24,3)-27*pow(s24,4))+pow(s14,3)*(3*(s23*s23)*(s24*s24)-16*s24*pow(s23,3)-6*pow(s23,4)+121*s23*pow(s24,3)-6*pow(s24,4)))+s23*(s14+s23)*(s14*s14)*(s23*s23*(s24*s24)*(18*s23*s24+12*(s23*s23)+17*(s24*s24))+pow(s14,3)*(9*s23*(s24*s24)-2*pow(s23,3)+8*pow(s24,3))+s14*s23*s24*(35*s24*(s23*s23)+43*s23*(s24*s24)+2*pow(s23,3)+30*pow(s24,3))+s14*s14*(34*(s23*s23)*(s24*s24)+3*s24*pow(s23,3)-2*pow(s23,4)+34*s23*pow(s24,3)+12*pow(s24,4)))+pow(s12,5)*(s13*s13*(-60*(s23-s24)*(s14*s14)+(224*s23+115*s24)*(s24*s24)+s14*(30*s23*s24-84*(s23*s23)+272*(s24*s24)))+(-20*s14*(s23-s24)+76*(s24*s24))*pow(s13,3)+(70*s23*s24-84*(s23*s23)+76*(s24*s24))*pow(s14,3)-20*(s23-s24)*pow(s14,4)+2*(s24*s24)*(30*s24*(s23*s23)+12*s23*(s24*s24)+20*pow(s23,3)+pow(s24,3))+s14*s14*(71*s24*(s23*s23)+317*s23*(s24*s24)-84*pow(s23,3)+139*pow(s24,3))+s13*(-4*(s14*s14)*(-25*s23*s24+42*(s23*s23)-68*(s24*s24))+s24*s24*(181*s23*s24+182*(s23*s23)+39*(s24*s24))-60*(s23-s24)*pow(s14,3)+s14*(22*s24*(s23*s23)+579*s23*(s24*s24)-84*pow(s23,3)+251*pow(s24,3)))+s14*(277*(s23*s23)*(s24*s24)+22*s24*pow(s23,3)-20*pow(s23,4)+243*s23*pow(s24,3)+50*pow(s24,4)))+pow(s12,4)*((-40*(s23-s24)*(s14*s14)+2*(127*s23+70*s24)*(s24*s24)+s14*(-76*(s23*s23)+272*(s24*s24)))*pow(s13,3)+(-10*s14*(s23-s24)+54*(s24*s24))*pow(s13,4)+(60*s23*s24-76*(s23*s23)+44*(s24*s24))*pow(s14,4)-10*(s23-s24)*pow(s14,5)+6*s23*(s24*s24)*(10*s24*(s23*s23)+6*s23*(s24*s24)+5*pow(s23,3)+pow(s24,3))+pow(s14,3)*(107*s24*(s23*s23)+383*s23*(s24*s24)-138*pow(s23,3)+185*pow(s24,3))+s13*s13*(s24*s24*(388*s23*s24+362*(s23*s23)+93*(s24*s24))+s14*s14*(60*s23*s24-228*(s23*s23)+426*(s24*s24))-60*(s23-s24)*pow(s14,3)+s14*(-48*s24*(s23*s23)+1017*s23*(s24*s24)-132*pow(s23,3)+476*pow(s24,3)))+s14*s14*(688*(s23*s23)*(s24*s24)+77*s24*pow(s23,3)-76*pow(s23,4)+598*s23*pow(s24,3)+134*pow(s24,4))+s13*((120*s23*s24-228*(s23*s23)+252*(s24*s24))*pow(s14,3)-40*(s23-s24)*pow(s14,4)+s24*s24*(286*s24*(s23*s23)+129*s23*(s24*s24)+188*pow(s23,3)+13*pow(s24,3))+s14*s14*(45*s24*(s23*s23)+1133*s23*(s24*s24)-276*pow(s23,3)+500*pow(s24,3))+s14*(1103*(s23*s23)*(s24*s24)-16*s24*pow(s23,3)-76*pow(s23,4)+948*s23*pow(s24,3)+185*pow(s24,4)))+s14*(349*(s24*s24)*pow(s23,3)+18*s24*pow(s23,4)-10*pow(s23,5)+460*(s23*s23)*pow(s24,3)+194*s23*pow(s24,4)+18*pow(s24,5)))+s13*s13*(s14*(s23*s23)*(s24*s24)*(109*s24*(s23*s23)+11*s23*(s24*s24)+70*pow(s23,3)-46*pow(s24,3))+(13*s23*s24+8*(s23*s23)+5*(s24*s24))*pow(s23,3)*pow(s24,3)+s23*s24*(s14*s14)*(243*(s23*s23)*(s24*s24)+156*s24*pow(s23,3)-6*pow(s23,4)+2*s23*pow(s24,3)-83*pow(s24,4))+pow(s14,4)*(3*(s23*s23)*(s24*s24)-26*s24*pow(s23,3)-14*pow(s23,4)+73*s23*pow(s24,3)-13*pow(s24,4))-pow(s14,3)*(-97*(s24*s24)*pow(s23,3)+28*s24*pow(s23,4)+12*pow(s23,5)-214*(s23*s23)*pow(s24,3)+32*s23*pow(s24,4)+37*pow(s24,5)))-s13*s14*(s24*s24*pow(s23,3)*(-23*s24*(s23*s23)+9*s23*(s24*s24)-22*pow(s23,3)+21*pow(s24,3))+pow(s14,4)*(-15*(s23*s23)*(s24*s24)+12*s24*pow(s23,3)+10*pow(s23,4)-30*s23*pow(s24,3)+6*pow(s24,4))+s14*s24*(s23*s23)*(-101*(s23*s23)*(s24*s24)-91*s24*pow(s23,3)+2*pow(s23,4)-7*s23*pow(s24,3)+55*pow(s24,4))+pow(s14,3)*(-89*(s24*s24)*pow(s23,3)+19*s24*pow(s23,4)+16*pow(s23,5)-116*(s23*s23)*pow(s24,3)+5*s23*pow(s24,4)+14*pow(s24,5))+s23*(s14*s14)*(-141*(s24*s24)*pow(s23,3)+10*s24*pow(s23,4)+6*pow(s23,5)-165*(s23*s23)*pow(s24,3)-26*s23*pow(s24,4)+44*pow(s24,5)))+s12*(s24*(s24*(31*s23*s24+14*(s23*s23)+3*(s24*s24))+s14*(30*s23*s24-6*(s23*s23)+23*(s24*s24)))*pow(s13,5)+(2*s23-s24)*(s24*s24)*pow(s13,6)+pow(s13,4)*(s24*s24*(124*s24*(s23*s23)+69*s23*(s24*s24)+32*pow(s23,3)+22*pow(s24,3))+s14*s24*(185*s24*(s23*s23)+318*s23*(s24*s24)-20*pow(s23,3)+23*pow(s24,3))+s14*s14*(-36*s24*(s23*s23)+95*s23*(s24*s24)-12*pow(s23,3)+89*pow(s24,3)))+pow(s13,3)*(s23*(s24*s24)*(158*s24*(s23*s23)+141*s23*(s24*s24)+32*pow(s23,3)+51*pow(s24,3))+pow(s14,3)*(-70*s24*(s23*s23)+133*s23*(s24*s24)-42*pow(s23,3)+127*pow(s24,3))+s14*s24*(765*(s23*s23)*(s24*s24)+425*s24*pow(s23,3)-24*pow(s23,4)+150*s23*pow(s24,3)+21*pow(s24,4))+s14*s14*(456*(s23*s23)*(s24*s24)-104*s24*pow(s23,3)-36*pow(s23,4)+705*s23*pow(s24,3)+29*pow(s24,4)))+s13*s13*(s23*s23*(s24*s24)*(73*s24*(s23*s23)+87*s23*(s24*s24)+14*pow(s23,3)+36*pow(s24,3))+pow(s14,4)*(-54*s24*(s23*s23)+99*s23*(s24*s24)-54*pow(s23,3)+92*pow(s24,3))+s14*s23*s24*(690*(s23*s23)*(s24*s24)+433*s24*pow(s23,3)-12*pow(s23,4)+187*s23*pow(s24,3)+6*pow(s24,4))+pow(s14,3)*(501*(s23*s23)*(s24*s24)-157*s24*pow(s23,3)-102*pow(s23,4)+681*s23*pow(s24,3)+21*pow(s24,4))+s14*s14*(839*(s24*s24)*pow(s23,3)-96*s24*pow(s23,4)-36*pow(s23,5)+1197*(s23*s23)*pow(s24,3)+135*s23*pow(s24,4)-12*pow(s24,5)))+s13*(s24*s24*pow(s23,3)*(7*s24*(s23*s23)+12*s23*(s24*s24)+2*pow(s23,3)+7*pow(s24,3))+pow(s14,5)*(-12*s24*(s23*s23)+41*s23*(s24*s24)-30*pow(s23,3)+38*pow(s24,3))+s14*s24*(s23*s23)*(254*(s23*s23)*(s24*s24)+177*s24*pow(s23,3)-2*pow(s23,4)+94*s23*pow(s24,3)+7*pow(s24,4))+pow(s14,4)*(316*(s23*s23)*(s24*s24)-62*s24*pow(s23,3)-88*pow(s23,4)+364*s23*pow(s24,3)+32*pow(s24,4))+pow(s14,3)*(719*(s24*s24)*pow(s23,3)-66*s24*pow(s23,4)-66*pow(s23,5)+885*(s23*s23)*pow(s24,3)+188*s23*pow(s24,4)+pow(s24,5))+s23*(s14*s14)*(606*(s24*s24)*pow(s23,3)-24*s24*pow(s23,4)-12*pow(s23,5)+804*(s23*s23)*pow(s24,3)+262*s23*pow(s24,4)+7*pow(s24,5)))+s14*(pow(s14,5)*(2*s24*(s23*s23)+8*s23*(s24*s24)-6*pow(s23,3)+8*pow(s24,3))+s24*s24*pow(s23,3)*(34*s24*(s23*s23)+37*s23*(s24*s24)+14*pow(s23,3)+17*pow(s24,3))+pow(s14,4)*(100*(s23*s23)*(s24*s24)+11*s24*pow(s23,3)-22*pow(s23,4)+101*s23*pow(s24,3)+20*pow(s24,4))+s14*s24*(s23*s23)*(215*(s23*s23)*(s24*s24)+126*s24*pow(s23,3)+4*pow(s23,4)+178*s23*pow(s24,3)+47*pow(s24,4))+pow(s14,3)*(283*(s24*s24)*pow(s23,3)+25*s24*pow(s23,4)-22*pow(s23,5)+328*(s23*s23)*pow(s24,3)+134*s23*pow(s24,4)+12*pow(s24,5))+s23*(s14*s14)*(301*(s24*s24)*pow(s23,3)+19*s24*pow(s23,4)-6*pow(s23,5)+415*(s23*s23)*pow(s24,3)+256*s23*pow(s24,4)+42*pow(s24,5))))+pow(s12,3)*(6*(2*s23+s24)*(s23*s23)*(s24*s24)*((s23+s24)*(s23+s24))+(-10*(s23-s24)*(s14*s14)+2*(69*s23+40*s24)*(s24*s24)+s14*(-15*s23*s24-34*(s23*s23)+124*(s24*s24)))*pow(s13,4)+(-2*s14*(s23-s24)+18*(s24*s24))*pow(s13,5)+(25*s23*s24-34*(s23*s23)+8*(s24*s24))*pow(s14,5)-2*(s23-s24)*pow(s14,6)+pow(s14,4)*(75*s24*(s23*s23)+227*s23*(s24*s24)-110*pow(s23,3)+131*pow(s24,3))+pow(s13,3)*(-4*(s14*s14)*(5*s23*s24+34*(s23*s23)-68*(s24*s24))+2*(s24*s24)*(190*s23*s24+156*(s23*s23)+51*(s24*s24))-20*(s23-s24)*pow(s14,3)+s14*(-96*s24*(s23*s23)+791*s23*(s24*s24)-92*pow(s23,3)+422*pow(s24,3)))+pow(s14,3)*(747*(s23*s23)*(s24*s24)+99*s24*pow(s23,3)-110*pow(s23,4)+672*s23*pow(s24,3)+162*pow(s24,4))+s13*s13*(-6*(-5*s23*s24+34*(s23*s23)-42*(s24*s24))*pow(s14,3)-20*(s23-s24)*pow(s14,4)-3*(s14*s14)*(53*s24*(s23*s23)-452*s23*(s24*s24)+104*pow(s23,3)-224*pow(s24,3))+s24*s24*(488*s24*(s23*s23)+247*s23*(s24*s24)+282*pow(s23,3)+32*pow(s24,3))+s14*(1512*(s23*s23)*(s24*s24)-118*s24*pow(s23,3)-92*pow(s23,4)+1411*s23*pow(s24,3)+251*pow(s24,4)))+s14*s14*(763*(s24*s24)*pow(s23,3)+55*s24*pow(s23,4)-34*pow(s23,5)+955*(s23*s23)*pow(s24,3)+426*s23*pow(s24,4)+42*pow(s24,5))+s14*s23*(245*(s24*s24)*pow(s23,3)+9*s24*pow(s23,4)-2*pow(s23,5)+425*(s23*s23)*pow(s24,3)+274*s23*pow(s24,4)+54*pow(s24,5))+s13*((60*s23*s24-136*(s23*s23)+94*(s24*s24))*pow(s14,4)-10*(s23-s24)*pow(s14,5)+s23*(s24*s24)*(212*s24*(s23*s23)+153*s23*(s24*s24)+102*pow(s23,3)+33*pow(s24,3))+pow(s14,3)*(12*s24*(s23*s23)+930*s23*(s24*s24)-330*pow(s23,3)+461*pow(s24,3))+s14*s14*(1874*(s23*s23)*(s24*s24)-70*s24*pow(s23,3)-220*pow(s23,4)+1601*s23*pow(s24,3)+297*pow(s24,4))+s14*(1098*(s24*s24)*pow(s23,3)-30*s24*pow(s23,4)-34*pow(s23,5)+1351*(s23*s23)*pow(s24,3)+494*s23*pow(s24,4)+55*pow(s24,5))))+s12*s12*((16*(2*s23+s24)*(s24*s24)+s14*(-6*s23*s24-6*(s23*s23)+20*(s24*s24)))*pow(s13,5)+2*(s24*s24)*pow(s13,6)-(-4*s23*s24+6*(s23*s23)+s24*s24)*pow(s14,6)+pow(s14,5)*(23*s24*(s23*s23)+65*s23*(s24*s24)-42*pow(s23,3)+49*pow(s24,3))+pow(s13,4)*(4*(s24*s24)*(43*s23*s24+29*(s23*s23)+12*(s24*s24))+s14*s14*(-20*s23*s24-30*(s23*s23)+59*(s24*s24))+s14*(-50*s24*(s23*s23)+267*s23*(s24*s24)-24*pow(s23,3)+170*pow(s24,3)))+s14*s24*(s23*s23)*(192*(s23*s23)*(s24*s24)+91*s24*pow(s23,3)+2*pow(s23,4)+167*s23*pow(s24,3)+53*pow(s24,4))+pow(s14,4)*(397*(s23*s23)*(s24*s24)+55*s24*pow(s23,3)-74*pow(s23,4)+380*s23*pow(s24,3)+92*pow(s24,4))+pow(s13,3)*(-4*(5*s23*s24+15*(s23*s23)-19*(s24*s24))*pow(s14,3)+s24*s24*(372*s24*(s23*s23)+207*s23*(s24*s24)+166*pow(s23,3)+38*pow(s24,3))+s14*s14*(-169*s24*(s23*s23)+635*s23*(s24*s24)-132*pow(s23,3)+400*pow(s24,3))+s14*(865*(s23*s23)*(s24*s24)-100*s24*pow(s23,3)-36*pow(s23,4)+987*s23*pow(s24,3)+143*pow(s24,4)))+pow(s14,3)*(694*(s24*s24)*pow(s23,3)+59*s24*pow(s23,4)-42*pow(s23,5)+841*(s23*s23)*pow(s24,3)+378*s23*pow(s24,4)+38*pow(s24,5))+s23*(s14*s14)*(447*(s24*s24)*pow(s23,3)+23*s24*pow(s23,4)-6*pow(s23,5)+693*(s23*s23)*pow(s24,3)+452*s23*pow(s24,4)+90*pow(s24,5))+s13*s13*((-60*(s23*s23)+44*(s24*s24))*pow(s14,4)+s23*(s24*s24)*(280*s24*(s23*s23)+228*s23*(s24*s24)+104*pow(s23,3)+63*pow(s24,3))+pow(s14,3)*(-165*s24*(s23*s23)+662*s23*(s24*s24)-234*pow(s23,3)+403*pow(s24,3))+s14*s14*(1612*(s23*s23)*(s24*s24)-249*s24*pow(s23,3)-180*pow(s23,4)+1603*s23*pow(s24,3)+192*pow(s24,4))+s14*(1130*(s24*s24)*pow(s23,3)-72*s24*pow(s23,4)-24*pow(s23,5)+1519*(s23*s23)*pow(s24,3)+428*s23*pow(s24,4)+57*pow(s24,5)))+s13*((10*s23*s24-30*(s23*s23)+8*(s24*s24))*pow(s14,5)+s23*s23*(s24*s24)*(70*s24*(s23*s23)+75*s23*(s24*s24)+26*pow(s23,3)+27*pow(s24,3))+pow(s14,4)*(-23*s24*(s23*s23)+327*s23*(s24*s24)-168*pow(s23,3)+206*pow(s24,3))+pow(s14,3)*(1254*(s23*s23)*(s24*s24)-104*s24*pow(s23,3)-222*pow(s23,4)+1168*s23*pow(s24,3)+189*pow(s24,4))+s14*s14*(1528*(s24*s24)*pow(s23,3)-77*s24*pow(s23,4)-84*pow(s23,5)+1805*(s23*s23)*pow(s24,3)+558*s23*pow(s24,4)+57*pow(s24,5))+s14*s23*(605*(s24*s24)*pow(s23,3)-14*s24*pow(s23,4)-6*pow(s23,5)+885*(s23*s23)*pow(s24,3)+413*s23*pow(s24,4)+84*pow(s24,5)))+2*(s24*s24)*pow(s23,3)*pow(s23+s24,3)))*pow(s12+s23+s24,-1))/2.;
}

// Coefficient of master 4 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yygCF<4>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(-1,{
        qq2yygCF<4,-1>(s12,s13,s14,s23,s24),
        qq2yygCF<4,0>(s12,s13,s14,s23,s24),
        qq2yygCF<4,1>(s12,s13,s14,s23,s24)
    });
}

