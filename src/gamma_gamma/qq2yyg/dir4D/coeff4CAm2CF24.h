/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 24: box(s23,s12+s14+s24,s14)

// Coefficient order epsilon^0 of master 24
template<>
double qq2yyg4CAm2CF<24,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*((2*(s23+s24)*(s13*s13)+s13*(12*s23*s24+2*s14*(s23+s24)+5*(s23*s23)+4*(s24*s24))+s23*(16*s23*s24+s14*(6*s23+9*s24)+s14*s14+3*(s23*s23)+10*(s24*s24)))*pow(s12,5)+(s13*(2*s23+s24)+s23*(2*s14+3*s23+5*s24))*pow(s12,6)+s23*pow(s12,7)+pow(s12,4)*(s13*s13*(10*s23*s24+2*s14*(s23+s24)+3*(s23*s23)+8*(s24*s24))+(2*s23+s24)*pow(s13,3)+s13*(s24*(s14*s14)+27*s24*(s23*s23)+27*s23*(s24*s24)+s14*(15*s23*s24+5*(s23*s23)+7*(s24*s24))+4*pow(s23,3)+6*pow(s24,3))+s23*((3*s23+4*s24)*(s14*s14)+18*s24*(s23*s23)+31*s23*(s24*s24)+s14*(29*s23*s24+6*(s23*s23)+16*(s24*s24))+pow(s23,3)+10*pow(s24,3)))+pow(s12,3)*((2*s14*s23+6*s23*s24+s23*s23+4*(s24*s24))*pow(s13,3)+s23*pow(s13,4)+s13*s13*(s23*(s14*s14)+12*s24*(s23*s23)+20*s23*(s24*s24)+s14*(9*s23*s24+2*(s23*s23)+7*(s24*s24))+pow(s23,3)+12*pow(s24,3))+s23*(s14*s14*(14*s23*s24+3*(s23*s23)+6*(s24*s24))+s24*(30*s24*(s23*s23)+27*s23*(s24*s24)+8*pow(s23,3)+5*pow(s24,3))+s14*(33*s24*(s23*s23)+48*s23*(s24*s24)+2*pow(s23,3)+13*pow(s24,3)))+s13*(s24*(4*s23+3*s24)*(s14*s14)+52*(s23*s23)*(s24*s24)+26*s24*pow(s23,3)+pow(s23,4)+29*s23*pow(s24,3)+s14*(32*s24*(s23*s23)+33*s23*(s24*s24)+4*pow(s23,3)+9*pow(s24,3))+4*pow(s24,4)))+s24*(s23*(s24*s24)*pow(s13,4)+s14*(s23*(s14*s14)+s14*(4*s23*s24+s23*s23+3*(s24*s24))+s24*((s23+s24)*(s23+s24)))*pow(s23,3)+s24*pow(s13,3)*(s14*s23*(-2*s23+s24)+pow(s24,3))+s13*s13*((s23-2*s24)*(s14*s14)*(s23*s23)+2*s23*s24*(2*s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+s14*(6*(s23*s23)*(s24*s24)+5*s24*pow(s23,3)+2*pow(s23,4)+s23*pow(s24,3)+pow(s24,4)))+s13*s23*(s23*s24*(2*s23+s24)*((s23+s24)*(s23+s24))+s23*s23*pow(s14,3)+s14*s14*(5*s24*(s23*s23)+6*s23*(s24*s24)+3*pow(s23,3)+pow(s24,3))+s14*(10*(s23*s23)*(s24*s24)+9*s24*pow(s23,3)+2*pow(s23,4)+5*s23*pow(s24,3)+2*pow(s24,4))))+s12*s12*((s14*s23*(s23+5*s24)+2*s24*(3*s23*s24+s23*s23+3*(s24*s24)))*pow(s13,3)+3*s23*s24*pow(s13,4)+s23*(s24*(8*s23*s24+s23*s23+s24*s24)*((s23+s24)*(s23+s24))+s23*s24*pow(s14,3)+s14*s14*(17*s24*(s23*s23)+17*s23*(s24*s24)+pow(s23,3)+3*pow(s24,3))+s14*s24*(45*s24*(s23*s23)+32*s23*(s24*s24)+15*pow(s23,3)+4*pow(s24,3)))+s13*s13*(s23*(s23+2*s24)*(s14*s14)+s14*s24*(13*s23*s24+8*(s23*s23)+9*(s24*s24))+s24*(19*s24*(s23*s23)+20*s23*(s24*s24)+6*pow(s23,3)+8*pow(s24,3)))+s13*(s24*(s14*s14)*(10*s23*s24+10*(s23*s23)+3*(s24*s24))+s24*(44*(s23*s23)*(s24*s24)+44*s24*pow(s23,3)+12*pow(s23,4)+15*s23*pow(s24,3)+pow(s24,4))+s14*(54*(s23*s23)*(s24*s24)+30*s24*pow(s23,3)+pow(s23,4)+31*s23*pow(s24,3)+5*pow(s24,4))))+s12*s24*((-(s14*s23*(s23-4*s24))+s24*(2*s23*s24+s23*s23+4*(s24*s24)))*pow(s13,3)+3*s23*s24*pow(s13,4)+s13*s13*(s23*s24*(s14*s14)+14*(s23*s23)*(s24*s24)+9*s24*pow(s23,3)+2*pow(s23,4)+10*s23*pow(s24,3)+s14*(12*s24*(s23*s23)+7*s23*(s24*s24)+6*pow(s23,3)+5*pow(s24,3))+2*pow(s24,4))+s13*(s23*s23*pow(s14,3)+s14*s14*(15*s24*(s23*s23)+7*s23*(s24*s24)+10*pow(s23,3)+pow(s24,3))+s14*(32*(s23*s23)*(s24*s24)+35*s24*pow(s23,3)+13*pow(s23,4)+13*s23*pow(s24,3)+pow(s24,4))+s23*(26*(s23*s23)*(s24*s24)+16*s24*pow(s23,3)+2*pow(s23,4)+15*s23*pow(s24,3)+3*pow(s24,4)))+s23*s23*(s14*s14*(15*s23*s24+8*(s23*s23)+6*(s24*s24))+2*s23*pow(s14,3)+s14*(14*s24*(s23*s23)+19*s23*(s24*s24)+2*pow(s23,3)+7*pow(s24,3))+s24*pow(s23+s24,3))))*pow(s12+s23+s24,-3))/4.;
}

// Coefficient order epsilon^1 of master 24
template<>
double qq2yyg4CAm2CF<24,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s12,-1)*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*(2*s14*(s13+s14)*s23*(s13+s23)*(2*s23-s24)*(s14+s24)*(-(s14*s23)+s13*s24)*((s23+s24)*(s23+s24))+(14*s13*(2*s14+s23+3*s24)+14*(s13*s13)+3*(3*s23*s24+s14*(6*s23+11*s24)+4*(s14*s14)-4*(s23*s23)+6*(s24*s24)))*pow(s12,8)+(11*s13+10*s14+6*s23+12*s24)*pow(s12,9)+3*pow(s12,10)+pow(s12,7)*((24*s14+6*s23+50*s24)*(s13*s13)+(18*s23+31*s24)*(s14*s14)+s14*(17*s23*s24-50*(s23*s23)+39*(s24*s24))+s13*(-2*s23*s24+s14*(29*s23+86*s24)+24*(s14*s14)-50*(s23*s23)+54*(s24*s24))+6*pow(s13,3)+6*pow(s14,3)-3*(27*s24*(s23*s23)+5*s23*(s24*s24)+16*pow(s23,3)-4*pow(s24,3)))+pow(s12,6)*(s14*s14*(5*s23*s24-78*(s23*s23)+26*(s24*s24))+s13*s13*(-54*s23*s24+s14*(s23+66*s24)+12*(s14*s14)-72*(s23*s23)+52*(s24*s24))+2*(2*s14-4*s23+9*s24)*pow(s13,3)-pow(s13,4)+(6*s23+11*s24)*pow(s14,3)+pow(s14,4)-s14*(255*s24*(s23*s23)+47*s23*(s24*s24)+180*pow(s23,3)-19*pow(s24,3))+s13*(5*(3*s23+11*s24)*(s14*s14)-297*s24*(s23*s23)-130*s23*(s24*s24)+s14*(-48*s23*s24-157*(s23*s23)+74*(s24*s24))+8*pow(s14,3)-130*pow(s23,3)+16*pow(s24,3))-3*(56*(s23*s23)*(s24*s24)+61*s24*pow(s23,3)+19*pow(s23,4)+13*s23*pow(s24,3)-pow(s24,4)))-pow(s12,5)*(3*s23*(31*s23*s24+10*(s23*s23)+9*(s24*s24))*((s23+s24)*(s23+s24))+(s14*(17*s23-6*s24)+70*s23*s24+44*(s23*s23)-8*(s24*s24))*pow(s13,3)+2*(s14+4*s23+3*s24)*pow(s13,4)+pow(s13,5)+(5*s23*s24+54*(s23*s23)-5*(s24*s24))*pow(s14,3)-s24*pow(s14,4)+s14*s14*(285*s24*(s23*s23)+47*s23*(s24*s24)+252*pow(s23,3)-7*pow(s24,3))+s13*s13*(5*(2*s23-5*s24)*(s14*s14)+377*s24*(s23*s23)+6*s14*(24*s23*s24+27*(s23*s23)-5*(s24*s24))+252*s23*(s24*s24)-2*pow(s14,3)+120*pow(s23,3)+12*pow(s24,3))+s14*(411*(s23*s23)*(s24*s24)+553*s24*pow(s23,3)+210*pow(s23,4)+77*s23*pow(s24,3)-3*pow(s24,4))+s13*(3*(s14*s14)*(25*s23*s24+59*(s23*s23)-6*(s24*s24))+602*(s23*s23)*(s24*s24)+(s23-12*s24)*pow(s14,3)-pow(s14,4)+484*s24*pow(s23,3)+115*pow(s23,4)+244*s23*pow(s24,3)+s14*(723*s24*(s23*s23)+326*s23*(s24*s24)+381*pow(s23,3)+18*pow(s24,3))+21*pow(s24,4)))-s12*((2*s23+s24)*pow(s13,5)*pow(s24,3)+s24*pow(s13,4)*(s24*(s23+2*s24)*((2*s23+s24)*(2*s23+s24))+s14*(8*s24*(s23*s23)+7*s23*(s24*s24)+4*pow(s23,3)+pow(s24,3)))+s14*s14*(s23*s23)*(-2*s24*(-3*s23*s24-7*(s23*s23)+s24*s24)*((s23+s24)*(s23+s24))+s14*s14*(23*s24*(s23*s23)+20*pow(s23,3)-4*pow(s24,3))+6*s14*(8*(s23*s23)*(s24*s24)+10*s24*pow(s23,3)+3*pow(s23,4)-pow(s24,4)))+pow(s13,3)*(4*(s24*s24)*(3*s23*s24+4*(s23*s23)+s24*s24)*((s23+s24)*(s23+s24))+s23*(s14*s14)*(12*s24*(s23*s23)+15*s23*(s24*s24)+8*pow(s23,3)+11*pow(s24,3))+s14*s24*(59*(s23*s23)*(s24*s24)+48*s24*pow(s23,3)+20*pow(s23,4)+37*s23*pow(s24,3)+8*pow(s24,4)))+s13*s13*(2*s23*(s24*s24)*(6*s23*s24+5*(s23*s23)+3*(s24*s24))*((s23+s24)*(s23+s24))+s23*pow(s14,3)*(25*s24*(s23*s23)+7*s23*(s24*s24)+24*pow(s23,3)+4*pow(s24,3))+2*s14*s24*(51*(s24*s24)*pow(s23,3)+33*s24*pow(s23,4)+11*pow(s23,5)+43*(s23*s23)*pow(s24,3)+16*s23*pow(s24,4)+2*pow(s24,5))+s14*s14*(79*(s24*s24)*pow(s23,3)+66*s24*pow(s23,4)+20*pow(s23,5)+53*(s23*s23)*pow(s24,3)+24*s23*pow(s24,4)+4*pow(s24,5)))+s13*s14*s23*(pow(s14,3)*(17*s24*(s23*s23)+16*pow(s23,3)-2*pow(s24,3))+2*s24*((s23+s24)*(s23+s24))*(6*s24*(s23*s23)+6*s23*(s24*s24)+5*pow(s23,3)+4*pow(s24,3))+s14*s14*(49*(s23*s23)*(s24*s24)+81*s24*pow(s23,3)+44*pow(s23,4)+12*s23*pow(s24,3)+2*pow(s24,4))+2*s14*(49*(s24*s24)*pow(s23,3)+37*s24*pow(s23,4)+7*pow(s23,5)+33*(s23*s23)*pow(s24,3)+20*s23*pow(s24,4)+6*pow(s24,5))))-pow(s12,4)*((33*s23*s24+7*s14*(s23+s24)+10*(s23*s23)+14*(s24*s24))*pow(s13,4)+2*(s23+2*s24)*pow(s13,5)+pow(s13,3)*((9*s23-s24)*(s14*s14)+191*s24*(s23*s23)+182*s23*(s24*s24)+s14*(98*s23*s24+65*(s23*s23)+14*(s24*s24))+42*pow(s23,3)+28*pow(s24,3))+s13*s13*(698*(s23*s23)*(s24*s24)+s14*s14*(91*s23*s24+122*(s23*s23)+2*(s24*s24))+5*(s23-s24)*pow(s14,3)+431*s24*pow(s23,3)+70*pow(s23,4)+378*s23*pow(s24,3)+s14*(647*s24*(s23*s23)+436*s23*(s24*s24)+261*pow(s23,3)+70*pow(s24,3))+58*pow(s24,4))+s13*((32*s23*s24+83*(s23*s23)+4*(s24*s24))*pow(s14,3)+(s23-s24)*pow(s14,4)+638*(s24*s24)*pow(s23,3)+301*s24*pow(s23,4)+44*pow(s23,5)+545*(s23*s23)*pow(s24,3)+s14*s14*(580*s24*(s23*s23)+251*s23*(s24*s24)+395*pow(s23,3)+41*pow(s24,3))+182*s23*pow(s24,4)+s14*(1125*(s23*s23)*(s24*s24)+1082*s24*pow(s23,3)+331*pow(s23,4)+440*s23*pow(s24,3)+58*pow(s24,4))+18*pow(s24,5))+s23*(3*(43*s23*s24+52*(s23*s23)+5*(s24*s24))*pow(s14,3)+2*(7*s23+s24)*pow(s14,4)+s14*s14*(589*s24*(s23*s23)+324*s23*(s24*s24)+288*pow(s23,3)+40*pow(s24,3))+s14*(577*(s23*s23)*(s24*s24)+454*s24*pow(s23,3)+110*pow(s23,4)+268*s23*pow(s24,3)+35*pow(s24,4))+6*(6*s23*s24+s23*s23+s24*s24)*pow(s23+s24,3)))-s12*s12*(2*(3*s23+2*s24)*(s24*s24)*pow(s13,5)+pow(s13,4)*(s14*(16*s24*(s23*s23)+21*s23*(s24*s24)+4*pow(s23,3)+5*pow(s24,3))+s24*(34*s24*(s23*s23)+35*s23*(s24*s24)+8*pow(s23,3)+9*pow(s24,3)))+pow(s13,3)*(s14*s14*(38*s24*(s23*s23)+21*s23*(s24*s24)+26*pow(s23,3)-pow(s24,3))+s24*(191*(s23*s23)*(s24*s24)+134*s24*pow(s23,3)+28*pow(s23,4)+106*s23*pow(s24,3)+22*pow(s24,4))+s14*(199*(s23*s23)*(s24*s24)+122*s24*pow(s23,3)+20*pow(s23,4)+132*s23*pow(s24,3)+30*pow(s24,4)))+s13*s13*(s23*(39*s23*s24+45*(s23*s23)+10*(s24*s24))*pow(s14,3)+s14*s14*(252*(s23*s23)*(s24*s24)+263*s24*pow(s23,3)+106*pow(s23,4)+120*s23*pow(s24,3)+24*pow(s24,4))+8*s24*(33*(s24*s24)*pow(s23,3)+18*s24*pow(s23,4)+3*pow(s23,5)+26*(s23*s23)*pow(s24,3)+9*s23*pow(s24,4)+pow(s24,5))+s14*(484*(s24*s24)*pow(s23,3)+230*s24*pow(s23,4)+30*pow(s23,5)+464*(s23*s23)*pow(s24,3)+209*s23*pow(s24,4)+36*pow(s24,5)))+s14*s23*(pow(s14,3)*(32*s24*(s23*s23)+39*pow(s23,3)-2*pow(s24,3))+s14*s14*(103*(s23*s23)*(s24*s24)+194*s24*pow(s23,3)+90*pow(s23,4)-4*pow(s24,4))+2*s14*(110*(s24*s24)*pow(s23,3)+78*s24*pow(s23,4)+15*pow(s23,5)+51*(s23*s23)*pow(s24,3)+3*s23*pow(s24,4)-pow(s24,5))+4*s23*s24*(4*s23+s24)*pow(s23+s24,3))+s13*((23*s23+15*s24)*(s23*s23)*pow(s14,4)+pow(s14,3)*(102*(s23*s23)*(s24*s24)+200*s24*pow(s23,3)+133*pow(s23,4)+26*s23*pow(s24,3)+4*pow(s24,4))+s14*s14*(458*(s24*s24)*pow(s23,3)+401*s24*pow(s23,4)+120*pow(s23,5)+262*(s23*s23)*pow(s24,3)+82*s23*pow(s24,4)+8*pow(s24,5))+2*s14*(171*(s24*s24)*pow(s23,4)+72*s24*pow(s23,5)+8*pow(s23,6)+188*pow(s23,3)*pow(s24,3)+111*(s23*s23)*pow(s24,4)+32*s23*pow(s24,5)+2*pow(s24,6))+2*s23*s24*(7*s23*s24+3*(s23*s23)+3*(s24*s24))*pow(s23+s24,3)))-pow(s12,3)*(6*s24*(s23+s24)*pow(s13,5)+pow(s13,4)*(32*s24*(s23*s23)+51*s23*(s24*s24)+s14*(21*s23*s24+8*(s23*s23)+9*(s24*s24))+4*pow(s23,3)+16*pow(s24,3))+pow(s13,3)*(s14*s14*(21*s23*s24+27*(s23*s23)-2*(s24*s24))+s14*(205*s24*(s23*s23)+178*s23*(s24*s24)+64*pow(s23,3)+38*pow(s24,3))+2*(147*(s23*s23)*(s24*s24)+66*s24*pow(s23,3)+6*pow(s23,4)+103*s23*pow(s24,3)+21*pow(s24,4)))+s13*s13*((11*s23*s24+32*(s23*s23)-3*(s24*s24))*pow(s14,3)+535*(s24*s24)*pow(s23,3)+182*s24*pow(s23,4)+14*pow(s23,5)+577*(s23*s23)*pow(s24,3)+s14*s14*(313*s24*(s23*s23)+179*s23*(s24*s24)+186*pow(s23,3)+35*pow(s24,3))+252*s23*pow(s24,4)+s14*(865*(s23*s23)*(s24*s24)+645*s24*pow(s23,3)+152*pow(s23,4)+468*s23*pow(s24,3)+90*pow(s24,4))+38*pow(s24,5))+s13*(s23*(13*s23+3*s24)*pow(s14,4)+pow(s14,3)*(169*s24*(s23*s23)+57*s23*(s24*s24)+167*pow(s23,3)+12*pow(s24,3))+2*((s23+s24)*(s23+s24))*(59*(s23*s23)*(s24*s24)+32*s24*pow(s23,3)+3*pow(s23,4)+25*s23*pow(s24,3)+2*pow(s24,4))+s14*s14*(631*(s23*s23)*(s24*s24)+781*s24*pow(s23,3)+333*pow(s23,4)+231*s23*pow(s24,3)+36*pow(s24,4))+s14*(1035*(s24*s24)*pow(s23,3)+627*s24*pow(s23,4)+124*pow(s23,5)+753*(s23*s23)*pow(s24,3)+247*s23*pow(s24,4)+28*pow(s24,5)))+s23*(s23*(251*s23*s24+174*(s23*s23)+81*(s24*s24))*pow(s14,3)+18*s23*(2*s23+s24)*pow(s14,4)+2*s14*((s23+s24)*(s23+s24))*(56*s24*(s23*s23)+29*s23*(s24*s24)+11*pow(s23,3)+2*pow(s24,3))+s14*s14*(437*(s23*s23)*(s24*s24)+472*s24*pow(s23,3)+150*pow(s23,4)+125*s23*pow(s24,3)+4*pow(s24,4))+6*s23*s24*pow(s23+s24,4))))*pow(s12+s23+s24,-3))/8.;
}

// Coefficient order epsilon^2 of master 24
template<>
double qq2yyg4CAm2CF<24,2>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s12,-1)*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-1)*pow(s24,-1)*((3*s23*s24+6*s13*(3*s14+2*s23+6*s24)+s14*(2*s23+19*s24)+12*(s13*s13)+6*(s14*s14)-13*(s23*s23)+12*(s24*s24))*pow(s12,8)+(8*s13+6*s14+3*s23+8*s24)*pow(s12,9)+2*pow(s12,10)+s14*(s13+s23)*(s14+s24)*((s23+s24)*(s23+s24))*(s24*(s13*s13)*(-3*s23*s24+7*(s23*s23)-3*(s24*s24))+s13*s14*s23*(10*s23*s24-7*(s23*s23)+3*(s24*s24))-7*(s14*s14)*pow(s23,3))+pow(s12,7)*((18*s14+18*s23+59*s24)*(s13*s13)+(-12*s23+13*s24)*(s14*s14)-69*s24*(s23*s23)-13*s23*(s24*s24)+s14*(-25*s23*s24-74*(s23*s23)+21*(s24*s24))+s13*(37*s23*s24+s14*(8*s23+67*s24)+12*(s14*s14)-35*(s23*s23)+66*(s24*s24))+8*pow(s13,3)+2*pow(s14,3)-42*pow(s23,3)+8*pow(s24,3))+pow(s12,6)*(-130*(s23*s23)*(s24*s24)+s14*s14*(-77*s23*s24-144*(s23*s23)+7*(s24*s24))+s13*s13*(79*s23*s24+5*s14*(2*s23+15*s24)+6*(s14*s14)-31*(s23*s23)+120*(s24*s24))+(6*s14+13*s23+42*s24)*pow(s13,3)+2*pow(s13,4)+(-18*s23+s24)*pow(s14,3)-152*s24*pow(s23,3)-48*pow(s23,4)-s14*(297*s24*(s23*s23)+82*s23*(s24*s24)+196*pow(s23,3)-9*pow(s24,3))-27*s23*pow(s24,3)+s13*((-21*s23+33*s24)*(s14*s14)-146*s24*(s23*s23)+40*s23*(s24*s24)+s14*(-9*s23*s24-168*(s23*s23)+98*(s24*s24))+2*pow(s14,3)-102*pow(s23,3)+64*pow(s24,3))+2*pow(s24,4))+pow(s12,5)*((63*s23*s24+3*s14*(2*s23+9*s24)-8*(s23*s23)+90*(s24*s24))*pow(s13,3)+(5*s23+11*s24)*pow(s13,4)-(67*s23*s24+118*(s23*s23)+3*(s24*s24))*pow(s14,3)-(7*s23+s24)*pow(s14,4)-s14*s14*(449*s24*(s23*s23)+129*s23*(s24*s24)+336*pow(s23,3)+pow(s24,3))+s13*s13*(-2*(5*s23-9*s24)*(s14*s14)-98*s24*(s23*s23)+138*s23*(s24*s24)+s14*(31*s23*s24-125*(s23*s23)+122*(s24*s24))-81*pow(s23,3)+130*pow(s24,3))-s13*(s14*s14*(97*s23*s24+241*(s23*s23)-31*(s24*s24))+229*(s23*s23)*(s24*s24)+(18*s23-s24)*pow(s14,3)+316*s24*pow(s23,3)+96*pow(s23,4)+s14*(543*s24*(s23*s23)+55*s23*(s24*s24)+389*pow(s23,3)-71*pow(s24,3))-21*s23*pow(s24,3)-36*pow(s24,4))+s14*(-426*(s23*s23)*(s24*s24)-572*s24*pow(s23,3)-214*pow(s23,4)-85*s23*pow(s24,3)+pow(s24,4))-s23*(198*(s23*s23)*(s24*s24)+132*s24*pow(s23,3)+25*pow(s23,4)+109*s23*pow(s24,3)+18*pow(s24,4)))+pow(s12,4)*((2*s14*s23+21*s23*s24+s23*s23+24*(s24*s24))*pow(s13,4)+s23*pow(s13,5)-(18*s23*s24+35*(s23*s23)+s24*s24)*pow(s14,4)-pow(s14,3)*(283*s24*(s23*s23)+70*s23*(s24*s24)+252*pow(s23,3)+2*pow(s24,3))-s23*((s23+s24)*(s23+s24))*(41*s24*(s23*s23)+31*s23*(s24*s24)+5*pow(s23,3)+4*pow(s24,3))+pow(s13,3)*(-(s24*(s14*s14))-16*s24*(s23*s23)+115*s23*(s24*s24)+s14*(22*s23*s24-32*(s23*s23)+45*(s24*s24))-22*pow(s23,3)+100*pow(s24,3))-s13*s13*(s14*s14*(34*s23*s24+116*(s23*s23)-13*(s24*s24))+120*(s23*s23)*(s24*s24)+2*(s23+s24)*pow(s14,3)+221*s24*pow(s23,3)+57*pow(s23,4)+s14*(335*s24*(s23*s23)-28*s23*(s24*s24)+245*pow(s23,3)-92*pow(s24,3))-123*s23*pow(s24,3)-80*pow(s24,4))-s14*s14*(478*(s23*s23)*(s24*s24)+776*s24*pow(s23,3)+354*pow(s23,4)+80*s23*pow(s24,3)+pow(s24,4))-s14*s23*(586*(s23*s23)*(s24*s24)+469*s24*pow(s23,3)+110*pow(s23,4)+264*s23*pow(s24,3)+34*pow(s24,4))-s13*(2*(28*s23*s24+59*(s23*s23)+2*(s24*s24))*pow(s14,3)+(s23+s24)*pow(s14,4)+357*(s24*s24)*pow(s23,3)+233*s24*pow(s23,4)+38*pow(s23,5)+s14*s14*(597*s24*(s23*s23)+132*s23*(s24*s24)+496*pow(s23,3)-9*pow(s24,3))+158*(s23*s23)*pow(s24,3)+s14*(612*(s23*s23)*(s24*s24)+928*s24*pow(s23,3)+349*pow(s23,4)+50*s23*pow(s24,3)-25*pow(s24,4))-13*s23*pow(s24,4)-12*pow(s24,5)))+s12*(-((s23+s24)*(s14*s14)*((35*s23+22*s24)*(s14*s14)+s24*(32*s23*s24+21*(s23*s23)+11*(s24*s24))+s14*(71*s23*s24+26*(s23*s23)+32*(s24*s24)))*pow(s23,3))+s23*pow(s13,5)*pow(s24,3)+s24*pow(s13,4)*(s14*s23*(-4*s23*s24-3*(s23*s23)+2*(s24*s24))+s24*(3*s24*(s23*s23)+6*s23*(s24*s24)-pow(s23,3)+3*pow(s24,3)))-pow(s13,3)*(s24*s24*(5*(s23*s23)*(s24*s24)+15*s24*pow(s23,3)+8*pow(s23,4)-4*s23*pow(s24,3)-2*pow(s24,4))+s14*s24*(32*(s23*s23)*(s24*s24)+32*s24*pow(s23,3)+17*pow(s23,4)+29*s23*pow(s24,3)+9*pow(s24,4))+s14*s14*(9*(s23*s23)*(s24*s24)+10*s24*pow(s23,3)+10*pow(s23,4)+16*s23*pow(s24,3)+10*pow(s24,4)))-s13*s14*s23*(s23*(31*s23*s24+22*(s23*s23)+9*(s24*s24))*pow(s14,3)-s24*((s23+s24)*(s23+s24))*(-7*s24*(s23*s23)+3*s23*(s24*s24)-14*pow(s23,3)+pow(s24,3))+s14*s14*(46*(s23*s23)*(s24*s24)+128*s24*pow(s23,3)+73*pow(s23,4)-12*s23*pow(s24,3)-2*pow(s24,4))+s14*(112*(s24*s24)*pow(s23,3)+105*s24*pow(s23,4)+19*pow(s23,5)+7*(s23*s23)*pow(s24,3)-22*s23*pow(s24,4)-3*pow(s24,5)))-s13*s13*(s23*(s23*s24+9*(s23*s23)-3*(s24*s24))*(s24*s24)*((s23+s24)*(s23+s24))+pow(s14,3)*(-7*(s23*s23)*(s24*s24)+31*s24*pow(s23,3)+32*pow(s23,4)-4*s23*pow(s24,3)+3*pow(s24,4))+s14*s24*(36*(s24*s24)*pow(s23,3)+55*s24*pow(s23,4)+32*pow(s23,5)+28*(s23*s23)*pow(s24,3)+19*s23*pow(s24,4)+4*pow(s24,5))+s14*s14*(35*(s24*s24)*pow(s23,3)+69*s24*pow(s23,4)+31*pow(s23,5)+7*(s23*s23)*pow(s24,3)+20*s23*pow(s24,4)+7*pow(s24,5))))+s12*s12*(3*s23*(s24*s24)*pow(s13,5)+pow(s13,4)*(-3*s14*s23*(2*s23*s24+s23*s23-2*(s24*s24))+s24*(7*s24*(s23*s23)+23*s23*(s24*s24)-2*pow(s23,3)+14*pow(s24,3)))-pow(s13,3)*(3*(s14*s14)*(7*s24*(s23*s23)+2*s23*(s24*s24)+8*pow(s23,3)+4*pow(s24,3))+s14*s23*(86*s24*(s23*s23)+78*s23*(s24*s24)+21*pow(s23,3)+21*pow(s24,3))+s24*(10*(s23*s23)*(s24*s24)+47*s24*pow(s23,3)+17*pow(s23,4)-36*s23*pow(s24,3)-18*pow(s24,4)))-s14*(s23*s23)*(s24*(22*s23*s24+21*(s23*s23)+4*(s24*s24))*((s23+s24)*(s23+s24))+(88*s23*s24+70*(s23*s23)+24*(s24*s24))*pow(s14,3)+s14*s14*(319*s24*(s23*s23)+228*s23*(s24*s24)+130*pow(s23,3)+45*pow(s24,3))+s14*(305*(s23*s23)*(s24*s24)+203*s24*pow(s23,3)+36*pow(s23,4)+164*s23*pow(s24,3)+26*pow(s24,4)))-s13*s13*(pow(s14,3)*(32*s24*(s23*s23)+4*s23*(s24*s24)+45*pow(s23,3)+8*pow(s24,3))+s14*s14*(121*(s23*s23)*(s24*s24)+242*s24*pow(s23,3)+140*pow(s23,4)+48*s23*pow(s24,3)+19*pow(s24,4))+s24*(88*(s24*s24)*pow(s23,3)+91*s24*pow(s23,4)+24*pow(s23,5)+7*(s23*s23)*pow(s24,3)-18*s23*pow(s24,4)-4*pow(s24,5))+s14*(288*(s24*s24)*pow(s23,3)+222*s24*pow(s23,4)+37*pow(s23,5)+131*(s23*s23)*pow(s24,3)+33*s23*pow(s24,4)+7*pow(s24,5)))-s13*(3*s23*(7*s23*s24+8*(s23*s23)+s24*s24)*pow(s14,4)+s23*s24*((s23+s24)*(s23+s24))*(17*s24*(s23*s23)+4*s23*(s24*s24)+7*pow(s23,3)-3*pow(s24,3))+pow(s14,3)*(90*(s23*s23)*(s24*s24)+281*s24*pow(s23,3)+201*pow(s23,4)+7*s23*pow(s24,3)+pow(s24,4))+s14*s14*(401*(s24*s24)*pow(s23,3)+493*s24*pow(s23,4)+163*pow(s23,5)+84*(s23*s23)*pow(s24,3)+5*s23*pow(s24,4)+2*pow(s24,5))+s14*(301*(s24*s24)*pow(s23,4)+165*s24*pow(s23,5)+17*pow(s23,6)+177*pow(s23,3)*pow(s24,3)+20*(s23*s23)*pow(s24,4)-3*s23*pow(s24,5)+pow(s24,6))))+pow(s12,3)*(3*s23*s24*pow(s13,5)+pow(s13,4)*(-2*s14*s23*(s23-3*s24)+5*s24*(s23*s23)+33*s23*(s24*s24)-pow(s23,3)+26*pow(s24,3))+pow(s13,3)*(s14*s14*(s23*s24-14*(s23*s23)-6*(s24*s24))-13*(s23*s23)*(s24*s24)-54*s24*pow(s23,3)-9*pow(s23,4)+97*s23*pow(s24,3)+s14*(-80*s24*(s23*s23)+15*s23*(s24*s24)-53*pow(s23,3)+30*pow(s24,3))+60*pow(s24,4))-s13*s13*((7*s23*s24+22*(s23*s23)+7*(s24*s24))*pow(s14,3)+220*(s24*s24)*pow(s23,3)+127*s24*pow(s23,4)+13*pow(s23,5)+65*(s23*s23)*pow(s24,3)+s14*s14*(225*s24*(s23*s23)+52*s23*(s24*s24)+209*pow(s23,3)+11*pow(s24,3))+s14*(322*(s23*s23)*(s24*s24)+481*s24*pow(s23,3)+165*pow(s23,4)+10*s23*pow(s24,3)-24*pow(s24,4))-61*s23*pow(s24,4)-27*pow(s24,5))-s13*((5*s23*s24+10*(s23*s23)+s24*s24)*pow(s14,4)+185*(s24*s24)*pow(s23,4)+71*s24*pow(s23,5)+5*pow(s23,6)+165*pow(s23,3)*pow(s24,3)+pow(s14,3)*(221*s24*(s23*s23)+46*s23*(s24*s24)+233*pow(s23,3)+4*pow(s24,3))+38*(s23*s23)*pow(s24,4)+s14*s14*(456*(s23*s23)*(s24*s24)+862*s24*pow(s23,3)+432*pow(s23,4)+64*s23*pow(s24,3)+3*pow(s24,4))+s14*(725*(s24*s24)*pow(s23,3)+612*s24*pow(s23,4)+135*pow(s23,5)+262*(s23*s23)*pow(s24,3)+10*s23*pow(s24,4)-2*pow(s24,5))-10*s23*pow(s24,5)-2*pow(s24,6))-s23*(2*(31*s23*s24+35*(s23*s23)+5*(s24*s24))*pow(s14,4)+pow(s14,3)*(444*s24*(s23*s23)+206*s23*(s24*s24)+258*pow(s23,3)+22*pow(s24,3))+s14*s14*(594*(s23*s23)*(s24*s24)+599*s24*pow(s23,3)+180*pow(s23,4)+200*s23*pow(s24,3)+16*pow(s24,4))+s14*(327*(s24*s24)*pow(s23,3)+171*s24*pow(s23,4)+22*pow(s23,5)+239*(s23*s23)*pow(s24,3)+65*s23*pow(s24,4)+4*pow(s24,5))+s23*s24*(7*s23+4*s24)*pow(s23+s24,3))))*pow(s12+s23+s24,-3))/4.;
}

// Coefficient of master 24 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yyg4CAm2CF<24>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(0,{
        qq2yyg4CAm2CF<24,0>(s12,s13,s14,s23,s24),
        qq2yyg4CAm2CF<24,1>(s12,s13,s14,s23,s24),
        qq2yyg4CAm2CF<24,2>(s12,s13,s14,s23,s24)
    });
}

