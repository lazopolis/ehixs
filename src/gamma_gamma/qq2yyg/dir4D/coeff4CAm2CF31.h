/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 31: box(s12+s14+s24,s12+s13+s23,s12)

// Coefficient order epsilon^0 of master 31
template<>
double qq2yyg4CAm2CF<31,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (2*s13*(-(s14*s23)+s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*pow(s12+s13+s14,-1)*pow(s23,-1)+2*s12*(s14*s23-s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s24,-1)+4*s12*(s12+s13)*(s12+s24)*(-(s14*s23)+s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s14,-1)*pow(s23,-1)*pow(s24,-1)+2*(s12+s14)*(s12*(2*s13+s14)+s14*(s13+s23))*(s14*s23-s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s24,-1)+2*s23*(s14*s23-s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23+s24,-1)+2*(s12+s24)*((s13+s23)*s24+s12*(2*s23+s24))*(-(s14*s23)+s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s14,-1)*pow(s23,-1)*pow(s12+s23+s24,-1)+pow(s12+s13+s14,-1)*pow(s23,-1)*(8*s12*s13*s14-4*s12*s13*s23+4*s13*s14*s23+8*s14*(s12*s12)+4*s14*(s13*s13)+4*(-(s14*s23)+s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*(3*s12*s14*s23*(s12+s13+s14+s23+s24)+(s12*s12-s14*s23+s13*s24+s12*(s13+s14+s23+s24))*(s12*s12-s14*s23+s13*s24+s12*(s13+s14+s23+s24)))*pow(s12+s13+s14+s23+s24,-3)-4*(2*s12+s13-s14)*(2*s12*s13*s24*(s13+s14+s23+s24)+s12*s12*(2*s13*(s14+s23+2*s24)+s13*s13+(s14+s23+s24)*(s14+s23+s24))+(s14*s23-s13*s24)*(s14*s23-s13*s24)+2*(s13+s14+s23+s24)*pow(s12,3)+pow(s12,4))*pow(s12+s13+s14+s23+s24,-2)+2*(-(s14*s23)+s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*(2*s12*(s13-2*s14)+s13*(s13-2*s14+s23)+2*(s12*s12))*pow(s12+s13+s14+s23+s24,-1))+pow(s13,-1)*pow(s12+s23+s24,-1)*(-4*s12*s13*s23+8*s12*s23*s24+4*s13*s23*s24+8*s24*(s12*s12)+4*s24*(s23*s23)+4*(s14*s23-s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*(3*s12*s13*s24*(s12+s13+s14+s23+s24)+(s12*s12+s14*s23-s13*s24+s12*(s13+s14+s23+s24))*(s12*s12+s14*s23-s13*s24+s12*(s13+s14+s23+s24)))*pow(s12+s13+s14+s23+s24,-3)-4*(2*s12+s23-s24)*(2*s12*s14*s23*(s13+s14+s23+s24)+s12*s12*(2*s13*(s14+s23+s24)+2*s14*(2*s23+s24)+s13*s13+s14*s14+(s23+s24)*(s23+s24))+(s14*s23-s13*s24)*(s14*s23-s13*s24)+2*(s13+s14+s23+s24)*pow(s12,3)+pow(s12,4))*pow(s12+s13+s14+s23+s24,-2)+2*(s14*s23-s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*(2*s12*(s23-2*s24)+s23*(s13+s23-2*s24)+2*(s12*s12))*pow(s12+s13+s14+s23+s24,-1))+2*pow(s13,-1)*pow(s24,-1)*(-6*s13*(s12*s12)-8*s14*(s12*s12)-8*s23*(s12*s12)-6*s24*(s12*s12)-2*s13*(s14*s14)-2*s23*(s14*s23+s23*s24+s14*s14)-2*s12*(5*s14*s23+s13*(3*s14-s24)+s23*(s23+3*s24)+s14*s14)-6*pow(s12,3)-2*(s14*s23-s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*(3*s12*s13*s24*(s12+s13+s14+s23+s24)+(s12*s12+s14*s23-s13*s24+s12*(s13+s14+s23+s24))*(s12*s12+s14*s23-s13*s24+s12*(s13+s14+s23+s24)))*pow(s12+s13+s14+s23+s24,-3)+2*(s12-s13-s24)*(2*s12*s14*s23*(s13+s14+s23+s24)+s12*s12*(2*s13*(s14+s23+s24)+2*s14*(2*s23+s24)+s13*s13+s14*s14+(s23+s24)*(s23+s24))+(s14*s23-s13*s24)*(s14*s23-s13*s24)+2*(s13+s14+s23+s24)*pow(s12,3)+pow(s12,4))*pow(s12+s13+s14+s23+s24,-2)+(s14*s23-s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*(3*s13*s14+s23*(4*s14+3*s24)+s12*(5*s13+4*s14+4*s23+5*s24)+3*(s12*s12))*pow(s12+s13+s14+s23+s24,-1))+2*pow(s12+s13+s14,-1)*pow(s23,-1)*(2*s12*s14*(6*s13+s14+2*s23)+12*s13*(s12*s12)+2*s13*(s14*s14)+2*s23*(s14*s14)-4*pow(s12,3)+2*(s14*s23-s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*(3*s12*s13*s24*(s12+s13+s14+s23+s24)+(s12*s12+s14*s23-s13*s24+s12*(s13+s14+s23+s24))*(s12*s12+s14*s23-s13*s24+s12*(s13+s14+s23+s24)))*pow(s12+s13+s14+s23+s24,-3)-2*(3*s12-s13+s14)*(2*s12*s14*s23*(s13+s14+s23+s24)+s12*s12*(2*s13*(s14+s23+s24)+2*s14*(2*s23+s24)+s13*s13+s14*s14+(s23+s24)*(s23+s24))+(s14*s23-s13*s24)*(s14*s23-s13*s24)+2*(s13+s14+s23+s24)*pow(s12,3)+pow(s12,4))*pow(s12+s13+s14+s23+s24,-2)+(s14*s23-s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*(s12*(-6*s13+3*s14)-s14*(3*s13+s23)+6*(s12*s12))*pow(s12+s13+s14+s23+s24,-1))+4*pow(s13,-1)*pow(s24,-1)*(4*s12*s13*s24+6*(s13+s24)*(s12*s12)+8*pow(s12,3)-(-(s14*s23)+s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*(3*s12*s14*s23*(s12+s13+s14+s23+s24)+(s12*s12-s14*s23+s13*s24+s12*(s13+s14+s23+s24))*(s12*s12-s14*s23+s13*s24+s12*(s13+s14+s23+s24)))*pow(s12+s13+s14+s23+s24,-3)+(4*s12+s13+s24)*(2*s12*s13*s24*(s13+s14+s23+s24)+s12*s12*(2*s13*(s14+s23+2*s24)+s13*s13+(s14+s23+s24)*(s14+s23+s24))+(s14*s23-s13*s24)*(s14*s23-s13*s24)+2*(s13+s14+s23+s24)*pow(s12,3)+pow(s12,4))*pow(s12+s13+s14+s23+s24,-2)-(-(s14*s23)+s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*(s13*s24+3*s12*(s13+s24)+6*(s12*s12))*pow(s12+s13+s14+s23+s24,-1))+2*pow(s13,-1)*pow(s12+s23+s24,-1)*(2*s12*s24*(2*s13+6*s23+s24)+12*s23*(s12*s12)+2*s13*(s24*s24)+2*s23*(s24*s24)-4*pow(s12,3)+2*(-(s14*s23)+s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*(3*s12*s14*s23*(s12+s13+s14+s23+s24)+(s12*s12-s14*s23+s13*s24+s12*(s13+s14+s23+s24))*(s12*s12-s14*s23+s13*s24+s12*(s13+s14+s23+s24)))*pow(s12+s13+s14+s23+s24,-3)-2*(3*s12-s23+s24)*(2*s12*s13*s24*(s13+s14+s23+s24)+s12*s12*(2*s13*(s14+s23+2*s24)+s13*s13+(s14+s23+s24)*(s14+s23+s24))+(s14*s23-s13*s24)*(s14*s23-s13*s24)+2*(s13+s14+s23+s24)*pow(s12,3)+pow(s12,4))*pow(s12+s13+s14+s23+s24,-2)+(-(s14*s23)+s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*(-((s13+3*s23)*s24)+s12*(-6*s23+3*s24)+6*(s12*s12))*pow(s12+s13+s14+s23+s24,-1)))/8.;
}

// Coefficient order epsilon^1 of master 31
template<>
double qq2yyg4CAm2CF<31,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return -(pow(s12,-1)*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s24,-1)*(s14*(s13+s23)*(s14+s24)*(-((s23-2*s24)*(s14*s14)*(s23*s23))+s24*(s13*s13)*(s23*s24+s23*s23+3*(s24*s24))-s13*s14*s23*(s23*s23+5*(s24*s24)))*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(34*s23*s24+s14*(11*s23+34*s24)+s13*(34*s14+38*s23+50*s24)+25*(s13*s13)+9*(s14*s14)+12*(s23*s23)+22*(s24*s24))*pow(s12,8)+(11*s13+7*s14+8*s23+10*s24)*pow(s12,9)+2*pow(s12,10)+pow(s12,7)*((65*s14+73*s23+102*s24)*(s13*s13)+(-24*s23+51*s24)*(s14*s14)+42*s24*(s23*s23)+64*s23*(s24*s24)+s14*(61*s23*s24-22*(s23*s23)+76*(s24*s24))+s13*(s14*(48*s23+157*s24)+41*(s14*s14)+4*(36*s23*s24+12*(s23*s23)+25*(s24*s24)))+30*pow(s13,3)+6*pow(s14,3)+8*pow(s23,3)+28*pow(s24,3))+pow(s12,6)*(s14*s14*(13*s23*s24-163*(s23*s23)+121*(s24*s24))+s13*s13*(243*s23*s24+s14*(75*s23+278*s24)+66*(s14*s14)+75*(s23*s23)+182*(s24*s24))+2*(31*s14+36*s23+54*s24)*pow(s13,3)+20*pow(s13,4)+(-58*s23+52*s24)*pow(s14,3)+4*pow(s14,4)+s14*(-25*s24*(s23*s23)+159*s23*(s24*s24)-66*pow(s23,3)+98*pow(s24,3))+s13*((-65*s23+227*s24)*(s14*s14)+143*s24*(s23*s23)+238*s23*(s24*s24)+s14*(243*s23*s24-70*(s23*s23)+326*(s24*s24))+30*pow(s14,3)+26*pow(s23,3)+116*pow(s24,3))+2*(33*(s23*s23)*(s24*s24)+11*s24*pow(s23,3)+pow(s23,4)+35*s23*pow(s24,3)+11*pow(s24,4)))+pow(s12,5)*((207*s23*s24+s14*(54*s23+242*s24)+48*(s14*s14)+57*(s23*s23)+167*(s24*s24))*pow(s13,3)+(31*s14+38*s23+62*s24)*pow(s13,4)+7*pow(s13,5)+(-7*s23*s24-245*(s23*s23)+115*(s24*s24))*pow(s14,3)-40*(s23-s24)*pow(s14,4)+3*pow(s14,5)+s14*s14*(-248*s24*(s23*s23)+195*s23*(s24*s24)-266*pow(s23,3)+141*pow(s24,3))+s13*s13*((-91*s23+351*s24)*(s14*s14)+187*s24*(s23*s23)+343*s23*(s24*s24)+s14*(338*s23*s24-98*(s23*s23)+531*(s24*s24))+40*pow(s14,3)+31*pow(s23,3)+188*pow(s24,3))+2*s24*(30*(s23*s23)*(s24*s24)+14*s24*pow(s23,3)+2*pow(s23,4)+23*s23*pow(s24,3)+5*pow(s24,4))+s14*(80*(s23*s23)*(s24*s24)-120*s24*pow(s23,3)-61*pow(s23,4)+213*s23*pow(s24,3)+73*pow(s24,4))+s13*(180*(s23*s23)*(s24*s24)+s14*s14*(132*s23*s24-436*(s23*s23)+480*(s24*s24))+(-137*s23+212*s24)*pow(s14,3)+19*pow(s14,4)+53*s24*pow(s23,3)+5*pow(s23,4)+225*s23*pow(s24,3)+s14*(-81*s24*(s23*s23)+551*s23*(s24*s24)-177*pow(s23,3)+377*pow(s24,3))+83*pow(s24,4)))+pow(s12,4)*(2*(s24*s24)*(6*s23*s24+2*(s23*s23)+s24*s24)*((s23+s24)*(s23+s24))+(93*s23*s24+s14*(21*s23+110*s24)+17*(s14*s14)+21*(s23*s23)+79*(s24*s24))*pow(s13,4)+2*(4*s14+5*s23+9*s24)*pow(s13,5)+pow(s13,6)+(25*s23*s24-153*(s23*s23)+61*(s24*s24))*pow(s14,4)-9*(s23-2*s24)*pow(s14,5)+pow(s14,6)+pow(s14,3)*(-260*s24*(s23*s23)+176*s23*(s24*s24)-339*pow(s23,3)+96*pow(s24,3))+pow(s13,3)*((-73*s23+255*s24)*(s14*s14)+118*s24*(s23*s23)+239*s23*(s24*s24)+s14*(221*s23*s24-69*(s23*s23)+418*(s24*s24))+20*pow(s14,3)+16*pow(s23,3)+148*pow(s24,3))+s14*s14*(22*(s23*s23)*(s24*s24)-376*s24*pow(s23,3)-193*pow(s23,4)+267*s23*pow(s24,3)+78*pow(s24,4))+s13*s13*(179*(s23*s23)*(s24*s24)+s14*s14*(170*s23*s24-473*(s23*s23)+674*(s24*s24))-3*(52*s23-89*s24)*pow(s14,3)+17*pow(s14,4)+47*s24*pow(s23,3)+4*pow(s23,4)+270*s23*pow(s24,3)+s14*(-144*s24*(s23*s23)+685*s23*(s24*s24)-181*pow(s23,3)+554*pow(s24,3))+119*pow(s24,4))+s13*((78*s23*s24-524*(s23*s23)+383*(s24*s24))*pow(s14,3)+(-79*s23+124*s24)*pow(s14,4)+8*pow(s14,5)+s14*s14*(-524*s24*(s23*s23)+656*s23*(s24*s24)-575*pow(s23,3)+475*pow(s24,3))+s24*(125*(s23*s23)*(s24*s24)+39*s24*pow(s23,3)+3*pow(s23,4)+125*s23*pow(s24,3)+34*pow(s24,4))+s14*(170*(s23*s23)*(s24*s24)-312*s24*pow(s23,3)-125*pow(s23,4)+611*s23*pow(s24,3)+243*pow(s24,4)))+s14*(-26*(s24*s24)*pow(s23,3)-94*s24*pow(s23,4)-25*pow(s23,5)+155*(s23*s23)*pow(s24,3)+142*s23*pow(s24,4)+28*pow(s24,5)))+s12*((2*(s24*s24)*(s23*s24+s23*s23+s24*s24)+s14*s14*(6*s23*s24-4*(s23*s23)+14*(s24*s24))+s14*s24*(13*s23*s24-s23*s23+16*(s24*s24)))*pow(s13,5)+s24*(s23*s24+s14*(s23+s24))*pow(s13,6)+pow(s13,4)*((6*s23*s24-18*(s23*s23)+31*(s24*s24))*pow(s14,3)+s24*s24*(s24*(s23*s23)+6*s23*(s24*s24)+pow(s23,3)+4*pow(s24,3))+s14*s24*(17*s24*(s23*s23)+63*s23*(s24*s24)-10*pow(s23,3)+47*pow(s24,3))+s14*s14*(-8*s24*(s23*s23)+64*s23*(s24*s24)-15*pow(s23,3)+73*pow(s24,3)))+s14*s14*(s23*s23)*(s24*(3*s23*s24-4*(s23*s23)+2*(s24*s24))*((s23+s24)*(s23+s24))-6*(3*(s23*s23)-2*(s24*s24))*pow(s14,3)+(-4*s23+3*s24)*pow(s14,4)+s14*s14*(-27*s24*(s23*s23)+21*s23*(s24*s24)-20*pow(s23,3)+17*pow(s24,3))-2*s14*(2*(s23*s23)*(s24*s24)+12*s24*pow(s23,3)+3*pow(s23,4)-12*s23*pow(s24,3)-5*pow(s24,4)))+pow(s13,3)*(-((s23*s24+28*(s23*s23)-24*(s24*s24))*pow(s14,4))+2*pow(s24,3)*(s24*(s23*s23)+3*s23*(s24*s24)-pow(s23,3)+pow(s24,3))+pow(s14,3)*(-45*s24*(s23*s23)+64*s23*(s24*s24)-60*pow(s23,3)+82*pow(s24,3))+s14*s24*(60*(s23*s23)*(s24*s24)-s24*pow(s23,3)-16*pow(s23,4)+102*s23*pow(s24,3)+40*pow(s24,4))+s14*s14*(43*(s23*s23)*(s24*s24)-55*s24*pow(s23,3)-22*pow(s23,4)+157*s23*pow(s24,3)+96*pow(s24,4)))+s13*s14*s23*((-2*s23*s24-34*(s23*s23)+7*(s24*s24))*pow(s14,4)+(-4*s23+s24)*pow(s14,5)+s24*((s23+s24)*(s23+s24))*(s23*(s24*s24)-3*pow(s23,3)+5*pow(s24,3))+pow(s14,3)*(-58*s24*(s23*s23)+15*s23*(s24*s24)-68*pow(s23,3)+18*pow(s24,3))+s14*s14*(-23*(s23*s23)*(s24*s24)-97*s24*pow(s23,3)-38*pow(s23,4)+25*s23*pow(s24,3)+24*pow(s24,4))+s14*(-33*(s24*s24)*pow(s23,3)-35*s24*pow(s23,4)-4*pow(s23,5)+4*(s23*s23)*pow(s24,3)+23*s23*pow(s24,4)+17*pow(s24,5)))+s13*s13*(-((s23*s24+18*(s23*s23)-6*(s24*s24))*pow(s14,5))-s23*(s23-s24)*((s23+s24)*(s23+s24))*pow(s24,3)+pow(s14,4)*(-43*s24*(s23*s23)+19*s23*(s24*s24)-75*pow(s23,3)+25*pow(s24,3))+pow(s14,3)*(-8*(s23*s23)*(s24*s24)-120*s24*pow(s23,3)-74*pow(s23,4)+79*s23*pow(s24,3)+40*pow(s24,4))+s14*s24*(15*(s24*s24)*pow(s23,3)-12*s24*pow(s23,4)-11*pow(s23,5)+54*(s23*s23)*pow(s24,3)+46*s23*pow(s24,4)+8*pow(s24,5))+s14*s14*(-29*(s24*s24)*pow(s23,3)-72*s24*pow(s23,4)-15*pow(s23,5)+64*(s23*s23)*pow(s24,3)+104*s23*pow(s24,4)+29*pow(s24,5))))+s12*s12*((-2*(s23-7*s24)*(s14*s14)+s24*(13*s23*s24+5*(s23*s23)+8*(s24*s24))+s14*(16*s23*s24-s23*s23+30*(s24*s24)))*pow(s13,5)+(s24*(2*s23+s24)+s14*(s23+2*s24))*pow(s13,6)+pow(s13,4)*(s14*s14*(40*s23*s24-53*(s23*s23)+138*(s24*s24))+(-16*s23+31*s24)*pow(s14,3)+s24*(17*s24*(s23*s23)+33*s23*(s24*s24)+4*pow(s23,3)+23*pow(s24,3))+s14*(-19*s24*(s23*s23)+119*s23*(s24*s24)-11*pow(s23,3)+128*pow(s24,3)))+pow(s13,3)*(-3*(-9*s23*s24+53*(s23*s23)-65*(s24*s24))*pow(s14,3)+(-24*s23+31*s24)*pow(s14,4)+s14*s14*(-159*s24*(s23*s23)+327*s23*(s24*s24)-146*pow(s23,3)+321*pow(s24,3))+s24*(21*(s23*s23)*(s24*s24)+2*s24*pow(s23,3)+pow(s23,4)+48*s23*pow(s24,3)+22*pow(s24,4))+s14*(44*(s23*s23)*(s24*s24)-103*s24*pow(s23,3)-18*pow(s23,4)+313*s23*pow(s24,3)+186*pow(s24,4)))+s14*s23*((3*s23*s24-45*(s23*s23)+19*(s24*s24))*pow(s14,4)-4*(s23-s24)*pow(s14,5)+s24*((s23+s24)*(s23+s24))*(s24*(s23*s23)+6*s23*(s24*s24)-3*pow(s23,3)+4*pow(s24,3))+pow(s14,3)*(-89*s24*(s23*s23)+50*s23*(s24*s24)-98*pow(s23,3)+36*pow(s24,3))+s14*s14*(-19*(s23*s23)*(s24*s24)-143*s24*pow(s23,3)-59*pow(s23,4)+85*s23*pow(s24,3)+35*pow(s24,4))+s14*(-41*(s24*s24)*pow(s23,3)-51*s24*pow(s23,4)-9*pow(s23,5)+39*(s23*s23)*pow(s24,3)+56*s23*pow(s24,4)+18*pow(s24,5)))+s13*s13*((14*s23*s24-159*(s23*s23)+105*(s24*s24))*pow(s14,4)+(-13*s23+15*s24)*pow(s14,5)+pow(s14,3)*(-271*s24*(s23*s23)+293*s23*(s24*s24)-319*pow(s23,3)+233*pow(s24,3))+s24*s24*(20*(s23*s23)*(s24*s24)-3*s24*pow(s23,3)-4*pow(s23,4)+25*s23*pow(s24,3)+6*pow(s24,4))+s14*s14*(53*(s23*s23)*(s24*s24)-373*s24*pow(s23,3)-154*pow(s23,4)+493*s23*pow(s24,3)+221*pow(s24,4))+s14*(-82*(s24*s24)*pow(s23,3)-106*s24*pow(s23,4)-12*pow(s23,5)+170*(s23*s23)*pow(s24,3)+269*s23*pow(s24,4)+84*pow(s24,5)))+s13*(-(s23*(s23*s23-3*(s24*s24))*(s24*s24)*((s23+s24)*(s23+s24)))+(17*s23*s24-56*(s23*s23)+19*(s24*s24))*pow(s14,5)+(-2*s23+3*s24)*pow(s14,6)+pow(s14,4)*(-106*s24*(s23*s23)+127*s23*(s24*s24)-223*pow(s23,3)+47*pow(s24,3))+pow(s14,3)*(76*(s23*s23)*(s24*s24)-367*s24*pow(s23,3)-242*pow(s23,4)+253*s23*pow(s24,3)+58*pow(s24,4))+s14*s14*(-114*(s24*s24)*pow(s23,3)-256*s24*pow(s23,4)-68*pow(s23,5)+216*(s23*s23)*pow(s24,3)+214*s23*pow(s24,4)+36*pow(s24,5))+s14*(-55*(s24*s24)*pow(s23,4)-39*s24*pow(s23,5)-3*pow(s23,6)+27*pow(s23,3)*pow(s24,3)+109*(s23*s23)*pow(s24,4)+72*s23*pow(s24,5)+9*pow(s24,6))))+pow(s12,3)*((21*s23*s24+s14*(6*s23+25*s24)+3*(s14*s14)+3*(s23*s23)+17*(s24*s24))*pow(s13,5)+(s14+s23+2*s24)*pow(s13,6)+(22*s23*s24-41*(s23*s23)+13*(s24*s24))*pow(s14,5)+3*s24*pow(s14,6)+pow(s14,4)*(-79*s24*(s23*s23)+95*s23*(s24*s24)-188*pow(s23,3)+25*pow(s24,3))+pow(s13,4)*((-25*s23+94*s24)*(s14*s14)+37*s24*(s23*s23)+82*s23*(s24*s24)+s14*(80*s23*s24-20*(s23*s23)+166*(s24*s24))+4*pow(s14,3)+3*pow(s23,3)+56*pow(s24,3))+pow(s14,3)*(46*(s23*s23)*(s24*s24)-321*s24*pow(s23,3)-211*pow(s23,4)+160*s23*pow(s24,3)+27*pow(s24,4))+pow(s13,3)*(80*(s23*s23)*(s24*s24)+s14*s14*(101*s23*s24-243*(s23*s23)+441*(s24*s24))+(-87*s23+146*s24)*pow(s14,3)+4*pow(s14,4)+20*s24*pow(s23,3)+pow(s23,4)+146*s23*pow(s24,3)+s14*(-98*s24*(s23*s23)+401*s23*(s24*s24)-79*pow(s23,3)+387*pow(s24,3))+79*pow(s24,4))+s13*s13*((66*s23*s24-443*(s23*s23)+418*(s24*s24))*pow(s14,3)+(-76*s23+107*s24)*pow(s14,4)+3*pow(s14,5)+s14*s14*(-473*s24*(s23*s23)+677*s23*(s24*s24)-455*pow(s23,3)+581*pow(s24,3))+s24*(86*(s23*s23)*(s24*s24)+14*s24*pow(s23,3)+pow(s23,4)+121*s23*pow(s24,3)+42*pow(s24,4))+s14*(102*(s23*s23)*(s24*s24)-299*s24*pow(s23,3)-85*pow(s23,4)+644*s23*pow(s24,3)+312*pow(s24,4)))+s14*s14*(-88*(s24*s24)*pow(s23,3)-213*s24*pow(s23,4)-66*pow(s23,5)+161*(s23*s23)*pow(s24,3)+127*s23*pow(s24,4)+16*pow(s24,5))+s13*((61*s23*s24-258*(s23*s23)+148*(s24*s24))*pow(s14,4)+(-19*s23+35*s24)*pow(s14,5)+pow(s14,6)+pow(s14,3)*(-408*s24*(s23*s23)+447*s23*(s24*s24)-562*pow(s23,3)+259*pow(s24,3))+s14*s14*(102*(s23*s23)*(s24*s24)-651*s24*pow(s23,3)-309*pow(s23,4)+648*s23*pow(s24,3)+217*pow(s24,4))+s24*(14*(s24*s24)*pow(s23,3)-4*s24*pow(s23,4)-pow(s23,5)+46*(s23*s23)*pow(s24,3)+35*s23*pow(s24,4)+6*pow(s24,5))+s14*(-104*(s24*s24)*pow(s23,3)-181*s24*pow(s23,4)-35*pow(s23,5)+271*(s23*s23)*pow(s24,3)+322*s23*pow(s24,4)+78*pow(s24,5)))+s14*(-28*(s24*s24)*pow(s23,4)-29*s24*pow(s23,5)-4*pow(s23,6)+45*pow(s23,3)*pow(s24,3)+86*(s23*s23)*pow(s24,4)+42*s23*pow(s24,5)+4*pow(s24,6))+2*s23*pow(s24,3)*pow(s23+s24,3)))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-2))/4.;
}

// Coefficient order epsilon^2 of master 31
template<>
double qq2yyg4CAm2CF<31,2>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s12,-1)*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s24,-1)*((78*s23*s24+s14*(101*s23+65*s24)+s13*(78*s14+89*s23+79*s24)+40*(s13*s13)+39*(s14*s14)+48*(s23*s23)+31*(s24*s24))*pow(s12,8)+(17*s13+16*s14+18*s23+15*s24)*pow(s12,9)+3*pow(s12,10)-4*s14*(s13+s23)*(s14+s24)*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(-(s13*s14*s23*(s23*s23+s24*s24))+s24*(s13*s13)*(s23*s24+s23*s23+s24*s24)-s14*s14*pow(s23,3))+pow(s12,7)*((151*s14+178*s23+171*s24)*(s13*s13)+3*(80*s23+41*s24)*(s14*s14)+177*s24*(s23*s23)+136*s23*(s24*s24)+s14*(341*s23*s24+259*(s23*s23)+100*(s24*s24))+s13*(356*s23*s24+s14*(420*s23+277*s24)+162*(s14*s14)+201*(s23*s23)+152*(s24*s24))+50*pow(s13,3)+56*pow(s14,3)+72*pow(s23,3)+34*pow(s24,3))+pow(s12,6)*(252*(s23*s23)*(s24*s24)+s14*s14*(611*s23*s24+577*(s23*s23)+127*(s24*s24))+s13*s13*(649*s23*s24+10*s14*(68*s23+47*s24)+252*(s14*s14)+327*(s23*s23)+301*(s24*s24))+(147*s14+182*s23+194*s24)*pow(s13,3)+35*pow(s13,4)+26*(12*s23+5*s24)*pow(s14,3)+49*pow(s14,4)+219*s24*pow(s23,3)+63*pow(s23,4)+121*s23*pow(s24,3)+s14*(725*s24*(s23*s23)+423*s23*(s24*s24)+350*pow(s23,3)+67*pow(s24,3))+s13*((826*s23+418*s24)*(s14*s14)+675*s24*(s23*s23)+571*s23*(s24*s24)+4*s14*(313*s23*s24+225*(s23*s23)+90*(s24*s24))+193*pow(s14,3)+245*pow(s23,3)+156*pow(s24,3))+21*pow(s24,4))+pow(s12,5)*((s14*(541*s23+398*s24)+183*(s14*s14)+5*(119*s23*s24+51*(s23*s23)+61*(s24*s24)))*pow(s13,3)+(75*s14+98*s23+121*s24)*pow(s13,4)+13*pow(s13,5)+(571*s23*s24+680*(s23*s23)+79*(s24*s24))*pow(s14,3)+(236*s23+77*s24)*pow(s14,4)+24*pow(s14,5)+241*(s24*s24)*pow(s23,3)+150*s24*pow(s23,4)+30*pow(s23,5)+171*(s23*s23)*pow(s24,3)+s14*s14*(1193*s24*(s23*s23)+493*s23*(s24*s24)+704*pow(s23,3)+30*pow(s24,3))+s13*s13*((1060*s23+527*s24)*(s14*s14)+984*s24*(s23*s23)+936*s23*(s24*s24)+s14*(1776*s23*s24+1178*(s23*s23)+501*(s24*s24))+229*pow(s14,3)+304*pow(s23,3)+281*pow(s24,3))+57*s23*pow(s24,4)+s14*(723*(s23*s23)*(s24*s24)+801*s24*pow(s23,3)+266*pow(s23,4)+212*s23*pow(s24,3)+11*pow(s24,4))+s13*(864*(s23*s23)*(s24*s24)+s14*s14*(1757*s23*s24+1628*(s23*s23)+299*(s24*s24))+(868*s23+338*s24)*pow(s14,3)+132*pow(s14,4)+667*s24*pow(s23,3)+164*pow(s23,4)+465*s23*pow(s24,3)+s14*(2215*s24*(s23*s23)+1318*s23*(s24*s24)+982*pow(s23,3)+184*pow(s24,3))+91*pow(s24,4))+7*pow(s24,5))+pow(s12,4)*((281*s23*s24+s14*(219*s23+173*s24)+63*(s14*s14)+93*(s23*s23)+164*(s24*s24))*pow(s13,4)+(19*s14+25*s23+39*s24)*pow(s13,5)+2*pow(s13,6)+(283*s23*s24+450*(s23*s23)+22*(s24*s24))*pow(s14,4)+3*(33*s23+7*s24)*pow(s14,5)+5*pow(s14,6)+pow(s14,3)*(991*s24*(s23*s23)+256*s23*(s24*s24)+743*pow(s23,3)-9*pow(s24,3))+pow(s13,3)*((639*s23+292*s24)*(s14*s14)+673*s24*(s23*s23)+747*s23*(s24*s24)+s14*(1207*s23*s24+723*(s23*s23)+333*(s24*s24))+112*pow(s14,3)+161*pow(s23,3)+249*pow(s24,3))+s14*s14*(765*(s23*s23)*(s24*s24)+1172*s24*pow(s23,3)+466*pow(s23,4)+68*s23*pow(s24,3)-24*pow(s24,4))+(s23+s24)*(s23+s24)*(31*(s23*s23)*(s24*s24)+39*s24*pow(s23,3)+6*pow(s23,4)+11*s23*pow(s24,3)+pow(s24,4))+s13*s13*(1098*(s23*s23)*(s24*s24)+s14*s14*(1830*s23*s24+1669*(s23*s23)+194*(s24*s24))+(847*s23+269*s24)*pow(s14,3)+106*pow(s14,4)+726*s24*pow(s23,3)+139*pow(s23,4)+672*s23*pow(s24,3)+3*s14*(827*s24*(s23*s23)+507*s23*(s24*s24)+326*pow(s23,3)+53*pow(s24,3))+148*pow(s24,4))+s14*(623*(s24*s24)*pow(s23,3)+480*s24*pow(s23,4)+109*pow(s23,5)+267*(s23*s23)*pow(s24,3)+11*s23*pow(s24,4)-8*pow(s24,5))+s13*((1217*s23*s24+1511*(s23*s23)+71*(s24*s24))*pow(s14,3)+(505*s23+136*s24)*pow(s14,4)+45*pow(s14,5)+641*(s24*s24)*pow(s23,3)+344*s24*pow(s23,4)+54*pow(s23,5)+s14*s14*(2781*s24*(s23*s23)+1011*s23*(s24*s24)+1579*pow(s23,3)-49*pow(s24,3))+516*(s23*s23)*pow(s24,3)+2*s14*(915*(s23*s23)*(s24*s24)+965*s24*pow(s23,3)+284*pow(s23,4)+247*s23*pow(s24,3)-2*pow(s24,4))+198*s23*pow(s24,4)+29*pow(s24,5)))+s12*s12*(((19*s23+8*s24)*(s14*s14)+s14*(59*s23*s24+22*(s23*s23)+14*(s24*s24))+s24*(48*s23*s24+22*(s23*s23)+21*(s24*s24)))*pow(s13,5)+2*(2*s24*(s23+s24)+s14*(s23+2*s24))*pow(s13,6)+pow(s13,4)*(s14*s14*(158*s23*s24+159*(s23*s23)-46*(s24*s24))+(53*s23-3*s24)*pow(s14,3)+s14*(257*s24*(s23*s23)+177*s23*(s24*s24)+64*pow(s23,3)-22*pow(s24,3))+s24*(148*s24*(s23*s23)+130*s23*(s24*s24)+50*pow(s23,3)+37*pow(s24,3)))+pow(s13,3)*(2*(79*s23*s24+181*(s23*s23)-68*(s24*s24))*pow(s14,3)+(69*s23-13*s24)*pow(s14,4)+s14*s14*(694*s24*(s23*s23)+65*s23*(s24*s24)+378*pow(s23,3)-221*pow(s24,3))+s14*(509*(s23*s23)*(s24*s24)+476*s24*pow(s23,3)+84*pow(s23,4)+26*s23*pow(s24,3)-87*pow(s24,4))+s24*(234*(s23*s23)*(s24*s24)+203*s24*pow(s23,3)+56*pow(s23,4)+124*s23*pow(s24,3)+25*pow(s24,4)))+s14*s23*((72*s23*s24+129*(s23*s23)-7*(s24*s24))*pow(s14,4)+25*s23*pow(s14,5)+pow(s14,3)*(312*s24*(s23*s23)+46*s23*(s24*s24)+213*pow(s23,3)-26*pow(s24,3))+s24*((s23+s24)*(s23+s24))*(14*s24*(s23*s23)-7*s23*(s24*s24)+14*pow(s23,3)-3*pow(s24,3))+s14*s14*(244*(s23*s23)*(s24*s24)+380*s24*pow(s23,3)+125*pow(s23,4)-45*s23*pow(s24,3)-34*pow(s24,4))+s14*(219*(s24*s24)*pow(s23,3)+152*s24*pow(s23,4)+24*pow(s23,5)+52*(s23*s23)*pow(s24,3)-57*s23*pow(s24,4)-18*pow(s24,5)))+s13*s13*((82*s23*s24+376*(s23*s23)-90*(s24*s24))*pow(s14,4)+5*(9*s23-s24)*pow(s14,5)+pow(s14,3)*(789*s24*(s23*s23)-138*s23*(s24*s24)+699*pow(s23,3)-220*pow(s24,3))+2*(s14*s14)*(277*(s23*s23)*(s24*s24)+567*s24*pow(s23,3)+196*pow(s23,4)-176*s23*pow(s24,3)-99*pow(s24,4))+s14*(624*(s24*s24)*pow(s23,3)+416*s24*pow(s23,4)+54*pow(s23,5)+135*(s23*s23)*pow(s24,3)-161*s23*pow(s24,4)-58*pow(s24,5))+s24*(174*(s24*s24)*pow(s23,3)+126*s24*pow(s23,4)+30*pow(s23,5)+111*(s23*s23)*pow(s24,3)+38*s23*pow(s24,4)+5*pow(s24,5)))+s13*((27*s23*s24+176*(s23*s23)-10*(s24*s24))*pow(s14,5)+(12*s23+s24)*pow(s14,6)+pow(s14,4)*(426*s24*(s23*s23)-69*s23*(s24*s24)+526*pow(s23,3)-42*pow(s24,3))+s23*s24*((s23+s24)*(s23+s24))*(15*s24*(s23*s23)+7*s23*(s24*s24)+6*pow(s23,3)+2*pow(s24,3))+pow(s14,3)*(273*(s23*s23)*(s24*s24)+1042*s24*pow(s23,3)+529*pow(s23,4)-240*s23*pow(s24,3)-60*pow(s24,4))+s14*s14*(719*(s24*s24)*pow(s23,3)+764*s24*pow(s23,4)+178*pow(s23,5)-68*(s23*s23)*pow(s24,3)-228*s23*pow(s24,4)-39*pow(s24,5))+2*s14*(161*(s24*s24)*pow(s23,4)+78*s24*pow(s23,5)+7*pow(s23,6)+79*pow(s23,3)*pow(s24,3)-41*(s23*s23)*pow(s24,4)-35*s23*pow(s24,5)-5*pow(s24,6))))+pow(s12,3)*((61*s23*s24+s14*(41*s23+37*s24)+9*(s14*s14)+12*(s23*s23)+43*(s24*s24))*pow(s13,5)+(2*s14+2*s23+5*s24)*pow(s13,6)+(60*s23*s24+161*(s23*s23)+s24*s24)*pow(s14,5)+(18*s23+s24)*pow(s14,6)+pow(s14,4)*(419*s24*(s23*s23)+43*s23*(s24*s24)+430*pow(s23,3)-6*pow(s24,3))+pow(s13,4)*(4*(46*s23+17*s24)*(s14*s14)+209*s24*(s23*s23)+292*s23*(s24*s24)+s14*(399*s23*s24+208*(s23*s23)+104*(s24*s24))+20*pow(s14,3)+30*pow(s23,3)+110*pow(s24,3))+pow(s14,3)*(348*(s23*s23)*(s24*s24)+857*s24*pow(s23,3)+429*pow(s23,4)-49*s23*pow(s24,3)-14*pow(s24,4))+pow(s13,3)*(s14*s14*(829*s23*s24+776*(s23*s23)-18*(s24*s24))+624*(s23*s23)*(s24*s24)+(353*s23+54*s24)*pow(s14,3)+26*pow(s14,4)+328*s24*pow(s23,3)+38*pow(s23,4)+446*s23*pow(s24,3)+s14*(1228*s24*(s23*s23)+788*s23*(s24*s24)+413*pow(s23,3)+28*pow(s24,3))+111*pow(s24,4))+s14*s14*(589*(s24*s24)*pow(s23,3)+607*s24*pow(s23,4)+162*pow(s23,5)+75*(s23*s23)*pow(s24,3)-72*s23*pow(s24,4)-11*pow(s24,5))+s13*s13*((795*s23*s24+1154*(s23*s23)-118*(s24*s24))*pow(s14,3)+(334*s23+36*s24)*pow(s14,4)+18*pow(s14,5)+583*(s24*s24)*pow(s23,3)+250*s24*pow(s23,4)+24*pow(s23,5)+s14*s14*(2215*s24*(s23*s23)+622*s23*(s24*s24)+1211*pow(s23,3)-239*pow(s24,3))+547*(s23*s23)*pow(s24,3)+s14*(1564*(s23*s23)*(s24*s24)+1559*s24*pow(s23,3)+383*pow(s23,4)+329*s23*pow(s24,3)-70*pow(s24,4))+244*s23*pow(s24,4)+42*pow(s24,5))+s14*(265*(s24*s24)*pow(s23,4)+142*s24*pow(s23,5)+19*pow(s23,6)+157*pow(s23,3)*pow(s24,3)-3*(s23*s23)*pow(s24,4)-21*s23*pow(s24,5)-3*pow(s24,6))+s13*((384*s23*s24+747*(s23*s23)-30*(s24*s24))*pow(s14,4)+(144*s23+19*s24)*pow(s14,5)+5*pow(s14,6)+223*(s24*s24)*pow(s23,4)+81*s24*pow(s23,5)+6*pow(s23,6)+pow(s14,3)*(1642*s24*(s23*s23)+208*s23*(s24*s24)+1275*pow(s23,3)-134*pow(s24,3))+250*pow(s23,3)*pow(s24,3)+s14*s14*(1273*(s23*s23)*(s24*s24)+2101*s24*pow(s23,3)+781*pow(s23,4)-123*s23*pow(s24,3)-131*pow(s24,4))+137*(s23*s23)*pow(s24,4)+s14*(1171*(s24*s24)*pow(s23,3)+838*s24*pow(s23,4)+158*pow(s23,5)+453*(s23*s23)*pow(s24,3)-55*s23*pow(s24,4)-37*pow(s24,5))+39*s23*pow(s24,5)+4*pow(s24,6))+s23*s24*(3*s23*s24+6*(s23*s23)+s24*s24)*pow(s23+s24,3))+s12*((5*(s14*s14)*(s23*s24+2*(s23*s23)-s24*s24)-8*s14*s24*(-2*s23*s24-2*(s23*s23)+s24*s24)+2*(s24*s24)*(6*s23*s24+5*(s23*s23)+2*(s24*s24)))*pow(s13,5)+s24*(2*s14*(s23+s24)+s24*(2*s23+s24))*pow(s13,6)+pow(s13,4)*((-2*s23*s24+37*(s23*s23)-27*(s24*s24))*pow(s14,3)+s14*s14*(58*s24*(s23*s23)-20*s23*(s24*s24)+38*pow(s23,3)-67*pow(s24,3))+s14*s24*(43*s24*(s23*s23)-29*s23*(s24*s24)+42*pow(s23,3)-36*pow(s24,3))+s24*s24*(32*s24*(s23*s23)+21*s23*(s24*s24)+20*pow(s23,3)+5*pow(s24,3)))+pow(s13,3)*((-12*s23*s24+55*(s23*s23)-31*(s24*s24))*pow(s14,4)+pow(s14,3)*(84*s24*(s23*s23)-87*s23*(s24*s24)+133*pow(s23,3)-98*pow(s24,3))+2*(s14*s14)*(90*s24*pow(s23,3)+29*pow(s23,4)-98*s23*pow(s24,3)-53*pow(s24,4))+s14*s24*(-57*(s23*s23)*(s24*s24)+72*s24*pow(s23,3)+52*pow(s23,4)-110*s23*pow(s24,3)-37*pow(s24,4))+2*(s24*s24)*(14*(s23*s23)*(s24*s24)+18*s24*pow(s23,3)+9*pow(s23,4)+6*s23*pow(s24,3)+pow(s24,4)))+s13*s14*s23*((22*s23*s24+97*(s23*s23)-15*(s24*s24))*pow(s14,4)+(11*s23-s24)*pow(s14,5)+2*pow(s14,3)*(112*s24*(s23*s23)-5*s23*(s24*s24)+86*pow(s23,3)-22*pow(s24,3))+s24*((s23+s24)*(s23+s24))*(7*s24*(s23*s23)-12*s23*(s24*s24)+8*pow(s23,3)-7*pow(s24,3))+s14*s14*(174*(s23*s23)*(s24*s24)+305*s24*pow(s23,3)+94*pow(s23,4)-71*s23*pow(s24,3)-54*pow(s24,4))+s14*(160*(s24*s24)*pow(s23,3)+109*s24*pow(s23,4)+12*pow(s23,5)+18*(s23*s23)*pow(s24,3)-76*s23*pow(s24,4)-31*pow(s24,5)))+s13*s13*(s23*(s24*s24)*(3*s23*s24+6*(s23*s23)+s24*s24)*((s23+s24)*(s23+s24))+(-8*s23*s24+39*(s23*s23)-11*(s24*s24))*pow(s14,5)+pow(s14,4)*(65*s24*(s23*s23)-68*s23*(s24*s24)+176*pow(s23,3)-40*pow(s24,3))+pow(s14,3)*(-23*(s23*s23)*(s24*s24)+313*s24*pow(s23,3)+175*pow(s23,4)-179*s23*pow(s24,3)-58*pow(s24,4))+s14*s14*(149*(s24*s24)*pow(s23,3)+224*s24*pow(s23,4)+42*pow(s23,5)-172*(s23*s23)*pow(s24,3)-191*s23*pow(s24,4)-40*pow(s24,5))-s14*s24*(21*(s24*s24)*pow(s23,3)-66*s24*pow(s23,4)-32*pow(s23,5)+115*(s23*s23)*pow(s24,3)+71*s23*pow(s24,4)+11*pow(s24,5)))+s14*s14*(s23*s23)*((45*s23*s24+51*(s23*s23)-8*(s24*s24))*pow(s14,3)+(16*s23-s24)*pow(s14,4)+s14*s14*(115*s24*(s23*s23)+37*s23*(s24*s24)+50*pow(s23,3)-20*pow(s24,3))+s14*(81*(s23*s23)*(s24*s24)+77*s24*pow(s23,3)+15*pow(s23,4)-s23*pow(s24,3)-20*pow(s24,4))+(12*s23-7*s24)*s24*pow(s23+s24,3))))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-2))/4.;
}

// Coefficient of master 31 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yyg4CAm2CF<31>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(0,{
        qq2yyg4CAm2CF<31,0>(s12,s13,s14,s23,s24),
        qq2yyg4CAm2CF<31,1>(s12,s13,s14,s23,s24),
        qq2yyg4CAm2CF<31,2>(s12,s13,s14,s23,s24)
    });
}

