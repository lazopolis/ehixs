/*This file was produced by Simone Lionetti using a Mathematica script*/

#include "coeff6ELC.h"

// Master n. 10: box6(s14,-s12-s13-s14,s23)

// Coefficient order epsilon^-1 of master 10
template<>
double qq2yyg6ELC<10,-1>(const double& is12, const double& is13, const double& is14, const double& is23, const double& is24)
{
    const cln::cl_RA s12 = cln::rational(is12);
    const cln::cl_RA s13 = cln::rational(is13);
    const cln::cl_RA s14 = cln::rational(is14);
    const cln::cl_RA s23 = cln::rational(is23);
    const cln::cl_RA s24 = cln::rational(is24);
    return cln::double_approx(
	-(((s23+s24)*pow<2>(s14)*(pow<2>(s14)+pow<2>(s23+s24))*pow<4>(s23)+pow<2>(s13)*pow<2>(s23)*((6*s23*s24+9*pow<2>(s23)-3*pow<2>(s24))*pow<3>(s14)-s23*s24*(4*s24*pow<2>(s23)+3*s23*pow<2>(s24)+2*pow<3>(s23)+pow<3>(s24))+pow<2>(s14)*(9*s24*pow<2>(s23)+6*s23*pow<2>(s24)+8*pow<3>(s23)+3*pow<3>(s24))+3*(s23+s24)*pow<4>(s14)+s14*(7*s24*pow<3>(s23)-6*s23*pow<3>(s24)+6*pow<4>(s23)-3*pow<4>(s24)))+s23*pow<3>(s13)*(3*(3*s23*s24+4*pow<2>(s23)-pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(9*s24*pow<2>(s23)-3*s23*pow<2>(s24)+14*pow<3>(s23)+pow<3>(s24))-s23*s24*(11*s24*pow<2>(s23)+9*s23*pow<2>(s24)+6*pow<3>(s23)+3*pow<3>(s24))+(2*s23+s24)*pow<4>(s14)+s14*(6*s24*pow<3>(s23)-5*s23*pow<3>(s24)+8*pow<4>(s23)-3*pow<4>(s24)))+s13*s14*pow<3>(s23)*(pow<2>(s14)*(2*s23*s24+3*pow<2>(s23)-pow<2>(s24))+3*(s23+s24)*pow<3>(s14)+3*s24*pow<3>(s23)-2*s23*pow<3>(s24)+s14*(9*s24*pow<2>(s23)+9*s23*pow<2>(s24)+4*pow<3>(s23)+3*pow<3>(s24))+2*pow<4>(s23)-pow<4>(s24))-pow<4>(s13)*(-3*s23*pow<2>(s14)*(s23*s24+5*pow<2>(s23)-4*pow<2>(s24))+(-(s23*s24)-6*pow<2>(s23)+pow<2>(s24))*pow<3>(s14)+2*s23*s24*(7*s24*pow<2>(s23)+6*s23*pow<2>(s24)+4*pow<3>(s23)+2*pow<3>(s24))+s14*(12*pow<2>(s23)*pow<2>(s24)+2*s24*pow<3>(s23)+5*s23*pow<3>(s24)-8*pow<4>(s23)+pow<4>(s24)))+(63*pow<2>(s23)*pow<2>(s24)+pow<2>(s14)*(54*s23*s24+81*pow<2>(s23)+6*pow<2>(s24))+3*pow<2>(s13)*(72*s23*s24+s14*(96*s23+37*s24)+21*pow<2>(s14)+80*pow<2>(s23)+15*pow<2>(s24))+2*(44*s14+81*s23+34*s24)*pow<3>(s13)+5*(4*s23+s24)*pow<3>(s14)+88*s24*pow<3>(s23)+16*s23*pow<3>(s24)+s14*(147*s24*pow<2>(s23)+54*s23*pow<2>(s24)+110*pow<3>(s23)+5*pow<3>(s24))+s13*(3*(49*s23+16*s24)*pow<2>(s14)+243*s24*pow<2>(s23)+108*s23*pow<2>(s24)+3*s14*(83*s23*s24+102*pow<2>(s23)+14*pow<2>(s24))+16*pow<3>(s14)+162*pow<3>(s23)+14*pow<3>(s24))+40*pow<4>(s13)+pow<4>(s14)+40*pow<4>(s23)+pow<4>(s24))*pow<5>(s12)-(3*pow<2>(s14)*(s23*s24-2*pow<2>(s23)+pow<2>(s24))+3*s14*s23*(3*s23*s24-2*pow<2>(s23)+5*pow<2>(s24))+s24*pow<3>(2*s23+s24))*pow<5>(s13)+pow<4>(s12)*(s23*(18*s23*s24+22*pow<2>(s23)+3*pow<2>(s24))*pow<2>(s23+s24)+(167*s23*s24+17*s14*(17*s23+6*s24)+61*pow<2>(s14)+228*pow<2>(s23)+29*pow<2>(s24))*pow<3>(s13)+(20*s23*s24+40*pow<2>(s23)+pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(99*s24*pow<2>(s23)+24*s23*pow<2>(s24)+95*pow<3>(s23)+pow<3>(s24))+pow<2>(s13)*(3*(77*s23+25*s24)*pow<2>(s14)+297*s24*pow<2>(s23)+114*s23*pow<2>(s24)+s14*(333*s23*s24+456*pow<2>(s23)+51*pow<2>(s24))+24*pow<3>(s14)+228*pow<3>(s23)+16*pow<3>(s24))+2*(31*s14+59*s23+21*s24)*pow<4>(s13)+(5*s23+s24)*pow<4>(s14)+s14*(99*pow<2>(s23)*pow<2>(s24)+168*s24*pow<3>(s23)+20*s23*pow<3>(s24)+90*pow<4>(s23)+pow<4>(s24))+s13*(159*pow<2>(s23)*pow<2>(s24)+3*pow<2>(s14)*(56*s23*s24+87*pow<2>(s23)+6*pow<2>(s24))+(67*s23+18*s24)*pow<3>(s14)+234*s24*pow<3>(s23)+40*s23*pow<3>(s24)+s14*(406*s24*pow<2>(s23)+141*s23*pow<2>(s24)+327*pow<3>(s23)+14*pow<3>(s24))+3*pow<4>(s14)+118*pow<4>(s23)+3*pow<4>(s24))+22*pow<5>(s13))+((72*s14+135*s23+62*s24)*pow<2>(s13)+(37*s23+12*s24)*pow<2>(s14)+72*s24*pow<2>(s23)+33*s23*pow<2>(s24)+2*s14*(35*s23*s24+41*pow<2>(s23)+6*pow<2>(s24))+s13*(133*s23*s24+2*s14*(77*s23+31*s24)+33*pow<2>(s14)+135*pow<2>(s23)+29*pow<2>(s24))+45*pow<3>(s13)+4*pow<3>(s14)+45*pow<3>(s23)+4*pow<3>(s24))*pow<6>(s12)-(6*s23*s24*(s23+s24)+s14*(5*s23*s24-2*pow<2>(s23)+3*pow<2>(s24)))*pow<6>(s13)+pow<3>(s12)*(pow<3>(s13)*((184*s23+57*s24)*pow<2>(s14)+s14*(197*s23*s24+357*pow<2>(s23)+18*pow<2>(s24))+16*pow<3>(s14)+2*(72*s24*pow<2>(s23)+9*s23*pow<2>(s24)+82*pow<3>(s23)+2*pow<3>(s24)))+(53*s23*s24+s14*(169*s23+50*s24)+30*pow<2>(s14)+129*pow<2>(s23)+pow<2>(s24))*pow<4>(s13)+pow<2>(s13)*(105*pow<2>(s23)*pow<2>(s24)+3*pow<2>(s14)*(62*s23*s24+107*pow<2>(s23)+5*pow<2>(s24))+3*(27*s23+8*s24)*pow<3>(s14)+201*s24*pow<3>(s23)+18*s23*pow<3>(s24)+s14*(383*s24*pow<2>(s23)+102*s23*pow<2>(s24)+369*pow<3>(s23)+12*pow<3>(s24))+3*pow<4>(s14)+129*pow<4>(s23)+2*pow<4>(s24))+s23*((30*s23*s24+40*pow<2>(s23)+3*pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(96*s24*pow<2>(s23)+39*s23*pow<2>(s24)+65*pow<3>(s23)+4*pow<3>(s24))+s23*(7*s23+3*s24)*pow<3>(s23+s24)+2*(5*s23+2*s24)*pow<4>(s14)+s14*(93*pow<2>(s23)*pow<2>(s24)+112*s24*pow<3>(s23)+30*s23*pow<3>(s24)+46*pow<4>(s23)+3*pow<4>(s24)))+s13*((55*s23*s24+108*pow<2>(s23)+2*pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(227*s24*pow<2>(s23)+51*s23*pow<2>(s24)+235*pow<3>(s23)+3*pow<3>(s24))+3*(4*s23+s24)*pow<4>(s14)+s14*(188*pow<2>(s23)*pow<2>(s24)+345*s24*pow<3>(s23)+37*s23*pow<3>(s24)+207*pow<4>(s23)+2*pow<4>(s24))+s23*(112*pow<2>(s23)*pow<2>(s24)+124*s24*pow<3>(s23)+42*s23*pow<3>(s24)+54*pow<4>(s23)+5*pow<4>(s24)))+2*(12*s14+27*s23+7*s24)*pow<5>(s13)+7*pow<6>(s13))+(32*s23*s24+2*s14*(17*s23+7*s24)+s13*(32*s14+62*s23+30*s24)+31*pow<2>(s13)+7*pow<2>(s14)+31*pow<2>(s23)+7*pow<2>(s24))*pow<7>(s12)-s24*(2*s23+s24)*pow<7>(s13)+pow<2>(s12)*((3*(26*s23+7*s24)*pow<2>(s14)+3*s24*pow<2>(s23)+6*s14*(6*s23*s24+27*pow<2>(s23)-2*pow<2>(s24))-45*s23*pow<2>(s24)+4*pow<3>(s14)+67*pow<3>(s23)-4*pow<3>(s24))*pow<4>(s13)+pow<3>(s13)*(3*pow<2>(s14)*(28*s23*s24+66*pow<2>(s23)-pow<2>(s24))-27*pow<2>(s23)*pow<2>(s24)+(45*s23+14*s24)*pow<3>(s14)+45*s24*pow<3>(s23)-26*s23*pow<3>(s24)+s14*(127*s24*pow<2>(s23)-18*s23*pow<2>(s24)+210*pow<3>(s23)+2*pow<3>(s24))+pow<4>(s14)+67*pow<4>(s23)-2*pow<4>(s24))+s13*s23*((58*s23*s24+82*pow<2>(s23)+3*pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(151*s24*pow<2>(s23)+59*s23*pow<2>(s24)+114*pow<3>(s23)+9*pow<3>(s24))+9*(2*s23+s24)*pow<4>(s14)+s23*(34*pow<2>(s23)*pow<2>(s24)+33*s24*pow<3>(s23)+17*s23*pow<3>(s24)+15*pow<4>(s23)+3*pow<4>(s24))+s14*(119*pow<2>(s23)*pow<2>(s24)+161*s24*pow<3>(s23)+34*s23*pow<3>(s24)+81*pow<4>(s23)+3*pow<4>(s24)))+pow<2>(s23)*(s14*(14*s23*s24+14*pow<2>(s23)+3*pow<2>(s24))*pow<2>(s23+s24)+(20*s23*s24+20*pow<2>(s23)+3*pow<2>(s24))*pow<3>(s14)+3*pow<2>(s14)*(18*s24*pow<2>(s23)+11*s23*pow<2>(s24)+9*pow<3>(s23)+2*pow<3>(s24))+2*(5*s23+3*s24)*pow<4>(s14)+s23*pow<4>(s23+s24))+3*(-2*s23*s24+s14*(19*s23+4*s24)+2*pow<2>(s14)+15*pow<2>(s23)-3*pow<2>(s24))*pow<5>(s13)+pow<2>(s13)*(3*s23*(33*s23+17*s24)*pow<3>(s14)+33*pow<2>(s24)*pow<3>(s23)+pow<2>(s14)*(161*s24*pow<2>(s23)+18*s23*pow<2>(s24)+209*pow<3>(s23)+3*pow<3>(s24))+s14*s23*(214*s24*pow<2>(s23)+82*s23*pow<2>(s24)+168*pow<3>(s23)+9*pow<3>(s24))+3*(3*s23+s24)*pow<4>(s14)+63*s24*pow<4>(s23)-3*s23*pow<4>(s24)+45*pow<5>(s23))+(4*s14+15*s23+2*s24)*pow<6>(s13)+pow<7>(s13))+s12*(s14*pow<3>(s23)*(pow<2>(s14)*(5*s23*s24+4*pow<2>(s23)+pow<2>(s24))+s14*(7*s23+4*s24)*pow<2>(s23+s24)+(5*s23+4*s24)*pow<3>(s14)+(2*s23+s24)*pow<3>(s23+s24))+s13*pow<2>(s23)*(s23*(28*s23+23*s24)*pow<3>(s14)+pow<2>(s23)*(3*s24*pow<2>(s23)+2*s23*pow<2>(s24)+2*pow<3>(s23)+pow<3>(s24))+s14*s23*(38*s24*pow<2>(s23)+30*s23*pow<2>(s24)+19*pow<3>(s23)+8*pow<3>(s24))+pow<2>(s14)*(53*s24*pow<2>(s23)+35*s23*pow<2>(s24)+30*pow<3>(s23)+9*pow<3>(s24))+3*(4*s23+3*s24)*pow<4>(s14))+s23*pow<2>(s13)*((33*s23*s24+51*pow<2>(s23)-3*pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(59*s24*pow<2>(s23)+14*s23*pow<2>(s24)+64*pow<3>(s23)+6*pow<3>(s24))+(9*s23+6*s24)*pow<4>(s14)+s23*(-7*pow<2>(s23)*pow<2>(s24)+3*s24*pow<3>(s23)-8*s23*pow<3>(s24)+8*pow<4>(s23)-3*pow<4>(s24))+s14*(29*pow<2>(s23)*pow<2>(s24)+60*s24*pow<3>(s23)-s23*pow<3>(s24)+45*pow<4>(s23)-3*pow<4>(s24)))+pow<3>(s13)*((18*s23*s24+41*pow<2>(s23)-2*pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(39*s24*pow<2>(s23)-21*s23*pow<2>(s24)+89*pow<3>(s23)+pow<3>(s24))+(3*s23+s24)*pow<4>(s14)+s23*(-32*pow<2>(s23)*pow<2>(s24)-6*s24*pow<3>(s23)-30*s23*pow<3>(s24)+14*pow<4>(s23)-9*pow<4>(s24))+s14*(-19*pow<2>(s23)*pow<2>(s24)+36*s24*pow<3>(s23)-13*s23*pow<3>(s24)+62*pow<4>(s23)-2*pow<4>(s24)))+pow<4>(s13)*(9*pow<2>(s14)*(s23*s24+7*pow<2>(s23)-pow<2>(s24))-48*pow<2>(s23)*pow<2>(s24)+(11*s23+3*s24)*pow<3>(s14)-18*s24*pow<3>(s23)+s14*(-6*s24*pow<2>(s23)-48*s23*pow<2>(s24)+64*pow<3>(s23)-pow<3>(s24))-26*s23*pow<3>(s24)+16*pow<4>(s23)-3*pow<4>(s24))+(3*(5*s23+s24)*pow<2>(s14)-21*s24*pow<2>(s23)+3*s14*(-4*s23*s24+13*pow<2>(s23)-4*pow<2>(s24))-30*s23*pow<2>(s24)+14*pow<3>(s23)-2*pow<3>(s24))*pow<5>(s13)+(-9*s23*s24+s14*(9*s23+s24)+8*pow<2>(s23)-5*pow<2>(s24))*pow<6>(s13)+2*s23*pow<7>(s13))+6*(2*s13+s14+2*s23+s24)*pow<8>(s12)+2*pow<9>(s12))*pow<-1>(s13)*pow<-1>(s14)*pow<-1>(s12+s13+s14)*pow<-1>(s23)*pow<-1>(s24)*pow<-1>(s12+s23+s24)*pow<-1>(s12+s13+s14+s23+s24)*pow<-3>(s12+s13+s23))/2
    );
}

// Coefficient of master 10 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yyg6ELC<10>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(-1,{
        qq2yyg6ELC<10,-1>(s12,s13,s14,s23,s24)
    });
}

