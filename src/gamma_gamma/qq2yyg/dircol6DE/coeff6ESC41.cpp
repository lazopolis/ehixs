/*This file was produced by Simone Lionetti using a Mathematica script*/

#include "coeff6ESC.h"

// Master n. 41: box6(-s12-s13-s14-s23-s24,s12+s14+s24,s12)

// Coefficient order epsilon^-1 of master 41
template<>
double qq2yyg6ESC<41,-1>(const double& is12, const double& is13, const double& is14, const double& is23, const double& is24)
{
    const cln::cl_RA s12 = cln::rational(is12);
    const cln::cl_RA s13 = cln::rational(is13);
    const cln::cl_RA s14 = cln::rational(is14);
    const cln::cl_RA s23 = cln::rational(is23);
    const cln::cl_RA s24 = cln::rational(is24);
    return cln::double_approx(
	((((s14*(49*s23+32*s24)+6*(7*s23*s24+3*pow<2>(s23)+5*pow<2>(s24)))*pow<3>(s13)+pow<2>(s13)*(66*(s23+s24)*pow<2>(s14)+50*s24*pow<2>(s23)+89*s23*pow<2>(s24)+10*s14*(19*s23*s24+9*pow<2>(s23)+11*pow<2>(s24))+9*pow<3>(s23)+51*pow<3>(s24))+2*(5*s23+s24)*pow<4>(s13)+s14*(49*pow<2>(s23)*pow<2>(s24)+6*pow<2>(s14)*(7*s23*s24+5*pow<2>(s23)+3*pow<2>(s24))+2*(s23+5*s24)*pow<3>(s14)+51*s24*pow<3>(s23)+15*s23*pow<3>(s24)+s14*(89*s24*pow<2>(s23)+50*s23*pow<2>(s24)+51*pow<3>(s23)+9*pow<3>(s24))+14*pow<4>(s23)+pow<4>(s24))+s13*(49*pow<2>(s23)*pow<2>(s24)+10*pow<2>(s14)*(19*s23*s24+11*pow<2>(s23)+9*pow<2>(s24))+(32*s23+49*s24)*pow<3>(s14)+15*s24*pow<3>(s23)+51*s23*pow<3>(s24)+3*s14*(61*s24*pow<2>(s23)+61*s23*pow<2>(s24)+19*pow<3>(s23)+19*pow<3>(s24))+pow<4>(s23)+14*pow<4>(s24)))*pow<5>(s12)+pow<4>(s12)*(pow<3>(s13)*(15*(4*s23+3*s24)*pow<2>(s14)+54*s24*pow<2>(s23)+82*s23*pow<2>(s24)+s14*(175*s23*s24+79*pow<2>(s23)+94*pow<2>(s24))+9*pow<3>(s23)+57*pow<3>(s24))+(s14*(33*s23+14*s24)+4*(8*s23*s24+3*pow<2>(s23)+3*pow<2>(s24)))*pow<4>(s13)+pow<2>(s13)*(92*pow<2>(s23)*pow<2>(s24)+pow<2>(s14)*(270*s23*s24+139*pow<2>(s23)+139*pow<2>(s24))+15*(3*s23+4*s24)*pow<3>(s14)+27*s24*pow<3>(s23)+122*s23*pow<3>(s24)+s14*(266*s24*pow<2>(s23)+314*s23*pow<2>(s24)+69*pow<3>(s23)+129*pow<3>(s24))+2*pow<4>(s23)+45*pow<4>(s24))+s14*(4*(8*s23*s24+3*pow<2>(s23)+3*pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(82*s24*pow<2>(s23)+54*s23*pow<2>(s24)+57*pow<3>(s23)+9*pow<3>(s24))+5*s24*pow<4>(s14)+s14*(92*pow<2>(s23)*pow<2>(s24)+122*s24*pow<3>(s23)+27*s23*pow<3>(s24)+45*pow<4>(s23)+2*pow<4>(s24))+s23*(58*pow<2>(s23)*pow<2>(s24)+38*s24*pow<3>(s23)+29*s23*pow<3>(s24)+6*pow<4>(s23)+4*pow<4>(s24)))+s13*((175*s23*s24+94*pow<2>(s23)+79*pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(314*s24*pow<2>(s23)+266*s23*pow<2>(s24)+129*pow<3>(s23)+69*pow<3>(s24))+(14*s23+33*s24)*pow<4>(s14)+s24*(58*pow<2>(s23)*pow<2>(s24)+29*s24*pow<3>(s23)+38*s23*pow<3>(s24)+4*pow<4>(s23)+6*pow<4>(s24))+s14*(242*pow<2>(s23)*pow<2>(s24)+155*s24*pow<3>(s23)+155*s23*pow<3>(s24)+30*pow<4>(s23)+30*pow<4>(s24)))+5*s23*pow<5>(s13))+(s13+s23)*(s14+s24)*(pow<2>(s14)*pow<2>(s23)*(s24*(s23+s24)*pow<2>(s23)+s14*(s23+2*s24)*pow<2>(s23)+pow<2>(s14)*(pow<2>(s23)+pow<2>(s24))+s24*pow<3>(s14))+(s23*(s23+3*s24)*pow<2>(s14)+s14*s24*(3*s23*s24+2*pow<2>(s23)-pow<2>(s24))+pow<2>(s24)*(pow<2>(s23)+pow<2>(s24)))*pow<4>(s13)+s13*s14*s23*(-(s14*s23*s24*(10*s23*s24+2*pow<2>(s23)+7*pow<2>(s24)))-5*s23*pow<2>(s24)*pow<2>(s23+s24)+(3*s23*s24-pow<2>(s23)+2*pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(-3*s24*pow<2>(s23)+3*s23*pow<2>(s24)+pow<3>(s23)+pow<3>(s24))+s24*pow<4>(s14))+pow<2>(s13)*(-4*s23*s24*pow<2>(s14)*(pow<2>(s23)+pow<2>(s24))-s14*s23*pow<2>(s24)*(10*s23*s24+7*pow<2>(s23)+2*pow<2>(s24))+pow<3>(s14)*(5*s24*pow<2>(s23)+6*s23*pow<2>(s24)-pow<3>(s23)+pow<3>(s24))+s24*(3*s23+s24)*pow<4>(s14)+s23*(s23+s24)*pow<4>(s24))+pow<3>(s13)*((4*s23*s24+pow<2>(s23)+pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(6*s24*pow<2>(s23)+5*s23*pow<2>(s24)+pow<3>(s23)-pow<3>(s24))+s14*s24*(3*s24*pow<2>(s23)-3*s23*pow<2>(s24)+pow<3>(s23)+pow<3>(s24))+(2*s23+s24)*pow<4>(s24))+s23*s24*(s14+s24)*pow<5>(s13))+(pow<2>(s13)*(33*s23*s24+s14*(39*s23+35*s24)+12*pow<2>(s23)+28*pow<2>(s24))+2*(5*s23+3*s24)*pow<3>(s13)+s14*(2*(3*s23+5*s24)*pow<2>(s14)+35*s24*pow<2>(s23)+20*s23*pow<2>(s24)+s14*(33*s23*s24+28*pow<2>(s23)+12*pow<2>(s24))+16*pow<3>(s23)+3*pow<3>(s24))+s13*((35*s23+39*s24)*pow<2>(s14)+20*s24*pow<2>(s23)+35*s23*pow<2>(s24)+s14*(94*s23*s24+48*pow<2>(s23)+48*pow<2>(s24))+3*pow<3>(s23)+16*pow<3>(s24)))*pow<6>(s12)+pow<3>(s12)*(((33*s23+14*s24)*pow<2>(s14)+32*s24*pow<2>(s23)+40*s23*pow<2>(s24)+7*s14*(13*s23*s24+5*pow<2>(s23)+5*pow<2>(s24))+3*pow<3>(s23)+25*pow<3>(s24))*pow<4>(s13)+pow<3>(s13)*(64*pow<2>(s23)*pow<2>(s24)+pow<2>(s14)*(175*s23*s24+81*pow<2>(s23)+79*pow<2>(s24))+34*(s23+s24)*pow<3>(s14)+21*s24*pow<3>(s23)+94*s23*pow<3>(s24)+s14*(179*s24*pow<2>(s23)+218*s23*pow<2>(s24)+36*pow<3>(s23)+102*pow<3>(s24))+pow<4>(s23)+51*pow<4>(s24))+pow<2>(s13)*((175*s23*s24+79*pow<2>(s23)+81*pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(277*s24*pow<2>(s23)+277*s23*pow<2>(s24)+98*pow<3>(s23)+98*pow<3>(s24))+(14*s23+33*s24)*pow<4>(s14)+s24*(93*pow<2>(s23)*pow<2>(s24)+33*s24*pow<3>(s23)+88*s23*pow<3>(s24)+4*pow<4>(s23)+19*pow<4>(s24))+s14*(262*pow<2>(s23)*pow<2>(s24)+137*s24*pow<3>(s23)+230*s23*pow<3>(s24)+18*pow<4>(s23)+68*pow<4>(s24)))+(15*s23*s24+3*s14*(4*s23+s24)+3*pow<2>(s23)+pow<2>(s24))*pow<5>(s13)+s14*(pow<3>(s14)*(40*s24*pow<2>(s23)+32*s23*pow<2>(s24)+25*pow<3>(s23)+3*pow<3>(s24))+(15*s23*s24+pow<2>(s23)+3*pow<2>(s24))*pow<4>(s14)+pow<2>(s14)*(64*pow<2>(s23)*pow<2>(s24)+94*s24*pow<3>(s23)+21*s23*pow<3>(s24)+51*pow<4>(s23)+pow<4>(s24))+s14*s23*(93*pow<2>(s23)*pow<2>(s24)+88*s24*pow<3>(s23)+33*s23*pow<3>(s24)+19*pow<4>(s23)+4*pow<4>(s24))+pow<2>(s23)*(35*pow<2>(s23)*pow<2>(s24)+14*s24*pow<3>(s23)+27*s23*pow<3>(s24)+pow<4>(s23)+6*pow<4>(s24))+s24*pow<5>(s14))+s13*(pow<3>(s14)*(218*s24*pow<2>(s23)+179*s23*pow<2>(s24)+102*pow<3>(s23)+36*pow<3>(s24))+7*(13*s23*s24+5*pow<2>(s23)+5*pow<2>(s24))*pow<4>(s14)+pow<2>(s24)*(35*pow<2>(s23)*pow<2>(s24)+27*s24*pow<3>(s23)+14*s23*pow<3>(s24)+6*pow<4>(s23)+pow<4>(s24))+pow<2>(s14)*(262*pow<2>(s23)*pow<2>(s24)+230*s24*pow<3>(s23)+137*s23*pow<3>(s24)+68*pow<4>(s23)+18*pow<4>(s24))+3*(s23+4*s24)*pow<5>(s14)+s14*(137*pow<2>(s24)*pow<3>(s23)+137*pow<2>(s23)*pow<3>(s24)+57*s24*pow<4>(s23)+57*s23*pow<4>(s24)+6*pow<5>(s23)+6*pow<5>(s24)))+s23*pow<6>(s13))+pow<2>(s12)*((pow<2>(s14)*(69*s23*s24+29*pow<2>(s23)+18*pow<2>(s24))+(19*s23+11*s24)*pow<3>(s14)+s24*(28*s24*pow<2>(s23)+27*s23*pow<2>(s24)+7*pow<3>(s23)+23*pow<3>(s24))+s14*(66*s24*pow<2>(s23)+83*s23*pow<2>(s24)+8*pow<3>(s23)+30*pow<3>(s24)))*pow<4>(s13)+pow<3>(s13)*(11*(8*s23*s24+3*pow<2>(s23)+3*pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(113*s24*pow<2>(s23)+115*s23*pow<2>(s24)+32*pow<3>(s23)+43*pow<3>(s24))+(11*s23+19*s24)*pow<4>(s14)+s24*(41*pow<2>(s23)*pow<2>(s24)+15*s24*pow<3>(s23)+62*s23*pow<3>(s24)+2*pow<4>(s23)+21*pow<4>(s24))+s14*(124*pow<2>(s23)*pow<2>(s24)+56*s24*pow<3>(s23)+111*s23*pow<3>(s24)+3*pow<4>(s23)+50*pow<4>(s24)))+((11*s23+s24)*pow<2>(s14)+s24*(15*s23*s24+8*pow<2>(s23)+3*pow<2>(s24))+s14*(27*s23*s24+7*pow<2>(s23)+6*pow<2>(s24)))*pow<5>(s13)+s14*s23*(2*s24*pow<2>(s23)*(5*s24*pow<2>(s23)+6*s23*pow<2>(s24)+pow<3>(s23)+2*pow<3>(s24))+pow<3>(s14)*(27*s24*pow<2>(s23)+28*s23*pow<2>(s24)+23*pow<3>(s23)+7*pow<3>(s24))+(15*s23*s24+3*pow<2>(s23)+8*pow<2>(s24))*pow<4>(s14)+s14*s23*(51*pow<2>(s23)*pow<2>(s24)+31*s24*pow<3>(s23)+22*s23*pow<3>(s24)+3*pow<4>(s23)+2*pow<4>(s24))+pow<2>(s14)*(41*pow<2>(s23)*pow<2>(s24)+62*s24*pow<3>(s23)+15*s23*pow<3>(s24)+21*pow<4>(s23)+2*pow<4>(s24))+3*s24*pow<5>(s14))+pow<2>(s13)*(pow<3>(s14)*(115*s24*pow<2>(s23)+113*s23*pow<2>(s24)+43*pow<3>(s23)+32*pow<3>(s24))+(69*s23*s24+18*pow<2>(s23)+29*pow<2>(s24))*pow<4>(s14)+pow<2>(s24)*(51*pow<2>(s23)*pow<2>(s24)+22*s24*pow<3>(s23)+31*s23*pow<3>(s24)+2*pow<4>(s23)+3*pow<4>(s24))+s14*s24*(90*pow<2>(s23)*pow<2>(s24)+64*s24*pow<3>(s23)+74*s23*pow<3>(s24)+21*pow<4>(s23)+14*pow<4>(s24))+pow<2>(s14)*(114*pow<2>(s23)*pow<2>(s24)+89*s24*pow<3>(s23)+89*s23*pow<3>(s24)+25*pow<4>(s23)+25*pow<4>(s24))+(s23+11*s24)*pow<5>(s14))+s23*(2*s14+3*s24)*pow<6>(s13)+s13*(2*s23*pow<3>(s24)*(6*s24*pow<2>(s23)+5*s23*pow<2>(s24)+2*pow<3>(s23)+pow<3>(s24))+(83*s24*pow<2>(s23)+66*s23*pow<2>(s24)+30*pow<3>(s23)+8*pow<3>(s24))*pow<4>(s14)+pow<3>(s14)*(124*pow<2>(s23)*pow<2>(s24)+111*s24*pow<3>(s23)+56*s23*pow<3>(s24)+50*pow<4>(s23)+3*pow<4>(s24))+s14*s23*s24*(32*pow<2>(s23)*pow<2>(s24)+25*s24*pow<3>(s23)+25*s23*pow<3>(s24)+6*pow<4>(s23)+6*pow<4>(s24))+s23*pow<2>(s14)*(90*pow<2>(s23)*pow<2>(s24)+74*s24*pow<3>(s23)+64*s23*pow<3>(s24)+14*pow<4>(s23)+21*pow<4>(s24))+(27*s23*s24+6*pow<2>(s23)+7*pow<2>(s24))*pow<5>(s14)+2*s24*pow<6>(s14)))+s12*(s14*(s14+s24)*pow<2>(s23)*(s14*pow<2>(s23)*(11*s23*s24+3*pow<2>(s23)+7*pow<2>(s24))+s24*pow<2>(s23)*pow<2>(s23+s24)+(5*s23*s24+3*pow<2>(s23)+4*pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(9*s24*pow<2>(s23)+3*s23*pow<2>(s24)+9*pow<3>(s23)+pow<3>(s24))+3*s24*pow<4>(s14))+pow<4>(s13)*((30*s23*s24+11*pow<2>(s23)+5*pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(38*s24*pow<2>(s23)+29*s23*pow<2>(s24)+7*pow<3>(s23)+4*pow<3>(s24))+pow<2>(s24)*(8*s24*pow<2>(s23)+12*s23*pow<2>(s24)+5*pow<3>(s23)+9*pow<3>(s24))+s14*s24*(37*s24*pow<2>(s23)+24*s23*pow<2>(s24)+12*pow<3>(s23)+11*pow<3>(s24))+5*(s23+s24)*pow<4>(s14))+(s23*(5*s23+17*s24)*pow<2>(s14)+3*s14*s24*(6*s23*s24+4*pow<2>(s23)+pow<2>(s24))+pow<2>(s24)*(5*s23*s24+7*pow<2>(s23)+3*pow<2>(s24))+2*(2*s23+s24)*pow<3>(s14))*pow<5>(s13)+pow<3>(s13)*(pow<3>(s14)*(37*s24*pow<2>(s23)+37*s23*pow<2>(s24)+9*pow<3>(s23)+9*pow<3>(s24))+(30*s23*s24+5*pow<2>(s23)+11*pow<2>(s24))*pow<4>(s14)+pow<2>(s24)*(16*pow<2>(s23)*pow<2>(s24)+3*s24*pow<3>(s23)+20*s23*pow<3>(s24)+pow<4>(s23)+3*pow<4>(s24))+2*s14*s24*(9*pow<2>(s23)*pow<2>(s24)+8*s24*pow<3>(s23)+10*s23*pow<3>(s24)+2*pow<4>(s23)+5*pow<4>(s24))+pow<2>(s14)*(22*pow<2>(s23)*pow<2>(s24)+16*s24*pow<3>(s23)+15*s23*pow<3>(s24)+3*pow<4>(s23)+9*pow<4>(s24))+2*(s23+2*s24)*pow<5>(s14))+s23*(4*s14*s24+pow<2>(s14)+3*pow<2>(s24))*pow<6>(s13)+pow<2>(s13)*(-(s14*s23*pow<2>(s24)*(19*s24*pow<2>(s23)+10*s23*pow<2>(s24)+5*pow<3>(s23)-7*pow<3>(s24)))-2*s23*s24*pow<2>(s14)*(12*s24*pow<2>(s23)+12*s23*pow<2>(s24)+pow<3>(s23)+pow<3>(s24))+(29*s24*pow<2>(s23)+38*s23*pow<2>(s24)+4*pow<3>(s23)+7*pow<3>(s24))*pow<4>(s14)+s23*(13*s23*s24+8*pow<2>(s23)+4*pow<2>(s24))*pow<4>(s24)+pow<3>(s14)*(22*pow<2>(s23)*pow<2>(s24)+15*s24*pow<3>(s23)+16*s23*pow<3>(s24)+9*pow<4>(s23)+3*pow<4>(s24))+s24*(17*s23+5*s24)*pow<5>(s14)+s24*pow<6>(s14))+s13*s23*(s23*s24*pow<2>(s14)*(-10*s24*pow<2>(s23)-19*s23*pow<2>(s24)+7*pow<3>(s23)-5*pow<3>(s24))-s14*s23*pow<2>(s24)*(16*s24*pow<2>(s23)+16*s23*pow<2>(s24)+pow<3>(s23)+pow<3>(s24))+(24*s24*pow<2>(s23)+37*s23*pow<2>(s24)+11*pow<3>(s23)+12*pow<3>(s24))*pow<4>(s14)+s23*pow<2>(s23+s24)*pow<4>(s24)+2*pow<3>(s14)*(9*pow<2>(s23)*pow<2>(s24)+10*s24*pow<3>(s23)+8*s23*pow<3>(s24)+5*pow<4>(s23)+2*pow<4>(s24))+3*(6*s23*s24+pow<2>(s23)+4*pow<2>(s24))*pow<5>(s14)+4*s24*pow<6>(s14)))+((5*s23+6*s24)*pow<2>(s13)+s14*(11*s23*s24+s14*(6*s23+5*s24)+9*pow<2>(s23)+3*pow<2>(s24))+s13*(11*s23*s24+15*s14*(s23+s24)+3*pow<2>(s23)+9*pow<2>(s24)))*pow<7>(s12)+(s14*(2*s23+s24)+s13*(s23+2*s24))*pow<8>(s12))*pow<-1>(s13)*pow<-1>(s14)*pow<-1>(s12+s13+s14)*pow<-1>(s23)*pow<-1>(s24)*pow<-1>(s12+s23+s24)*pow<-1>(s12+s13+s14+s23+s24)*pow<-2>(s12+s13+s23)*pow<-2>(s12+s14+s24))/2
    );
}

// Coefficient of master 41 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yyg6ESC<41>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(-1,{
        qq2yyg6ESC<41,-1>(s12,s13,s14,s23,s24)
    });
}

