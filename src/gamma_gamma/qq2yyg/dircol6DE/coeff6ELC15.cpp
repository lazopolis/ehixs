/*This file was produced by Simone Lionetti using a Mathematica script*/

#include "coeff6ELC.h"

// Master n. 15: box6(s24,-s12-s23-s24,s13)

// Coefficient order epsilon^-1 of master 15
template<>
double qq2yyg6ELC<15,-1>(const double& is12, const double& is13, const double& is14, const double& is23, const double& is24)
{
    const cln::cl_RA s12 = cln::rational(is12);
    const cln::cl_RA s13 = cln::rational(is13);
    const cln::cl_RA s14 = cln::rational(is14);
    const cln::cl_RA s23 = cln::rational(is23);
    const cln::cl_RA s24 = cln::rational(is24);
    return cln::double_approx(
	-((-(s13*s14*pow<3>(s23)*(pow<2>(s14)*(5*s23*s24+6*pow<2>(s23)-pow<2>(s24))+3*s14*(2*s23+s24)*pow<2>(s23+s24)+(4*s23+3*s24)*pow<3>(s14)+(2*s23-s24)*pow<3>(s23+s24)))-pow<2>(s13)*pow<2>(s23)*(3*s14*(-(s23*s24)+2*pow<2>(s23)-pow<2>(s24))*pow<2>(s23+s24)+(5*s23*s24+12*pow<2>(s23)-3*pow<2>(s24))*pow<3>(s14)+3*pow<2>(s14)*(4*s24*pow<2>(s23)+s23*pow<2>(s24)+4*pow<3>(s23)+pow<3>(s24))-2*s23*s24*pow<3>(s23+s24)+3*(s23+s24)*pow<4>(s14))-(s23+s24)*pow<2>(s14)*(pow<2>(s14)+pow<2>(s23+s24))*pow<4>(s23)-s23*pow<3>(s13)*(-3*s23*s24*(2*s23+s24)*pow<2>(s23+s24)+(6*s23*s24+9*pow<2>(s23)-3*pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(-6*s23*pow<2>(s24)+14*pow<3>(s23)+pow<3>(s24))+(s23+s24)*pow<4>(s14)+s14*(-9*pow<2>(s23)*pow<2>(s24)+2*s24*pow<3>(s23)-6*s23*pow<3>(s24)+8*pow<4>(s23)-3*pow<4>(s24)))-pow<4>(s13)*((2*s23*s24+3*pow<2>(s23)-pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(-9*s23*pow<2>(s24)+11*pow<3>(s23))-s23*s24*(14*s24*pow<2>(s23)+9*s23*pow<2>(s24)+8*pow<3>(s23)+3*pow<3>(s24))+s14*(-9*pow<2>(s23)*pow<2>(s24)-6*s24*pow<3>(s23)-2*s23*pow<3>(s24)+8*pow<4>(s23)-pow<4>(s24)))+(63*pow<2>(s23)*pow<2>(s24)+pow<2>(s14)*(42*s23*s24+45*pow<2>(s23)+6*pow<2>(s24))+3*pow<2>(s13)*(102*s23*s24+s14*(81*s23+49*s24)+21*pow<2>(s14)+80*pow<2>(s23)+27*pow<2>(s24))+2*(44*s14+81*s23+55*s24)*pow<3>(s13)+(14*s23+5*s24)*pow<3>(s14)+88*s24*pow<3>(s23)+16*s23*pow<3>(s24)+s14*(111*s24*pow<2>(s23)+48*s23*pow<2>(s24)+68*pow<3>(s23)+5*pow<3>(s24))+s13*(54*(2*s23+s24)*pow<2>(s14)+288*s24*pow<2>(s23)+147*s23*pow<2>(s24)+3*s14*(83*s23*s24+72*pow<2>(s23)+18*pow<2>(s24))+16*pow<3>(s14)+162*pow<3>(s23)+20*pow<3>(s24))+40*pow<4>(s13)+pow<4>(s14)+40*pow<4>(s23)+pow<4>(s24))*pow<5>(s12)-(s14*s23*(-7*s23*s24+6*pow<2>(s23)-9*pow<2>(s24))+pow<2>(s14)*(4*pow<2>(s23)-3*pow<2>(s24))-s24*(8*s24*pow<2>(s23)+3*s23*pow<2>(s24)+8*pow<3>(s23)+pow<3>(s24)))*pow<5>(s13)+pow<4>(s12)*(s23*(18*s23*s24+22*pow<2>(s23)+3*pow<2>(s24))*pow<2>(s23+s24)+(327*s23*s24+6*s14*(39*s23+28*s24)+61*pow<2>(s14)+228*pow<2>(s23)+95*pow<2>(s24))*pow<3>(s13)+(14*s23*s24+16*pow<2>(s23)+pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(51*s24*pow<2>(s23)+18*s23*pow<2>(s24)+29*pow<3>(s23)+pow<3>(s24))+pow<2>(s13)*(3*(53*s23+33*s24)*pow<2>(s14)+456*s24*pow<2>(s23)+261*s23*pow<2>(s24)+s14*(406*s23*s24+297*pow<2>(s23)+99*pow<2>(s24))+24*pow<3>(s14)+228*pow<3>(s23)+40*pow<3>(s24))+2*(31*s14+59*s23+45*s24)*pow<4>(s13)+(3*s23+s24)*pow<4>(s14)+s14*(75*pow<2>(s23)*pow<2>(s24)+102*s24*pow<3>(s23)+18*s23*pow<3>(s24)+42*pow<4>(s23)+pow<4>(s24))+s13*(231*pow<2>(s23)*pow<2>(s24)+3*pow<2>(s14)*(47*s23*s24+38*pow<2>(s23)+8*pow<2>(s24))+20*(2*s23+s24)*pow<3>(s14)+289*s24*pow<3>(s23)+67*s23*pow<3>(s24)+s14*(333*s24*pow<2>(s23)+168*s23*pow<2>(s24)+167*pow<3>(s23)+20*pow<3>(s24))+3*pow<4>(s14)+118*pow<4>(s23)+5*pow<4>(s24))+22*pow<5>(s13))+((72*s14+135*s23+82*s24)*pow<2>(s13)+(29*s23+12*s24)*pow<2>(s14)+72*s24*pow<2>(s23)+33*s23*pow<2>(s24)+2*s14*(31*s23*s24+31*pow<2>(s23)+6*pow<2>(s24))+s13*(154*s23*s24+7*s14*(19*s23+10*s24)+33*pow<2>(s14)+135*pow<2>(s23)+37*pow<2>(s24))+45*pow<3>(s13)+4*pow<3>(s14)+45*pow<3>(s23)+4*pow<3>(s24))*pow<6>(s12)-(-2*s23*s24*(3*s23+2*s24)+s14*(-3*s23*s24+2*pow<2>(s23)-3*pow<2>(s24)))*pow<6>(s13)+pow<3>(s12)*(pow<3>(s13)*((112*s23+93*s24)*pow<2>(s14)+369*s24*pow<2>(s23)+235*s23*pow<2>(s24)+3*s14*(115*s23*s24+67*pow<2>(s23)+32*pow<2>(s24))+16*pow<3>(s14)+164*pow<3>(s23)+40*pow<3>(s24))+(207*s23*s24+4*s14*(31*s23+28*s24)+30*pow<2>(s14)+129*pow<2>(s23)+65*pow<2>(s24))*pow<4>(s13)+pow<2>(s13)*(321*pow<2>(s23)*pow<2>(s24)+pow<2>(s14)*(188*s23*s24+105*pow<2>(s23)+39*pow<2>(s24))+6*(7*s23+5*s24)*pow<3>(s14)+357*s24*pow<3>(s23)+108*s23*pow<3>(s24)+s14*(383*s24*pow<2>(s23)+227*s23*pow<2>(s24)+144*pow<3>(s23)+30*pow<3>(s24))+3*pow<4>(s14)+129*pow<4>(s23)+10*pow<4>(s24))+s23*((12*s23*s24+4*pow<2>(s23)+3*pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(18*s24*pow<2>(s23)+15*s23*pow<2>(s24)+pow<3>(s23)+2*pow<3>(s24))+s23*(7*s23+3*s24)*pow<3>(s23+s24)+2*(s23+s24)*pow<4>(s14)+s14*(57*pow<2>(s23)*pow<2>(s24)+50*s24*pow<3>(s23)+24*s23*pow<3>(s24)+14*pow<4>(s23)+3*pow<4>(s24)))+s13*((37*s23*s24+18*pow<2>(s23)+4*pow<2>(s24))*pow<3>(s14)+3*pow<2>(s14)*(34*s24*pow<2>(s23)+17*s23*pow<2>(s24)+6*pow<3>(s23)+pow<3>(s24))+(5*s23+3*s24)*pow<4>(s14)+s14*(186*pow<2>(s23)*pow<2>(s24)+197*s24*pow<3>(s23)+55*s23*pow<3>(s24)+53*pow<4>(s23)+4*pow<4>(s24))+s23*(184*pow<2>(s23)*pow<2>(s24)+169*s24*pow<3>(s23)+81*s23*pow<3>(s24)+54*pow<4>(s23)+12*pow<4>(s24)))+(24*s14+54*s23+46*s24)*pow<5>(s13)+7*pow<6>(s13))+(32*s23*s24+2*s14*(15*s23+7*s24)+s13*(32*s14+62*s23+34*s24)+31*pow<2>(s13)+7*pow<2>(s14)+31*pow<2>(s23)+7*pow<2>(s24))*pow<7>(s12)+s24*(2*s23+s24)*pow<7>(s13)+pow<2>(s12)*(((34*s23+45*s24)*pow<2>(s14)+168*s24*pow<2>(s23)+114*s23*pow<2>(s24)+s14*(161*s23*s24+63*pow<2>(s23)+54*pow<2>(s24))+4*pow<3>(s14)+67*pow<3>(s23)+20*pow<3>(s24))*pow<4>(s13)+pow<3>(s13)*(209*pow<2>(s23)*pow<2>(s24)+pow<2>(s14)*(119*s23*s24+33*pow<2>(s23)+33*pow<2>(s24))+(17*s23+20*s24)*pow<3>(s14)+210*s24*pow<3>(s23)+82*s23*pow<3>(s24)+s14*(214*s24*pow<2>(s23)+151*s23*pow<2>(s24)+45*pow<3>(s23)+20*pow<3>(s24))+pow<4>(s14)+67*pow<4>(s23)+10*pow<4>(s24))+pow<2>(s13)*(2*s24*(17*s23+3*s24)*pow<3>(s14)+pow<2>(s14)*(82*s24*pow<2>(s23)+59*s23*pow<2>(s24)-27*pow<3>(s23)+3*pow<3>(s24))+3*(s23+s24)*pow<4>(s14)+9*s23*(22*pow<2>(s23)*pow<2>(s24)+18*s24*pow<3>(s23)+11*s23*pow<3>(s24)+5*pow<4>(s23)+2*pow<4>(s24))+s14*(161*pow<2>(s23)*pow<2>(s24)+127*s24*pow<3>(s23)+58*s23*pow<3>(s24)+3*pow<4>(s23)+6*pow<4>(s24)))+s13*s23*(3*s23*(9*s23*s24+5*pow<2>(s23)+3*pow<2>(s24))*pow<2>(s23+s24)+(9*s23*s24-26*pow<2>(s23)+9*pow<2>(s24))*pow<3>(s14)-3*pow<2>(s14)*(6*s24*pow<2>(s23)-6*s23*pow<2>(s24)+15*pow<3>(s23)-pow<3>(s24))-3*(s23-s24)*pow<4>(s14)+s14*(84*pow<2>(s23)*pow<2>(s24)+36*s24*pow<3>(s23)+51*s23*pow<3>(s24)-6*pow<4>(s23)+9*pow<4>(s24)))+pow<2>(s23)*(-3*s23*pow<2>(s14)*(4*s23*s24+3*pow<2>(s23)+pow<2>(s24))+s14*(8*s23*s24+2*pow<2>(s23)+3*pow<2>(s24))*pow<2>(s23+s24)+(2*s23*s24-4*pow<2>(s23)+3*pow<2>(s24))*pow<3>(s14)-2*s23*pow<4>(s14)+s23*pow<4>(s23+s24))+3*(s14*(11*s23+14*s24)+2*pow<2>(s14)+3*(9*s23*s24+5*pow<2>(s23)+3*pow<2>(s24)))*pow<5>(s13)+(4*s14+15*s23+14*s24)*pow<6>(s13)+pow<7>(s13))+s12*(s14*pow<3>(s23)*(pow<2>(s14)*(-(s23*s24)-2*pow<2>(s23)+pow<2>(s24))-s14*(5*s23+2*s24)*pow<2>(s23+s24)-(3*s23+2*s24)*pow<3>(s14)+s24*pow<3>(s23+s24))+s13*pow<2>(s23)*(-3*s14*(-2*s23*s24+3*pow<2>(s23)-2*pow<2>(s24))*pow<2>(s23+s24)+(-13*s23*s24-26*pow<2>(s23)+6*pow<2>(s24))*pow<3>(s14)-3*pow<2>(s14)*(16*s24*pow<2>(s23)+7*s23*pow<2>(s24)+10*pow<3>(s23)+pow<3>(s24))+s23*(2*s23+3*s24)*pow<3>(s23+s24)-3*(3*s23+s24)*pow<4>(s14))+pow<4>(s13)*(64*pow<2>(s23)*pow<2>(s24)+pow<2>(s14)*(30*s23*s24-7*pow<2>(s23)+15*pow<2>(s24))+(s23+5*s24)*pow<3>(s14)+62*s24*pow<3>(s23)+28*s23*pow<3>(s24)+s14*(60*s24*pow<2>(s23)+53*s23*pow<2>(s24)-6*pow<3>(s23)+5*pow<3>(s24))+16*pow<4>(s23)+5*pow<4>(s24))+s23*pow<2>(s13)*(s23*pow<2>(s14)*(-19*s23*s24-48*pow<2>(s23)+14*pow<2>(s24))+s23*(23*s23*s24+8*pow<2>(s23)+9*pow<2>(s24))*pow<2>(s23+s24)-(s23*s24+30*pow<2>(s23)-9*pow<2>(s24))*pow<3>(s14)-3*s23*pow<4>(s14)+s14*(39*pow<2>(s23)*pow<2>(s24)-6*s24*pow<3>(s23)+33*s23*pow<3>(s24)-21*pow<4>(s23)+9*pow<4>(s24)))+pow<3>(s13)*((8*s23*s24-8*pow<2>(s23)+4*pow<2>(s24))*pow<3>(s14)+pow<2>(s14)*(29*s24*pow<2>(s23)+35*s23*pow<2>(s24)-32*pow<3>(s23)+pow<3>(s24))+s24*pow<4>(s14)+s14*(59*pow<2>(s23)*pow<2>(s24)+36*s24*pow<3>(s23)+23*s23*pow<3>(s24)-18*pow<4>(s23)+4*pow<4>(s24))+s23*(89*pow<2>(s23)*pow<2>(s24)+64*s24*pow<3>(s23)+51*s23*pow<3>(s24)+14*pow<4>(s23)+12*pow<4>(s24)))+((2*s23+9*s24)*pow<2>(s14)+45*s24*pow<2>(s23)+30*s23*pow<2>(s24)+s14*(38*s23*s24+3*pow<2>(s23)+18*pow<2>(s24))+14*pow<3>(s23)+4*pow<3>(s24))*pow<5>(s13)+(19*s23*s24+s14*(3*s23+7*s24)+8*pow<2>(s23)+7*pow<2>(s24))*pow<6>(s13)+2*(s23+s24)*pow<7>(s13))+6*(2*s13+s14+2*s23+s24)*pow<8>(s12)+2*pow<9>(s12))*pow<-1>(s13)*pow<-1>(s14)*pow<-1>(s12+s13+s14)*pow<-1>(s23)*pow<-1>(s24)*pow<-1>(s12+s23+s24)*pow<-1>(s12+s13+s14+s23+s24)*pow<-3>(s12+s13+s23))/2
    );
}

// Coefficient of master 15 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yyg6ELC<15>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(-1,{
        qq2yyg6ELC<15,-1>(s12,s13,s14,s23,s24)
    });
}

