/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 8: box(s13,(-s12-s13-s14),s24)

// Coefficient order epsilon^0 of master 8
template<>
double qq2yygCA<8,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (-((s14*(s13-3*s23-4*s24)*s24*(s23+2*s24)+s12*s12*(s23*s24+4*s14*(s23+3*s24)+s13*(13*s14+3*s23+20*s24)+s13*s13+12*(s14*s14)-2*(s23*s23)-4*(s24*s24))+(-4*s24*(s23+s24)+s13*(3*s23+2*s24)+s13*s13)*(s24*s24)-2*(s14*s14)*(3*s23*s24+s23*s23+2*(s24*s24))+(9*s13+2*(6*s14+s23+3*s24))*pow(s12,3)+4*pow(s12,4)+s12*(2*s24*(s13*s13)+2*(s23+3*s24)*(s14*s14)+s13*(3*s14*(s23+5*s24)+s24*(6*s23+13*s24)+4*(s14*s14))-s14*(5*s23*s24+4*(s23*s23)+8*(s24*s24))-s24*(5*s23*s24+3*(s23*s23)+10*(s24*s24))+4*pow(s14,3)))*pow(s23,-1)*pow(s12+s14+s24,-2))+pow(s23,-1)*pow(s24,-1)*(s13*s13*(s14*s24*(7*s23+4*s24)+3*(s23+s24)*(s14*s14)+(4*s23+3*s24)*(s24*s24))+(3*s24*(s23+3*s24)+s14*(5*s23+14*s24)+s13*(15*s14+6*s23+16*s24)+5*(s13*s13)+9*(s14*s14))*pow(s12,3)+(5*s13+5*s14+s23+5*s24)*pow(s12,4)+pow(s12,5)+s24*(s14+s24)*pow(s13,3)+s14*s23*(-(s14*s24*(s23+6*s24))+2*s24*(s14*s14)-3*(s23+2*s24)*(s24*s24)+2*pow(s14,3))+s12*s12*(s14*s24*(8*s23+13*s24)+(9*s14+3*s23+13*s24)*(s13*s13)+(9*s23+13*s24)*(s14*s14)+s13*(s24*(14*s23+19*s24)+s14*(17*s23+28*s24)+15*(s14*s14))+s24*(s23*s24-s23*s23+7*(s24*s24))+pow(s13,3)+7*pow(s14,3))+s12*(s24*(7*s23+4*s24)*(s14*s14)+s13*s13*(s24*(7*s23+11*s24)+s14*(6*s23+13*s24)+4*(s14*s14))+s24*s24*(-(s23*s24)-3*(s23*s23)+2*(s24*s24))+s14*s24*(-5*s23*s24-2*(s23*s23)+4*(s24*s24))+(s14+2*s24)*pow(s13,3)+(7*s23+4*s24)*pow(s14,3)+s13*(s14*s24*(22*s23+15*s24)+2*(8*s23+7*s24)*(s14*s14)+(7*s23+10*s24)*(s24*s24)+5*pow(s14,3))+2*pow(s14,4))+s13*(2*s24*(4*s23+s24)*(s14*s14)+2*s14*(-s23+s24)*(s24*s24)+(5*s23+2*s24)*pow(s14,3)+(-s23+2*s24)*pow(s24,3)))*pow(s12+s14+s24,-2)-((5*s13+8*s14+2*s23+5*s24)*(s12*s12)+(4*s14+3*s24)*(s13*s13)+s14*(2*s14*(s23+4*s24)+s24*(3*s23+4*s24)+4*(s14*s14))+s13*(s24*(2*s23+3*s24)+3*s14*(s23+4*s24)+8*(s14*s14))+s12*(3*s24*(s23+s24)+s13*(13*s14+3*s23+8*s24)+s14*(4*s23+13*s24)+3*(s13*s13)+10*(s14*s14))+2*pow(s12,3))*pow(s24,-1)*pow(s12+s14+s24,-1)+pow(s24,-1)*(-2*s12*s13-4*s12*s14+2*s13*s14-2*s12*s23-2*s14*s23-4*s12*s24-4*s14*s24+2*s23*s24-4*(s12*s12)+2*(s13*s13)+4*(s24*s24)+(s12+s14-s24)*(s14*(s23+2*s24)+s12*(s13+s14+s23+3*s24)+s24*(s13+2*(s23+s24))+s12*s12)*pow(s12+s14+s24,-1))-pow(s24,-1)*(s23*s24*(2*s14+3*s23+2*s24)*(s14*s14)-s13*s13*(s14*s24*(7*s23+4*s24)+2*(2*s23+s24)*(s14*s14)+(3*s23-s24)*(s24*s24))+(8*s13*s24-s13*s13+2*(s24*(5*s23+7*s24)+s14*(3*s23+11*s24)+3*(s14*s14)))*pow(s12,3)+(s13+6*s14+2*s23+9*s24)*pow(s12,4)+2*pow(s12,5)+s12*s12*(2*s14*s24*(11*s23+12*s24)-(3*s14+3*s23+s24)*(s13*s13)+(6*s23+17*s24)*(s14*s14)+s24*(10*s23*s24+3*(s23*s23)+9*(s24*s24))+s13*(-2*s14*(s23-3*s24)+5*s23*s24-3*(s14*s14)+s23*s23+15*(s24*s24))+2*pow(s14,3))+s13*(s14*s14*(s23*s23)+2*(s24*s24)*((s23+s24)*(s23+s24))-2*s23*pow(s14,3)+s14*(3*s24*(s23*s23)+2*pow(s24,3)))+s12*(s13*s13*(s24*(-6*s23+s24)-7*s14*(s23+s24)-2*(s14*s14))+s13*(-2*(2*s23+s24)*(s14*s14)+s14*(5*s23*s24+2*(s23*s23)+8*(s24*s24))+s24*(9*s23*s24+3*(s23*s23)+10*(s24*s24))-2*pow(s14,3))+2*(s24*(7*s23+5*s24)*(s14*s14)+s14*s24*(6*s23*s24+3*(s23*s23)+4*(s24*s24))+(s23+2*s24)*pow(s14,3)+(s23+s24)*pow(s24,3))))*pow(s12+s14+s24,-2)*pow(s12+s23+s24,-1)-(s14*(4*s14+5*s24)*(s13*s13)+16*s23*s24*(s14*s14)+2*s14*s24*(s23*s23)+s14*s14*(s23*s23)+10*s14*s23*(s24*s24)+22*(s14*s14)*(s24*s24)+s12*s12*(16*s23*s24+s13*(28*s14+9*s23+28*s24)+s14*(24*s23+62*s24)+31*(s14*s14)+s23*s23+29*(s24*s24))+(9*s13+8*(3*s14+s23+3*s24))*pow(s12,3)+7*pow(s12,4)+8*s23*pow(s14,3)+16*s24*pow(s14,3)+s13*(s14*s24*(19*s23+26*s24)+(11*s23+24*s24)*(s14*s14)+2*(3*s23+5*s24)*(s24*s24)+8*pow(s14,3))+s12*(5*s14*(s13*s13)+s13*(s24*(15*s23+29*s24)+s14*(20*s23+54*s24)+27*(s14*s14))+2*(3*(4*s23+9*s24)*(s14*s14)+s24*(5*s23*s24+s23*s23+7*(s24*s24))+s14*(16*s23*s24+s23*s23+25*(s24*s24))+9*pow(s14,3)))+4*pow(s14,4)+12*s14*pow(s24,3)+2*s23*pow(s24,3)+2*pow(s24,4))*pow(s12+s14+s24,-2)*pow(s12+s23+s24,-1)+2*(s13*s24+s12*(s13+s14+s23+s24)+s14*(s23+2*s24)+s12*s12)*(s12*(-s13-s14+s23+s24)+(s23+s24)*(s23+s24))*pow((-s12-s13-s14),-1)*pow(s23,-1)*pow((-s12-s23-s24),-1)-(s13*s24+s12*(s13+s14+s23+s24)+s14*(s23+2*s24)+s12*s12)*(2*s14*s23+s13*(-s14+s23)+s14*s24-s23*s24+s12*(s13+2*s14+2*s23+s24)+2*(s12*s12)-s13*s13-s24*s24)*pow((-s12-s13-s14),-1)*pow(s24,-1)*pow((-s12-s23-s24),-1)-(s13*s24+s12*(s13+s14+s23+s24)+s14*(s23+2*s24)+s12*s12)*(s14*s23+2*s14*s24+s23*s24+s12*(2*s13+2*s23+3*s24)+s13*(2*s14+3*s23+4*s24)+2*(s13*s13)+s24*s24)*pow((-s12-s13-s14),-1)*pow(s24,-1)*pow((-s12-s23-s24),-1))/8.;
}

// Coefficient order epsilon^1 of master 8
template<>
double qq2yygCA<8,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return ((-2*s14*(7*s23*s24+s14*(3*s23+s24))*(s13*s13)+(s14*s23+s13*(-4*s14+s23)+10*s23*s24+4*(s13*s13)-6*(s14*s14)+s23*s23-2*(s24*s24))*pow(s12,3)+(-2*s14+s23)*pow(s12,4)+4*(s24*s24)*pow(s13,3)+s12*s12*(2*(s14+4*s24)*(s13*s13)-3*s23*(s14*s14)+s24*(17*s23*s24+9*(s23*s23)-4*(s24*s24))-2*s13*(-2*s23*s24+s14*(s23+s24)+4*(s14*s14)-s23*s23+s24*s24)+s14*(22*s23*s24+3*(s23*s23)+2*(s24*s24))+4*pow(s13,3)-6*pow(s14,3))+s14*s23*(9*s14*s24*(s23+2*s24)+(s23+2*s24)*(s14*s14)+2*(5*s23+7*s24)*(s24*s24)-2*pow(s14,3))+s13*(-2*(s24*s24)*(-2*s23*s24-2*(s23*s23)+s24*s24)+s14*s14*(s23*s24+2*(s23*s23)+2*(s24*s24))+s14*s24*(13*s23*s24+2*(s23*s23)+2*(s24*s24))-2*(2*s23+s24)*pow(s14,3))+s12*(s14*s23*s24*(18*s23+35*s24)-2*(s13*s13)*(s14*(3*s23-s24)+s14*s14-2*(s24*s24))-2*(s24*s24)*(-4*s23*s24-5*(s23*s23)+s24*s24)+s14*s14*(14*s23*s24+3*(s23*s23)+4*(s24*s24))+8*s24*pow(s13,3)+s13*(-((7*s23+4*s24)*(s14*s14))+s24*(7*s23*s24+2*(s23*s23)-4*(s24*s24))+s14*(5*s23*s24+4*(s23*s23)+4*(s24*s24))-4*pow(s14,3))-5*s23*pow(s14,3)-2*pow(s14,4)))*pow(s23,-1)*pow(s24,-1)*pow(s12+s14+s24,-2)-pow(s23,-1)*(15*s23*s24*(s14*s14)+4*s14*s24*(s23*s23)+5*(s14*s14)*(s23*s23)+18*s14*s23*(s24*s24)+16*(s14*s14)*(s24*s24)+s13*s13*(15*s14*s24+6*(s14*s14)+10*(s24*s24))+s12*s12*(15*s23*s24+s13*(50*s14+s23+42*s24)+s14*(11*s23+48*s24)+10*(s13*s13)+24*(s14*s14)+5*(s23*s23)+34*(s24*s24))+(16*s13+19*s14+5*s23+22*s24)*pow(s12,3)+6*pow(s12,4)+s23*pow(s14,3)+10*s24*pow(s14,3)+s13*(s14*s24*(3*s23+43*s24)+(3*s23+47*s24)*(s14*s14)+2*(s23+5*s24)*(s24*s24)+14*pow(s14,3))+s12*(5*(3*s14+4*s24)*(s13*s13)+(7*s23+36*s24)*(s14*s14)+s13*(3*s24*(s23+12*s24)+s14*(4*s23+93*s24)+48*(s14*s14))+2*s24*(7*s23*s24+2*(s23*s23)+13*(s24*s24))+s14*(30*s23*s24+10*(s23*s23)+47*(s24*s24))+15*pow(s14,3))+4*pow(s14,4)+18*s14*pow(s24,3)+4*s23*pow(s24,3)+8*pow(s24,4))*pow(s12+s14+s24,-2)+((20*s13+30*s14+9*s23+19*s24)*(s12*s12)+(14*s14+11*s24)*(s13*s13)+s14*(2*s24*(5*s23+6*s24)+3*s14*(3*s23+8*s24)+12*(s14*s14))+s13*(2*s24*(4*s23+5*s24)+s14*(11*s23+37*s24)+26*(s14*s14))+s12*(10*s24*(s23+s24)+s13*(46*s14+11*s23+30*s24)+s14*(18*s23+43*s24)+11*(s13*s13)+33*(s14*s14))+9*pow(s12,3))*pow(s24,-1)*pow(s12+s14+s24,-1)-pow(s24,-1)*(10*s12*s13+10*s12*s14+12*s13*s14+2*s12*s23+4*s13*s23+2*s14*s23+14*s12*s24+16*s13*s24+12*s14*s24+8*s23*s24+4*(s12*s12)+6*(s13*s13)+6*(s14*s14)+10*(s24*s24)-(s12+2*s13+s14+3*s24)*(s14*(s23+2*s24)+s12*(s13+s14+s23+3*s24)+s24*(s13+2*(s23+s24))+s12*s12)*pow(s12+s14+s24,-1))-pow(s24,-1)*(2*s14*s23*(3*s14+5*s24)*(s13*s13)+s14*(s14+s24)*(4*(s23+s24)*(s14*s14)+(5*s23+4*s24)*(s24*s24)+s14*(4*s23*s24-s23*s23+8*(s24*s24)))-(2*s14*(s23-3*s24)+4*s23*s24+s13*(-2*s14+s23+7*s24)+6*(s13*s13)-9*(s14*s14)+s23*s23+2*(s24*s24))*pow(s12,3)+(-3*s13+s14-2*s23-3*s24)*pow(s12,4)-pow(s12,5)-2*s24*(s14+2*s24)*pow(s13,3)+s12*s12*(-2*(2*s14-s23+6*s24)*(s13*s13)+(6*s23+25*s24)*(s14*s14)-3*s14*(s23*s23-5*(s24*s24))+s24*(-(s23*s24)-s23*s23+s24*s24)+s13*(2*s14*(3*s23+5*s24)+13*(s14*s14)-2*(s23*s24+s23*s23+2*(s24*s24)))-4*pow(s13,3)+11*pow(s14,3))+s13*(s24*s24*(-2*s23*s24-4*(s23*s23)+s24*s24)+s14*s24*(5*s23*s24-4*(s23*s23)+11*(s24*s24))+s14*s14*(15*s23*s24-2*(s23*s23)+14*(s24*s24))+4*(2*s23+s24)*pow(s14,3))+s12*(2*(s13*s13)*(s14*(4*s23-2*s24)+(s23-3*s24)*s24+s14*s14)+2*s14*s24*(4*s23*s24-s23*s23+7*(s24*s24))+s14*s14*(12*s23*s24-3*(s23*s23)+29*(s24*s24))-2*(s14+4*s24)*pow(s13,3)+10*(s23+2*s24)*pow(s14,3)+s13*(3*(5*s23+7*s24)*(s14*s14)+s24*(-3*s23*s24-4*(s23*s23)+s24*s24)+s14*(13*s23*s24-4*(s23*s23)+19*(s24*s24))+8*pow(s14,3))+4*pow(s14,4)+(s23+s24)*pow(s24,3)))*pow(s12+s14+s24,-2)*pow(s12+s23+s24,-1)-(10*s14*s23*s24-s13*(s24*(3*s23+2*s24)+s14*(4*s23+7*s24))+(3*s13+4*s14+6*s23+11*s24)*(s12*s12)+2*(2*s14+s24)*(s13*s13)+5*s23*(s14*s14)-s14*(s23*s23)+2*s24*(s23*s23)+12*s14*(s24*s24)+10*s23*(s24*s24)+s12*(13*s23*s24+s13*(3*s14-3*s23+s24)+s14*(11*s23+13*s24)+2*(s13*s13)-3*(s14*s14)-s23*s23+16*(s24*s24))+3*pow(s12,3)-4*pow(s14,3)+8*pow(s24,3))*pow(s12+s14+s24,-1)*pow(s12+s23+s24,-1)-(s13*s24+s12*(s13+s14+s23+s24)+s14*(s23+2*s24)+s12*s12)*(2*s14*s23+3*s14*s24+3*s23*s24+s13*(3*s14+3*s23+4*s24)+s12*(4*s13+3*s14+3*s23+4*s24)+2*(s12*s12)+2*(s13*s13)+s14*s14+s23*s23+2*(s24*s24))*pow((-s12-s13-s14),-1)*pow(s24,-1)*pow((-s12-s23-s24),-1)-(s13*s24+s12*(s13+s14+s23+s24)+s14*(s23+2*s24)+s12*s12)*(s14*s23+8*s14*s24+5*s23*s24+s13*(6*s14-s23+6*s24)+s12*(5*s13+7*(s14+s24))+3*(s12*s12)+2*(s13*s13)+4*(s14*s14)+s23*s23+4*(s24*s24))*pow((-s12-s13-s14),-1)*pow(s24,-1)*pow((-s12-s23-s24),-1)-(s13*s24+s12*(s13+s14+s23+s24)+s14*(s23+2*s24)+s12*s12)*(s13*(2*s24*(2*s23+3*s24)+s14*(2*s23+7*s24))+2*(s13+s24)*(s12*s12)+(2*s23+5*s24)*(s13*s13)+s12*(2*s24*(2*s23+3*s24)+s13*(2*s14+2*s23+7*s24)+2*(s13*s13))+s24*(s14*(-s23+s24)+2*(s14*s14)+2*(3*s23*s24+s23*s23+2*(s24*s24))))*pow((-s12-s13-s14),-1)*pow(s23,-1)*pow(s24,-1)*pow((-s12-s23-s24),-1))/8.;
}

// Coefficient order epsilon^2 of master 8
template<>
double qq2yygCA<8,2>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (-((-(s13*s13*(s14*(8*s23-5*s24)*s24+2*(2*s23+s24)*(s14*s14)+(4*s23-5*s24)*(s24*s24)))+(27*s23*s24+4*s14*(8*s23+13*s24)+s13*(12*s14+8*s23+25*s24)-6*(s13*s13)+24*(s14*s14)+4*(s23*s23)+24*(s24*s24))*pow(s12,3)+2*(3*s13+5*(2*s14+s23+2*s24))*pow(s12,4)+6*pow(s12,5)-6*s24*(s14+s24)*pow(s13,3)+s14*s23*(9*s14*s24*(s23+2*s24)+2*(2*s23+5*s24)*(s14*s14)+(7*s23+10*s24)*(s24*s24)+2*pow(s14,3))+s12*s12*(-((14*s14+6*s23+7*s24)*(s13*s13))+4*(9*s23+11*s24)*(s14*s14)+4*s14*(16*s23*s24+3*(s23*s23)+11*(s24*s24))+s24*(26*s23*s24+9*(s23*s23)+12*(s24*s24))+s13*(26*s23*s24+s14*(20*s23+46*s24)+6*(s14*s14)-2*(s23*s23)+34*(s24*s24))-6*pow(s13,3)+12*pow(s14,3))+s13*(s24*s24*(9*s23*s24+4*(s23*s23)+2*(s24*s24))+2*s14*s24*(10*s23*s24+s23*s23+5*(s24*s24))+s14*s14*(11*s23*s24-2*(s23*s23)+10*(s24*s24))+2*(2*s23+s24)*pow(s14,3))+s12*(-(s13*s13*(2*(5*s23-2*s24)*s24+s14*(10*s23+9*s24)+8*(s14*s14)))+s24*s24*(9*s23*s24+7*(s23*s23)+2*(s24*s24))+2*s14*s24*(22*s23*s24+9*(s23*s23)+6*(s24*s24))+s14*s14*(47*s23*s24+12*(s23*s23)+20*(s24*s24))+s13*((16*s23+23*s24)*(s14*s14)+s24*(27*s23*s24+2*(s23*s23)+17*(s24*s24))+s14*(37*s23*s24-4*(s23*s23)+44*(s24*s24)))-6*(s14+2*s24)*pow(s13,3)+4*(4*s23+3*s24)*pow(s14,3)+2*pow(s14,4)))*pow(s23,-1)*pow(s24,-1)*pow(s12+s14+s24,-2))+pow(s23,-1)*(29*s23*s24*(s14*s14)+s12*s12*(s13*(9*s14+14*s24)+s24*(30*s23+89*s24)+s14*(27*s23+154*s24)-10*(s13*s13)+63*(s14*s14))+s14*s24*(s23*s23)+28*s14*s23*(s24*s24)+76*(s14*s14)*(s24*s24)-s13*s13*(19*s14*s24+10*(s14*s14)+10*(s24*s24))+(3*s13+47*s14+9*s23+56*s24)*pow(s12,3)+13*pow(s12,4)+s13*(s14*s24*(12*s23+17*s24)+(5*s23+7*s24)*(s14*s14)+(5*s23+8*s24)*(s24*s24)-2*pow(s14,3))+9*s23*pow(s14,3)+42*s24*pow(s14,3)+s12*(s14*s24*(59*s23+165*s24)-(19*s14+20*s24)*(s13*s13)+(27*s23+140*s24)*(s14*s14)+s13*(s24*(5*s23+19*s24)+s14*(5*s23+26*s24)+4*(s14*s14))+s24*(29*s23*s24+s23*s23+62*(s24*s24))+37*pow(s14,3))+8*pow(s14,4)+58*s14*pow(s24,3)+8*s23*pow(s24,3)+16*pow(s24,4))*pow(s12+s14+s24,-2)-(s14*(s14+s24)*(12*s14+11*s23+12*s24)+(20*s13+34*s14+11*(s23+2*s24))*(s12*s12)+(8*s14+9*s24)*(s13*s13)+s13*(s24*(10*s23+11*s24)+s14*(9*s23+31*s24)+20*(s14*s14))+s12*(11*s24*(s23+s24)+s13*(40*s14+9*s23+31*s24)+s14*(22*s23+46*s24)+9*(s13*s13)+35*(s14*s14))+11*pow(s12,3))*pow(s24,-1)*pow(s12+s14+s24,-1)+pow(s24,-1)*(10*s12*s13+10*s12*s14+12*s13*s14+2*s12*s24+2*s13*s24+4*s14*s24+4*(s12*s12)+6*(s13*s13)+6*(s14*s14)-2*(s24*s24)-(s12+s13+s14+s24)*(s14*(s23+2*s24)+s12*(s13+s14+s23+3*s24)+s24*(s13+2*(s23+s24))+s12*s12)*pow(s12+s14+s24,-1))+pow(s24,-1)*(s13*s13*(2*s14*s24*(4*s23+15*s24)+4*(s23+4*s24)*(s14*s14)+(8*s23+11*s24)*(s24*s24))+(38*s23*s24+s13*(62*s14+26*s23+77*s24)+s14*(54*s23+113*s24)+20*(s13*s13)+48*(s14*s14)+6*(s23*s23)+55*(s24*s24))*pow(s12,3)+2*(12*s13+18*s14+8*s23+19*s24)*pow(s12,4)+10*pow(s12,5)+2*s24*(2*s14+3*s24)*pow(s13,3)+s12*s12*((32*s14+8*s23+51*s24)*(s13*s13)+6*(11*s23+20*s24)*(s14*s14)+4*s24*(8*s23*s24+s23*s23+9*(s24*s24))+s13*(59*s23*s24+2*s14*(32*s23+81*s24)+52*(s14*s14)+2*(s23*s23)+91*(s24*s24))+s14*(101*s23*s24+18*(s23*s23)+128*(s24*s24))+6*pow(s13,3)+28*pow(s14,3))+s14*(s24*s24*(11*s23*s24+s23*s23+8*(s24*s24))+2*s14*s24*(15*s23*s24+2*(s23*s23)+12*(s24*s24))+s14*s14*(25*s23*s24+6*(s23*s23)+24*(s24*s24))+(6*s23+8*s24)*pow(s14,3))+s12*(2*(s13*s13)*(s24*(8*s23+21*s24)+s14*(6*s23+31*s24)+6*(s14*s14))+s24*s24*(10*s23*s24+s23*s23+9*(s24*s24))+s14*s24*(62*s23*s24+8*(s23*s23)+59*(s24*s24))+s14*s14*(88*s23*s24+18*(s23*s23)+97*(s24*s24))+4*(s14+3*s24)*pow(s13,3)+(34*s23+53*s24)*pow(s14,3)+s13*((50*s23+107*s24)*(s14*s14)+(44*s23+47*s24)*(s24*s24)+s14*(91*s23*s24+4*(s23*s23)+138*(s24*s24))+14*pow(s14,3))+6*pow(s14,4))+s13*(s14*(37*s23+38*s24)*(s24*s24)+s14*s14*(32*s23*s24+2*(s23*s23)+51*(s24*s24))+2*(6*s23+11*s24)*pow(s14,3)+(11*s23+9*s24)*pow(s24,3)))*pow(s12+s14+s24,-2)*pow(s12+s23+s24,-1)-(16*s23*s24*(s14*s14)-3*s14*s24*(s23*s23)-2*(s14*s14)*(s23*s23)+23*s14*s23*(s24*s24)+40*(s14*s14)*(s24*s24)-2*(s23*s23)*(s24*s24)+s13*s13*(20*s14*s24+12*(s14*s14)+7*(s24*s24))+s12*s12*(-(s14*(s23-88*s24))+8*s23*s24+s13*(40*s14-7*s23+23*s24)+7*(s13*s13)+38*(s14*s14)-2*(s23*s23)+54*(s24*s24))+(11*s13+29*s14-2*s23+33*s24)*pow(s12,3)+8*pow(s12,4)+3*s23*pow(s14,3)+20*s24*pow(s14,3)+s13*(s14*s24*(-11*s23+18*s24)+(-4*s23+33*s24)*(s14*s14)+(-9*s23+s24)*(s24*s24)+16*pow(s14,3))+s12*(2*(10*s14+7*s24)*(s13*s13)+(4*s23+75*s24)*(s14*s14)+s13*(s24*(-16*s23+13*s24)+s14*(-11*s23+58*s24)+45*(s14*s14))+s24*(20*s23*s24-3*(s23*s23)+41*(s24*s24))+s14*(24*s23*s24-4*(s23*s23)+95*(s24*s24))+21*pow(s14,3))+4*pow(s14,4)+36*s14*pow(s24,3)+10*s23*pow(s24,3)+12*pow(s24,4))*pow(s12+s14+s24,-2)*pow(s12+s23+s24,-1)+(s13*s24+s12*(s13+s14+s23+s24)+s14*(s23+2*s24)+s12*s12)*(3*s14*s23+s12*(10*s13+8*s14+3*s23)-5*s23*s24+s13*(10*s14+5*s23+2*s24)+4*(s12*s12)+6*(s13*s13)+4*(s14*s14)+s23*s23-6*(s24*s24))*pow((-s12-s13-s14),-1)*pow(s24,-1)*pow((-s12-s23-s24),-1)-(s13*s24+s12*(s13+s14+s23+s24)+s14*(s23+2*s24)+s12*s12)*(2*s14*s23+3*s14*s24+3*s23*s24+s13*(3*s14+3*s23+4*s24)+s12*(4*s13+3*s14+3*s23+4*s24)+2*(s12*s12)+2*(s13*s13)+s14*s14+s23*s23+2*(s24*s24))*pow((-s12-s13-s14),-1)*pow(s24,-1)*pow((-s12-s23-s24),-1)+(s13*s24+s12*(s13+s14+s23+s24)+s14*(s23+2*s24)+s12*s12)*(s12*(-(s13*(s23-4*s24))+s24*(11*s14+13*s23+17*s24))+9*s24*(s12*s12)+(s23-5*s24)*(s13*s13)+s13*(s14*(s23-s24)+s23*s24-s23*s23+6*(s24*s24))+s24*(s14*(9*s23+13*s24)+4*(s14*s14)+4*(3*s23*s24+s23*s23+2*(s24*s24))))*pow((-s12-s13-s14),-1)*pow(s23,-1)*pow(s24,-1)*pow((-s12-s23-s24),-1))/8.;
}

// Coefficient of master 8 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yygCA<8>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(0,{
        qq2yygCA<8,0>(s12,s13,s14,s23,s24),
        qq2yygCA<8,1>(s12,s13,s14,s23,s24),
        qq2yygCA<8,2>(s12,s13,s14,s23,s24)
    });
}

