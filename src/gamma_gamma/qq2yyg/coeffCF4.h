/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 4: bubble(s23)

// Coefficient order epsilon^-1 of master 4
template<>
double qq2yygCF<4,-1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return -(pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23,-3)*pow(s24,-3)*((10*s24*(s13*s13)+s24*(s23*(5*s23+2*s24)+s14*(17*s23+3*s24)+10*(s14*s14))+s13*(14*s23*s24+5*s24*(4*s14+s24)-s23*s23))*pow(s12,6)+s24*(5*s13+5*s14+4*s23+s24)*pow(s12,7)+s24*pow(s12,8)+pow(s12,5)*(2*(s13*s13)*(8*s23*s24+5*s24*(3*s14+s24)-2*(s23*s23))+s13*(30*s24*(s14*s14)-4*s14*(-11*s23*s24+s23*s23-3*(s24*s24))+s23*(6*s23*s24-4*(s23*s23)+7*(s24*s24)))+10*s24*pow(s13,3)+s24*(2*(14*s23+s24)*(s14*s14)+s14*(16*(s23*s23)-s24*s24)+s24*(s23*s24-s23*s23+s24*s24)+10*pow(s14,3)))+s14*s23*s24*(s23+s24)*(-(s14*s23)+s24*(s23+s24))*pow(s14+s23,3)+(s23+s24)*pow(s13,5)*pow(s24,3)+s24*pow(s13,4)*(s23*s24*(7*s23*s24+2*(s23*s23)+4*(s24*s24))+s14*(4*s24*(s23*s23)+6*s23*(s24*s24)+pow(s23,3)+3*pow(s24,3)))+pow(s13,3)*(2*s23*(s24*s24)*(8*s24*(s23*s23)+4*s23*(s24*s24)+3*pow(s23,3)-pow(s24,3))-s14*s14*(-8*(s23*s23)*(s24*s24)+s24*pow(s23,3)+pow(s23,4)-11*s23*pow(s24,3)-3*pow(s24,4))+s14*s24*(26*(s23*s23)*(s24*s24)+15*s24*pow(s23,3)+2*pow(s23,4)+10*s23*pow(s24,3)-pow(s24,4)))-s13*(s23+s24)*(s14*(s23*s23)*(s24*s24)*(-10*s23*s24-10*(s23*s23)+3*(s24*s24))+s23*(4*s23*s24+s23*s23-2*(s24*s24))*pow(s14,4)+s24*s24*(-3*s23*s24-2*(s23*s23)+s24*s24)*pow(s23,3)+s23*(s14*s14)*(-16*(s23*s23)*(s24*s24)+3*s24*pow(s23,3)+pow(s23,4)-12*s23*pow(s24,3)+pow(s24,4))+pow(s14,3)*(-11*(s23*s23)*(s24*s24)+7*s24*pow(s23,3)+2*pow(s23,4)-5*s23*pow(s24,3)+pow(s24,4)))+pow(s12,4)*((4*s23*s24+10*s24*(2*s14+s24)-6*(s23*s23))*pow(s13,3)+5*s24*pow(s13,4)+s13*s13*(30*s24*(s14*s14)-13*s24*(s23*s23)-6*s14*(-5*s23*s24+2*(s23*s23)-3*(s24*s24))+8*s23*(s24*s24)-12*pow(s23,3)+pow(s24,3))+s24*(s14*s14*(-14*s23*s24+17*(s23*s23)-3*(s24*s24))+6*(s23*s23)*(s24*s24)+(22*s23-2*s24)*pow(s14,3)+5*pow(s14,4)-4*s24*pow(s23,3)-5*pow(s23,4)+6*s23*pow(s24,3)+s14*(-17*s24*(s23*s23)+s23*(s24*s24)-6*pow(s23,3)+4*pow(s24,3))+pow(s24,4))+s13*(-6*(s14*s14)*(-8*s23*s24+s23*s23-s24*s24)-2*(s23*s23)*(s24*s24)+20*s24*pow(s14,3)-16*s24*pow(s23,3)-6*pow(s23,4)+s14*(s24*(s23*s23)-6*s23*(s24*s24)-14*pow(s23,3)-3*pow(s24,3))+6*s23*pow(s24,3)+3*pow(s24,4)))-s12*s12*((2*s23*s24+s23*s23-s24*s24)*pow(s13,5)+pow(s13,4)*(12*s24*(s23*s23)+s14*(7*s23*s24+4*(s23*s23)-3*(s24*s24))+2*s23*(s24*s24)+4*pow(s23,3)-3*pow(s24,3))+pow(s13,3)*(s14*s14*(8*s23*s24+6*(s23*s23)-2*(s24*s24))+22*s24*pow(s23,3)+6*pow(s23,4)+s14*(47*s24*(s23*s23)+18*s23*(s24*s24)+18*pow(s23,3)-5*pow(s24,3))-21*s23*pow(s24,3)-4*pow(s24,4))-(s14+s23)*s24*(-(s23*(-4*s23*s24+s23*s23-3*(s24*s24))*((s23+s24)*(s23+s24)))-(11*s23*s24+3*(s23*s23)+s24*s24)*pow(s14,3)+(s23-s24)*pow(s14,4)+s14*s14*(-23*s24*(s23*s23)+2*s23*(s24*s24)-16*pow(s23,3)+4*pow(s24,3))+s14*(19*(s23*s23)*(s24*s24)-5*s24*pow(s23,3)-10*pow(s23,4)+17*s23*pow(s24,3)+3*pow(s24,4)))+s13*((-2*s23*s24+s23*s23+3*(s24*s24))*pow(s14,4)+pow(s14,3)*(27*s24*(s23*s23)+38*s23*(s24*s24)+10*pow(s23,3)+3*pow(s24,3))+s14*s14*(58*(s23*s23)*(s24*s24)+75*s24*pow(s23,3)+19*pow(s23,4)-16*s23*pow(s24,3)-7*pow(s24,4))+s14*(-(s24*s24*pow(s23,3))+47*s24*pow(s23,4)+10*pow(s23,5)-67*(s23*s23)*pow(s24,3)-35*s23*pow(s24,4)-5*pow(s24,5))+s23*(-19*(s24*s24)*pow(s23,3)+6*s24*pow(s23,4)+pow(s23,5)-43*(s23*s23)*pow(s24,3)-21*s23*pow(s24,4)-4*pow(s24,5)))+s13*s13*(6*s23*(s14*s14)*(10*s23*s24+4*(s23*s23)+7*(s24*s24))+2*(s23*s24+2*(s23*s23)+s24*s24)*pow(s14,3)-20*(s24*s24)*pow(s23,3)+17*s24*pow(s23,4)+4*pow(s23,5)-48*(s23*s23)*pow(s24,3)+s14*(21*(s23*s23)*(s24*s24)+75*s24*pow(s23,3)+24*pow(s23,4)-37*s23*pow(s24,3)-7*pow(s24,4))-16*s23*pow(s24,4)-3*pow(s24,5)))+s13*s13*(3*(s23*s23)*(s24*s24)*(5*s24*(s23*s23)+2*s23*(s24*s24)+2*pow(s23,3)-pow(s24,3))+s14*s23*s24*(38*(s23*s23)*(s24*s24)+20*s24*pow(s23,3)+pow(s23,4)+16*s23*pow(s24,3)-3*pow(s24,4))+pow(s14,3)*(3*(s23*s23)*(s24*s24)-6*s24*pow(s23,3)-2*pow(s23,4)+8*s23*pow(s24,3)+pow(s24,4))+s14*s14*(19*(s24*s24)*pow(s23,3)-4*s24*pow(s23,4)-2*pow(s23,5)+33*(s23*s23)*pow(s24,3)+9*s23*pow(s24,4)-2*pow(s24,5)))+pow(s12,3)*((-4*s23*s24+5*s24*(s14+s24)-4*(s23*s23))*pow(s13,4)+s24*pow(s13,5)+pow(s13,3)*(10*s24*(s14*s14)-25*s24*(s23*s23)-4*s14*(s23*s24+3*(s23*s23)-3*(s24*s24))+2*s23*(s24*s24)-12*pow(s23,3)+3*pow(s24,3))+s13*s13*(-(s23*s23*(s24*s24))+6*(s14*s14)*(2*s23*s24-2*(s23*s23)+s24*s24)-6*s14*s23*(9*s23*s24+5*(s23*s23)+3*(s24*s24))+10*s24*pow(s14,3)-35*s24*pow(s23,3)-12*pow(s23,4)+17*s23*pow(s24,3)+4*pow(s24,4))+s24*((-22*s23*s24+5*(s23*s23)-3*(s24*s24))*pow(s14,3)+(8*s23-3*s24)*pow(s14,4)+pow(s14,5)-2*(s14*s14)*(20*s24*(s23*s23)+9*pow(s23,3)-3*pow(s24,3))+s23*(12*(s23*s23)*(s24*s24)-s24*pow(s23,3)-4*pow(s23,4)+12*s23*pow(s24,3)+3*pow(s24,4))+s14*(17*(s23*s23)*(s24*s24)-20*s24*pow(s23,3)-19*pow(s23,4)+19*s23*pow(s24,3)+3*pow(s24,4)))+s13*(-4*(-5*s23*s24+s23*s23+s24*s24)*pow(s14,3)+5*s24*pow(s14,4)+4*(s24*s24)*pow(s23,3)-19*s24*pow(s23,4)-4*pow(s23,5)+27*(s23*s23)*pow(s24,3)-6*(s14*s14)*(4*s24*(s23*s23)+7*s23*(s24*s24)+3*pow(s23,3)+pow(s24,3))+15*s23*pow(s24,4)+s14*(-37*(s23*s23)*(s24*s24)-60*s24*pow(s23,3)-18*pow(s23,4)+13*s23*pow(s24,3)+8*pow(s24,4))+3*pow(s24,5)))+s12*(s24*(-(s23*s24)-s23*s23+s24*s24)*pow(s13,5)+pow(s13,4)*(-3*s24*pow(s23,3)-s14*(8*s24*(s23*s23)+6*s23*(s24*s24)+2*pow(s23,3)-3*pow(s24,3))+10*s23*pow(s24,3)+3*pow(s24,4))+pow(s13,3)*(-(s14*s14*(19*s24*(s23*s23)+14*s23*(s24*s24)+6*pow(s23,3)-3*pow(s24,3)))+s24*(34*(s23*s23)*(s24*s24)+14*s24*pow(s23,3)-3*pow(s23,4)+11*s23*pow(s24,3)+pow(s24,4))+s14*(3*(s23*s23)*(s24*s24)-20*s24*pow(s23,3)-6*pow(s23,4)+31*s23*pow(s24,3)+6*pow(s24,4)))+s13*s13*(pow(s14,3)*(-19*s24*(s23*s23)-16*s23*(s24*s24)-6*pow(s23,3)+pow(s24,3))-s23*s24*(-49*(s23*s23)*(s24*s24)-25*s24*pow(s23,3)+pow(s23,4)-17*s23*pow(s24,3)+pow(s24,4))+s14*s14*(-11*(s23*s23)*(s24*s24)-45*s24*pow(s23,3)-14*pow(s23,4)+31*s23*pow(s24,3)+4*pow(s24,4))+s14*(34*(s24*s24)*pow(s23,3)-20*s24*pow(s23,4)-6*pow(s23,5)+81*(s23*s23)*pow(s24,3)+26*s23*pow(s24,4)+pow(s24,5)))+s13*(-(s23*(8*s23*s24+2*(s23*s23)+9*(s24*s24))*pow(s14,4))+s24*s24*(27*s23*s24+13*(s23*s23)+12*(s24*s24))*pow(s23,3)+pow(s14,3)*(-25*(s23*s23)*(s24*s24)-36*s24*pow(s23,3)-8*pow(s23,4)+11*s23*pow(s24,3)+2*pow(s24,4))+s14*s14*(3*(s24*s24)*pow(s23,3)-37*s24*pow(s23,4)-8*pow(s23,5)+59*(s23*s23)*pow(s24,3)+24*s23*pow(s24,4)+pow(s24,5))+s14*s23*(30*(s24*s24)*pow(s23,3)-10*s24*pow(s23,4)-2*pow(s23,5)+71*(s23*s23)*pow(s24,3)+32*s23*pow(s24,4)+3*pow(s24,5)))-s24*((s14+s23)*(s14+s23))*(s23*(s23+2*s24)*pow(s14,3)+s14*s14*(7*s24*(s23*s23)-s23*(s24*s24)+6*pow(s23,3)-pow(s24,3))+s14*(-10*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)+2*pow(s23,4)-7*s23*pow(s24,3)-pow(s24,4))-s23*s24*pow(s23+s24,3))))*pow(s12+s23+s24,-1));
}

// Coefficient order epsilon^0 of master 4
template<>
double qq2yygCF<4,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return -(pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23,-3)*pow(s24,-3)*((5*(s23-3*s24)*(s14*s14)+4*(5*s23+2*s24)*(s24*s24)+s14*(-11*s23*s24+5*(s23*s23)+12*(s24*s24))+s13*(5*s14*(s23-3*s24)+14*(s24*s24)))*pow(s12,7)+(s14*(s23-3*s24)+4*(s24*s24))*pow(s12,8)-s24*s24*(-((5*s23+2*s24)*(s24*s24))+s14*(9*s23*s24+2*(s23*s23)+3*(s24*s24)))*pow(s13,5)-s24*pow(s13,4)*(2*s14*s24*(23*s24*(s23*s23)+4*s23*(s24*s24)+10*pow(s23,3)-6*pow(s24,3))-3*s23*(3*s23+2*s24)*pow(s24,3)+s14*s14*(16*s24*(s23*s23)+36*s23*(s24*s24)+4*pow(s23,3)+19*pow(s24,3)))+pow(s12,6)*(2*(s24*s24)*(17*s23*s24+20*(s23*s23)+3*(s24*s24))+2*(s13*s13)*(5*s14*(s23-3*s24)+8*(s24*s24))+s14*s14*(-47*s23*s24+23*(s23*s23)+12*(s24*s24))+s13*(20*(s23-3*s24)*(s14*s14)+(60*s23+29*s24)*(s24*s24)+s14*(-35*s23*s24+26*(s23*s23)+16*(s24*s24)))+10*(s23-3*s24)*pow(s14,3)+s14*(-10*s24*(s23*s23)+57*s23*(s24*s24)+10*pow(s23,3)+25*pow(s24,3)))+pow(s13,6)*pow(s24,4)+pow(s12,5)*(s13*s13*(30*(s23-3*s24)*(s14*s14)+s14*(-30*s23*s24+54*(s23*s23)-32*(s24*s24))+(58*s23+37*s24)*(s24*s24))+2*(5*s14*(s23-3*s24)+2*(s24*s24))*pow(s13,3)+(-78*s23*s24+42*(s23*s23)+8*(s24*s24))*pow(s14,3)+10*(s23-3*s24)*pow(s14,4)+2*(s24*s24)*(28*s24*(s23*s23)+11*s23*(s24*s24)+20*pow(s23,3)+pow(s24,3))+s14*s14*(-31*s24*(s23*s23)+68*s23*(s24*s24)+42*pow(s23,3)+25*pow(s24,3))+s13*(4*(s14*s14)*(-27*s23*s24+24*(s23*s23)-7*(s24*s24))+s24*s24*(106*s23*s24+100*(s23*s23)+25*(s24*s24))+30*(s23-3*s24)*pow(s14,3)+s14*(12*s24*(s23*s23)+87*s23*(s24*s24)+54*pow(s23,3)+47*pow(s24,3)))+2*s14*(52*(s23*s23)*(s24*s24)+5*s24*pow(s23,3)+5*pow(s23,4)+36*s23*pow(s24,3)+5*pow(s24,4)))-pow(s13,3)*(s14*s23*(s24*s24)*(93*s24*(s23*s23)+16*s23*(s24*s24)+50*pow(s23,3)-40*pow(s24,3))+s24*(s14*s14)*(140*(s23*s23)*(s24*s24)+79*s24*pow(s23,3)+8*pow(s23,4)+47*s23*pow(s24,3)-28*pow(s24,4))-(7*s23+6*s24)*(s23*s23)*pow(s24,4)+pow(s14,3)*(22*(s23*s23)*(s24*s24)-5*s24*pow(s23,3)-6*pow(s23,4)+51*s23*pow(s24,3)+29*pow(s24,4)))-s23*(s14*s14)*(-(s23*(3*s23*s24+s23*s23+2*(s24*s24))*pow(s14,4))+s24*s24*(16*s23*s24+8*(s23*s23)+15*(s24*s24))*pow(s23,3)+s14*s24*(s23*s23)*(17*s24*(s23*s23)+44*s23*(s24*s24)-4*pow(s23,3)+43*pow(s24,3))-pow(s14,3)*(s23*s23*(s24*s24)+9*s24*pow(s23,3)+2*pow(s23,4)-12*s23*pow(s24,3)-12*pow(s24,4))+s23*(s14*s14)*(10*(s23*s23)*(s24*s24)-10*s24*pow(s23,3)-pow(s23,4)+40*s23*pow(s24,3)+40*pow(s24,4)))-s13*s13*(s14*(s23*s23)*(s24*s24)*(86*s24*(s23*s23)+19*s23*(s24*s24)+48*pow(s23,3)-39*pow(s24,3))+s23*s24*(s14*s14)*(206*(s23*s23)*(s24*s24)+124*s24*pow(s23,3)+4*pow(s23,4)+85*s23*pow(s24,3)-56*pow(s24,4))-2*(s23+s24)*pow(s23,3)*pow(s24,4)+pow(s14,4)*(2*(s23*s23)*(s24*s24)-25*s24*pow(s23,3)-13*pow(s23,4)+30*s23*pow(s24,3)+18*pow(s24,4))+pow(s14,3)*(81*(s24*s24)*pow(s23,3)-18*s24*pow(s23,4)-12*pow(s23,5)+153*(s23*s23)*pow(s24,3)+62*s23*pow(s24,4)-28*pow(s24,5)))-s13*s14*(s14*(s23*s23)*(s24*s24)*(120*s24*(s23*s23)+61*s23*(s24*s24)+69*pow(s23,3)-31*pow(s24,3))+s24*s24*pow(s23,3)*(30*s24*(s23*s23)+10*s23*(s24*s24)+16*pow(s23,3)-11*pow(s24,3))+pow(s14,4)*(-8*(s23*s23)*(s24*s24)-19*s24*pow(s23,3)-8*pow(s23,4)+6*s23*pow(s24,3)+4*pow(s24,4))+s23*(s14*s14)*(78*(s24*s24)*pow(s23,3)-17*s24*pow(s23,4)-6*pow(s23,5)+153*(s23*s23)*pow(s24,3)+100*s23*pow(s24,4)-22*pow(s24,5))+pow(s14,3)*(21*(s24*s24)*pow(s23,3)-35*s24*pow(s23,4)-14*pow(s23,5)+71*(s23*s23)*pow(s24,3)+40*s23*pow(s24,4)-10*pow(s24,5)))+pow(s12,4)*(2*(10*(s23-3*s24)*(s14*s14)+s14*(5*s23*s24+28*(s23*s23)-36*(s24*s24))+(7*s23+9*s24)*(s24*s24))*pow(s13,3)+(5*s14*(s23-3*s24)-4*(s24*s24))*pow(s13,4)+2*(-31*s23*s24+19*(s23*s23)+6*(s24*s24))*pow(s14,4)+5*(s23-3*s24)*pow(s14,5)+s13*s13*(6*(s14*s14)*(-7*s23*s24+25*(s23*s23)-20*(s24*s24))+s24*s24*(118*s23*s24+78*(s23*s23)+41*(s24*s24))+30*(s23-3*s24)*pow(s14,3)+s14*(100*s24*(s23*s23)-31*s23*(s24*s24)+102*pow(s23,3)-24*pow(s24,3)))+2*s23*(s24*s24)*(22*s24*(s23*s23)+15*s23*(s24*s24)+10*pow(s23,3)+3*pow(s24,3))+pow(s14,3)*(-30*s24*(s23*s23)+68*s23*(s24*s24)+69*pow(s23,3)+5*pow(s24,3))+s14*s14*(121*(s23*s23)*(s24*s24)+47*s24*pow(s23,3)+38*pow(s23,4)+9*s23*pow(s24,3)-18*pow(s24,4))+s13*(2*(-57*s23*s24+66*(s23*s23)-20*(s24*s24))*pow(s14,3)+20*(s23-3*s24)*pow(s14,4)+s14*s14*(85*s24*(s23*s23)+21*s23*(s24*s24)+180*pow(s23,3)-28*pow(s24,3))+s24*s24*(148*s24*(s23*s23)+77*s23*(s24*s24)+80*pow(s23,3)+10*pow(s24,3))+s14*(124*(s23*s23)*(s24*s24)+96*s24*pow(s23,3)+56*pow(s23,4)+83*s23*pow(s24,3)+31*pow(s24,4)))+s14*(82*(s24*s24)*pow(s23,3)+25*s24*pow(s23,4)+5*pow(s23,5)+48*(s23*s23)*pow(s24,3)+3*s23*pow(s24,4)+2*pow(s24,5)))+pow(s12,3)*((5*(s23-3*s24)*(s14*s14)+s14*(25*s23*s24+29*(s23*s23)-44*(s24*s24))+2*(-3*s23+s24)*(s24*s24))*pow(s13,4)+(s14*(s23-3*s24)-2*(s24*s24))*pow(s13,5)+(-23*s23*s24+17*(s23*s23)+12*(s24*s24))*pow(s14,5)+(s23-3*s24)*pow(s14,6)+pow(s13,3)*(4*(s14*s14)*(13*s23*s24+26*(s23*s23)-27*(s24*s24))+2*(s24*s24)*(29*s23*s24+8*(s23*s23)+17*(s24*s24))+10*(s23-3*s24)*pow(s14,3)+s14*(128*s24*(s23*s23)-99*s23*(s24*s24)+82*pow(s23,3)-104*pow(s24,3)))+pow(s14,4)*(-4*s24*(s23*s23)+66*s23*(s24*s24)+55*pow(s23,3)-5*pow(s24,3))+2*(s23*s23)*(s24*s24)*(8*s24*(s23*s23)+9*s23*(s24*s24)+2*pow(s23,3)+3*pow(s24,3))+pow(s14,3)*(110*(s23*s23)*(s24*s24)+83*s24*pow(s23,3)+55*pow(s23,4)-78*s23*pow(s24,3)-54*pow(s24,4))+s13*s13*(2*(3*s23*s24+69*(s23*s23)-40*(s24*s24))*pow(s14,3)+10*(s23-3*s24)*pow(s14,4)+3*(s14*s14)*(99*s24*(s23*s23)-40*s23*(s24*s24)+82*pow(s23,3)-64*pow(s24,3))+2*(s24*s24)*(69*s24*(s23*s23)+52*s23*(s24*s24)+23*pow(s23,3)+10*pow(s24,3))+s14*(-63*(s23*s23)*(s24*s24)+174*s24*pow(s23,3)+82*pow(s23,4)-126*s23*pow(s24,3)+30*pow(s24,4)))+s14*s14*(62*(s24*s24)*pow(s23,3)+82*s24*pow(s23,4)+17*pow(s23,5)-143*(s23*s23)*pow(s24,3)-126*s23*pow(s24,4)-6*pow(s24,5))+s14*s23*(12*(s24*s24)*pow(s23,3)+17*s24*pow(s23,4)+pow(s23,5)-42*(s23*s23)*pow(s24,3)-44*s23*pow(s24,4)-4*pow(s24,5))+s13*((-44*s23*s24+80*(s23*s23)-2*(s24*s24))*pow(s14,4)+5*(s23-3*s24)*pow(s14,5)+pow(s14,3)*(165*s24*(s23*s23)+39*s23*(s24*s24)+219*pow(s23,3)-91*pow(s24,3))+s23*(s24*s24)*(98*s24*(s23*s23)+87*s23*(s24*s24)+30*pow(s23,3)+24*pow(s24,3))+s14*s14*(26*(s23*s23)*(s24*s24)+298*s24*pow(s23,3)+164*pow(s23,4)-228*s23*pow(s24,3)-51*pow(s24,4))+s14*(-14*(s24*s24)*pow(s23,3)+91*s24*pow(s23,4)+29*pow(s23,5)-69*(s23*s23)*pow(s24,3)+19*s23*pow(s24,4)+18*pow(s24,5))))+s12*s12*((s14*(9*s23*s24+6*(s23*s23)-8*(s24*s24))+(-2*s23+s24)*(s24*s24))*pow(s13,5)+(-3*s23*s24+3*(s23*s23)+4*(s24*s24))*pow(s14,6)+pow(s13,4)*(s14*s14*(33*s23*s24+27*(s23*s23)-28*(s24*s24))+2*(s24*s24)*(8*s23*s24-s23*s23+8*(s24*s24))+s14*(54*s24*(s23*s23)-42*s23*(s24*s24)+24*pow(s23,3)-73*pow(s24,3)))+pow(s14,5)*(8*s24*(s23*s23)+35*s23*(s24*s24)+21*pow(s23,3)-2*pow(s24,3))+2*((s23+s24)*(s23+s24))*pow(s23,3)*pow(s24,3)+pow(s14,4)*(75*(s23*s23)*(s24*s24)+68*s24*pow(s23,3)+37*pow(s23,4)-65*s23*pow(s24,3)-44*pow(s24,4))+s14*s24*(s23*s23)*(-65*(s23*s23)*(s24*s24)-19*s24*pow(s23,3)+4*pow(s23,4)-58*s23*pow(s24,3)-13*pow(s24,4))+pow(s13,3)*((42*s23*s24+48*(s23*s23)-32*(s24*s24))*pow(s14,3)+5*(s14*s14)*(43*s24*(s23*s23)-17*s23*(s24*s24)+24*pow(s23,3)-40*pow(s24,3))+2*(s24*s24)*(28*s24*(s23*s23)+35*s23*(s24*s24)+3*pow(s23,3)+10*pow(s24,3))+2*s14*(-60*(s23*s23)*(s24*s24)+50*s24*pow(s23,3)+18*pow(s23,4)-111*s23*pow(s24,3)+2*pow(s24,4)))+s23*(s14*s14)*(-35*(s24*s24)*pow(s23,3)+44*s24*pow(s23,4)+3*pow(s23,5)-234*(s23*s23)*pow(s24,3)-207*s23*pow(s24,4)-26*pow(s24,5))+pow(s14,3)*(30*(s24*s24)*pow(s23,3)+98*s24*pow(s23,4)+21*pow(s23,5)-229*(s23*s23)*pow(s24,3)-185*s23*pow(s24,4)-10*pow(s24,5))+s13*((-3*s23*s24+18*(s23*s23)+8*(s24*s24))*pow(s14,5)+pow(s14,4)*(123*s24*(s23*s23)+63*s23*(s24*s24)+114*pow(s23,3)-55*pow(s24,3))+s23*s23*(s24*s24)*(31*s24*(s23*s23)+43*s23*(s24*s24)+4*pow(s23,3)+18*pow(s24,3))+pow(s14,3)*(26*(s23*s23)*(s24*s24)+325*s24*pow(s23,3)+168*pow(s23,4)-313*s23*pow(s24,3)-99*pow(s24,4))+s14*s14*(-196*(s24*s24)*pow(s23,3)+209*s24*pow(s23,4)+72*pow(s23,5)-552*(s23*s23)*pow(s24,3)-221*s23*pow(s24,4)+16*pow(s24,5))+s14*s23*(-148*(s24*s24)*pow(s23,3)+27*s24*pow(s23,4)+6*pow(s23,5)-239*(s23*s23)*pow(s24,3)-46*s23*pow(s24,4)+32*pow(s24,5)))+s13*s13*(2*(9*s23*s24+21*(s23*s23)-4*(s24*s24))*pow(s14,4)+pow(s14,3)*(276*s24*(s23*s23)-17*s23*(s24*s24)+189*pow(s23,3)-179*pow(s24,3))+s23*(s24*s24)*(70*s24*(s23*s23)+93*s23*(s24*s24)+10*pow(s23,3)+36*pow(s24,3))+s14*s14*(-179*(s23*s23)*(s24*s24)+343*s24*pow(s23,3)+162*pow(s23,4)-489*s23*pow(s24,3)-67*pow(s24,4))+s14*(-213*(s24*s24)*pow(s23,3)+78*s24*pow(s23,4)+24*pow(s23,5)-310*(s23*s23)*pow(s24,3)+21*s23*pow(s24,4)+42*pow(s24,5))))+s12*(s24*(s14*(-4*s23*s24+4*(s23*s23)-15*(s24*s24))+(4*s23+5*s24)*(s24*s24))*pow(s13,5)+pow(s13,6)*pow(s24,3)+pow(s13,4)*(s14*s14*(34*s24*(s23*s23)-12*s23*(s24*s24)+12*pow(s23,3)-61*pow(s24,3))+2*(13*s23*s24+5*(s23*s23)+5*(s24*s24))*pow(s24,3)-s14*s24*(39*s24*(s23*s23)+94*s23*(s24*s24)-12*pow(s23,3)+8*pow(s24,3)))+pow(s13,3)*(pow(s14,3)*(81*s24*(s23*s23)-6*s23*(s24*s24)+39*pow(s23,3)-83*pow(s24,3))+s23*(45*s23*s24+16*(s23*s23)+24*(s24*s24))*pow(s24,3)+s14*s14*(-118*(s23*s23)*(s24*s24)+88*s24*pow(s23,3)+36*pow(s23,4)-288*s23*pow(s24,3)-53*pow(s24,4))+s14*s24*(-239*(s23*s23)*(s24*s24)-143*s24*pow(s23,3)+12*pow(s23,4)-3*s23*pow(s24,3)+38*pow(s24,4)))+s14*(3*s23*(s23*s24+s23*s23+2*(s24*s24))*pow(s14,5)-s24*s24*pow(s23,3)*(22*s24*(s23*s23)+21*s23*(s24*s24)+8*pow(s23,3)+7*pow(s24,3))+s14*s24*(s23*s23)*(-123*(s23*s23)*(s24*s24)-40*s24*pow(s23,3)+8*pow(s23,4)-115*s23*pow(s24,3)-19*pow(s24,4))+pow(s14,4)*(24*(s23*s23)*(s24*s24)+25*s24*pow(s23,3)+11*pow(s23,4)-16*s23*pow(s24,3)-12*pow(s24,4))+s23*(s14*s14)*(-37*(s24*s24)*pow(s23,3)+37*s24*pow(s23,4)+3*pow(s23,5)-191*(s23*s23)*pow(s24,3)-173*s23*pow(s24,4)-16*pow(s24,5))+pow(s14,3)*(11*(s24*s24)*pow(s23,3)+50*s24*pow(s23,4)+11*pow(s23,5)-106*(s23*s23)*pow(s24,3)-90*s23*pow(s24,4)-4*pow(s24,5)))+s13*(-(s14*(s23*s23)*(s24*s24)*(164*s24*(s23*s23)+47*s23*(s24*s24)+97*pow(s23,3)-26*pow(s24,3)))+pow(s14,5)*(31*s24*(s23*s23)+18*s23*(s24*s24)+21*pow(s23,3)-10*pow(s24,3))+4*((s23+s24)*(s23+s24))*pow(s23,3)*pow(s24,3)+2*pow(s14,4)*(16*(s23*s23)*(s24*s24)+71*s24*pow(s23,3)+34*pow(s23,4)-57*s23*pow(s24,3)-23*pow(s24,4))+pow(s14,3)*(-132*(s24*s24)*pow(s23,3)+153*s24*pow(s23,4)+57*pow(s23,5)-417*(s23*s23)*pow(s24,3)-203*s23*pow(s24,4)+18*pow(s24,5))+s23*(s14*s14)*(-242*(s24*s24)*pow(s23,3)+44*s24*pow(s23,4)+12*pow(s23,5)-475*(s23*s23)*pow(s24,3)-224*s23*pow(s24,4)+30*pow(s24,5)))+s13*s13*(pow(s14,4)*(79*s24*(s23*s23)+14*s23*(s24*s24)+45*pow(s23,3)-48*pow(s24,3))+s23*s23*(32*s23*s24+13*(s23*s23)+18*(s24*s24))*pow(s24,3)+pow(s14,3)*(-71*(s23*s23)*(s24*s24)+193*s24*pow(s23,3)+93*pow(s23,4)-288*s23*pow(s24,3)-74*pow(s24,4))+s14*s23*s24*(-300*(s23*s23)*(s24*s24)-197*s24*pow(s23,3)+4*pow(s23,4)-18*s23*pow(s24,3)+76*pow(s24,4))+s14*s14*(-302*(s24*s24)*pow(s23,3)+90*s24*pow(s23,4)+36*pow(s23,5)-561*(s23*s23)*pow(s24,3)-142*s23*pow(s24,4)+50*pow(s24,5)))))*pow(s12+s23+s24,-1))/2.;
}

// Coefficient order epsilon^1 of master 4
template<>
double qq2yygCF<4,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23,-3)*pow(s24,-3)*((10*(s23-s24)*(s14*s14)+10*(3*s23+s24)*(s24*s24)+2*s13*(5*s14*(s23-s24)+12*(s24*s24))+s14*(-9*s23*s24+10*(s23*s23)+20*(s24*s24)))*pow(s12,7)+2*(s14*(s23-s24)+3*(s24*s24))*pow(s12,8)+s24*s24*(s24*(16*s23*s24+6*(s23*s23)+3*(s24*s24))+s14*(-21*s23*s24-4*(s23*s23)+4*(s24*s24)))*pow(s13,5)+pow(s12,6)*(2*(s24*s24)*(21*s23*s24+30*(s23*s23)+4*(s24*s24))+4*(s13*s13)*(5*s14*(s23-s24)+9*(s24*s24))+s14*s14*(-40*s23*s24+46*(s23*s23)+27*(s24*s24))+2*s13*(20*(s23-s24)*(s14*s14)+(51*s23+20*s24)*(s24*s24)+s14*(-15*s23*s24+23*(s23*s23)+25*(s24*s24)))+20*(s23-s24)*pow(s14,3)+2*s14*(-9*s24*(s23*s23)+34*s23*(s24*s24)+10*pow(s23,3)+17*pow(s24,3)))+s24*pow(s13,4)*(3*s23*(s24*s24)*(10*s23*s24+6*(s23*s23)+3*(s24*s24))+s14*s14*(-67*s23*(s24*s24)+2*pow(s23,3)-16*pow(s24,3))+s14*s24*(-45*s24*(s23*s23)+42*s23*(s24*s24)-30*pow(s23,3)+23*pow(s24,3)))+3*pow(s13,6)*pow(s24,4)-s23*(s14+s23)*(s14*s14)*(s23*s23*(s24*s24)*(22*s23*s24+12*(s23*s23)+21*(s24*s24))+pow(s14,3)*(3*s23*(s24*s24)-2*pow(s23,3)-4*pow(s24,3))+s14*s23*s24*(29*s24*(s23*s23)+39*s23*(s24*s24)+2*pow(s23,3)+38*pow(s24,3))+s14*s14*(22*(s23*s23)*(s24*s24)+3*s24*pow(s23,3)-2*pow(s23,4)+14*s23*pow(s24,3)+16*pow(s24,4)))+pow(s12,5)*(3*(s13*s13)*(20*(s23-s24)*(s14*s14)+21*(2*s23+s24)*(s24*s24)+2*s14*(-5*s23*s24+14*(s23*s23)+4*(s24*s24)))+4*(5*s14*(s23-s24)+6*(s24*s24))*pow(s13,3)+14*(-5*s23*s24+6*(s23*s23)+2*(s24*s24))*pow(s14,3)+20*(s23-s24)*pow(s14,4)+2*(s24*s24)*(34*s24*(s23*s23)+15*s23*(s24*s24)+30*pow(s23,3)+2*pow(s24,3))+s14*s14*(-71*s24*(s23*s23)+29*s23*(s24*s24)+84*pow(s23,3)+43*pow(s24,3))+s13*(4*(s14*s14)*(-25*s23*s24+42*(s23*s23)+7*(s24*s24))+s24*s24*(145*s23*s24+168*(s23*s23)+35*(s24*s24))+60*(s23-s24)*pow(s14,3)+s14*(-22*s24*(s23*s23)+109*s23*(s24*s24)+84*pow(s23,3)+93*pow(s24,3)))+s14*(61*(s23*s23)*(s24*s24)-22*s24*pow(s23,3)+20*pow(s23,4)+75*s23*pow(s24,3)+18*pow(s24,4)))+pow(s13,3)*(3*(s23*s23)*(8*s23*s24+6*(s23*s23)+3*(s24*s24))*pow(s24,3)+2*s14*s23*(s24*s24)*(-21*s24*(s23*s23)+42*s23*(s24*s24)-34*pow(s23,3)+36*pow(s24,3))+pow(s14,3)*(27*(s23*s23)*(s24*s24)+16*s24*pow(s23,3)+6*pow(s23,4)-71*s23*pow(s24,3)-42*pow(s24,4))+s24*(s14*s14)*(-129*(s23*s23)*(s24*s24)-53*s24*pow(s23,3)+6*pow(s23,4)+17*s23*pow(s24,3)+51*pow(s24,4)))+pow(s12,4)*((40*(s23-s24)*(s14*s14)+4*s14*(19*(s23*s23)-7*(s24*s24))+2*(33*s23+26*s24)*(s24*s24))*pow(s13,3)+2*(5*s14*(s23-s24)+3*(s24*s24))*pow(s13,4)+4*(-15*s23*s24+19*(s23*s23)+8*(s24*s24))*pow(s14,4)+10*(s23-s24)*pow(s14,5)+2*s23*(s24*s24)*(26*s24*(s23*s23)+21*s23*(s24*s24)+15*pow(s23,3)+6*pow(s24,3))+pow(s14,3)*(-107*s24*(s23*s23)-17*s23*(s24*s24)+138*pow(s23,3)+29*pow(s24,3))+s13*s13*(6*(s14*s14)*(-10*s23*s24+38*(s23*s23)-7*(s24*s24))+s24*s24*(202*s23*s24+162*(s23*s23)+63*(s24*s24))+60*(s23-s24)*pow(s14,3)+s14*(48*s24*(s23*s23)-41*s23*(s24*s24)+132*pow(s23,3)+68*pow(s24,3)))+s14*s14*(-146*(s23*s23)*(s24*s24)-77*s24*pow(s23,3)+76*pow(s23,4)-36*s23*pow(s24,3)-6*pow(s24,4))+s13*(12*(-10*s23*s24+19*(s23*s23)+2*(s24*s24))*pow(s14,3)+40*(s23-s24)*pow(s14,4)+s24*s24*(200*s24*(s23*s23)+109*s23*(s24*s24)+132*pow(s23,3)+19*pow(s24,3))+s14*s14*(-45*s24*(s23*s23)-113*s23*(s24*s24)+276*pow(s23,3)+48*pow(s24,3))+s14*(-47*(s23*s23)*(s24*s24)+16*s24*pow(s23,3)+76*pow(s23,4)+140*s23*pow(s24,3)+73*pow(s24,4)))+s14*(-37*(s24*s24)*pow(s23,3)-18*s24*pow(s23,4)+10*pow(s23,5)-4*(s23*s23)*pow(s24,3)+18*s23*pow(s24,4)+12*pow(s24,5)))+s13*s14*(s24*s24*pow(s23,3)*(-15*s24*(s23*s23)+13*s23*(s24*s24)-20*pow(s23,3)+21*pow(s24,3))+pow(s14,4)*(9*(s23*s23)*(s24*s24)+12*s24*pow(s23,3)+10*pow(s23,4)+8*s23*pow(s24,3)-10*pow(s24,4))+s14*s24*(s23*s23)*(-87*(s23*s23)*(s24*s24)-79*s24*pow(s23,3)+2*pow(s23,4)-23*s23*pow(s24,3)+55*pow(s24,4))+pow(s14,3)*(-33*(s24*s24)*pow(s23,3)+19*s24*pow(s23,4)+16*pow(s23,5)-42*(s23*s23)*pow(s24,3)-51*s23*pow(s24,4)+14*pow(s24,5))+s23*(s14*s14)*(-99*(s24*s24)*pow(s23,3)+10*s24*pow(s23,4)+6*pow(s23,5)-123*(s23*s23)*pow(s24,3)-86*s23*pow(s24,4)+44*pow(s24,5)))+s13*s13*((7*s23*s24+6*(s23*s23)+3*(s24*s24))*pow(s23,3)*pow(s24,3)+s14*(s23*s23)*(s24*s24)*(-33*s24*(s23*s23)+61*s23*(s24*s24)-62*pow(s23,3)+70*pow(s24,3))+pow(s14,4)*(35*(s23*s23)*(s24*s24)+26*s24*pow(s23,3)+14*pow(s23,4)-21*s23*pow(s24,3)-35*pow(s24,4))+s23*s24*(s14*s14)*(-129*(s23*s23)*(s24*s24)-120*s24*pow(s23,3)+6*pow(s23,4)+22*s23*pow(s24,3)+107*pow(s24,4))+pow(s14,3)*(-31*(s24*s24)*pow(s23,3)+28*s24*pow(s23,4)+12*pow(s23,5)-110*(s23*s23)*pow(s24,3)-44*s23*pow(s24,4)+45*pow(s24,5)))+pow(s12,3)*((10*(s23-s24)*(s14*s14)+s14*(15*s23*s24+34*(s23*s23)-28*(s24*s24))+4*(3*s23+7*s24)*(s24*s24))*pow(s13,4)+2*s14*(s23-s24)*pow(s13,5)+(-25*s23*s24+34*(s23*s23)+24*(s24*s24))*pow(s14,5)+2*(s23-s24)*pow(s14,6)+pow(s13,3)*(4*(s14*s14)*(5*s23*s24+34*(s23*s23)-15*(s24*s24))+2*(s24*s24)*(78*s23*s24+30*(s23*s23)+31*(s24*s24))+20*(s23-s24)*pow(s14,3)+s14*(96*s24*(s23*s23)-151*s23*(s24*s24)+92*pow(s23,3)-14*pow(s24,3)))+2*(s23*s23)*(s24*s24)*(9*s24*(s23*s23)+13*s23*(s24*s24)+3*pow(s23,3)+6*pow(s24,3))+pow(s14,4)*(-75*s24*(s23*s23)+5*s23*(s24*s24)+110*pow(s23,3)+19*pow(s24,3))+pow(s14,3)*(-261*(s23*s23)*(s24*s24)-99*s24*pow(s23,3)+110*pow(s23,4)-144*s23*pow(s24,3)-46*pow(s24,4))+s13*s13*(6*(-5*s23*s24+34*(s23*s23)-2*(s24*s24))*pow(s14,3)+20*(s23-s24)*pow(s14,4)+3*(s14*s14)*(53*s24*(s23*s23)-100*s23*(s24*s24)+104*pow(s23,3)-28*pow(s24,3))+s24*s24*(246*s24*(s23*s23)+163*s23*(s24*s24)+90*pow(s23,3)+36*pow(s24,3))+s14*(-322*(s23*s23)*(s24*s24)+118*s24*pow(s23,3)+92*pow(s23,4)+21*s23*pow(s24,3)+115*pow(s24,4)))+s14*s14*(-353*(s24*s24)*pow(s23,3)-55*s24*pow(s23,4)+34*pow(s23,5)-341*(s23*s23)*pow(s24,3)-130*s23*pow(s24,4)+12*pow(s24,5))+s14*s23*(-97*(s24*s24)*pow(s23,3)-9*s24*pow(s23,4)+2*pow(s23,5)-125*(s23*s23)*pow(s24,3)-40*s23*pow(s24,4)+18*pow(s24,5))+s13*(4*(-15*s23*s24+34*(s23*s23)+11*(s24*s24))*pow(s14,4)+10*(s23-s24)*pow(s14,5)+pow(s14,3)*(-12*s24*(s23*s23)-132*s23*(s24*s24)+330*pow(s23,3)-23*pow(s24,3))+s23*(s24*s24)*(130*s24*(s23*s23)+123*s23*(s24*s24)+48*pow(s23,3)+45*pow(s24,3))+s14*s14*(-578*(s23*s23)*(s24*s24)+70*s24*pow(s23,3)+220*pow(s23,4)-249*s23*pow(s24,3)+5*pow(s24,4))+s14*(-316*(s24*s24)*pow(s23,3)+30*s24*pow(s23,4)+34*pow(s23,5)-101*(s23*s23)*pow(s24,3)+122*s23*pow(s24,4)+59*pow(s24,5))))+s12*s12*((-4*s23*s24+6*(s23*s23)+7*(s24*s24))*pow(s14,6)+pow(s13,4)*(s14*s14*(20*s23*s24+30*(s23*s23)-17*(s24*s24))+2*(s24*s24)*(38*s23*s24+3*(s23*s23)+19*(s24*s24))+s14*(50*s24*(s23*s23)-83*s23*(s24*s24)+24*pow(s23,3)-30*pow(s24,3)))+2*(3*s23*s24+s23*s23+2*(s24*s24))*pow(s23,3)*pow(s24,3)+6*pow(s13,5)*(s14*(s23*s24+s23*s23-s24*s24)+2*pow(s24,3))+pow(s14,5)*(-23*s24*(s23*s23)+17*s23*(s24*s24)+42*pow(s23,3)+13*pow(s24,3))+s14*s14*(s23*s23)*(-299*(s23*s23)*(s24*s24)-23*s24*pow(s23,3)+6*pow(s23,4)-427*s23*pow(s24,3)-242*pow(s24,4))+pow(s14,4)*(-143*(s23*s23)*(s24*s24)-55*s24*pow(s23,3)+74*pow(s23,4)-86*s23*pow(s24,3)-42*pow(s24,4))-s14*s24*(s23*s23)*(108*(s23*s23)*(s24*s24)+59*s24*pow(s23,3)+2*pow(s23,4)+63*s23*pow(s24,3)-pow(s24,4))+pow(s13,3)*(4*(5*s23*s24+15*(s23*s23)-2*(s24*s24))*pow(s14,3)+s14*s14*(169*s24*(s23*s23)-199*s23*(s24*s24)+132*pow(s23,3)-140*pow(s24,3))+s24*s24*(170*s24*(s23*s23)+135*s23*(s24*s24)+18*pow(s23,3)+34*pow(s24,3))+s14*(-299*(s23*s23)*(s24*s24)+100*s24*pow(s23,3)+36*pow(s23,4)-99*s23*pow(s24,3)+87*pow(s24,4)))+pow(s14,3)*(-398*(s24*s24)*pow(s23,3)-59*s24*pow(s23,4)+42*pow(s23,5)-419*(s23*s23)*pow(s24,3)-210*s23*pow(s24,4)+4*pow(s24,5))+s13*s13*(6*(10*(s23*s23)+3*(s24*s24))*pow(s14,4)+3*pow(s14,3)*(55*s24*(s23*s23)-44*s23*(s24*s24)+78*pow(s23,3)-43*pow(s24,3))+3*s23*(s24*s24)*(48*s24*(s23*s23)+50*s23*(s24*s24)+6*pow(s23,3)+21*pow(s24,3))+s14*s14*(-610*(s23*s23)*(s24*s24)+249*s24*pow(s23,3)+180*pow(s23,4)-439*s23*pow(s24,3)+12*pow(s24,4))+s14*(-486*(s24*s24)*pow(s23,3)+72*s24*pow(s23,4)+24*pow(s23,5)-199*(s23*s23)*pow(s24,3)+232*s23*pow(s24,4)+105*pow(s24,5)))+s13*(2*(-5*s23*s24+15*(s23*s23)+11*(s24*s24))*pow(s14,5)+pow(s14,4)*(23*s24*(s23*s23)+s23*(s24*s24)+168*pow(s23,3)-18*pow(s24,3))+s23*s23*(s24*s24)*(40*s24*(s23*s23)+59*s23*(s24*s24)+6*pow(s23,3)+33*pow(s24,3))+pow(s14,3)*(-442*(s23*s23)*(s24*s24)+104*s24*pow(s23,3)+222*pow(s23,4)-350*s23*pow(s24,3)-79*pow(s24,4))+s14*s14*(-784*(s24*s24)*pow(s23,3)+77*s24*pow(s23,4)+84*pow(s23,5)-713*(s23*s23)*pow(s24,3)-120*s23*pow(s24,4)+75*pow(s24,5))+s14*s23*(-325*(s24*s24)*pow(s23,3)+14*s24*pow(s23,4)+6*pow(s23,5)-265*(s23*s23)*pow(s24,3)+61*s23*pow(s24,4)+108*pow(s24,5))))+s12*(s24*(s14*(-14*s23*s24+6*(s23*s23)-7*(s24*s24))+(19*s23+15*s24)*(s24*s24))*pow(s13,5)+3*pow(s13,6)*pow(s24,3)+pow(s13,4)*(s14*s14*(36*s24*(s23*s23)-41*s23*(s24*s24)+12*pow(s23,3)-51*pow(s24,3))+(67*s23*s24+62*(s23*s23)+16*(s24*s24))*pow(s24,3)+s14*s24*(-89*s24*(s23*s23)-76*s23*(s24*s24)+20*pow(s23,3)+31*pow(s24,3)))+pow(s13,3)*(7*pow(s14,3)*(10*s24*(s23*s23)-5*s23*(s24*s24)+6*pow(s23,3)-11*pow(s24,3))+3*s23*(33*s23*s24+28*(s23*s23)+13*(s24*s24))*pow(s24,3)+s14*s14*(-196*(s23*s23)*(s24*s24)+104*s24*pow(s23,3)+36*pow(s23,4)-293*s23*pow(s24,3)-15*pow(s24,4))+s14*s24*(-147*(s23*s23)*(s24*s24)-243*s24*pow(s23,3)+24*pow(s23,4)+170*s23*pow(s24,3)+81*pow(s24,4)))+s14*(pow(s14,5)*(-2*s24*(s23*s23)+4*s23*(s24*s24)+6*pow(s23,3)+4*pow(s24,3))-s24*s24*pow(s23,3)*(28*s24*(s23*s23)+23*s23*(s24*s24)+12*pow(s23,3)+5*pow(s24,3))+s23*pow(s14,3)*(-167*(s23*s23)*(s24*s24)-25*s24*pow(s23,3)+22*pow(s23,4)-160*s23*pow(s24,3)-108*pow(s24,4))+pow(s14,4)*(-32*(s23*s23)*(s24*s24)-11*s24*pow(s23,3)+22*pow(s23,4)-7*s23*pow(s24,3)-12*pow(s24,4))-s14*s24*(s23*s23)*(187*(s23*s23)*(s24*s24)+106*s24*pow(s23,3)+4*pow(s23,4)+140*s23*pow(s24,3)+11*pow(s24,4))+s23*(s14*s14)*(-223*(s24*s24)*pow(s23,3)-19*s24*pow(s23,4)+6*pow(s23,5)-307*(s23*s23)*pow(s24,3)-214*s23*pow(s24,4)-6*pow(s24,5)))+s13*(s23*(12*s23*s24+30*(s23*s23)+13*(s24*s24))*pow(s14,5)+(10*s23*s24+5*(s23*s23)+7*(s24*s24))*pow(s23,3)*pow(s24,3)+pow(s14,4)*(-70*(s23*s23)*(s24*s24)+62*s24*pow(s23,3)+88*pow(s23,4)-98*s23*pow(s24,3)-56*pow(s24,4))+s14*s24*(s23*s23)*(-132*(s23*s23)*(s24*s24)-135*s24*pow(s23,3)+2*pow(s23,4)+26*s23*pow(s24,3)+71*pow(s24,4))+pow(s14,3)*(-387*(s24*s24)*pow(s23,3)+66*s24*pow(s23,4)+66*pow(s23,5)-465*(s23*s23)*pow(s24,3)-184*s23*pow(s24,4)+49*pow(s24,5))+s23*(s14*s14)*(-426*(s24*s24)*pow(s23,3)+24*s24*pow(s23,4)+12*pow(s23,5)-502*(s23*s23)*pow(s24,3)-136*s23*pow(s24,4)+107*pow(s24,5)))+s13*s13*(pow(s14,4)*(54*s24*(s23*s23)+s23*(s24*s24)+54*pow(s23,3)-40*pow(s24,3))+s23*s23*(57*s23*s24+43*(s23*s23)+30*(s24*s24))*pow(s24,3)+pow(s14,3)*(-145*(s23*s23)*(s24*s24)+157*s24*pow(s23,3)+102*pow(s23,4)-289*s23*pow(s24,3)-75*pow(s24,4))+s14*s23*s24*(-182*(s23*s23)*(s24*s24)-291*s24*pow(s23,3)+12*pow(s23,4)+185*s23*pow(s24,3)+162*pow(s24,4))+s14*s14*(-473*(s24*s24)*pow(s23,3)+96*s24*pow(s23,4)+36*pow(s23,5)-513*(s23*s23)*pow(s24,3)+27*s23*pow(s24,4)+114*pow(s24,5)))))*pow(s12+s23+s24,-1))/2.;
}

// Coefficient of master 4 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yygCF<4>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(-1,{
        qq2yygCF<4,-1>(s12,s13,s14,s23,s24),
        qq2yygCF<4,0>(s12,s13,s14,s23,s24),
        qq2yygCF<4,1>(s12,s13,s14,s23,s24)
    });
}

