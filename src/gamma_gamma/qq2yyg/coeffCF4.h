/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 4: bubble(s23)

// Coefficient order epsilon^-1 of master 4
template<>
double qq2yygCF<4,-1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return -(pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23,-3)*pow(s24,-3)*((10*s24*(s13*s13)+s24*(s23*(5*s23+2*s24)+s14*(17*s23+3*s24)+10*(s14*s14))+s13*(14*s23*s24+5*s24*(4*s14+s24)-s23*s23))*pow(s12,6)+s24*(5*s13+5*s14+4*s23+s24)*pow(s12,7)+s24*pow(s12,8)+pow(s12,5)*(2*(s13*s13)*(8*s23*s24+5*s24*(3*s14+s24)-2*(s23*s23))+s13*(30*s24*(s14*s14)-4*s14*(-11*s23*s24+s23*s23-3*(s24*s24))+s23*(6*s23*s24-4*(s23*s23)+7*(s24*s24)))+10*s24*pow(s13,3)+s24*(2*(14*s23+s24)*(s14*s14)+s14*(16*(s23*s23)-s24*s24)+s24*(s23*s24-s23*s23+s24*s24)+10*pow(s14,3)))+s14*s23*s24*(s23+s24)*(-(s14*s23)+s24*(s23+s24))*pow(s14+s23,3)+(s23+s24)*pow(s13,5)*pow(s24,3)+s24*pow(s13,4)*(s23*s24*(7*s23*s24+2*(s23*s23)+4*(s24*s24))+s14*(4*s24*(s23*s23)+6*s23*(s24*s24)+pow(s23,3)+3*pow(s24,3)))+pow(s13,3)*(2*s23*(s24*s24)*(8*s24*(s23*s23)+4*s23*(s24*s24)+3*pow(s23,3)-pow(s24,3))-s14*s14*(-8*(s23*s23)*(s24*s24)+s24*pow(s23,3)+pow(s23,4)-11*s23*pow(s24,3)-3*pow(s24,4))+s14*s24*(26*(s23*s23)*(s24*s24)+15*s24*pow(s23,3)+2*pow(s23,4)+10*s23*pow(s24,3)-pow(s24,4)))-s13*(s23+s24)*(s14*(s23*s23)*(s24*s24)*(-10*s23*s24-10*(s23*s23)+3*(s24*s24))+s23*(4*s23*s24+s23*s23-2*(s24*s24))*pow(s14,4)+s24*s24*(-3*s23*s24-2*(s23*s23)+s24*s24)*pow(s23,3)+s23*(s14*s14)*(-16*(s23*s23)*(s24*s24)+3*s24*pow(s23,3)+pow(s23,4)-12*s23*pow(s24,3)+pow(s24,4))+pow(s14,3)*(-11*(s23*s23)*(s24*s24)+7*s24*pow(s23,3)+2*pow(s23,4)-5*s23*pow(s24,3)+pow(s24,4)))+pow(s12,4)*((4*s23*s24+10*s24*(2*s14+s24)-6*(s23*s23))*pow(s13,3)+5*s24*pow(s13,4)+s13*s13*(30*s24*(s14*s14)-13*s24*(s23*s23)-6*s14*(-5*s23*s24+2*(s23*s23)-3*(s24*s24))+8*s23*(s24*s24)-12*pow(s23,3)+pow(s24,3))+s24*(s14*s14*(-14*s23*s24+17*(s23*s23)-3*(s24*s24))+6*(s23*s23)*(s24*s24)+(22*s23-2*s24)*pow(s14,3)+5*pow(s14,4)-4*s24*pow(s23,3)-5*pow(s23,4)+6*s23*pow(s24,3)+s14*(-17*s24*(s23*s23)+s23*(s24*s24)-6*pow(s23,3)+4*pow(s24,3))+pow(s24,4))+s13*(-6*(s14*s14)*(-8*s23*s24+s23*s23-s24*s24)-2*(s23*s23)*(s24*s24)+20*s24*pow(s14,3)-16*s24*pow(s23,3)-6*pow(s23,4)+s14*(s24*(s23*s23)-6*s23*(s24*s24)-14*pow(s23,3)-3*pow(s24,3))+6*s23*pow(s24,3)+3*pow(s24,4)))-s12*s12*((2*s23*s24+s23*s23-s24*s24)*pow(s13,5)+pow(s13,4)*(12*s24*(s23*s23)+s14*(7*s23*s24+4*(s23*s23)-3*(s24*s24))+2*s23*(s24*s24)+4*pow(s23,3)-3*pow(s24,3))+pow(s13,3)*(s14*s14*(8*s23*s24+6*(s23*s23)-2*(s24*s24))+22*s24*pow(s23,3)+6*pow(s23,4)+s14*(47*s24*(s23*s23)+18*s23*(s24*s24)+18*pow(s23,3)-5*pow(s24,3))-21*s23*pow(s24,3)-4*pow(s24,4))-(s14+s23)*s24*(-(s23*(-4*s23*s24+s23*s23-3*(s24*s24))*((s23+s24)*(s23+s24)))-(11*s23*s24+3*(s23*s23)+s24*s24)*pow(s14,3)+(s23-s24)*pow(s14,4)+s14*s14*(-23*s24*(s23*s23)+2*s23*(s24*s24)-16*pow(s23,3)+4*pow(s24,3))+s14*(19*(s23*s23)*(s24*s24)-5*s24*pow(s23,3)-10*pow(s23,4)+17*s23*pow(s24,3)+3*pow(s24,4)))+s13*((-2*s23*s24+s23*s23+3*(s24*s24))*pow(s14,4)+pow(s14,3)*(27*s24*(s23*s23)+38*s23*(s24*s24)+10*pow(s23,3)+3*pow(s24,3))+s14*s14*(58*(s23*s23)*(s24*s24)+75*s24*pow(s23,3)+19*pow(s23,4)-16*s23*pow(s24,3)-7*pow(s24,4))+s14*(-(s24*s24*pow(s23,3))+47*s24*pow(s23,4)+10*pow(s23,5)-67*(s23*s23)*pow(s24,3)-35*s23*pow(s24,4)-5*pow(s24,5))+s23*(-19*(s24*s24)*pow(s23,3)+6*s24*pow(s23,4)+pow(s23,5)-43*(s23*s23)*pow(s24,3)-21*s23*pow(s24,4)-4*pow(s24,5)))+s13*s13*(6*s23*(s14*s14)*(10*s23*s24+4*(s23*s23)+7*(s24*s24))+2*(s23*s24+2*(s23*s23)+s24*s24)*pow(s14,3)-20*(s24*s24)*pow(s23,3)+17*s24*pow(s23,4)+4*pow(s23,5)-48*(s23*s23)*pow(s24,3)+s14*(21*(s23*s23)*(s24*s24)+75*s24*pow(s23,3)+24*pow(s23,4)-37*s23*pow(s24,3)-7*pow(s24,4))-16*s23*pow(s24,4)-3*pow(s24,5)))+s13*s13*(3*(s23*s23)*(s24*s24)*(5*s24*(s23*s23)+2*s23*(s24*s24)+2*pow(s23,3)-pow(s24,3))+s14*s23*s24*(38*(s23*s23)*(s24*s24)+20*s24*pow(s23,3)+pow(s23,4)+16*s23*pow(s24,3)-3*pow(s24,4))+pow(s14,3)*(3*(s23*s23)*(s24*s24)-6*s24*pow(s23,3)-2*pow(s23,4)+8*s23*pow(s24,3)+pow(s24,4))+s14*s14*(19*(s24*s24)*pow(s23,3)-4*s24*pow(s23,4)-2*pow(s23,5)+33*(s23*s23)*pow(s24,3)+9*s23*pow(s24,4)-2*pow(s24,5)))+pow(s12,3)*((-4*s23*s24+5*s24*(s14+s24)-4*(s23*s23))*pow(s13,4)+s24*pow(s13,5)+pow(s13,3)*(10*s24*(s14*s14)-25*s24*(s23*s23)-4*s14*(s23*s24+3*(s23*s23)-3*(s24*s24))+2*s23*(s24*s24)-12*pow(s23,3)+3*pow(s24,3))+s13*s13*(-(s23*s23*(s24*s24))+6*(s14*s14)*(2*s23*s24-2*(s23*s23)+s24*s24)-6*s14*s23*(9*s23*s24+5*(s23*s23)+3*(s24*s24))+10*s24*pow(s14,3)-35*s24*pow(s23,3)-12*pow(s23,4)+17*s23*pow(s24,3)+4*pow(s24,4))+s24*((-22*s23*s24+5*(s23*s23)-3*(s24*s24))*pow(s14,3)+(8*s23-3*s24)*pow(s14,4)+pow(s14,5)-2*(s14*s14)*(20*s24*(s23*s23)+9*pow(s23,3)-3*pow(s24,3))+s23*(12*(s23*s23)*(s24*s24)-s24*pow(s23,3)-4*pow(s23,4)+12*s23*pow(s24,3)+3*pow(s24,4))+s14*(17*(s23*s23)*(s24*s24)-20*s24*pow(s23,3)-19*pow(s23,4)+19*s23*pow(s24,3)+3*pow(s24,4)))+s13*(-4*(-5*s23*s24+s23*s23+s24*s24)*pow(s14,3)+5*s24*pow(s14,4)+4*(s24*s24)*pow(s23,3)-19*s24*pow(s23,4)-4*pow(s23,5)+27*(s23*s23)*pow(s24,3)-6*(s14*s14)*(4*s24*(s23*s23)+7*s23*(s24*s24)+3*pow(s23,3)+pow(s24,3))+15*s23*pow(s24,4)+s14*(-37*(s23*s23)*(s24*s24)-60*s24*pow(s23,3)-18*pow(s23,4)+13*s23*pow(s24,3)+8*pow(s24,4))+3*pow(s24,5)))+s12*(s24*(-(s23*s24)-s23*s23+s24*s24)*pow(s13,5)+pow(s13,4)*(-3*s24*pow(s23,3)-s14*(8*s24*(s23*s23)+6*s23*(s24*s24)+2*pow(s23,3)-3*pow(s24,3))+10*s23*pow(s24,3)+3*pow(s24,4))+pow(s13,3)*(-(s14*s14*(19*s24*(s23*s23)+14*s23*(s24*s24)+6*pow(s23,3)-3*pow(s24,3)))+s24*(34*(s23*s23)*(s24*s24)+14*s24*pow(s23,3)-3*pow(s23,4)+11*s23*pow(s24,3)+pow(s24,4))+s14*(3*(s23*s23)*(s24*s24)-20*s24*pow(s23,3)-6*pow(s23,4)+31*s23*pow(s24,3)+6*pow(s24,4)))+s13*s13*(pow(s14,3)*(-19*s24*(s23*s23)-16*s23*(s24*s24)-6*pow(s23,3)+pow(s24,3))-s23*s24*(-49*(s23*s23)*(s24*s24)-25*s24*pow(s23,3)+pow(s23,4)-17*s23*pow(s24,3)+pow(s24,4))+s14*s14*(-11*(s23*s23)*(s24*s24)-45*s24*pow(s23,3)-14*pow(s23,4)+31*s23*pow(s24,3)+4*pow(s24,4))+s14*(34*(s24*s24)*pow(s23,3)-20*s24*pow(s23,4)-6*pow(s23,5)+81*(s23*s23)*pow(s24,3)+26*s23*pow(s24,4)+pow(s24,5)))+s13*(-(s23*(8*s23*s24+2*(s23*s23)+9*(s24*s24))*pow(s14,4))+s24*s24*(27*s23*s24+13*(s23*s23)+12*(s24*s24))*pow(s23,3)+pow(s14,3)*(-25*(s23*s23)*(s24*s24)-36*s24*pow(s23,3)-8*pow(s23,4)+11*s23*pow(s24,3)+2*pow(s24,4))+s14*s14*(3*(s24*s24)*pow(s23,3)-37*s24*pow(s23,4)-8*pow(s23,5)+59*(s23*s23)*pow(s24,3)+24*s23*pow(s24,4)+pow(s24,5))+s14*s23*(30*(s24*s24)*pow(s23,3)-10*s24*pow(s23,4)-2*pow(s23,5)+71*(s23*s23)*pow(s24,3)+32*s23*pow(s24,4)+3*pow(s24,5)))-s24*((s14+s23)*(s14+s23))*(s23*(s23+2*s24)*pow(s14,3)+s14*s14*(7*s24*(s23*s23)-s23*(s24*s24)+6*pow(s23,3)-pow(s24,3))+s14*(-10*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)+2*pow(s23,4)-7*s23*pow(s24,3)-pow(s24,4))-s23*s24*pow(s23+s24,3))))*pow(s12+s23+s24,-1));
}

// Coefficient order epsilon^0 of master 4
template<>
double qq2yygCF<4,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23,-3)*pow(s24,-3)*((s13*(-5*s14*(s23-3*s24)+6*(s24*s24))+s14*(-5*s14*(s23-3*s24)+11*s23*s24-5*(s23*s23)+8*(s24*s24)))*pow(s12,7)-s14*(s23-3*s24)*pow(s12,8)+s24*s24*(s23*s24*(4*s23+s24)+s14*(9*s23*s24+2*(s23*s23)+s24*s24))*pow(s13,5)+s24*pow(s13,4)*(3*(4*s23+3*s24)*(s23*s23)*(s24*s24)+4*s14*s24*(14*s24*(s23*s23)+5*s23*(s24*s24)+5*pow(s23,3)-pow(s24,3))+s14*s14*(16*s24*(s23*s23)+38*s23*(s24*s24)+4*pow(s23,3)+11*pow(s24,3)))+pow(s12,6)*(s13*s13*(-10*s14*(s23-3*s24)+24*(s24*s24))+s13*(-20*(s23-3*s24)*(s14*s14)+(24*s23+11*s24)*(s24*s24)+s14*(35*s23*s24-26*(s23*s23)+68*(s24*s24)))+s14*(-10*(s23-3*s24)*(s14*s14)+10*s24*(s23*s23)+31*s23*(s24*s24)+s14*(47*s23*s24-23*(s23*s23)+28*(s24*s24))-10*pow(s23,3)+13*pow(s24,3)))-pow(s13,6)*pow(s24,4)+s23*(s14+s23)*(s14*s14)*(s23*s23*(s24*s24)*(14*s23*s24+8*(s23*s23)+13*(s24*s24))-pow(s14,3)*(3*s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)-2*pow(s24,3))+s14*s23*s24*(9*s24*(s23*s23)+26*s23*(s24*s24)-4*pow(s23,3)+24*pow(s24,3))+s14*s14*(s23*s23*(s24*s24)-6*s24*pow(s23,3)-pow(s23,4)+14*s23*pow(s24,3)+10*pow(s24,4)))+pow(s13,3)*(s14*s23*(s24*s24)*(111*s24*(s23*s23)+46*s23*(s24*s24)+50*pow(s23,3)-22*pow(s24,3))+(12*s23+11*s24)*pow(s23,3)*pow(s24,3)+s24*(s14*s14)*(150*(s23*s23)*(s24*s24)+79*s24*pow(s23,3)+8*pow(s23,4)+45*s23*pow(s24,3)-16*pow(s24,4))+pow(s14,3)*(22*(s23*s23)*(s24*s24)-5*s24*pow(s23,3)-6*pow(s23,4)+59*s23*pow(s24,3)+17*pow(s24,4)))+pow(s12,5)*(s13*s13*(-30*(s23-3*s24)*(s14*s14)-6*s14*(-5*s23*s24+9*(s23*s23)-28*(s24*s24))+(78*s23+43*s24)*(s24*s24))+(-10*s14*(s23-3*s24)+36*(s24*s24))*pow(s13,3)+s13*(s24*s24*(36*s23*s24+36*(s23*s23)+5*(s24*s24))+s14*s14*(108*s23*s24-96*(s23*s23)+164*(s24*s24))-30*(s23-3*s24)*pow(s14,3)+s14*(-12*s24*(s23*s23)+217*s23*(s24*s24)-54*pow(s23,3)+111*pow(s24,3)))+s14*(s14*s14*(78*s23*s24-42*(s23*s23)+32*(s24*s24))-10*(s23-3*s24)*pow(s14,3)+s14*(31*s24*(s23*s23)+84*s23*(s24*s24)-42*pow(s23,3)+49*pow(s24,3))+2*(24*(s23*s23)*(s24*s24)-5*s24*pow(s23,3)-5*pow(s23,4)+31*s23*pow(s24,3)+7*pow(s24,4))))+s13*s13*(s14*(s23*s23)*(s24*s24)*(92*s24*(s23*s23)+35*s23*(s24*s24)+48*pow(s23,3)-27*pow(s24,3))+4*(s23+s24)*pow(s23,4)*pow(s24,3)+s23*s24*(s14*s14)*(206*(s23*s23)*(s24*s24)+124*s24*pow(s23,3)+4*pow(s23,4)+85*s23*pow(s24,3)-38*pow(s24,4))+pow(s14,4)*(2*(s23*s23)*(s24*s24)-25*s24*pow(s23,3)-13*pow(s23,4)+42*s23*pow(s24,3)+10*pow(s24,4))+pow(s14,3)*(81*(s24*s24)*pow(s23,3)-18*s24*pow(s23,4)-12*pow(s23,5)+163*(s23*s23)*pow(s24,3)+44*s23*pow(s24,4)-20*pow(s24,5)))+s13*s14*(s14*(s23*s23)*(s24*s24)*(110*s24*(s23*s23)+53*s23*(s24*s24)+69*pow(s23,3)-25*pow(s24,3))+s24*s24*pow(s23,3)*(28*s24*(s23*s23)+10*s23*(s24*s24)+16*pow(s23,3)-9*pow(s24,3))+pow(s14,4)*(-8*(s23*s23)*(s24*s24)-19*s24*pow(s23,3)-8*pow(s23,4)+14*s23*pow(s24,3)+2*pow(s24,4))+s23*(s14*s14)*(78*(s24*s24)*pow(s23,3)-17*s24*pow(s23,4)-6*pow(s23,5)+147*(s23*s23)*pow(s24,3)+82*s23*pow(s24,4)-16*pow(s24,5))+pow(s14,3)*(21*(s24*s24)*pow(s23,3)-35*s24*pow(s23,4)-14*pow(s23,5)+81*(s23*s23)*pow(s24,3)+28*s23*pow(s24,4)-8*pow(s24,5)))+pow(s12,4)*((-20*(s23-3*s24)*(s14*s14)-2*s14*(5*s23*s24+28*(s23*s23)-88*(s24*s24))+2*(45*s23+31*s24)*(s24*s24))*pow(s13,3)+(-5*s14*(s23-3*s24)+24*(s24*s24))*pow(s13,4)+s13*s13*(-6*(s14*s14)*(-7*s23*s24+25*(s23*s23)-48*(s24*s24))+s24*s24*(114*s23*s24+90*(s23*s23)+19*(s24*s24))-30*(s23-3*s24)*pow(s14,3)+s14*(-100*s24*(s23*s23)+419*s23*(s24*s24)-102*pow(s23,3)+276*pow(s24,3)))+s13*(s23*(s24*s24)*(40*s23*s24+24*(s23*s23)+13*(s24*s24))-6*(-19*s23*s24+22*(s23*s23)-24*(s24*s24))*pow(s14,3)-20*(s23-3*s24)*pow(s14,4)+s14*s14*(-85*s24*(s23*s23)+391*s23*(s24*s24)-180*pow(s23,3)+276*pow(s24,3))+s14*(288*(s23*s23)*(s24*s24)-96*s24*pow(s23,3)-56*pow(s23,4)+365*s23*pow(s24,3)+63*pow(s24,4)))+s14*((62*s23*s24-38*(s23*s23)+8*(s24*s24))*pow(s14,3)-5*(s23-3*s24)*pow(s14,4)+46*(s24*s24)*pow(s23,3)-25*s24*pow(s23,4)-5*pow(s23,5)+126*(s23*s23)*pow(s24,3)+s14*s14*(30*s24*(s23*s23)+60*s23*(s24*s24)-69*pow(s23,3)+71*pow(s24,3))+65*s23*pow(s24,4)+s14*(99*(s23*s23)*(s24*s24)-47*s24*pow(s23,3)-38*pow(s23,4)+201*s23*pow(s24,3)+54*pow(s24,4))+6*pow(s24,5)))+pow(s12,3)*((-5*(s23-3*s24)*(s14*s14)+2*(21*s23+19*s24)*(s24*s24)+s14*(-25*s23*s24-29*(s23*s23)+80*(s24*s24)))*pow(s13,4)+(-(s14*(s23-3*s24))+6*(s24*s24))*pow(s13,5)+pow(s13,3)*(-4*(s14*s14)*(13*s23*s24+26*(s23*s23)-49*(s24*s24))+2*(s24*s24)*(63*s23*s24+36*(s23*s23)+13*(s24*s24))-10*(s23-3*s24)*pow(s14,3)+s14*(-128*s24*(s23*s23)+319*s23*(s24*s24)-82*pow(s23,3)+292*pow(s24,3)))+s13*s13*(2*s23*(s24*s24)*(53*s23*s24+21*(s23*s23)+20*(s24*s24))-6*(s23*s24+23*(s23*s23)-28*(s24*s24))*pow(s14,3)-10*(s23-3*s24)*pow(s14,4)-3*(s14*s14)*(99*s24*(s23*s23)-168*s23*(s24*s24)+82*pow(s23,3)-164*pow(s24,3))+s14*(447*(s23*s23)*(s24*s24)-174*s24*pow(s23,3)-82*pow(s23,4)+678*s23*pow(s24,3)+106*pow(s24,4)))+s13*(s23*s23*(s24*s24)*(14*s23*s24+6*(s23*s23)+9*(s24*s24))+(44*s23*s24-80*(s23*s23)+38*(s24*s24))*pow(s14,4)-5*(s23-3*s24)*pow(s14,5)+pow(s14,3)*(-165*s24*(s23*s23)+213*s23*(s24*s24)-219*pow(s23,3)+287*pow(s24,3))+s14*s14*(418*(s23*s23)*(s24*s24)-298*s24*pow(s23,3)-164*pow(s23,4)+764*s23*pow(s24,3)+151*pow(s24,4))+s14*(266*(s24*s24)*pow(s23,3)-91*s24*pow(s23,4)-29*pow(s23,5)+505*(s23*s23)*pow(s24,3)+185*s23*pow(s24,4)+14*pow(s24,5)))+s14*((23*s23*s24-17*(s23*s23)-8*(s24*s24))*pow(s14,4)-(s23-3*s24)*pow(s14,5)+pow(s14,3)*(4*s24*(s23*s23)-14*s23*(s24*s24)-55*pow(s23,3)+49*pow(s24,3))+s14*s14*(38*(s23*s23)*(s24*s24)-83*s24*pow(s23,3)-55*pow(s23,4)+246*s23*pow(s24,3)+78*pow(s24,4))+s14*(86*(s24*s24)*pow(s23,3)-82*s24*pow(s23,4)-17*pow(s23,5)+345*(s23*s23)*pow(s24,3)+196*s23*pow(s24,4)+18*pow(s24,5))+s23*(40*(s24*s24)*pow(s23,3)-17*s24*pow(s23,4)-pow(s23,5)+140*(s23*s23)*pow(s24,3)+110*s23*pow(s24,4)+22*pow(s24,5))))+s12*(s24*((6*s23+s24)*(s24*s24)+s14*(8*s23*s24-4*(s23*s23)+21*(s24*s24)))*pow(s13,5)-pow(s13,6)*pow(s24,3)+pow(s13,4)*(2*s23*(17*s23+8*s24)*pow(s24,3)+s14*s24*(55*s24*(s23*s23)+152*s23*(s24*s24)-12*pow(s23,3)+24*pow(s24,3))+s14*s14*(-34*s24*(s23*s23)+28*s23*(s24*s24)-12*pow(s23,3)+87*pow(s24,3)))+pow(s13,3)*((44*s23+27*s24)*(s23*s23)*pow(s24,3)+pow(s14,3)*(-81*s24*(s23*s23)+30*s23*(s24*s24)-39*pow(s23,3)+127*pow(s24,3))+s14*s24*(371*(s23*s23)*(s24*s24)+167*s24*pow(s23,3)-12*pow(s23,4)+95*s23*pow(s24,3)-6*pow(s24,4))+s14*s14*(170*(s23*s23)*(s24*s24)-88*s24*pow(s23,3)-36*pow(s23,4)+420*s23*pow(s24,3)+65*pow(s24,4)))+s13*s13*(5*(3*s23+2*s24)*pow(s23,3)*pow(s24,3)+pow(s14,4)*(-79*s24*(s23*s23)+2*s23*(s24*s24)-45*pow(s23,3)+84*pow(s24,3))+s14*s23*s24*(390*(s23*s23)*(s24*s24)+213*s24*pow(s23,3)-4*pow(s23,4)+120*s23*pow(s24,3)-22*pow(s24,4))+pow(s14,3)*(131*(s23*s23)*(s24*s24)-193*s24*pow(s23,3)-93*pow(s23,4)+436*s23*pow(s24,3)+74*pow(s24,4))+s14*s14*(362*(s24*s24)*pow(s23,3)-90*s24*pow(s23,4)-36*pow(s23,5)+723*(s23*s23)*pow(s24,3)+196*s23*pow(s24,4)-14*pow(s24,5)))+s13*(-(pow(s14,5)*(31*s24*(s23*s23)+14*s23*(s24*s24)+21*pow(s23,3)-24*pow(s24,3)))+s14*(s23*s23)*(s24*s24)*(174*s24*(s23*s23)+75*s23*(s24*s24)+101*pow(s23,3)-2*pow(s24,3))-2*(s23+s24)*pow(s23,4)*pow(s24,3)-2*pow(s14,4)*(2*(s23*s23)*(s24*s24)+71*s24*pow(s23,3)+34*pow(s23,4)-98*s23*pow(s24,3)-22*pow(s24,4))+pow(s14,3)*(180*(s24*s24)*pow(s23,3)-153*s24*pow(s23,4)-57*pow(s23,5)+521*(s23*s23)*pow(s24,3)+203*s23*pow(s24,4)-2*pow(s24,5))+s23*(s14*s14)*(270*(s24*s24)*pow(s23,3)-44*s24*pow(s23,4)-12*pow(s23,5)+519*(s23*s23)*pow(s24,3)+248*s23*pow(s24,4)+6*pow(s24,5)))+s14*(-(pow(s14,5)*(3*s24*(s23*s23)+6*s23*(s24*s24)+3*pow(s23,3)-2*pow(s24,3)))+s24*s24*pow(s23,3)*(22*s24*(s23*s23)+23*s23*(s24*s24)+8*pow(s23,3)+9*pow(s24,3))+pow(s14,4)*(-20*(s23*s23)*(s24*s24)-25*s24*pow(s23,3)-11*pow(s23,4)+34*s23*pow(s24,3)+12*pow(s24,4))+s14*s24*(s23*s23)*(123*(s23*s23)*(s24*s24)+44*s24*pow(s23,3)-8*pow(s23,4)+115*s23*pow(s24,3)+25*pow(s24,4))+pow(s14,3)*(s24*s24*pow(s23,3)-50*s24*pow(s23,4)-11*pow(s23,5)+136*(s23*s23)*pow(s24,3)+86*s23*pow(s24,4)+6*pow(s24,5))+s23*(s14*s14)*(49*(s24*s24)*pow(s23,3)-37*s24*pow(s23,4)-3*pow(s23,5)+205*(s23*s23)*pow(s24,3)+167*s23*pow(s24,4)+22*pow(s24,5))))+s12*s12*((-3*s14*(3*s23*s24+2*(s23*s23)-4*(s24*s24))+(6*s23+7*s24)*(s24*s24))*pow(s13,5)+pow(s13,4)*(2*(s24*s24)*(27*s23*s24+9*(s23*s23)+7*(s24*s24))+s14*s14*(-33*s23*s24-27*(s23*s23)+44*(s24*s24))+s14*(-54*s24*(s23*s23)+94*s23*(s24*s24)-24*pow(s23,3)+135*pow(s24,3)))+pow(s13,3)*(6*s23*(s24*s24)*(16*s23*s24+3*(s23*s23)+7*(s24*s24))+(-42*s23*s24-48*(s23*s23)+56*(s24*s24))*pow(s14,3)+s14*s14*(-215*s24*(s23*s23)+225*s23*(s24*s24)-120*pow(s23,3)+352*pow(s24,3))+s14*(260*(s23*s23)*(s24*s24)-100*s24*pow(s23,3)-36*pow(s23,4)+518*s23*pow(s24,3)+80*pow(s24,4)))+s13*s13*(s23*s23*(s24*s24)*(46*s23*s24+6*(s23*s23)+27*(s24*s24))-6*(3*s23*s24+7*(s23*s23)-4*(s24*s24))*pow(s14,4)+pow(s14,3)*(-276*s24*(s23*s23)+165*s23*(s24*s24)-189*pow(s23,3)+343*pow(s24,3))+s14*s14*(455*(s23*s23)*(s24*s24)-343*s24*pow(s23,3)-162*pow(s23,4)+945*s23*pow(s24,3)+151*pow(s24,4))+s14*(361*(s24*s24)*pow(s23,3)-78*s24*pow(s23,4)-24*pow(s23,5)+694*(s23*s23)*pow(s24,3)+195*s23*pow(s24,4)+6*pow(s24,5)))+s13*((3*s23*s24-18*(s23*s23)-4*(s24*s24))*pow(s14,5)-(3*s23+s24)*pow(s23,3)*pow(s24,3)+pow(s14,4)*(-123*s24*(s23*s23)+s23*(s24*s24)-114*pow(s23,3)+135*pow(s24,3))+pow(s14,3)*(170*(s23*s23)*(s24*s24)-325*s24*pow(s23,3)-168*pow(s23,4)+617*s23*pow(s24,3)+135*pow(s24,4))+s14*s14*(392*(s24*s24)*pow(s23,3)-209*s24*pow(s23,4)-72*pow(s23,5)+894*(s23*s23)*pow(s24,3)+347*s23*pow(s24,4)+20*pow(s24,5))+s14*s23*(212*(s24*s24)*pow(s23,3)-27*s24*pow(s23,4)-6*pow(s23,5)+397*(s23*s23)*pow(s24,3)+184*s23*pow(s24,4)+22*pow(s24,5)))+s14*((3*s23*s24-3*(s23*s23)-4*(s24*s24))*pow(s14,5)-pow(s14,4)*(8*s24*(s23*s23)+27*s23*(s24*s24)+21*pow(s23,3)-16*pow(s24,3))+s24*(s23*s23)*(85*(s23*s23)*(s24*s24)+27*s24*pow(s23,3)-4*pow(s23,4)+82*s23*pow(s24,3)+25*pow(s24,4))+pow(s14,3)*(-31*(s23*s23)*(s24*s24)-68*s24*pow(s23,3)-37*pow(s23,4)+139*s23*pow(s24,3)+50*pow(s24,4))+s14*s14*(42*(s24*s24)*pow(s23,3)-98*s24*pow(s23,4)-21*pow(s23,5)+339*(s23*s23)*pow(s24,3)+207*s23*pow(s24,4)+18*pow(s24,5))+s14*s23*(79*(s24*s24)*pow(s23,3)-44*s24*pow(s23,4)-3*pow(s23,5)+302*(s23*s23)*pow(s24,3)+243*s23*pow(s24,4)+44*pow(s24,5)))))*pow(s12+s23+s24,-1))/2.;
}

// Coefficient order epsilon^1 of master 4
template<>
double qq2yygCF<4,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23,-3)*pow(s24,-3)*((10*(s23-s24)*(s14*s14)+s14*(-9*s23*s24+10*(s23*s23)-22*(s24*s24))+2*s13*(5*s14*(s23-s24)-9*(s24*s24))-6*(2*s23+s24)*(s24*s24))*pow(s12,7)+2*(s14*(s23-s24)-s24*s24)*pow(s12,8)-s24*s24*(s14*(47*s23*s24+10*(s23*s23)-2*(s24*s24))+s24*(4*s23*s24+14*(s23*s23)+5*(s24*s24)))*pow(s13,5)+pow(s12,6)*(s14*s14*(-40*s23*s24+46*(s23*s23)-63*(s24*s24))+s13*s13*(20*s14*(s23-s24)-54*(s24*s24))-6*(s24*s24)*(5*s23*s24+5*(s23*s23)+s24*s24)+2*s13*(20*(s23-s24)*(s14*s14)+s14*(-15*s23*s24+23*(s23*s23)-69*(s24*s24))-(45*s23+22*s24)*(s24*s24))+20*(s23-s24)*pow(s14,3)+2*s14*(-9*s24*(s23*s23)-64*s23*(s24*s24)+10*pow(s23,3)-25*pow(s24,3)))+(-2*s23+3*s24)*pow(s13,6)*pow(s24,3)-s24*pow(s13,4)*(15*s23*(s24*s24)*(2*s23*s24+2*(s23*s23)+s24*s24)+s14*s24*(165*s24*(s23*s23)+34*s23*(s24*s24)+50*pow(s23,3)+11*pow(s24,3))+s14*s14*(26*s24*(s23*s23)+157*s23*(s24*s24)-2*pow(s23,3)+24*pow(s24,3)))+pow(s12,5)*(s13*s13*(60*(s23-s24)*(s14*s14)+s14*(-30*s23*s24+84*(s23*s23)-308*(s24*s24))-(224*s23+115*s24)*(s24*s24))+4*(5*s14*(s23-s24)-19*(s24*s24))*pow(s13,3)+(-70*s23*s24+84*(s23*s23)-72*(s24*s24))*pow(s14,3)+20*(s23-s24)*pow(s14,4)+s13*(4*(s14*s14)*(-25*s23*s24+42*(s23*s23)-76*(s24*s24))-s24*s24*(181*s23*s24+182*(s23*s23)+39*(s24*s24))+60*(s23-s24)*pow(s14,3)+s14*(-22*s24*(s23*s23)-645*s23*(s24*s24)+84*pow(s23,3)-283*pow(s24,3)))+s14*s14*(-71*s24*(s23*s23)-339*s23*(s24*s24)+84*pow(s23,3)-139*pow(s24,3))-2*(s24*s24)*(30*s24*(s23*s23)+12*s23*(s24*s24)+20*pow(s23,3)+pow(s24,3))+s14*(-307*(s23*s23)*(s24*s24)-22*s24*pow(s23,3)+20*pow(s23,4)-247*s23*pow(s24,3)-42*pow(s24,4)))+pow(s13,3)*(-(s23*s23*(36*s23*s24+26*(s23*s23)+15*(s24*s24))*pow(s24,3))-2*s14*s23*(s24*s24)*(105*s24*(s23*s23)+36*s23*(s24*s24)+46*pow(s23,3)+3*pow(s24,3))+pow(s14,3)*(-17*(s23*s23)*(s24*s24)+16*s24*pow(s23,3)+6*pow(s23,4)-211*s23*pow(s24,3)-54*pow(s24,4))-s24*(s14*s14)*(389*(s23*s23)*(s24*s24)+121*s24*pow(s23,3)-6*pow(s23,4)+89*s23*pow(s24,3)+3*pow(s24,4)))-s23*(s14+s23)*(s14*s14)*(s23*s23*(s24*s24)*(24*s23*s24+14*(s23*s23)+19*(s24*s24))+pow(s14,3)*(5*s23*(s24*s24)-2*pow(s23,3)+2*pow(s24,3))+s14*s23*s24*(35*s24*(s23*s23)+49*s23*(s24*s24)+2*pow(s23,3)+34*pow(s24,3))+s14*s14*(28*(s23*s23)*(s24*s24)+3*s24*pow(s23,3)-2*pow(s23,4)+28*s23*pow(s24,3)+14*pow(s24,4)))+pow(s12,3)*(-6*(2*s23+s24)*(s23*s23)*(s24*s24)*((s23+s24)*(s23+s24))+(10*(s23-s24)*(s14*s14)+s14*(15*s23*s24+34*(s23*s23)-150*(s24*s24))-2*(69*s23+40*s24)*(s24*s24))*pow(s13,4)+2*(s14*(s23-s24)-9*(s24*s24))*pow(s13,5)+(-25*s23*s24+34*(s23*s23)+6*(s24*s24))*pow(s14,5)+2*(s23-s24)*pow(s14,6)+pow(s13,3)*(4*(s14*s14)*(5*s23*s24+34*(s23*s23)-84*(s24*s24))-2*(s24*s24)*(190*s23*s24+156*(s23*s23)+51*(s24*s24))+20*(s23-s24)*pow(s14,3)+s14*(96*s24*(s23*s23)-923*s23*(s24*s24)+92*pow(s23,3)-566*pow(s24,3)))+pow(s14,4)*(-75*s24*(s23*s23)-173*s23*(s24*s24)+110*pow(s23,3)-113*pow(s24,3))+s13*s13*(6*(-5*s23*s24+34*(s23*s23)-48*(s24*s24))*pow(s14,3)+20*(s23-s24)*pow(s14,4)+3*(s14*s14)*(53*s24*(s23*s23)-524*s23*(s24*s24)+104*pow(s23,3)-332*pow(s24,3))-s24*s24*(488*s24*(s23*s23)+247*s23*(s24*s24)+282*pow(s23,3)+32*pow(s24,3))+s14*(-1708*(s23*s23)*(s24*s24)+118*s24*pow(s23,3)+92*pow(s23,4)-1739*s23*pow(s24,3)-307*pow(s24,4)))+pow(s14,3)*(-731*(s23*s23)*(s24*s24)-99*s24*pow(s23,3)+110*pow(s23,4)-678*s23*pow(s24,3)-126*pow(s24,4))+s13*(2*(-30*s23*s24+68*(s23*s23)-39*(s24*s24))*pow(s14,4)+10*(s23-s24)*pow(s14,5)+pow(s14,3)*(-12*s24*(s23*s23)-960*s23*(s24*s24)+330*pow(s23,3)-623*pow(s24,3))-s23*(s24*s24)*(212*s24*(s23*s23)+153*s23*(s24*s24)+102*pow(s23,3)+33*pow(s24,3))+s14*s14*(-2062*(s23*s23)*(s24*s24)+70*s24*pow(s23,3)+220*pow(s23,4)-2007*s23*pow(s24,3)-333*pow(s24,4))+s14*(-1214*(s24*s24)*pow(s23,3)+30*s24*pow(s23,4)+34*pow(s23,5)-1547*(s23*s23)*pow(s24,3)-518*s23*pow(s24,4)-47*pow(s24,5)))+s14*s23*(-275*(s24*s24)*pow(s23,3)-9*s24*pow(s23,4)+2*pow(s23,5)-449*(s23*s23)*pow(s24,3)-238*s23*pow(s24,4)-36*pow(s24,5))+s14*s14*(-823*(s24*s24)*pow(s23,3)-55*s24*pow(s23,4)+34*pow(s23,5)-1015*(s23*s23)*pow(s24,3)-356*s23*pow(s24,4)-24*pow(s24,5)))+pow(s12,4)*(2*(20*(s23-s24)*(s14*s14)+2*s14*(19*(s23*s23)-79*(s24*s24))-(127*s23+70*s24)*(s24*s24))*pow(s13,3)+2*(5*s14*(s23-s24)-27*(s24*s24))*pow(s13,4)+4*(-15*s23*s24+19*(s23*s23)-7*(s24*s24))*pow(s14,4)+10*(s23-s24)*pow(s14,5)+s13*s13*(6*(s14*s14)*(-10*s23*s24+38*(s23*s23)-83*(s24*s24))-s24*s24*(388*s23*s24+362*(s23*s23)+93*(s24*s24))+60*(s23-s24)*pow(s14,3)+s14*(48*s24*(s23*s23)-1153*s23*(s24*s24)+132*pow(s23,3)-588*pow(s24,3)))+pow(s14,3)*(-107*s24*(s23*s23)-369*s23*(s24*s24)+138*pow(s23,3)-179*pow(s24,3))-6*s23*(s24*s24)*(10*s24*(s23*s23)+6*s23*(s24*s24)+5*pow(s23,3)+pow(s24,3))+s13*(12*(-10*s23*s24+19*(s23*s23)-22*(s24*s24))*pow(s14,3)+40*(s23-s24)*pow(s14,4)+3*(s14*s14)*(-15*s24*(s23*s23)-419*s23*(s24*s24)+92*pow(s23,3)-208*pow(s24,3))-s24*s24*(286*s24*(s23*s23)+129*s23*(s24*s24)+188*pow(s23,3)+13*pow(s24,3))+s14*(-1227*(s23*s23)*(s24*s24)+16*s24*pow(s23,3)+76*pow(s23,4)-1078*s23*pow(s24,3)-187*pow(s24,4)))+s14*s14*(-738*(s23*s23)*(s24*s24)-77*s24*pow(s23,3)+76*pow(s23,4)-616*s23*pow(s24,3)-106*pow(s24,4))+s14*(-389*(s24*s24)*pow(s23,3)-18*s24*pow(s23,4)+10*pow(s23,5)-476*(s23*s23)*pow(s24,3)-166*s23*pow(s24,4)-12*pow(s24,5)))+s13*s13*(-(s14*(s23*s23)*(s24*s24)*(113*s24*(s23*s23)+31*s23*(s24*s24)+74*pow(s23,3)-16*pow(s24,3)))-(13*s23*s24+8*(s23*s23)+5*(s24*s24))*pow(s23,3)*pow(s24,3)+pow(s14,4)*(-(s23*s23*(s24*s24))+26*s24*pow(s23,3)+14*pow(s23,4)-131*s23*pow(s24,3)-43*pow(s24,4))+s23*s24*(s14*s14)*(-345*(s23*s23)*(s24*s24)-180*s24*pow(s23,3)+6*pow(s23,4)-104*s23*pow(s24,3)+23*pow(s24,4))+pow(s14,3)*(-115*(s24*s24)*pow(s23,3)+28*s24*pow(s23,4)+12*pow(s23,5)-370*(s23*s23)*pow(s24,3)-106*s23*pow(s24,4)+7*pow(s24,5)))+s13*s14*(s24*s24*pow(s23,3)*(-21*s24*(s23*s23)+3*s23*(s24*s24)-22*pow(s23,3)+11*pow(s24,3))+pow(s14,4)*(-5*(s23*s23)*(s24*s24)+12*s24*pow(s23,3)+10*pow(s23,4)-34*s23*pow(s24,3)-12*pow(s24,4))+s14*s24*(s23*s23)*(-135*(s23*s23)*(s24*s24)-99*s24*pow(s23,3)+2*pow(s23,4)-49*s23*pow(s24,3)+25*pow(s24,4))+pow(s14,3)*(-77*(s24*s24)*pow(s23,3)+19*s24*pow(s23,4)+16*pow(s23,5)-162*(s23*s23)*pow(s24,3)-61*s23*pow(s24,4)+4*pow(s24,5))+s23*(s14*s14)*(-147*(s24*s24)*pow(s23,3)+10*s24*pow(s23,4)+6*pow(s23,5)-243*(s23*s23)*pow(s24,3)-110*s23*pow(s24,4)+14*pow(s24,5)))-s12*(s24*(s24*(31*s23*s24+14*(s23*s23)+3*(s24*s24))+s14*(40*s23*s24-6*(s23*s23)+39*(s24*s24)))*pow(s13,5)+(2*s23-s24)*(s24*s24)*pow(s13,6)+pow(s13,4)*(-3*(s14*s14)*(12*s24*(s23*s23)-43*s23*(s24*s24)+4*pow(s23,3)-55*pow(s24,3))+s24*s24*(124*s24*(s23*s23)+69*s23*(s24*s24)+32*pow(s23,3)+22*pow(s24,3))+s14*s24*(231*s24*(s23*s23)+418*s23*(s24*s24)-20*pow(s23,3)+55*pow(s24,3)))+pow(s13,3)*(s23*(s24*s24)*(158*s24*(s23*s23)+141*s23*(s24*s24)+32*pow(s23,3)+51*pow(s24,3))+pow(s14,3)*(-70*s24*(s23*s23)+167*s23*(s24*s24)-42*pow(s23,3)+253*pow(s24,3))+s14*s24*(937*(s23*s23)*(s24*s24)+493*s24*pow(s23,3)-24*pow(s23,4)+254*s23*pow(s24,3)+45*pow(s24,4))+s14*s14*(572*(s23*s23)*(s24*s24)-104*s24*pow(s23,3)-36*pow(s23,4)+1083*s23*pow(s24,3)+169*pow(s24,4)))+s14*(2*pow(s14,5)*(s24*(s23*s23)-3*pow(s23,3)+pow(s24,3))+s24*s24*pow(s23,3)*(38*s24*(s23*s23)+33*s23*(s24*s24)+16*pow(s23,3)+11*pow(s24,3))+pow(s14,4)*(66*(s23*s23)*(s24*s24)+11*s24*pow(s23,3)-22*pow(s23,4)+71*s23*pow(s24,3)+16*pow(s24,4))+s14*s24*(s23*s23)*(251*(s23*s23)*(s24*s24)+140*s24*pow(s23,3)+4*pow(s23,4)+168*s23*pow(s24,3)+29*pow(s24,4))+pow(s14,3)*(249*(s24*s24)*pow(s23,3)+25*s24*pow(s23,4)-22*pow(s23,5)+314*(s23*s23)*pow(s24,3)+124*s23*pow(s24,4)+6*pow(s24,5))+s23*(s14*s14)*(305*(s24*s24)*pow(s23,3)+19*s24*pow(s23,4)-6*pow(s23,5)+457*(s23*s23)*pow(s24,3)+244*s23*pow(s24,4)+24*pow(s24,5)))+s13*s13*(s23*s23*(s24*s24)*(73*s24*(s23*s23)+87*s23*(s24*s24)+14*pow(s23,3)+36*pow(s24,3))+pow(s14,4)*(-54*s24*(s23*s23)+97*s23*(s24*s24)-54*pow(s23,3)+174*pow(s24,3))+s14*s23*s24*(802*(s23*s23)*(s24*s24)+473*s24*pow(s23,3)-12*pow(s23,4)+295*s23*pow(s24,3)+48*pow(s24,4))+pow(s14,3)*(561*(s23*s23)*(s24*s24)-157*s24*pow(s23,3)-102*pow(s23,4)+1107*s23*pow(s24,3)+201*pow(s24,4))+s14*s14*(959*(s24*s24)*pow(s23,3)-96*s24*pow(s23,4)-36*pow(s23,5)+1689*(s23*s23)*pow(s24,3)+429*s23*pow(s24,4)+30*pow(s24,5)))+s13*(-3*pow(s14,5)*(4*s24*(s23*s23)-7*s23*(s24*s24)+10*pow(s23,3)-16*pow(s24,3))+s24*s24*pow(s23,3)*(7*s24*(s23*s23)+12*s23*(s24*s24)+2*pow(s23,3)+7*pow(s24,3))+s14*s24*(s23*s23)*(282*(s23*s23)*(s24*s24)+187*s24*pow(s23,3)-2*pow(s23,4)+126*s23*pow(s24,3)+19*pow(s24,4))+pow(s14,4)*(272*(s23*s23)*(s24*s24)-62*s24*pow(s23,3)-88*pow(s23,4)+482*s23*pow(s24,3)+100*pow(s24,4))+pow(s14,3)*(737*(s24*s24)*pow(s23,3)-66*s24*pow(s23,4)-66*pow(s23,5)+1191*(s23*s23)*pow(s24,3)+368*s23*pow(s24,4)+13*pow(s24,5))+s23*(s14*s14)*(658*(s24*s24)*pow(s23,3)-24*s24*pow(s23,4)-12*pow(s23,5)+1030*(s23*s23)*pow(s24,3)+406*s23*pow(s24,4)+31*pow(s24,5))))-s12*s12*((16*(2*s23+s24)*(s24*s24)+s14*(-6*s23*s24-6*(s23*s23)+26*(s24*s24)))*pow(s13,5)+2*(s24*s24)*pow(s13,6)+(4*s23*s24-6*(s23*s23)-5*(s24*s24))*pow(s14,6)+pow(s14,5)*(23*s24*(s23*s23)+27*s23*(s24*s24)-42*pow(s23,3)+31*pow(s24,3))+pow(s13,4)*(4*(s24*s24)*(43*s23*s24+29*(s23*s23)+12*(s24*s24))+s14*s14*(-20*s23*s24-30*(s23*s23)+79*(s24*s24))+s14*(-50*s24*(s23*s23)+327*s23*(s24*s24)-24*pow(s23,3)+250*pow(s24,3)))+s14*s24*(s23*s23)*(208*(s23*s23)*(s24*s24)+103*s24*pow(s23,3)+2*pow(s23,4)+147*s23*pow(s24,3)+35*pow(s24,4))+pow(s14,4)*(331*(s23*s23)*(s24*s24)+55*s24*pow(s23,3)-74*pow(s23,4)+348*s23*pow(s24,3)+72*pow(s24,4))+pow(s13,3)*(-4*(5*s23*s24+15*(s23*s23)-24*(s24*s24))*pow(s14,3)+s24*s24*(372*s24*(s23*s23)+207*s23*(s24*s24)+166*pow(s23,3)+38*pow(s24,3))+s14*s14*(-169*s24*(s23*s23)+783*s23*(s24*s24)-132*pow(s23,3)+676*pow(s24,3))+s14*(1009*(s23*s23)*(s24*s24)-100*s24*pow(s23,3)-36*pow(s23,4)+1279*s23*pow(s24,3)+219*pow(s24,4)))+pow(s14,3)*(690*(s24*s24)*pow(s23,3)+59*s24*pow(s23,4)-42*pow(s23,5)+883*(s23*s23)*pow(s24,3)+324*s23*pow(s24,4)+20*pow(s24,5))+s23*(s14*s14)*(487*(s24*s24)*pow(s23,3)+23*s24*pow(s23,4)-6*pow(s23,5)+765*(s23*s23)*pow(s24,3)+398*s23*pow(s24,4)+54*pow(s24,5))+s13*s13*((-60*(s23*s23)+44*(s24*s24))*pow(s14,4)+s23*(s24*s24)*(280*s24*(s23*s23)+228*s23*(s24*s24)+104*pow(s23,3)+63*pow(s24,3))+pow(s14,3)*(-165*s24*(s23*s23)+740*s23*(s24*s24)-234*pow(s23,3)+697*pow(s24,3))+s14*s14*(1852*(s23*s23)*(s24*s24)-249*s24*pow(s23,3)-180*pow(s23,4)+2317*s23*pow(s24,3)+372*pow(s24,4))+s14*(1262*(s24*s24)*pow(s23,3)-72*s24*pow(s23,4)-24*pow(s23,5)+1843*(s23*s23)*pow(s24,3)+572*s23*pow(s24,4)+69*pow(s24,5)))+s13*(-2*(-5*s23*s24+15*(s23*s23)+s24*s24)*pow(s14,5)+s23*s23*(s24*s24)*(70*s24*(s23*s23)+75*s23*(s24*s24)+26*pow(s23,3)+27*pow(s24,3))+pow(s14,4)*(-23*s24*(s23*s23)+279*s23*(s24*s24)-168*pow(s23,3)+286*pow(s24,3))+pow(s14,3)*(1284*(s23*s23)*(s24*s24)-104*s24*pow(s23,3)-222*pow(s23,4)+1558*s23*pow(s24,3)+273*pow(s24,4))+s14*s14*(1668*(s24*s24)*pow(s23,3)-77*s24*pow(s23,4)-84*pow(s23,5)+2279*(s23*s23)*pow(s24,3)+696*s23*pow(s24,4)+51*pow(s24,5))+s14*s23*(659*(s24*s24)*pow(s23,3)-14*s24*pow(s23,4)-6*pow(s23,5)+1013*(s23*s23)*pow(s24,3)+461*s23*pow(s24,4)+78*pow(s24,5)))+2*(s24*s24)*pow(s23,3)*pow(s23+s24,3)))*pow(s12+s23+s24,-1))/2.;
}

// Coefficient of master 4 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yygCF<4>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(-1,{
        qq2yygCF<4,-1>(s12,s13,s14,s23,s24),
        qq2yygCF<4,0>(s12,s13,s14,s23,s24),
        qq2yygCF<4,1>(s12,s13,s14,s23,s24)
    });
}

