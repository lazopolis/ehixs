/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 14: box(s24,(-s12-s23-s24),s13)

// Coefficient order epsilon^0 of master 14
template<>
double qq2yygCA<14,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return ((-2*s23*s24*(s14+2*s24)+(3*s13-2*s24)*(s12*s12)+(8*s23+3*s24)*(s13*s13)+s12*(-2*s24*(s14+s23+s24)+s13*(3*s14+11*s23+s24)+3*(s13*s13))+s13*(3*s14*s23+6*s23*s24+8*(s23*s23)-2*(s24*s24)))*pow(s13,-1)*pow(s12+s13+s23,-1)-((5*s13+2*s14+8*s23+5*s24)*(s12*s12)+(4*s23+3*s24)*(s13*s13)+s13*(12*s23*s24+s14*(3*s23+2*s24)+8*(s23*s23)+3*(s24*s24))+s12*(13*s23*s24+s14*(4*s23+3*s24)+s13*(3*s14+13*s23+8*s24)+3*(s13*s13)+10*(s23*s23)+3*(s24*s24))+s23*(s14*(2*s23+3*s24)+4*((s23+s24)*(s23+s24)))+2*pow(s12,3))*pow(s13,-1)*pow(s12+s13+s23,-1)-pow(s13,-1)*(s13*s23*(3*s14+6*s23+7*s24)+s23*(s14*(s23-2*s24)+2*(s23-s24)*s24)+(2*s13+s14+6*s23+7*s24)*(s12*s12)+(10*s23+3*s24)*(s13*s13)+s12*(2*s14*(s23-s24)+3*s23*(s23+3*s24)+s13*(3*s14+8*s23+10*s24)+3*(s13*s13))+3*pow(s12,3)+4*pow(s13,3))*pow(s12+s13+s23,-1)+pow(s13,-1)*(-4*s12*s13-2*s12*s14+2*s13*s14-4*s12*s23-4*s13*s23-2*s14*s23-2*s12*s24+2*s23*s24-4*(s12*s12)+4*(s13*s13)+2*(s24*s24)+(s12-s13+s23)*(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*pow(s12+s13+s23,-1))+2*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-2)*((s14*(5*s23+2*s24)+3*s13*(s14+7*s23+2*s24)+s23*(11*s23+3*s24)+8*(s13*s13)-s14*s14)*pow(s12,3)+(7*s13+s14+7*s23+s24)*pow(s12,4)+2*pow(s12,5)+(s23+s24)*((-2*s24*(s23+s24)+s14*(3*s23+2*s24))*(s23*s23)+s13*s23*(s23*s24+s14*(8*s23+7*s24)+s14*s14+4*(s23*s23)-2*(s24*s24))+s13*s13*(6*s23*s24+s14*(5*s23+3*s24)+8*(s23*s23)-s24*s24)+(4*s23+3*s24)*pow(s13,3))+s12*(s13*s13*(5*s14*(s23+s24)+3*(8*s23*s24+7*(s23*s23)+2*(s24*s24)))+(5*s23+4*s24)*pow(s13,3)+s23*(-(s23*(s14*s14))-5*s23*(s24*s24)+s14*(10*s23*s24+9*(s23*s23)+3*(s24*s24))+3*pow(s23,3)-2*pow(s24,3))+s13*(s24*(s14*s14)+22*s24*(s23*s23)+3*s23*(s24*s24)+2*s14*(9*s23*s24+8*(s23*s23)+2*(s24*s24))+19*pow(s23,3)-2*pow(s24,3)))+s12*s12*((2*s14+19*s23+9*s24)*(s13*s13)-2*s23*(s14*s14)+4*s24*(s23*s23)-2*s23*(s24*s24)+s14*(7*s23*s24+10*(s23*s23)+s24*s24)+s13*(20*s23*s24+s14*(11*s23+7*s24)-s14*s14+29*(s23*s23)+3*(s24*s24))+3*pow(s13,3)+9*pow(s23,3)-pow(s24,3)))+pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*(8*s13*s14*s23*s24+2*(2*s14*(s23+s24)+s24*(3*s23+2*s24))*(s13*s13)+2*(s12*s12)*(2*s13*(s14+s23)+s24*(-2*s14-s23+s24)+2*(s13*s13))+2*s13*s23*(s14*s14)+2*s13*s24*(s14*s14)+2*s23*s24*(s14*s14)+4*s13*s24*(s23*s23)+4*s13*s14*(s24*s24)+8*s13*s23*(s24*s24)-2*s24*pow(s12,3)+2*s23*pow(s13,3)+2*s24*pow(s13,3)+2*s12*((4*s14+s23+2*s24)*(s13*s13)+s24*(s14*(-2*s23+s24)+2*s24*(s23+s24)+s14*s14)+s13*(4*s23*s24+s14*(s23+3*s24)+2*(s14*s14)+2*(s23*s23)+5*(s24*s24))+2*pow(s13,3))-2*(s12+s23)*(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*(-3*s13*(s12+s13+s14)*(s12+s13+s23)*(s12+s13+s14+s23+s24)+(pow(s12,2)+2*pow(s13,2)+s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24))*(pow(s12,2)+2*pow(s13,2)+s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)))*pow(s12+s13+s23,-3)+(s13*(5*s23+2*s24)+s23*(3*s14+2*s23+4*s24)+s12*(3*s13+3*s14+5*s23+6*s24)+3*(s12*s12))*(2*s13*s14*s23*(s14+s23)+s14*s14*(s23*s23)+s13*s13*(2*s23*s24+2*s14*(3*s23+s24)+2*(s14*s14)+2*(s23*s23)+s24*s24)+s12*s12*(6*s13*(s14+s23+s24)+2*s14*(2*s23+s24)+7*(s13*s13)+s14*s14+(s23+s24)*(s23+s24))+2*(2*s13+s14+s23+s24)*pow(s12,3)+pow(s12,4)+2*(2*s14+2*s23+s24)*pow(s13,3)+2*s12*(s14*s23*(s14+s23+s24)+(4*s14+4*s23+3*s24)*(s13*s13)+s13*(2*s14*(2*s23+s24)+s14*s14+(s23+s24)*(s23+s24))+3*pow(s13,3))+2*pow(s13,4))*pow(s12+s13+s23,-2)-(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*((5*s13+s14+4*s23+5*s24)*(s12*s12)+(4*s23+3*s24)*(s13*s13)+s23*(3*s14*s24+2*s24*(s23+s24)+s14*s14)+s13*(9*s23*s24+s14*(5*s23+3*s24)+2*(s23*s23)+4*(s24*s24))+s12*(7*s23*s24+s14*(s23+5*s24)+2*s13*(2*s14+3*s23+5*s24)+3*(s13*s13)+s14*s14+2*(s23*s23)+6*(s24*s24))+2*pow(s12,3))*pow(s12+s13+s23,-1)+4*s13*pow(s24,3))+(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*(2*s14*s23+s13*(-s14+s23)+s14*s24-s23*s24+s12*(s13+2*s14+2*s23+s24)+2*(s12*s12)-s13*s13-s24*s24)*pow(s13,-1)*pow((-s12-s13-s14),-1)*pow((-s12-s13-s14-s23-s24),-1)+(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*(s14*s23+2*s14*s24+s23*s24+s12*(2*s13+2*s23+3*s24)+s13*(2*s14+3*s23+4*s24)+2*(s13*s13)+s24*s24)*pow(s13,-1)*pow((-s12-s13-s14),-1)*pow((-s12-s13-s14-s23-s24),-1)-2*s24*(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*(s12*(-s13-s14+s23+s24)+(s23+s24)*(s23+s24))*pow(s13,-1)*pow((-s12-s13-s14),-1)*pow(s23,-1)*pow((-s12-s13-s14-s23-s24),-1))/8.;
}

// Coefficient order epsilon^1 of master 14
template<>
double qq2yygCA<14,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (-16*(s23*(s14*(s23-2*s24)-s24*(s23+7*s24))+(6*s13+s14+2*s23-s24)*(s12*s12)+(8*s23+5*s24)*(s13*s13)+s12*(2*s14*(s23-s24)-2*s23*s24+s13*(5*s14+14*s23+4*s24)+5*(s13*s13)+s23*s23-2*(s24*s24))+s13*(8*s23*s24+s14*(5*s23+3*s24)+8*(s23*s23)-2*(s24*s24))+pow(s12,3))*pow(s13,-1)*pow(s12+s13+s23,-1)+8*((19*s13+9*s14+30*s23+20*s24)*(s12*s12)+2*(6*s23+5*s24)*(s13*s13)+s13*(37*s23*s24+2*s14*(5*s23+4*s24)+24*(s23*s23)+11*(s24*s24))+s12*(46*s23*s24+s14*(18*s23+11*s24)+s13*(10*s14+43*s23+30*s24)+10*(s13*s13)+33*(s23*s23)+11*(s24*s24))+s23*(s14*(9*s23+11*s24)+2*(13*s23*s24+6*(s23*s23)+7*(s24*s24)))+9*pow(s12,3))*pow(s13,-1)*pow(s12+s13+s23,-1)-8*pow(s13,-1)*((12*s13+s14+12*s23+7*s24)*(s12*s12)+(2*s14+14*s23+9*s24)*(s13*s13)+s12*((s23+s24)*(2*s14+15*s23+4*s24)+s13*(5*s14+28*s23+16*s24)+13*(s13*s13))+s13*(5*s14*s23+23*s23*s24+16*(s23*s23)+4*(s24*s24))+s23*(s14*(s23+2*s24)+6*((s23+s24)*(s23+s24)))+3*pow(s12,3)+4*pow(s13,3))*pow(s12+s13+s23,-1)+2*pow(s13,-1)*(-8*(s14*s23+2*s14*s24+6*s23*s24+s13*(2*s14-6*s23+3*s24)+s12*(s14+s23+7*s24)+s23*s23+7*(s24*s24))-4*(s12+2*s13+s23-s24)*(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*pow(s12+s13+s23,-1))-8*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-2)*(s23*s23*(2*(s23+3*s24)*(s14*s14)+s14*(18*s23*s24+11*(s23*s23)+6*(s24*s24))-8*s24*((s23+s24)*(s23+s24)))+(45*s23*s24+s14*(31*s23+22*s24)+2*s13*(11*s14+57*s23+37*s24)+46*(s13*s13)-2*(s14*s14)+53*(s23*s23)+10*(s24*s24))*pow(s12,3)+3*(11*s13+2*s14+11*s23+6*s24)*pow(s12,4)+8*pow(s12,5)+(50*s23*s24+2*s14*(2*s23+7*s24)+24*(s23*s23)+17*(s24*s24))*pow(s13,3)+2*(2*s23+5*s24)*pow(s13,4)+s12*(s13*s13*(169*s23*s24+14*s14*(3*s23+4*s24)+115*(s23*s23)+44*(s24*s24))+(4*s14+46*s23+58*s24)*pow(s13,3)+4*pow(s13,4)+s23*(2*(s23+6*s24)*(s14*s14)-5*s24*(s23*s23)-22*s23*(s24*s24)+s14*(58*s23*s24+41*(s23*s23)+14*(s24*s24))+11*pow(s23,3)-10*pow(s24,3))+s13*(2*(s23+5*s24)*(s14*s14)+113*s24*(s23*s23)+30*s23*(s24*s24)+2*s14*(61*s23*s24+43*(s23*s23)+9*(s24*s24))+84*pow(s23,3)-4*pow(s24,3)))+s13*s23*((3*s23+10*s24)*(s14*s14)+21*s24*(s23*s23)-6*s23*(s24*s24)+s14*(58*s23*s24+33*(s23*s23)+16*(s24*s24))+16*pow(s23,3)-10*pow(s24,3))+s13*s13*(4*s24*(s14*s14)+69*s24*(s23*s23)+26*s23*(s24*s24)+2*s14*(26*s23*s24+13*(s23*s23)+5*(s24*s24))+36*pow(s23,3)-2*pow(s24,3))+s12*s12*((20*s14+123*s23+104*s24)*(s13*s13)-2*(s23-3*s24)*(s14*s14)+30*s24*(s23*s23)+4*s23*(s24*s24)+s14*(62*s23*s24+55*(s23*s23)+8*(s24*s24))+s13*(164*s23*s24+s14*(75*s23+64*s24)-s14*s14+149*(s23*s23)+37*(s24*s24))+25*pow(s13,3)+39*pow(s23,3)-2*pow(s24,3)))+pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*(160*s13*s14*s23*s24-32*s14*(s14-s23)*s23*s24+16*(s14*(5*s23+s24)+s24*(8*s23+5*s24))*(s13*s13)+16*(s12*s12)*((s14-s23-5*s24)*s24+2*s13*(3*s14+s23+4*s24)+4*(s13*s13))+64*s13*s23*(s14*s14)+16*s13*s24*(s14*s14)+48*s13*s14*(s23*s23)-64*s13*s24*(s23*s23)+96*s13*s14*(s24*s24)-128*s13*s23*(s24*s24)+48*s13*pow(s12,3)-16*s24*pow(s12,3)+16*s23*pow(s13,3)+16*s12*((4*s14+5*s23+9*s24)*(s13*s13)-s24*(s14*(-3*s23+s24)+4*s24*(s23+s24)+2*(s14*s14))+s13*(2*s23*s24+10*s14*(s23+s24)+3*(s14*s14)-3*(s23*s23)-s24*s24)+pow(s13,3))-32*s13*pow(s23,3)+(-8*(s13*(5*s23+2*s24)+s23*(3*s14+2*s23+4*s24)+s12*(3*s13+3*s14+5*s23+6*s24)+3*(s12*s12))*((pow(s12,2)+2*pow(s13,2)+s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24))*(pow(s12,2)+2*pow(s13,2)+s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)))+8*(s12*(s13+2*s23-2*s24)+s13*(3*s23+4*s24)+2*(-(s23*s24)+s23*s23-3*(s24*s24)))*(2*s13*s14*s23*(s14+s23)+s14*s14*(s23*s23)+s13*s13*(2*s23*s24+2*s14*(3*s23+s24)+2*(s14*s14)+2*(s23*s23)+s24*s24)+s12*s12*(6*s13*(s14+s23+s24)+2*s14*(2*s23+s24)+7*(s13*s13)+s14*s14+(s23+s24)*(s23+s24))+2*(2*s13+s14+s23+s24)*pow(s12,3)+pow(s12,4)+2*(2*s14+2*s23+s24)*pow(s13,3)+s12*(2*s14*s23*(s14+s23+s24)+(8*s14+8*s23+6*s24)*(s13*s13)+2*s13*(2*s14*(2*s23+s24)+s14*s14+(s23+s24)*(s23+s24))+6*pow(s13,3))+2*pow(s13,4)))*pow(s12+s13+s23,-2)-64*s13*pow(s24,3)+8*(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*pow(s12+s13+s23,-1)*(9*s14*s23*s24+(4*s13+2*s14+9*s23+10*s24)*(s12*s12)+2*s23*(s13*s13)+2*s23*(s14*s14)-s14*(s23*s23)+2*s24*(s23*s23)+6*s14*(s24*s24)+8*s23*(s24*s24)+s13*(s14*(s23-s24)+9*s23*s24+6*(s23*s23)+4*(s24*s24))+s12*(11*s23*s24+s13*(9*s23+10*s24)+s14*(s23+12*s24)+2*(s14*s14)+7*(s23*s23)+14*(s24*s24))+4*pow(s12,3)+2*pow(s23,3)+6*pow(s24,3))+8*(s12+s23)*pow(s12+s13+s23,-3)*pow(pow(s12,2)+2*pow(s13,2)+s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24),3))+8*(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*(2*s14*s23+3*s14*s24+3*s23*s24+s13*(3*s14+3*s23+4*s24)+s12*(4*s13+3*s14+3*s23+4*s24)+2*(s12*s12)+2*(s13*s13)+s14*s14+s23*s23+2*(s24*s24))*pow(s13,-1)*pow((-s12-s13-s14),-1)*pow((-s12-s13-s14-s23-s24),-1)+8*(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*(s14*s23+8*s14*s24+5*s23*s24+s13*(6*s14-s23+6*s24)+s12*(5*s13+7*(s14+s24))+3*(s12*s12)+2*(s13*s13)+4*(s14*s14)+s23*s23+4*(s24*s24))*pow(s13,-1)*pow((-s12-s13-s14),-1)*pow((-s12-s13-s14-s23-s24),-1)+8*(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*(s13*(2*s24*(2*s23+3*s24)+s14*(2*s23+7*s24))+2*(s13+s24)*(s12*s12)+(2*s23+5*s24)*(s13*s13)+s12*(2*s24*(2*s23+3*s24)+s13*(2*s14+2*s23+7*s24)+2*(s13*s13))+s24*(s14*(-s23+s24)+2*(s14*s14)+2*(3*s23*s24+s23*s23+2*(s24*s24))))*pow(s13,-1)*pow((-s12-s13-s14),-1)*pow(s23,-1)*pow((-s12-s13-s14-s23-s24),-1))/64.;
}

// Coefficient order epsilon^2 of master 14
template<>
double qq2yygCA<14,2>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (8*(4*s23*(s14*s23+(s23-2*s24)*s24)+s13*(s14*(9*s23+8*s24)+2*s23*(4*s23+9*s24))+(13*s13+4*(s14+2*s23+s24))*(s12*s12)+(8*s23+9*s24)*(s13*s13)+s12*(4*s23*(2*s14+s23+2*s24)+s13*(9*s14+21*s23+13*s24)+9*(s13*s13))+4*pow(s12,3))*pow(s13,-1)*pow(s12+s13+s23,-1)-8*((22*s13+11*s14+34*s23+20*s24)*(s12*s12)+(12*s23+11*s24)*(s13*s13)+s13*(31*s23*s24+s14*(11*s23+10*s24)+24*(s23*s23)+9*(s24*s24))+s12*(40*s23*s24+s14*(22*s23+9*s24)+s13*(11*s14+46*s23+31*s24)+11*(s13*s13)+35*(s23*s23)+9*(s24*s24))+s23*(s14*(11*s23+9*s24)+4*(5*s23*s24+3*(s23*s23)+2*(s24*s24)))+11*pow(s12,3))*pow(s13,-1)*pow(s12+s13+s23,-1)+2*pow(s13,-1)*(8*(2*s14*s23+s13*(5*s14+s23-3*s24)+2*s14*s24-4*s23*s24+s12*(5*s13+2*s14+3*s23+s24)+2*(s12*s12)+7*(s13*s13)+s23*s23-3*(s24*s24))-4*s13*(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*pow(s12+s13+s23,-1))+8*pow(s13,-1)*(2*s12*s13+10*s12*s23+4*s13*s23+10*s12*s24+2*s13*s24+4*(s12*s12)-2*(s13*s13)+6*((s23+s24)*(s23+s24))-(s12+s13+s23+s24)*(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*pow(s12+s13+s23,-1))+8*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-2)*(s23*s23*(2*(s23+5*s24)*(s14*s14)-16*(s23+s24)*(s24*s24)+s14*(11*s23*s24+2*(s23*s23)+21*(s24*s24)))+(37*s23*s24+2*s13*(5*s14+15*s23+17*s24)+s14*(22*s23+24*s24)+8*(s13*s13)+4*(s14*s14)+14*(s23*s23)+4*(s24*s24))*pow(s12,3)+2*(5*s13+4*s14+6*s23+7*s24)*pow(s12,4)+4*pow(s12,5)+2*(s14*(s23-s24)-5*s23*s24+5*(s23*s23)+9*(s24*s24))*pow(s13,3)+2*(s23-5*s24)*pow(s13,4)+s12*(s13*s13*(25*s23*s24+s14*(10*s23+21*s24)+38*(s23*s23)+40*(s24*s24))+14*(s23-s24)*pow(s13,3)+s23*(4*(2*s23+5*s24)*(s14*s14)+13*s24*(s23*s23)-22*s23*(s24*s24)+s14*(42*s23*s24+10*(s23*s23)+35*(s24*s24))+2*pow(s23,3)-25*pow(s24,3))+s13*(19*s24*(s14*s14)+54*s24*(s23*s23)+25*s23*(s24*s24)+s14*(62*s23*s24+22*(s23*s23)+39*(s24*s24))+26*pow(s23,3)-20*pow(s24,3)))+s13*s23*(19*s24*(s14*s14)+12*s24*(s23*s23)-7*s23*(s24*s24)+s14*(23*s23*s24+8*(s23*s23)+48*(s24*s24))+6*pow(s23,3)-25*pow(s24,3))+s12*s12*(2*(s14+15*s23+8*s24)*(s13*s13)+10*(s23+s24)*(s14*s14)+36*s24*(s23*s23)-4*s23*(s24*s24)+s14*(55*s23*s24+22*(s23*s23)+14*(s24*s24))+s13*(72*s23*s24+s14*(24*s23+47*s24)+40*(s23*s23)+26*(s24*s24))+2*pow(s13,3)+8*pow(s23,3)-10*pow(s24,3))+s13*s13*(8*s24*(s14*s14)+12*s24*(s23*s23)+29*s23*(s24*s24)+s14*(14*s23*s24+8*(s23*s23)+25*(s24*s24))+14*pow(s23,3)-10*pow(s24,3)))-8*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-3)*((5*s13*(5*s14+18*s23+4*s24)+42*(s13*s13)+2*(10*s23*s24+2*s14*(7*s23+2*s24)+s14*s14+21*(s23*s23)+5*(s24*s24)))*pow(s12,5)+(20*s13+6*s14+20*s23+6*s24)*pow(s12,6)+4*pow(s12,7)+2*(7*s23*s24+4*(s23*s23)+3*(s24*s24))*pow(s13,5)+2*s14*pow(s23,3)*(s24*(s23*s23)-6*s23*(s24*s24)+(3*s14-4*s24)*(s24*s24)+pow(s23,3))+pow(s13,4)*(s14*(17*s23*s24+14*(s23*s23)+5*(s24*s24))+4*(11*s24*(s23*s23)+s23*(s24*s24)+6*pow(s23,3)-3*pow(s24,3)))+s13*(s23*s23)*(s14*s14*(-11*s23*s24+2*(s23*s23)-2*(s24*s24))+s23*pow(s14,3)+s14*(13*s24*(s23*s23)-59*s23*(s24*s24)+16*pow(s23,3)-52*pow(s24,3))-2*s24*(13*s24*(s23*s23)+14*s23*(s24*s24)+pow(s23,3)+4*pow(s24,3)))+pow(s12,4)*((41*s14+170*s23+36*s24)*(s13*s13)+s13*(s14*(103*s23+11*s24)+8*(s14*s14)+4*(14*s23*s24+42*(s23*s23)+3*(s24*s24)))+46*pow(s13,3)+2*(4*s23*(s14*s14)+12*s24*(s23*s23)+7*s23*(s24*s24)+3*s14*(5*s23*s24+9*(s23*s23)+2*(s24*s24))+24*pow(s23,3)+7*pow(s24,3)))-s23*(s13*s13)*(59*(s23*s23)*(s24*s24)+s14*s14*(15*s23*s24-5*(s23*s23)+8*(s24*s24))+s23*pow(s14,3)-12*s24*pow(s23,3)-8*pow(s23,4)+55*s23*pow(s24,3)+s14*(-39*s24*(s23*s23)+54*s23*(s24*s24)-40*pow(s23,3)+52*pow(s24,3))+2*pow(s24,4))+pow(s13,3)*(s23*(3*s23+2*s24)*(s14*s14)-35*(s23*s23)*(s24*s24)+44*s24*pow(s23,3)+24*pow(s23,4)+s14*(45*s24*(s23*s23)+4*s23*(s24*s24)+40*pow(s23,3)-8*pow(s24,3))-37*s23*pow(s24,3)+6*pow(s24,4))+pow(s12,3)*(s13*s13*(s14*(149*s23+12*s24)+8*(s14*s14)+2*(54*s23*s24+139*(s23*s23)-9*(s24*s24)))+(31*s14+164*s23+48*s24)*pow(s13,3)+26*pow(s13,4)+s13*((26*s23-11*s24)*(s14*s14)+57*s24*(s23*s23)+s14*(31*s23*s24+175*(s23*s23)-6*(s24*s24))-39*s23*(s24*s24)+pow(s14,3)+164*pow(s23,3)+30*pow(s24,3))+2*(-8*(s23*s23)*(s24*s24)+3*(s14*s14)*(2*(s23*s23)+s24*s24)+6*s24*pow(s23,3)+16*pow(s23,4)+4*s23*pow(s24,3)+2*s14*(11*s24*(s23*s23)+6*s23*(s24*s24)+14*pow(s23,3)+3*pow(s24,3))+3*pow(s24,4)))+s12*s12*((142*s23*s24+s14*(97*s23+23*s24)+2*(s14*s14)+222*(s23*s23)-26*(s24*s24))*pow(s13,3)+(9*s14+78*s23+38*s24)*pow(s13,4)+6*pow(s13,5)+s13*s13*((21*s23-11*s24)*(s14*s14)+s14*(45*s23*s24+215*(s23*s23)-43*(s24*s24))-pow(s14,3)+2*(65*s24*(s23*s23)-58*s23*(s24*s24)+111*pow(s23,3)+3*pow(s24,3)))+2*s23*(s14*s14*(4*(s23*s23)+9*(s24*s24))+(-11*s23*s24+6*(s23*s23)-s24*s24)*((s23+s24)*(s23+s24))+s14*(16*s24*(s23*s23)+17*pow(s23,3)+8*pow(s24,3)))+s13*(s14*s14*(-33*s23*s24+30*(s23*s23)-2*(s24*s24))-139*(s23*s23)*(s24*s24)+3*s23*pow(s14,3)+24*s24*pow(s23,3)+84*pow(s23,4)-21*s23*pow(s24,3)+s14*(42*s24*(s23*s23)-70*s23*(s24*s24)+157*pow(s23,3)+16*pow(s24,3))+18*pow(s24,4)))+s12*((6*s23*(13*s23+14*s24)+s14*(23*s23+14*s24))*pow(s13,4)+2*(7*s23+6*s24)*pow(s13,5)+2*(s23*s23)*(s14*s14*(s23*s23+9*(s24*s24))+(-2*s23*s24+s23*s23-4*(s24*s24))*((s23+s24)*(s23+s24))+2*s14*(3*s24*(s23*s23)-6*s23*(s24*s24)+3*pow(s23,3)-pow(s24,3)))+pow(s13,3)*(5*s23*(s14*s14)+141*s24*(s23*s23)+s14*(61*s23*s24+106*(s23*s23)-20*(s24*s24))-59*s23*(s24*s24)+128*pow(s23,3)-22*pow(s24,3))+s13*s23*(s14*s14*(-33*s23*s24+14*(s23*s23)-4*(s24*s24))-114*(s23*s23)*(s24*s24)+3*s23*pow(s14,3)+s24*pow(s23,3)+18*pow(s23,4)+s14*(35*s24*(s23*s23)-123*s23*(s24*s24)+76*pow(s23,3)-36*pow(s24,3))-81*s23*pow(s24,3)-4*pow(s24,4))+s13*s13*(2*(s14*s14)*(-13*s23*s24+9*(s23*s23)-4*(s24*s24))-2*s23*pow(s14,3)+s14*(72*s24*(s23*s23)-90*s23*(s24*s24)+147*pow(s23,3)-4*pow(s24,3))+2*(-79*(s23*s23)*(s24*s24)+35*s24*pow(s23,3)+40*pow(s23,4)-33*s23*pow(s24,3)+9*pow(s24,4)))))-8*(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*(3*s14*s23+s12*(10*s13+8*s14+3*s23)-5*s23*s24+s13*(10*s14+5*s23+2*s24)+4*(s12*s12)+6*(s13*s13)+4*(s14*s14)+s23*s23-6*(s24*s24))*pow(s13,-1)*pow((-s12-s13-s14),-1)*pow((-s12-s13-s14-s23-s24),-1)+8*(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*(2*s14*s23+3*s14*s24+3*s23*s24+s13*(3*s14+3*s23+4*s24)+s12*(4*s13+3*s14+3*s23+4*s24)+2*(s12*s12)+2*(s13*s13)+s14*s14+s23*s23+2*(s24*s24))*pow(s13,-1)*pow((-s12-s13-s14),-1)*pow((-s12-s13-s14-s23-s24),-1)-8*(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*(s12*(-(s13*(s23-4*s24))+s24*(11*s14+13*s23+17*s24))+9*s24*(s12*s12)+(s23-5*s24)*(s13*s13)+s13*(s14*(s23-s24)+s23*s24-s23*s23+6*(s24*s24))+s24*(s14*(9*s23+13*s24)+4*(s14*s14)+4*(3*s23*s24+s23*s23+2*(s24*s24))))*pow(s13,-1)*pow((-s12-s13-s14),-1)*pow(s23,-1)*pow((-s12-s13-s14-s23-s24),-1))/64.;
}

// Coefficient of master 14 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yygCA<14>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(0,{
        qq2yygCA<14,0>(s12,s13,s14,s23,s24),
        qq2yygCA<14,1>(s12,s13,s14,s23,s24),
        qq2yygCA<14,2>(s12,s13,s14,s23,s24)
    });
}

