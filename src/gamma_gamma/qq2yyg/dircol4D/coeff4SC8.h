/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 8: bubble(-s12-s13-s14-s23-s24)

// Coefficient order epsilon^-1 of master 8
template<>
double qq2yyg4SC<8,-1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s13,-3)*pow(s14,-3)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-3)*pow(s24,-3)*pow(s23+s24,-1)*(s13*(s23+s24)*(s24*(3*s14+s24)+3*(s23*s23))*(s24*s24)*pow(s14,6)*pow(s23,4)+(s23+s24)*(s24*s24)*pow(s14,7)*pow(s23,6)-(s23+s24)*(s23*s23)*pow(s13,7)*pow(s24,3)*(s14*(s23-s24)*s24+s23*(s14*s14)+pow(s24,3))-s24*pow(s12,6)*((s23+s24)*(s23*s23)*(s24*s24)*pow(s13,4)+s13*s24*(s23*s23)*(s23*s24-2*(s23*s23)+3*(s24*s24))*pow(s14,3)+s24*(s23*s23)*(-(s23*s23)+s24*s24)*pow(s14,4)+s13*s13*(s14*s14)*(s24*(s23*s23)*(s23*s24-s23*s23+2*(s24*s24))+s14*s14*(s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3)))+s14*pow(s13,3)*(s24*(s23*s23)*(2*s23*s24-s23*s23+3*(s24*s24))+s14*s14*(s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3))))+s24*(s13*s13)*pow(s14,5)*pow(s23,3)*(s14*s14*(s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+3*pow(s24,3))+s14*(9*(s23*s23)*(s24*s24)+s24*pow(s23,3)+pow(s23,4)+8*s23*pow(s24,3)-pow(s24,4))-2*s24*(3*(s23*s23)*(s24*s24)+s24*pow(s23,3)-pow(s23,4)+2*s23*pow(s24,3)+pow(s24,4)))-s24*pow(s12,5)*(3*(s23+s24)*(s23*s23)*(s24*s24)*pow(s13,5)-s13*s24*(s23+s24)*(s23*s23)*(2*s14*(4*s23-5*s24)-3*s23*s24+6*(s23*s23)-9*(s24*s24))*pow(s14,3)-3*s24*(s14+s23+s24)*(s23*s23)*(s23*s23-s24*s24)*pow(s14,4)+pow(s13,4)*(-2*s14*s24*(s23*s23)*(-4*s23*s24+s23*s23-5*(s24*s24))+3*(s23*s23)*(s24*s24)*((s23+s24)*(s23+s24))+3*pow(s14,3)*(s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3)))+s13*s13*(s14*s14)*(s14*s24*(s23*s23)*(6*s23*s24-7*(s23*s23)+13*(s24*s24))-3*(s23-2*s24)*s24*(s23*s23)*((s23+s24)*(s23+s24))+3*pow(s14,3)*(s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+s14*s14*(8*(s23*s23)*(s24*s24)+4*s24*pow(s23,3)+2*pow(s23,4)+8*s23*pow(s24,3)+3*pow(s24,4)))+s14*pow(s13,3)*(s14*s24*(s23*s23)*(6*s23*s24-5*(s23*s23)+11*(s24*s24))-3*(s23-3*s24)*s24*(s23*s23)*((s23+s24)*(s23+s24))+6*pow(s14,3)*(s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+s14*s14*(8*(s23*s23)*(s24*s24)+4*s24*pow(s23,3)+2*pow(s23,4)+8*s23*pow(s24,3)+3*pow(s24,4))))+s14*(s24*s24)*pow(s13,6)*(s23*s23*(s24*s24)*(4*s24*(s23*s23)+s23*(s24*s24)+pow(s23,3)-2*pow(s24,3))+s14*s24*(s23*s23)*(-4*s24*(s23*s23)-2*s23*(s24*s24)+pow(s23,3)+3*pow(s24,3))-s14*s14*(-2*(s24*s24)*pow(s23,3)+2*s24*pow(s23,4)+pow(s23,5)-2*(s23*s23)*pow(s24,3)+s23*pow(s24,4)+pow(s24,5)))+s23*s23*pow(s13,3)*pow(s14,4)*(s14*s14*(s24*s24*pow(s23,3)+5*s24*pow(s23,4)+pow(s23,5)+s23*s23*pow(s24,3)+7*s23*pow(s24,4)-pow(s24,5))+s14*s24*(6*(s24*s24)*pow(s23,3)-3*s24*pow(s23,4)+pow(s23,5)+9*(s23*s23)*pow(s24,3)+s23*pow(s24,4)+2*pow(s24,5))+s24*s24*(-4*(s24*s24)*pow(s23,3)-6*s24*pow(s23,4)-pow(s23,5)+6*(s23*s23)*pow(s24,3)+8*s23*pow(s24,4)+3*pow(s24,5)))+s24*(s14*s14)*pow(s13,5)*(s23*s23*(7*s24*(s23*s23)+5*s23*(s24*s24)+pow(s23,3)-pow(s24,3))*pow(s24,3)+s14*s23*s24*(-3*(s24*s24)*pow(s23,3)+s24*pow(s23,4)-2*pow(s23,5)+2*(s23*s23)*pow(s24,3)+10*s23*pow(s24,4)+2*pow(s24,5))-s14*s14*(7*(s24*s24)*pow(s23,4)+9*s24*pow(s23,5)+pow(s23,6)-11*pow(s23,3)*pow(s24,3)-9*(s23*s23)*pow(s24,4)-2*s23*pow(s24,5)+pow(s24,6)))+s23*pow(s13,4)*pow(s14,3)*(-(s23*(s24*s24)*(s24*s24*pow(s23,3)+3*s24*pow(s23,4)+pow(s23,5)-8*(s23*s23)*pow(s24,3)-9*s23*pow(s24,4)-2*pow(s24,5)))+2*s14*(s24*s24)*(2*(s24*s24)*pow(s23,3)-3*pow(s23,5)+3*(s23*s23)*pow(s24,3)+5*s23*pow(s24,4)+pow(s24,5))+s14*s14*(-8*(s24*s24)*pow(s23,4)+3*s24*pow(s23,5)+pow(s23,6)-7*pow(s23,3)*pow(s24,3)+12*(s23*s23)*pow(s24,4)+6*s23*pow(s24,5)+3*pow(s24,6)))+s12*((s14+s23+s24)*(2*s23*s24+3*(s23*s23)-s24*s24)*(s24*s24)*pow(s14,6)*pow(s23,4)+s13*(s23+s24)*(s24*s24)*pow(s14,5)*pow(s23,3)*(4*s24*(s14*s14)+7*s24*(s23*s23)+s23*(s24*s24)+s14*(5*s23*s24+10*(s23*s23)+6*(s24*s24))+8*pow(s23,3)+2*pow(s24,3))-(s23+s24)*(s23*s23)*(s24*s24)*pow(s13,7)*(2*s14*(s23-s24)*s24+s23*(s14*s14)+3*pow(s24,3))+s24*(s13*s13)*(s23*s23)*pow(s14,4)*(s24*((s23+s24)*(s23+s24))*(-2*s24*(s23*s23)+s23*(s24*s24)+6*pow(s23,3)-pow(s24,3))+pow(s14,3)*(2*s24*(s23*s23)+s23*(s24*s24)+pow(s23,3)+2*pow(s24,3))+s14*s14*(19*(s23*s23)*(s24*s24)+5*s24*pow(s23,3)+4*pow(s23,4)+23*s23*pow(s24,3)+3*pow(s24,4))+2*s14*s23*(12*(s23*s23)*(s24*s24)+7*s24*pow(s23,3)+pow(s23,4)+12*s23*pow(s24,3)+6*pow(s24,4)))-s24*pow(s13,6)*(s24*(s14*s14)*(s23*s23)*(12*s24*(s23*s23)+s23*(s24*s24)+2*pow(s23,3)-9*pow(s24,3))+3*s14*(s23*s23)*(s23*s24-s23*s23+2*(s24*s24))*pow(s24,3)+3*(s23*s23)*((s23+s24)*(s23+s24))*pow(s24,4)+pow(s14,3)*(3*(s24*s24)*pow(s23,3)+3*s24*pow(s23,4)-pow(s23,5)-s23*s23*pow(s24,3)+4*s23*pow(s24,4)+3*pow(s24,5)))+s14*pow(s13,5)*(s23*s23*(4*s23*s24+2*(s23*s23)-7*(s24*s24))*((s23+s24)*(s23+s24))*pow(s24,3)+s14*(s24*s24)*pow(s23,3)*(4*s24*(s23*s23)+12*s23*(s24*s24)+pow(s23,3)+9*pow(s24,3))+pow(s14,3)*(2*(s24*s24)*pow(s23,4)+9*s24*pow(s23,5)+2*pow(s23,6)-pow(s23,3)*pow(s24,3)+10*(s23*s23)*pow(s24,4)-5*s23*pow(s24,5)-6*pow(s24,6))+s24*(s14*s14)*(-19*(s24*s24)*pow(s23,4)-9*s24*pow(s23,5)+pow(s23,6)+17*pow(s23,3)*pow(s24,3)+25*(s23*s23)*pow(s24,4)-2*s23*pow(s24,5)-3*pow(s24,6)))+s23*pow(s13,3)*pow(s14,3)*(s23*(s24*s24)*((s23+s24)*(s23+s24))*(2*s24*(s23*s23)-s23*(s24*s24)+4*pow(s23,3)-4*pow(s24,3))+pow(s14,3)*(9*(s24*s24)*pow(s23,3)+9*s24*pow(s23,4)+2*pow(s23,5)+4*(s23*s23)*pow(s24,3)+12*s23*pow(s24,4)+3*pow(s24,5))+s14*s24*(13*(s24*s24)*pow(s23,4)+4*s24*pow(s23,5)+2*pow(s23,6)+32*pow(s23,3)*pow(s24,3)+32*(s23*s23)*pow(s24,4)+13*s23*pow(s24,5)+2*pow(s24,6))+s14*s14*(8*(s24*s24)*pow(s23,4)+14*s24*pow(s23,5)+2*pow(s23,6)+25*pow(s23,3)*pow(s24,3)+55*(s23*s23)*pow(s24,4)+25*s23*pow(s24,5)+5*pow(s24,6)))+s14*s14*pow(s13,4)*(2*(s23*s23)*(s24*s24)*((s23+s24)*(s23+s24))*(3*s24*(s23*s23)+4*s23*(s24*s24)+pow(s23,3)-2*pow(s24,3))+s14*s23*(s24*s24)*(23*(s24*s24)*pow(s23,3)+4*s24*pow(s23,4)-2*pow(s23,5)+29*(s23*s23)*pow(s24,3)+14*s23*pow(s24,4)+2*pow(s24,5))+pow(s14,3)*(11*(s24*s24)*pow(s23,4)+16*s24*pow(s23,5)+4*pow(s23,6)+4*pow(s23,3)*pow(s24,3)+19*(s23*s23)*pow(s24,4)+2*s23*pow(s24,5)-3*pow(s24,6))+s14*s14*(-4*(s24*s24)*pow(s23,5)+11*s24*pow(s23,6)+2*pow(s23,7)+pow(s23,4)*pow(s24,3)+54*pow(s23,3)*pow(s24,4)+40*(s23*s23)*pow(s24,5)+3*s23*pow(s24,6)-3*pow(s24,7))))-pow(s12,4)*(-(s13*(s23+s24)*(s23*s23)*(s24*s24)*(10*(s23-s24)*(s14*s14)+s14*(-8*s23*s24+23*(s23*s23)-21*(s24*s24))+3*(2*s23-3*s24)*((s23+s24)*(s23+s24)))*pow(s14,3))-(s23+s24)*(s23*s23)*(s24*s24)*(3*(s23-s24)*(s14*s14)+s14*(-2*s23*s24+9*(s23*s23)-6*(s24*s24))+3*(s23-s24)*((s23+s24)*(s23+s24)))*pow(s14,4)+3*(s23+s24)*(s23*s23)*pow(s13,6)*pow(s24,3)+s24*pow(s13,5)*(10*s14*(s23+s24)*(s23*s23)*(s24*s24)+3*(s23*s23)*(s24*s24)*(5*s23*s24+2*(s23*s23)+3*(s24*s24))+3*pow(s14,3)*(s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3)))+s24*(s13*s13)*(s14*s14)*(3*pow(s14,4)*(s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+s14*s24*(s23*s23)*(-5*s24*(s23*s23)+45*s23*(s24*s24)-19*pow(s23,3)+31*pow(s24,3))+s24*(s14*s14)*(28*(s23*s23)*(s24*s24)+13*s24*pow(s23,3)-9*pow(s23,4)+10*s23*pow(s24,3)+3*pow(s24,4))+pow(s14,3)*(17*(s23*s23)*(s24*s24)+8*s24*pow(s23,3)+5*pow(s23,4)+16*s23*pow(s24,3)+6*pow(s24,4))-3*(s23-2*s24)*s24*(s23*s23)*pow(s23+s24,3))+s14*pow(s13,3)*(9*s24*pow(s14,4)*(s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+s14*(s23*s23)*(s24*s24)*(-3*s24*(s23*s23)+38*s23*(s24*s24)-14*pow(s23,3)+27*pow(s24,3))+s14*s14*(s24*s24)*(26*(s23*s23)*(s24*s24)+16*s24*pow(s23,3)-4*pow(s23,4)+10*s23*pow(s24,3)+3*pow(s24,4))+pow(s14,3)*(15*(s24*s24)*pow(s23,3)+6*s24*pow(s23,4)-pow(s23,5)+35*(s23*s23)*pow(s24,3)+37*s23*pow(s24,4)+15*pow(s24,5))-3*(s23-3*s24)*(s23*s23)*(s24*s24)*pow(s23+s24,3))+pow(s13,4)*(s14*s14*(s23*s23)*(s24*s24)*(9*s23*s24-2*(s23*s23)+11*(s24*s24))+9*s24*pow(s14,4)*(s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+s14*(s23*s23)*(s24*s24)*(9*s24*(s23*s23)+42*s23*(s24*s24)-5*pow(s23,3)+28*pow(s24,3))+pow(s14,3)*(7*(s24*s24)*pow(s23,3)+s24*pow(s23,4)-pow(s23,5)+18*(s23*s23)*pow(s24,3)+21*s23*pow(s24,4)+9*pow(s24,5))+3*(s23*s23)*pow(s24,3)*pow(s23+s24,3)))+s12*s12*(-((s23+s24)*(s23*s23)*(s24*s24)*(s14*(s23-s24)+3*(s24*s24))*pow(s13,7))+(s23+s24)*(s24*s24)*((3*s23-2*s24)*(s14*s14)+s14*(s23*s24+9*(s23*s23)-4*(s24*s24))+(3*s23-2*s24)*((s23+s24)*(s23+s24)))*pow(s14,5)*pow(s23,3)+s13*(s23+s24)*(s23*s23)*(s24*s24)*pow(s14,4)*(s14*s14*(3*s23*s24+11*(s23*s23)+s24*s24)+(-4*s23*s24+7*(s23*s23)-s24*s24)*((s23+s24)*(s23+s24))+s24*pow(s14,3)+s14*(11*s24*(s23*s23)-5*s23*(s24*s24)+26*pow(s23,3)-pow(s24,3)))+pow(s13,6)*(-(s14*s14*(s23*s23)*(s23*s24+7*(s23*s23)-6*(s24*s24))*(s24*s24))-s14*(s23*s23)*(s24*s24)*(3*s24*(s23*s23)+8*s23*(s24*s24)+pow(s23,3)+6*pow(s24,3))-3*(s23*s23)*(5*s23*s24+2*(s23*s23)+3*(s24*s24))*pow(s24,4)+pow(s14,3)*(s24*s24*pow(s23,3)+3*s24*pow(s23,4)+pow(s23,5)-2*(s23*s23)*pow(s24,3)-5*s23*pow(s24,4)-3*pow(s24,5)))+s24*(s13*s13)*(s23*s23)*pow(s14,3)*(-((s23*s23+s24*s24)*pow(s14,4))+pow(s14,3)*(3*s24*(s23*s23)+5*s23*(s24*s24)+2*pow(s23,3)+9*pow(s24,3))+s14*s14*(33*(s23*s23)*(s24*s24)+21*s24*pow(s23,3)+5*pow(s23,4)+26*s23*pow(s24,3)+8*pow(s24,4))+s14*(39*(s24*s24)*pow(s23,3)+27*s24*pow(s23,4)+pow(s23,5)+4*(s23*s23)*pow(s24,3)-16*s23*pow(s24,4)-7*pow(s24,5))+s24*(-2*s23*s24+5*(s23*s23)-5*(s24*s24))*pow(s23+s24,3))+s14*pow(s13,4)*(s14*(s23*s23)*(s24*s24)*(19*(s23*s23)*(s24*s24)+28*s24*pow(s23,3)+9*pow(s23,4)-18*s23*pow(s24,3)-18*pow(s24,4))+3*pow(s14,4)*(s24*s24*pow(s23,3)+2*s24*pow(s23,4)+pow(s23,5)-3*(s23*s23)*pow(s24,3)-5*s23*pow(s24,4)-3*pow(s24,5))+pow(s14,3)*(9*(s24*s24)*pow(s23,4)+25*s24*pow(s23,5)+6*pow(s23,6)+5*pow(s23,3)*pow(s24,3)+14*(s23*s23)*pow(s24,4)-25*s23*pow(s24,5)-15*pow(s24,6))+s14*s14*(s24*s24*pow(s23,5)+6*s24*pow(s23,6)+pow(s23,7)+3*pow(s23,4)*pow(s24,3)+28*pow(s23,3)*pow(s24,4)+18*(s23*s23)*pow(s24,5)-5*s23*pow(s24,6)-3*pow(s24,7))+s23*s23*(2*s23*s24+s23*s23-8*(s24*s24))*(s24*s24)*pow(s23+s24,3))+s14*s14*pow(s13,3)*(s14*s24*(s23*s23)*(36*(s24*s24)*pow(s23,3)+20*s24*pow(s23,4)+pow(s23,5)+5*(s23*s23)*pow(s24,3)-28*s23*pow(s24,4)-16*pow(s24,5))+pow(s14,4)*(s24*s24*pow(s23,3)+pow(s23,5)-5*(s23*s23)*pow(s24,3)-5*s23*pow(s24,4)-3*pow(s24,5))+pow(s14,3)*(13*(s24*s24)*pow(s23,4)+18*s24*pow(s23,5)+4*pow(s23,6)+9*pow(s23,3)*pow(s24,3)+19*(s23*s23)*pow(s24,4)-9*s23*pow(s24,5)-6*pow(s24,6))+s14*s14*(17*(s24*s24)*pow(s23,5)+11*s24*pow(s23,6)+pow(s23,7)+28*pow(s23,4)*pow(s24,3)+43*pow(s23,3)*pow(s24,4)+18*(s23*s23)*pow(s24,5)-5*s23*pow(s24,6)-3*pow(s24,7))+s23*s23*(s23*s24+4*(s23*s23)-5*(s24*s24))*(s24*s24)*pow(s23+s24,3))+pow(s13,5)*(s14*s14*(s23*s23)*(s24*s24)*(-7*s24*(s23*s23)+2*s23*(s24*s24)-4*pow(s23,3)+5*pow(s24,3))+s14*(s23*s23)*(s24*s24)*(-6*(s23*s23)*(s24*s24)+6*s24*pow(s23,3)+pow(s23,4)-35*s23*pow(s24,3)-24*pow(s24,4))+pow(s14,4)*(3*(s24*s24)*pow(s23,3)+8*s24*pow(s23,4)+3*pow(s23,5)-7*(s23*s23)*pow(s24,3)-15*s23*pow(s24,4)-9*pow(s24,5))+pow(s14,3)*(-7*(s24*s24)*pow(s23,4)+9*s24*pow(s23,5)+2*pow(s23,6)-pow(s23,3)*pow(s24,3)+8*(s23*s23)*pow(s24,4)-16*s23*pow(s24,5)-9*pow(s24,6))-3*(s23*s23)*pow(s24,4)*pow(s23+s24,3)))-pow(s12,3)*((s23+s24)*(s23*s23)*pow(s13,7)*pow(s24,3)+s24*pow(s13,6)*(3*(s23*s23)*(s24*s24)*(4*s23*s24+s23*s23+3*(s24*s24))+2*s14*s24*(s23*s23)*((s23+s24)*(s23+s24))+pow(s14,3)*(s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3)))+pow(s13,5)*(4*(s14*s14)*(s23*s23)*(s23*s24+2*(s23*s23)-s24*s24)*(s24*s24)+3*(s23+3*s24)*(s23*s23)*((s23+s24)*(s23+s24))*pow(s24,3)+4*s24*pow(s14,4)*(s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+s14*(s23*s23)*(s24*s24)*(7*s24*(s23*s23)+35*s23*(s24*s24)-pow(s23,3)+27*pow(s24,3))+pow(s14,3)*(2*(s24*s24)*pow(s23,3)-4*s24*pow(s23,4)-2*pow(s23,5)+12*(s23*s23)*pow(s24,3)+18*s23*pow(s24,4)+9*pow(s24,5)))-s13*(s23+s24)*(s23*s23)*(s24*s24)*pow(s14,3)*(s14*s14*(-6*s23*s24+28*(s23*s23)-11*(s24*s24))+(4*s23-2*s24)*pow(s14,3)+2*s14*(6*s24*(s23*s23)-11*s23*(s24*s24)+11*pow(s23,3)-6*pow(s24,3))+(2*s23-3*s24)*pow(s23+s24,3))-(s23+s24)*(s23*s23)*(s24*s24)*pow(s14,4)*(s14*s14*(-4*s23*s24+9*(s23*s23)-3*(s24*s24))+(s23-s24)*pow(s14,3)+s14*(5*s24*(s23*s23)-7*s23*(s24*s24)+9*pow(s23,3)-3*pow(s24,3))+(s23-s24)*pow(s23+s24,3))+s24*(s13*s13)*(s14*s14)*(-(s14*s24*(s23*s23)*(-10*s23*s24+17*(s23*s23)-23*(s24*s24))*((s23+s24)*(s23+s24)))+pow(s14,5)*(s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+pow(s14,4)*(10*(s23*s23)*(s24*s24)+4*s24*pow(s23,3)+4*pow(s23,4)+8*s23*pow(s24,3)+3*pow(s24,4))+pow(s14,3)*(4*(s24*s24)*pow(s23,3)-4*s24*pow(s23,4)-pow(s23,5)+10*(s23*s23)*pow(s24,3)+10*s23*pow(s24,4)+3*pow(s24,5))+s14*s14*(-21*(s24*s24)*pow(s23,4)-33*s24*pow(s23,5)-2*pow(s23,6)+34*pow(s23,3)*pow(s24,3)+27*(s23*s23)*pow(s24,4)+4*s23*pow(s24,5)+pow(s24,6))-(s23-2*s24)*s24*(s23*s23)*pow(s23+s24,4))+s14*pow(s13,3)*(-(s14*(s23*s23)*(-4*s23*s24+13*(s23*s23)-21*(s24*s24))*(s24*s24)*((s23+s24)*(s23+s24)))+4*s24*pow(s14,5)*(s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+pow(s14,4)*(10*(s24*s24)*pow(s23,3)+4*s24*pow(s23,4)-2*pow(s23,5)+32*(s23*s23)*pow(s24,3)+34*s23*pow(s24,4)+15*pow(s24,5))+s24*(s14*s14)*(-13*(s24*s24)*pow(s23,4)-23*s24*pow(s23,5)-2*pow(s23,6)+36*pow(s23,3)*pow(s24,3)+31*(s23*s23)*pow(s24,4)+4*s23*pow(s24,5)+pow(s24,6))+pow(s14,3)*(-2*(s24*s24)*pow(s23,4)-9*s24*pow(s23,5)-2*pow(s23,6)+14*pow(s23,3)*pow(s24,3)+23*(s23*s23)*pow(s24,4)+32*s23*pow(s24,5)+12*pow(s24,6))-(s23-3*s24)*(s23*s23)*(s24*s24)*pow(s23+s24,4))+pow(s13,4)*(-2*s14*(s23*s23)*(-2*s23*s24+2*(s23*s23)-13*(s24*s24))*(s24*s24)*((s23+s24)*(s23+s24))+6*s24*pow(s14,5)*(s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+s14*s14*(s23*s23)*(s24*s24)*(-6*s24*(s23*s23)+28*s23*(s24*s24)-9*pow(s23,3)+25*pow(s24,3))+pow(s14,4)*(8*(s24*s24)*pow(s23,3)-4*s24*pow(s23,4)-4*pow(s23,5)+34*(s23*s23)*pow(s24,3)+44*s23*pow(s24,4)+21*pow(s24,5))+pow(s14,3)*(5*(s24*s24)*pow(s23,4)-8*s24*pow(s23,5)-2*pow(s23,6)+9*pow(s23,3)*pow(s24,3)+9*(s23*s23)*pow(s24,4)+22*s23*pow(s24,5)+9*pow(s24,6))+s23*s23*pow(s24,3)*pow(s23+s24,4))))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1))/2.+(32*pow(s13,-2)*pow(s24,-1)*(8*s12*s13*(s12-s14)*(s12+s23+s24)*pow(s13+s14,-2)-8*s13*s14*(-s12+s13+s14)*(s12+s13+s14+s23+s24)*pow(s13+s14,-2)+8*s13*(-(s12*(s13+2*s14))+(s13+s14)*(s13+2*s14+s24)+2*(s12*s12))*pow(s13+s14,-1)-16*s13*s14*(s12+s14+s24)*pow(s12+s13+s14+s23+s24,-1)-8*s13*(s12+s13-3*s14-s24)*(s12+s14+s24)*pow(s12+s13+s14+s23+s24,-1)-8*s13*s14*(-5*s12+2*s13+7*s14+s24)*pow(s12+s13+s14+s23+s24,-1)-8*s13*(s12*(s13+6*s14)+(s13+s14)*(s13-2*(2*s14+s24))-2*(s12*s12))*pow(s12+s13+s14+s23+s24,-1)+32*s13*(s14*s14)*pow(s12+s13+s14+s23+s24,-1)-8*(-((s13+s23)*(-(s14*s23)+s13*(s14+2*s24))*((s13+s14)*(s13+s14)))-2*s12*(-(s23*(s14+s23+s24))+s13*s13)*((s13+s14)*(s13+s14))+s12*s12*((s14+4*s23+2*s24)*(s13*s13)+2*s13*(2*s14*(2*s23+s24)+s14*s14+(s23+s24)*(s23+s24))+s14*(2*s14*(2*s23+s24)+s14*s14+(s23+s24)*(s23+s24)))+2*(2*s13*(s14+s23+s24)+s14*(s14+s23+s24)+s13*s13)*pow(s12,3)+(2*s13+s14)*pow(s12,4))*pow(s13+s14,-2)*pow(s12+s13+s14+s23+s24,-1)-8*(s12*(s13-s14)-(s13+s14)*(s13-s14-s24))*((s13+s14)*(s13+s23)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)+16*s12*s13*(s12+s14+s24)*(s12+s23+s24)*(s12+s13+s14+s23+s24)*pow(2*s12+s13+s14+s23+s24,-3)-32*s13*(s12*s12)*((s12+s23+s24)*(s12+s23+s24))*pow(2*s12+s13+s14+s23+s24,-3)-2*s13*pow(s12+s13+s23,-3)*(8*(87*s23*s24+s14*(18*s23+17*s24)+3*s13*(5*s14+39*s23+38*s24)+63*(s13*s13)+s14*s14+51*(s23*s23)+37*(s24*s24))*pow(s12,6)+8*(33*s13+5*s14+30*s23+26*s24)*pow(s12,7)+56*pow(s12,8)+8*pow(s12,5)*(3*(4*s14+59*s23+67*s24)*(s13*s13)+(s23+s24)*(65*s23*s24+3*s14*(8*s23+7*s24)+3*(s14*s14)+43*(s23*s23)+25*(s24*s24))+3*s13*(103*s23*s24+s14*(11*s23+19*s24)+2*(s14*s14)+53*(s23*s23)+50*(s24*s24))+62*pow(s13,3))+8*s12*s13*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(s13*s13*(-4*s14*(s23+2*s24)+s24*(5*s23+11*s24)+8*(s14*s14))+3*s14*s23*(s14*(7*s23+s24)+2*(s14*s14)-(s23+s24)*(s23+s24))-(s14-2*s24)*pow(s13,3)+3*s13*(-2*s14*s23*(s23+4*s24)+8*s23*(s14*s14)+s24*((s23+s24)*(s23+s24))+pow(s14,3)))+8*pow(s12,4)*(3*(s13*s13)*(-2*s14*(s23-11*s24)+5*(s14*s14)+20*(7*s23*s24+3*(s23*s23)+4*(s24*s24)))+(23*s23*s24+s14*(14*s23+11*s24)+3*(s14*s14)+18*(s23*s23)+8*(s24*s24))*((s23+s24)*(s23+s24))+(-5*s14+129*s23+181*s24)*pow(s13,3)+33*pow(s13,4)+3*s13*((7*s23+3*s24)*(s14*s14)+4*s14*(7*s23*s24+s23*s23+6*(s24*s24))+(34*s23+31*s24)*((s23+s24)*(s23+s24))+7*pow(s14,3)))+pow(s12,3)*(8*(-5*s14*(9*s23-5*s24)+270*s23*s24+20*(s14*s14)+87*(s23*s23)+191*(s24*s24))*pow(s13,3)+(-96*s14+360*s23+696*s24)*pow(s13,4)+72*pow(s13,5)+24*(s13*s13)*((17*s23+3*s24)*(s14*s14)+s14*(4*s23*s24-18*(s23*s23)+30*(s24*s24))+2*(13*s23+22*s24)*((s23+s24)*(s23+s24))+16*pow(s14,3))+8*(3*s23*s24+s14*(3*s23+2*s24)+s14*s14+3*(s23*s23)+s24*s24)*pow(s23+s24,3)+24*s13*(s14*s14*(6*s23*s24+11*(s23*s23)+3*(s24*s24))-6*s14*(s23-2*s24)*((s23+s24)*(s23+s24))+(23*s23+5*s24)*pow(s14,3)+5*pow(s14,4)+(10*s23+9*s24)*pow(s23+s24,3)))+8*s13*(s13+s14+s23+s24)*(s12*s12)*(s13*s13*(56*s23*s24-s14*(28*s23+19*s24)+22*(s14*s14)+10*(s23*s23)+58*(s24*s24))+(-7*s14+5*(s23+4*s24))*pow(s13,3)+pow(s13,4)+3*s13*(21*s23*(s14*s14)+s14*(-22*s23*s24-13*(s23*s23)+3*(s24*s24))+(3*s23+10*s24)*((s23+s24)*(s23+s24))+7*pow(s14,3))+3*(4*s23*(4*s23+s24)*(s14*s14)-s14*(6*s23-s24)*((s23+s24)*(s23+s24))+(12*s23+s24)*pow(s14,3)+pow(s14,4)+pow(s23+s24,4)))+8*s13*(3*s13*s14*s23*(s14-s24)+3*(s14*s14)*(s23*s23)+s13*s13*(-(s14*s24)+s14*s14+s24*s24))*pow(s13+s14+s23+s24,3))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-3)-8*s12*s13*(-7*s12+4*s13+5*s14+s24)*(s12+s23+s24)*pow(2*s12+s13+s14+s23+s24,-2)+8*s13*(-3*s12+s13+s14)*(s12+s14+s24)*(s12+s13+s14+s23+s24)*pow(2*s12+s13+s14+s23+s24,-2)+8*s13*(4*s12-2*(s13+2*s14))*(s12*s13*(s13+s14+s23+s24)*(s13*(-5*s14+3*s23+7*s24)+s13*s13+2*(-4*s14*s23-s14*s14+(s23+s24)*(s23+s24)))-s13*(2*s14*s23+s13*(s14-s24))*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(20*s13*(s23+s24)+(s23+s24)*(2*s14+7*s23+5*s24)+12*(s13*s13))*pow(s12,3)+(10*s13+s14+8*s23+7*s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(-4*(s14-4*s23-5*s24)*(s13*s13)+(s14+2*s23+s24)*((s23+s24)*(s23+s24))+s13*(-4*s14*(s23-s24)-6*(s14*s14)+12*((s23+s24)*(s23+s24)))+6*pow(s13,3)))*pow(s12+s13+s23,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-8*s13*(-s12+s13+s14)*(-4*s12+s13+2*s14+s24)*pow(2*s12+s13+s14+s23+s24,-1)+8*s12*s13*(-s12+s13+s14)*(s12*(s13-s14)+s13*s23-s14*(s14+s24)+s13*s13)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*s13*(s12*(3*s13+6*s14-s24)-(s13+s14)*(3*s14+s24)-3*(s12*s12))*(s12*(2*s13+s23+s24)+s13*(s13+s14+s23+s24)+s12*s12)*pow(s12+s13+s23,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+256*pow(s13,-1)*pow(s12+s23+s24,-1)*(2*(s12+s13+s14)*(s12*s12)*pow(s23+s24,-2)+s12*(3*s12+s13+3*s14-s23-s24)*pow(s23+s24,-1)-2*(9*s12+2*s13+4*s14)*s24*pow(s12+s13+s14+s23+s24,-1)+2*(6*s12+s13+2*s14)*(s12+s14+s24)*pow(s12+s13+s14+s23+s24,-1)+6*s24*(s12+s14+s24)*pow(s12+s13+s14+s23+s24,-1)-(s12*(8*s13+17*s14)+s14*(3*s13+3*s14+s23+s24)+18*(s12*s12))*pow(s12+s13+s14+s23+s24,-1)-6*(s24*s24)*pow(s12+s13+s14+s23+s24,-1)-2*((s12+s14+s24)*(s12+s14+s24))*pow(s12+s13+s14+s23+s24,-1)+2*s12*((s13+s23)*(-2*s14*s23+(s13-s23)*s24)*((s23+s24)*(s23+s24))+2*s12*(s13*(s14+s24)+s13*s13-s23*s23)*((s23+s24)*(s23+s24))+s12*s12*((2*s23+s24)*(s13*s13)+(2*s23+s24)*(s14*s14)+2*s14*((s23+s24)*(s23+s24))+s24*((s23+s24)*(s23+s24))+2*s13*(s14*(2*s23+s24)+2*((s23+s24)*(s23+s24))))+2*(s13*(2*s23+s24)+s14*(2*s23+s24)+(s23+s24)*(s23+s24))*pow(s12,3)+(2*s23+s24)*pow(s12,4))*pow(s23,-2)*pow(s23+s24,-2)*pow(s12+s13+s14+s23+s24,-1)+2*s12*(3*s12+s13+2*s14)*((s13+s23)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s23,-1)*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-2*(s12*s12)*((s12+s13+s14)*(s12+s13+s14))*pow(2*s12+s13+s14+s23+s24,-3)+2*pow(s12+s13+s23,-3)*((15*s23*s24+3*s13*(29*s14+39*s23+6*s24)+s14*(114*s23+17*s24)+51*(s13*s13)+37*(s14*s14)+63*(s23*s23)+s24*s24)*pow(s12,6)+(30*s13+26*s14+33*s23+5*s24)*pow(s12,7)+7*pow(s12,8)+pow(s12,5)*(3*(36*s14+53*s23+8*s24)*(s13*s13)+3*(50*s23+7*s24)*(s14*s14)+3*s13*(11*s23*s24+s14*(103*s23+15*s24)+30*(s14*s14)+59*(s23*s23)+s24*s24)+3*s14*(19*s23*s24+67*(s23*s23)+s24*s24)+2*s23*(6*s23*s24+31*(s23*s23)+3*(s24*s24))+43*pow(s13,3)+25*pow(s14,3))+s12*s23*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(3*(s14*(s23-2*s24)+s24*(-2*s23+7*s24))*(s13*s13)-3*s24*pow(s13,3)+s23*(2*s14*s23*(s23-4*s24)+11*s23*(s14*s14)+s24*(8*s23*s24-s23*s23+3*(s24*s24))+3*pow(s14,3))+s13*((6*s23-3*s24)*(s14*s14)-4*s24*(s23*s23)+24*s23*(s24*s24)+s14*(-24*s23*s24+5*(s23*s23)+3*(s24*s24))+6*pow(s24,3)))+pow(s12,4)*(3*(s13*s13)*(4*s23*s24+s14*(99*s23+13*s24)+24*(s14*s14)+60*(s23*s23)+s24*s24)+3*(s14*s14)*(24*s23*s24+80*(s23*s23)+s24*s24)+s14*s23*(66*s23*s24+181*(s23*s23)+9*(s24*s24))+(59*s14+102*s23+14*s24)*pow(s13,3)+18*pow(s13,4)+(93*s23+11*s24)*pow(s14,3)+3*s13*(12*(8*s23+s24)*(s14*s14)+2*s14*(14*s23*s24+70*(s23*s23)+s24*s24)+s23*(-2*s23*s24+43*(s23*s23)+7*(s24*s24))+13*pow(s14,3))+8*pow(s14,4)+s23*(-5*s24*(s23*s23)+15*s23*(s24*s24)+33*pow(s23,3)+21*pow(s24,3)))+s23*(s13+s14+s23+s24)*(s12*s12)*(s23*(58*s23+9*s24)*(s14*s14)+22*(s23*s23)*(s24*s24)+s13*s13*(s14*(48*s23-33*s24)-39*s23*s24+18*(s14*s14)+10*(s23*s23)+48*(s24*s24))+3*(4*s14+3*s23-6*s24)*pow(s13,3)+3*pow(s13,4)+3*(10*s23+s24)*pow(s14,3)+3*pow(s14,4)-7*s24*pow(s23,3)+pow(s23,4)+21*s23*pow(s24,3)+s14*(-19*s24*(s23*s23)+20*pow(s23,3)+3*pow(s24,3))+s13*(3*(23*s23-4*s24)*(s14*s14)-28*s24*(s23*s23)+63*s23*(s24*s24)+2*s14*(-33*s23*s24+28*(s23*s23)+6*(s24*s24))+12*pow(s14,3)+5*pow(s23,3)+36*pow(s24,3))+3*pow(s24,4))+pow(s12,3)*(s23*(s14*s14)*(90*s23*s24+191*(s23*s23)+9*(s24*s24))+(-18*s23*s24+s14*(117*s23+11*s24)+19*(s14*s14)+78*(s23*s23)+s24*s24)*pow(s13,3)+3*(4*s14+10*s23+s24)*pow(s13,4)+3*pow(s13,5)+(36*s23*s24+132*(s23*s23)+s24*s24)*pow(s14,3)+3*(s13*s13)*((57*s23+5*s24)*(s14*s14)+s14*(96*(s23*s23)+s24*s24)+s23*(-18*s23*s24+29*(s23*s23)+11*(s24*s24))+5*pow(s14,3))+(27*s23+2*s24)*pow(s14,4)+pow(s14,5)+s14*s23*(25*s24*(s23*s23)+9*s23*(s24*s24)+87*pow(s23,3)+15*pow(s24,3))+3*s13*(s14*s14*(18*s23*s24+114*(s23*s23)+s24*s24)+2*s14*s23*(2*s23*s24+45*(s23*s23)+3*(s24*s24))+(37*s23+3*s24)*pow(s14,3)+2*pow(s14,4)+s23*(-15*s24*(s23*s23)+17*s23*(s24*s24)+15*pow(s23,3)+23*pow(s24,3)))+s23*(20*(s23*s23)*(s24*s24)-12*s24*pow(s23,3)+9*pow(s23,4)+48*s23*pow(s24,3)+15*pow(s24,4)))+s23*(-(s14*s23*(3*s13+s23)*s24)+s14*s14*(s23*s23)+(3*s13*s23+3*(s13*s13)+s23*s23)*(s24*s24))*pow(s13+s14+s23+s24,3))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-3)+s12*(s12+s13+s14)*(5*s12+s13+3*s14-s23-s24)*pow(2*s12+s13+s14+s23+s24,-2)+(s13+s14)*(s12+s14+s24)*(s12+s13+s14+s23+s24)*pow(2*s12+s13+s14+s23+s24,-2)-2*(4*s12+s13+2*s14)*(s12*s23*(s13+s14+s23+s24)*(7*s14*s23+s13*(4*s14+3*s23-8*s24)-5*s23*s24+2*(s13*s13)+2*(s14*s14)+s23*s23-2*(s24*s24))+s23*(s14*s23-(2*s13+s23)*s24)*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(2*s14*(10*s23+s24)+2*s13*(6*s14+10*s23+s24)+7*(s13*s13)+5*(s14*s14)+12*(s23*s23))*pow(s12,3)+(8*s13+7*s14+10*s23+s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(4*s14*s23*(5*s23+s24)+(5*s14+12*s23+s24)*(s13*s13)+(12*s23+s24)*(s14*s14)+2*s13*(2*s23*(4*s23-s24)+s14*(12*s23+s24)+2*(s14*s14))+2*s23*(-2*s23*s24+3*(s23*s23)-3*(s24*s24))+2*pow(s13,3)+pow(s14,3)))*pow(s12+s13+s23,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-(s14*(2*s13+2*s14+s23+s24)+s12*(2*s13+7*s14-2*(s23+s24))+4*(s12*s12))*pow(2*s12+s13+s14+s23+s24,-1)+s12*(s13+s14)*(s13*s23+s12*(s23-s24)-s14*s24+s23*s23-s24*s24)*pow(s23+s24,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+(s12*(s13+s14+2*s23)+s23*(s13+s14+s23+s24)+s12*s12)*(s12*(6*s13+13*s14)+s14*(3*s13+3*s14+s23+s24)+12*(s12*s12))*pow(s12+s13+s23,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+64*pow(s12+s13+s14,-1)*pow(s23,-1)*(8*(s12+s23+s24)*(s12*s12)*pow(s13+s14,-2)+4*s12*(3*s12-s13-s14+s23+3*s24)*pow(s13+s14,-1)+24*s14*(s12+s14+s24)*pow(s12+s13+s14+s23+s24,-1)+8*(s12+s14+s24)*(6*s12+s23+2*s24)*pow(s12+s13+s14+s23+s24,-1)-8*s14*(9*s12+2*s23+4*s24)*pow(s12+s13+s14+s23+s24,-1)-4*(s12*(8*s23+17*s24)+s24*(s13+s14+3*(s23+s24))+18*(s12*s12))*pow(s12+s13+s14+s23+s24,-1)-24*(s14*s14)*pow(s12+s13+s14+s23+s24,-1)-8*((s12+s14+s24)*(s12+s14+s24))*pow(s12+s13+s14+s23+s24,-1)+8*s12*(-((s13+s23)*(-(s14*s23)+s13*(s14+2*s24))*((s13+s14)*(s13+s14)))-2*s12*(-(s23*(s14+s23+s24))+s13*s13)*((s13+s14)*(s13+s14))+s12*s12*((s14+4*s23+2*s24)*(s13*s13)+2*s13*(2*s14*(2*s23+s24)+s14*s14+(s23+s24)*(s23+s24))+s14*(2*s14*(2*s23+s24)+s14*s14+(s23+s24)*(s23+s24)))+2*(2*s13*(s14+s23+s24)+s14*(s14+s23+s24)+s13*s13)*pow(s12,3)+(2*s13+s14)*pow(s12,4))*pow(s13,-2)*pow(s13+s14,-2)*pow(s12+s13+s14+s23+s24,-1)+8*s12*(3*s12+s23+2*s24)*((s13+s14)*(s13+s23)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(s12*s12)*((s12+s23+s24)*(s12+s23+s24))*pow(2*s12+s13+s14+s23+s24,-3)+pow(s12+s13+s23,-3)*(8*(87*s23*s24+s14*(18*s23+17*s24)+3*s13*(5*s14+39*s23+38*s24)+63*(s13*s13)+s14*s14+51*(s23*s23)+37*(s24*s24))*pow(s12,6)+8*(33*s13+5*s14+30*s23+26*s24)*pow(s12,7)+56*pow(s12,8)+8*pow(s12,5)*(3*(4*s14+59*s23+67*s24)*(s13*s13)+(s23+s24)*(65*s23*s24+3*s14*(8*s23+7*s24)+3*(s14*s14)+43*(s23*s23)+25*(s24*s24))+3*s13*(103*s23*s24+s14*(11*s23+19*s24)+2*(s14*s14)+53*(s23*s23)+50*(s24*s24))+62*pow(s13,3))+8*s12*s13*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(s13*s13*(-4*s14*(s23+2*s24)+s24*(5*s23+11*s24)+8*(s14*s14))+3*s14*s23*(s14*(7*s23+s24)+2*(s14*s14)-(s23+s24)*(s23+s24))-(s14-2*s24)*pow(s13,3)+3*s13*(-2*s14*s23*(s23+4*s24)+8*s23*(s14*s14)+s24*((s23+s24)*(s23+s24))+pow(s14,3)))+8*pow(s12,4)*(3*(s13*s13)*(-2*s14*(s23-11*s24)+5*(s14*s14)+20*(7*s23*s24+3*(s23*s23)+4*(s24*s24)))+(23*s23*s24+s14*(14*s23+11*s24)+3*(s14*s14)+18*(s23*s23)+8*(s24*s24))*((s23+s24)*(s23+s24))+(-5*s14+129*s23+181*s24)*pow(s13,3)+33*pow(s13,4)+3*s13*((7*s23+3*s24)*(s14*s14)+4*s14*(7*s23*s24+s23*s23+6*(s24*s24))+(34*s23+31*s24)*((s23+s24)*(s23+s24))+7*pow(s14,3)))+pow(s12,3)*(8*(-5*s14*(9*s23-5*s24)+270*s23*s24+20*(s14*s14)+87*(s23*s23)+191*(s24*s24))*pow(s13,3)+(-96*s14+360*s23+696*s24)*pow(s13,4)+72*pow(s13,5)+24*(s13*s13)*((17*s23+3*s24)*(s14*s14)+s14*(4*s23*s24-18*(s23*s23)+30*(s24*s24))+2*(13*s23+22*s24)*((s23+s24)*(s23+s24))+16*pow(s14,3))+8*(3*s23*s24+s14*(3*s23+2*s24)+s14*s14+3*(s23*s23)+s24*s24)*pow(s23+s24,3)+24*s13*(s14*s14*(6*s23*s24+11*(s23*s23)+3*(s24*s24))-6*s14*(s23-2*s24)*((s23+s24)*(s23+s24))+(23*s23+5*s24)*pow(s14,3)+5*pow(s14,4)+(10*s23+9*s24)*pow(s23+s24,3)))+8*s13*(s13+s14+s23+s24)*(s12*s12)*(s13*s13*(56*s23*s24-s14*(28*s23+19*s24)+22*(s14*s14)+10*(s23*s23)+58*(s24*s24))+(-7*s14+5*(s23+4*s24))*pow(s13,3)+pow(s13,4)+3*s13*(21*s23*(s14*s14)+s14*(-22*s23*s24-13*(s23*s23)+3*(s24*s24))+(3*s23+10*s24)*((s23+s24)*(s23+s24))+7*pow(s14,3))+3*(4*s23*(4*s23+s24)*(s14*s14)-s14*(6*s23-s24)*((s23+s24)*(s23+s24))+(12*s23+s24)*pow(s14,3)+pow(s14,4)+pow(s23+s24,4)))+8*s13*(3*s13*s14*s23*(s14-s24)+3*(s14*s14)*(s23*s23)+s13*s13*(-(s14*s24)+s14*s14+s24*s24))*pow(s13+s14+s23+s24,3))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-3)+4*(s12+s14+s24)*(s23+s24)*(s12+s13+s14+s23+s24)*pow(2*s12+s13+s14+s23+s24,-2)+4*s12*(s12+s23+s24)*(5*s12-s13-s14+s23+3*s24)*pow(2*s12+s13+s14+s23+s24,-2)-8*(4*s12+s23+2*s24)*(s12*s13*(s13+s14+s23+s24)*(s13*(-5*s14+3*s23+7*s24)+s13*s13+2*(-4*s14*s23-s14*s14+(s23+s24)*(s23+s24)))-s13*(2*s14*s23+s13*(s14-s24))*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(20*s13*(s23+s24)+(s23+s24)*(2*s14+7*s23+5*s24)+12*(s13*s13))*pow(s12,3)+(10*s13+s14+8*s23+7*s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(-4*(s14-4*s23-5*s24)*(s13*s13)+(s14+2*s23+s24)*((s23+s24)*(s23+s24))+s13*(-4*s14*(s23-s24)-6*(s14*s14)+12*((s23+s24)*(s23+s24)))+6*pow(s13,3)))*pow(s12+s13+s23,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-4*(s12*(-2*s13-2*s14+2*s23+7*s24)+s24*(s13+s14+2*(s23+s24))+4*(s12*s12))*pow(2*s12+s13+s14+s23+s24,-1)+4*s12*(s23+s24)*(s12*(s13-s14)+s13*s23-s14*(s14+s24)+s13*s13)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)+4*(s12*(2*s13+s23+s24)+s13*(s13+s14+s23+s24)+s12*s12)*(s12*(6*s23+13*s24)+s24*(s13+s14+3*(s23+s24))+12*(s12*s12))*pow(s12+s13+s23,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+256*pow(s23,-1)*(-(s12*pow(s23+s24,-1))-((s23+s24)*(2*s13+2*s14+s23+s24)+s12*(s13+s14+3*(s23+s24))+s12*s12)*pow(s12+s13+s14,-1)*pow(s23+s24,-1)+(s12+s14+s24)*(s23+s24)*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)+s24*(s13+s14+s23+3*s24)*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)-2*(s24*s24)*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)-(2*s14*s23+3*s14*s24+3*s23*s24+s13*(2*s23+3*s24)+s12*(s13+s14+3*(s23+s24))+s12*s12+s23*s23+2*(s24*s24))*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)-s24*((s13+s23)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23+s24,-1)+2*(s12+s13+s14)*(s12*s12)*pow(2*s12+s13+s14+s23+s24,-3)+2*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-3)*((15*s23*s24+3*s13*(29*s14+39*s23+6*s24)+s14*(114*s23+17*s24)+51*(s13*s13)+37*(s14*s14)+63*(s23*s23)+s24*s24)*pow(s12,6)+(30*s13+26*s14+33*s23+5*s24)*pow(s12,7)+7*pow(s12,8)+pow(s12,5)*(3*(36*s14+53*s23+8*s24)*(s13*s13)+3*(50*s23+7*s24)*(s14*s14)+3*s13*(11*s23*s24+s14*(103*s23+15*s24)+30*(s14*s14)+59*(s23*s23)+s24*s24)+3*s14*(19*s23*s24+67*(s23*s23)+s24*s24)+2*s23*(6*s23*s24+31*(s23*s23)+3*(s24*s24))+43*pow(s13,3)+25*pow(s14,3))+s12*s23*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(3*(s14*(s23-2*s24)+s24*(-2*s23+7*s24))*(s13*s13)-3*s24*pow(s13,3)+s23*(2*s14*s23*(s23-4*s24)+11*s23*(s14*s14)+s24*(8*s23*s24-s23*s23+3*(s24*s24))+3*pow(s14,3))+s13*((6*s23-3*s24)*(s14*s14)-4*s24*(s23*s23)+24*s23*(s24*s24)+s14*(-24*s23*s24+5*(s23*s23)+3*(s24*s24))+6*pow(s24,3)))+pow(s12,4)*(3*(s13*s13)*(4*s23*s24+s14*(99*s23+13*s24)+24*(s14*s14)+60*(s23*s23)+s24*s24)+3*(s14*s14)*(24*s23*s24+80*(s23*s23)+s24*s24)+s14*s23*(66*s23*s24+181*(s23*s23)+9*(s24*s24))+(59*s14+102*s23+14*s24)*pow(s13,3)+18*pow(s13,4)+(93*s23+11*s24)*pow(s14,3)+3*s13*(12*(8*s23+s24)*(s14*s14)+2*s14*(14*s23*s24+70*(s23*s23)+s24*s24)+s23*(-2*s23*s24+43*(s23*s23)+7*(s24*s24))+13*pow(s14,3))+8*pow(s14,4)+s23*(-5*s24*(s23*s23)+15*s23*(s24*s24)+33*pow(s23,3)+21*pow(s24,3)))+s23*(s13+s14+s23+s24)*(s12*s12)*(s23*(58*s23+9*s24)*(s14*s14)+22*(s23*s23)*(s24*s24)+s13*s13*(s14*(48*s23-33*s24)-39*s23*s24+18*(s14*s14)+10*(s23*s23)+48*(s24*s24))+3*(4*s14+3*s23-6*s24)*pow(s13,3)+3*pow(s13,4)+3*(10*s23+s24)*pow(s14,3)+3*pow(s14,4)-7*s24*pow(s23,3)+pow(s23,4)+21*s23*pow(s24,3)+s14*(-19*s24*(s23*s23)+20*pow(s23,3)+3*pow(s24,3))+s13*(3*(23*s23-4*s24)*(s14*s14)-28*s24*(s23*s23)+63*s23*(s24*s24)+2*s14*(-33*s23*s24+28*(s23*s23)+6*(s24*s24))+12*pow(s14,3)+5*pow(s23,3)+36*pow(s24,3))+3*pow(s24,4))+pow(s12,3)*(s23*(s14*s14)*(90*s23*s24+191*(s23*s23)+9*(s24*s24))+(-18*s23*s24+s14*(117*s23+11*s24)+19*(s14*s14)+78*(s23*s23)+s24*s24)*pow(s13,3)+3*(4*s14+10*s23+s24)*pow(s13,4)+3*pow(s13,5)+(36*s23*s24+132*(s23*s23)+s24*s24)*pow(s14,3)+3*(s13*s13)*((57*s23+5*s24)*(s14*s14)+s14*(96*(s23*s23)+s24*s24)+s23*(-18*s23*s24+29*(s23*s23)+11*(s24*s24))+5*pow(s14,3))+(27*s23+2*s24)*pow(s14,4)+pow(s14,5)+s14*s23*(25*s24*(s23*s23)+9*s23*(s24*s24)+87*pow(s23,3)+15*pow(s24,3))+3*s13*(s14*s14*(18*s23*s24+114*(s23*s23)+s24*s24)+2*s14*s23*(2*s23*s24+45*(s23*s23)+3*(s24*s24))+(37*s23+3*s24)*pow(s14,3)+2*pow(s14,4)+s23*(-15*s24*(s23*s23)+17*s23*(s24*s24)+15*pow(s23,3)+23*pow(s24,3)))+s23*(20*(s23*s23)*(s24*s24)-12*s24*pow(s23,3)+9*pow(s23,4)+48*s23*pow(s24,3)+15*pow(s24,4)))+s23*(-(s14*s23*(3*s13+s23)*s24)+s14*s14*(s23*s23)+(3*s13*s23+3*(s13*s13)+s23*s23)*(s24*s24))*pow(s13+s14+s23+s24,3))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-3)-2*s12*(s12-s23-s24)*pow(2*s12+s13+s14+s23+s24,-2)-2*(s12-s23-2*s24)*(s12*s23*(s13+s14+s23+s24)*(7*s14*s23+s13*(4*s14+3*s23-8*s24)-5*s23*s24+2*(s13*s13)+2*(s14*s14)+s23*s23-2*(s24*s24))+s23*(s14*s23-(2*s13+s23)*s24)*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(2*s14*(10*s23+s24)+2*s13*(6*s14+10*s23+s24)+7*(s13*s13)+5*(s14*s14)+12*(s23*s23))*pow(s12,3)+(8*s13+7*s14+10*s23+s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(4*s14*s23*(5*s23+s24)+(5*s14+12*s23+s24)*(s13*s13)+(12*s23+s24)*(s14*s14)+2*s13*(2*s23*(4*s23-s24)+s14*(12*s23+s24)+2*(s14*s14))+2*s23*(-2*s23*s24+3*(s23*s23)-3*(s24*s24))+2*pow(s13,3)+pow(s14,3)))*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+(s12*(s13+s14+s23+s24)+(s23+s24)*(s13+s14+s23+s24)+2*(s12*s12))*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)+(s12*(s13+s14+2*s23)+s23*(s13+s14+s23+s24)+s12*s12)*(s12*(s13+s14+s23-s24)+(s23+s24)*(s13+s14+s23+3*s24)+2*(s12*s12))*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+256*pow(s13,-1)*(-(s24*(s12+s13+s14+s23+s24)*pow(s23+s24,-2))-(s12+s13+s14)*(s12*s12)*pow(s24,-1)*pow(s23+s24,-2)-(s12+s13)*(s12-s24)*pow(s24,-1)*pow(s23+s24,-1)+4*s24*pow(s12+s13+s14+s23+s24,-1)-2*(s12+s14+s24)*pow(s12+s13+s14+s23+s24,-1)+(8*s12+2*s13+5*s14+s24)*pow(s12+s13+s14+s23+s24,-1)-(s12+s14+s24)*(2*s12+s14+2*s24)*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)+(s13*(s14+s24)+s12*(2*s13+5*s14+2*s24)+s14*(2*s14+3*s24)+4*(s12*s12))*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)-((s13+s23)*(-2*s14*s23+(s13-s23)*s24)*((s23+s24)*(s23+s24))+2*s12*(s13*(s14+s24)+s13*s13-s23*s23)*((s23+s24)*(s23+s24))+s12*s12*((2*s23+s24)*(s13*s13)+(2*s23+s24)*(s14*s14)+2*s14*((s23+s24)*(s23+s24))+s24*((s23+s24)*(s23+s24))+2*s13*(s14*(2*s23+s24)+2*((s23+s24)*(s23+s24))))+2*(s13*(2*s23+s24)+s14*(2*s23+s24)+(s23+s24)*(s23+s24))*pow(s12,3)+(2*s23+s24)*pow(s12,4))*pow(s23,-2)*pow(s23+s24,-2)*pow(s12+s13+s14+s23+s24,-1)-(2*s12+s13+2*s14)*((s13+s23)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s23,-1)*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+2*s12*(s12+s13+s14)*(s12+s14+s24)*(s12+s13+s14+s23+s24)*pow(s24,-1)*pow(2*s12+s13+s14+s23+s24,-3)+4*(s12*s12)*((s12+s13+s14)*(s12+s13+s14))*pow(s24,-1)*pow(2*s12+s13+s14+s23+s24,-3)-2*pow(s12+s13+s23,-3)*pow(s24,-1)*((15*s23*s24+3*s13*(29*s14+39*s23+6*s24)+s14*(114*s23+17*s24)+51*(s13*s13)+37*(s14*s14)+63*(s23*s23)+s24*s24)*pow(s12,6)+(30*s13+26*s14+33*s23+5*s24)*pow(s12,7)+7*pow(s12,8)+pow(s12,5)*(3*(36*s14+53*s23+8*s24)*(s13*s13)+3*(50*s23+7*s24)*(s14*s14)+3*s13*(11*s23*s24+s14*(103*s23+15*s24)+30*(s14*s14)+59*(s23*s23)+s24*s24)+3*s14*(19*s23*s24+67*(s23*s23)+s24*s24)+2*s23*(6*s23*s24+31*(s23*s23)+3*(s24*s24))+43*pow(s13,3)+25*pow(s14,3))+s12*s23*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(3*(s14*(s23-2*s24)+s24*(-2*s23+7*s24))*(s13*s13)-3*s24*pow(s13,3)+s23*(2*s14*s23*(s23-4*s24)+11*s23*(s14*s14)+s24*(8*s23*s24-s23*s23+3*(s24*s24))+3*pow(s14,3))+s13*((6*s23-3*s24)*(s14*s14)-4*s24*(s23*s23)+24*s23*(s24*s24)+s14*(-24*s23*s24+5*(s23*s23)+3*(s24*s24))+6*pow(s24,3)))+pow(s12,4)*(3*(s13*s13)*(4*s23*s24+s14*(99*s23+13*s24)+24*(s14*s14)+60*(s23*s23)+s24*s24)+3*(s14*s14)*(24*s23*s24+80*(s23*s23)+s24*s24)+s14*s23*(66*s23*s24+181*(s23*s23)+9*(s24*s24))+(59*s14+102*s23+14*s24)*pow(s13,3)+18*pow(s13,4)+(93*s23+11*s24)*pow(s14,3)+3*s13*(12*(8*s23+s24)*(s14*s14)+2*s14*(14*s23*s24+70*(s23*s23)+s24*s24)+s23*(-2*s23*s24+43*(s23*s23)+7*(s24*s24))+13*pow(s14,3))+8*pow(s14,4)+s23*(-5*s24*(s23*s23)+15*s23*(s24*s24)+33*pow(s23,3)+21*pow(s24,3)))+s23*(s13+s14+s23+s24)*(s12*s12)*(s23*(58*s23+9*s24)*(s14*s14)+22*(s23*s23)*(s24*s24)+s13*s13*(s14*(48*s23-33*s24)-39*s23*s24+18*(s14*s14)+10*(s23*s23)+48*(s24*s24))+3*(4*s14+3*s23-6*s24)*pow(s13,3)+3*pow(s13,4)+3*(10*s23+s24)*pow(s14,3)+3*pow(s14,4)-7*s24*pow(s23,3)+pow(s23,4)+21*s23*pow(s24,3)+s14*(-19*s24*(s23*s23)+20*pow(s23,3)+3*pow(s24,3))+s13*(3*(23*s23-4*s24)*(s14*s14)-28*s24*(s23*s23)+63*s23*(s24*s24)+2*s14*(-33*s23*s24+28*(s23*s23)+6*(s24*s24))+12*pow(s14,3)+5*pow(s23,3)+36*pow(s24,3))+3*pow(s24,4))+pow(s12,3)*(s23*(s14*s14)*(90*s23*s24+191*(s23*s23)+9*(s24*s24))+(-18*s23*s24+s14*(117*s23+11*s24)+19*(s14*s14)+78*(s23*s23)+s24*s24)*pow(s13,3)+3*(4*s14+10*s23+s24)*pow(s13,4)+3*pow(s13,5)+(36*s23*s24+132*(s23*s23)+s24*s24)*pow(s14,3)+3*(s13*s13)*((57*s23+5*s24)*(s14*s14)+s14*(96*(s23*s23)+s24*s24)+s23*(-18*s23*s24+29*(s23*s23)+11*(s24*s24))+5*pow(s14,3))+(27*s23+2*s24)*pow(s14,4)+pow(s14,5)+s14*s23*(25*s24*(s23*s23)+9*s23*(s24*s24)+87*pow(s23,3)+15*pow(s24,3))+3*s13*(s14*s14*(18*s23*s24+114*(s23*s23)+s24*s24)+2*s14*s23*(2*s23*s24+45*(s23*s23)+3*(s24*s24))+(37*s23+3*s24)*pow(s14,3)+2*pow(s14,4)+s23*(-15*s24*(s23*s23)+17*s23*(s24*s24)+15*pow(s23,3)+23*pow(s24,3)))+s23*(20*(s23*s23)*(s24*s24)-12*s24*pow(s23,3)+9*pow(s23,4)+48*s23*pow(s24,3)+15*pow(s24,4)))+s23*(-(s14*s23*(3*s13+s23)*s24)+s14*s14*(s23*s23)+(3*s13*s23+3*(s13*s13)+s23*s23)*(s24*s24))*pow(s13+s14+s23+s24,3))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-3)-s12*(s12+s13+s14)*(8*s12+2*s13+5*s14-s24)*pow(s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-(s12+s14-s24)*(s12+s14+s24)*(s12+s13+s14+s23+s24)*pow(s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-s12*pow(s24,-1)*pow(s23+s24,-2)*((6*s23*s24+3*(s23*s23)-s24*s24)*pow(s12,4)+s12*s12*(5*s23*(s23+2*s24)*(s13*s13)+s14*s14*(4*s23*s24+2*(s23*s23)-3*(s24*s24))+(30*s23*s24+7*(s23*s23)-11*(s24*s24))*((s23+s24)*(s23+s24))+2*s14*(20*s24*(s23*s23)+7*s23*(s24*s24)+6*pow(s23,3)-7*pow(s24,3))+2*s13*(25*s24*(s23*s23)+s14*(8*s23*s24+4*(s23*s23)-s24*s24)+17*s23*(s24*s24)+6*pow(s23,3)-2*pow(s24,3)))+pow(s12,3)*(30*s24*(s23*s23)+s14*(10*s23*s24+5*(s23*s23)-3*(s24*s24))+s13*(14*s23*s24+7*(s23*s23)-s24*s24)+16*s23*(s24*s24)+8*pow(s23,3)-6*pow(s24,3))+2*(s23+s24)*(s23*(4*s24*(s23+s24)+s14*(s23+4*s24))*(s13*s13)+s14*(4*s23*s24+s23*s23-3*(s24*s24))*((s23+s24)*(s23+s24))+s23*s24*pow(s13,3)-s24*s24*pow(s14,3)+s13*(s14*s14*(3*s23*s24+s23*s23-s24*s24)+(5*s23-s24)*s24*((s23+s24)*(s23+s24))+2*s14*(5*s24*(s23*s23)+3*s23*(s24*s24)+pow(s23,3)-pow(s24,3)))+s14*s14*(3*s24*(s23*s23)-s23*(s24*s24)+pow(s23,3)-3*pow(s24,3))+(2*s23-s24)*s24*pow(s23+s24,3))+s12*(s23*(s13*s13)*(22*s23*s24+3*s14*(s23+2*s24)+4*(s23*s23)+18*(s24*s24))+s14*(26*s23*s24+9*(s23*s23)-17*(s24*s24))*((s23+s24)*(s23+s24))+s23*(s23+2*s24)*pow(s13,3)-s24*s24*pow(s14,3)+s13*(s14*s14*(4*s23*s24+2*(s23*s23)-s24*s24)+(34*s23*s24+5*(s23*s23)-5*(s24*s24))*((s23+s24)*(s23+s24))+2*s14*(23*s24*(s23*s23)+14*s23*(s24*s24)+6*pow(s23,3)-3*pow(s24,3)))+2*(s14*s14)*(6*s24*(s23*s23)-s23*(s24*s24)+2*pow(s23,3)-5*pow(s24,3))+2*(9*s23*s24+s23*s23-4*(s24*s24))*pow(s23+s24,3)))*pow(s12+s23+s24,-2)*pow(2*s12+s13+s14+s23+s24,-2)+2*(3*s12+s13+2*s14)*(s12*s23*(s13+s14+s23+s24)*(7*s14*s23+s13*(4*s14+3*s23-8*s24)-5*s23*s24+2*(s13*s13)+2*(s14*s14)+s23*s23-2*(s24*s24))+s23*(s14*s23-(2*s13+s23)*s24)*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(2*s14*(10*s23+s24)+2*s13*(6*s14+10*s23+s24)+7*(s13*s13)+5*(s14*s14)+12*(s23*s23))*pow(s12,3)+(8*s13+7*s14+10*s23+s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(4*s14*s23*(5*s23+s24)+(5*s14+12*s23+s24)*(s13*s13)+(12*s23+s24)*(s14*s14)+2*s13*(2*s23*(4*s23-s24)+s14*(12*s23+s24)+2*(s14*s14))+2*s23*(-2*s23*s24+3*(s23*s23)-3*(s24*s24))+2*pow(s13,3)+pow(s14,3)))*pow(s12+s13+s23,-2)*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+(s13*(s14-s24)+2*s12*(s13+2*s14-s24)+4*(s12*s12)+2*(s14*s14))*pow(s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-s12*(s12+s13+2*s14+s24)*(-(s13*s23)+s14*s24+s12*(-s23+s24)-s23*s23+s24*s24)*pow(s24,-1)*pow(s23+s24,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-(s12*(s13+s14+2*s23)+s23*(s13+s14+s23+s24)+s12*s12)*(4*s12*(s13+2*s14)+s14*(2*s13+3*s14+s24)+6*(s12*s12))*pow(s12+s13+s23,-1)*pow(s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+256*pow(s13,-1)*pow(s24,-2)*(s12*(s12+s13+s14)*(s12-s23)*s24*pow(s23+s24,-2)-s23*s24*(-s12+s23+s24)*(s12+s13+s14+s23+s24)*pow(s23+s24,-2)+s24*(-(s12*(2*s23+s24))+(s23+s24)*(s13+2*s23+s24)+2*(s12*s12))*pow(s23+s24,-1)-2*s23*(s12+s13+s23)*s24*pow(s12+s13+s14+s23+s24,-1)-(s12+s13+s23)*s24*(s12-s13-3*s23+s24)*pow(s12+s13+s14+s23+s24,-1)-s23*s24*(-5*s12+s13+7*s23+2*s24)*pow(s12+s13+s14+s23+s24,-1)-s24*(-((2*s13+4*s23-s24)*(s23+s24))+s12*(6*s23+s24)-2*(s12*s12))*pow(s12+s13+s14+s23+s24,-1)+4*s24*(s23*s23)*pow(s12+s13+s14+s23+s24,-1)-((s14+s24)*(s14*s23-(2*s13+s23)*s24)*((s23+s24)*(s23+s24))+2*s12*(s13*s14+s14*s23+s14*s14-s24*s24)*((s23+s24)*(s23+s24))+s12*s12*((s23+2*s24)*(s13*s13)+(s23+2*s24)*(s14*s14)+4*s14*((s23+s24)*(s23+s24))+s23*((s23+s24)*(s23+s24))+2*s13*(s14*(s23+2*s24)+(s23+s24)*(s23+s24)))+2*(s13*(s23+2*s24)+s14*(s23+2*s24)+(s23+s24)*(s23+s24))*pow(s12,3)+s23*pow(s12,4)+2*s24*pow(s12,4))*pow(s23+s24,-2)*pow(s12+s13+s14+s23+s24,-1)-(s12*(-s23+s24)+(s13+s23-s24)*(s23+s24))*((s14+s24)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+2*s12*(s12+s13+s14)*(s12+s13+s23)*s24*(s12+s13+s14+s23+s24)*pow(2*s12+s13+s14+s23+s24,-3)-4*s24*(s12*s12)*((s12+s13+s14)*(s12+s13+s14))*pow(2*s12+s13+s14+s23+s24,-3)-2*s24*pow(s12+s14+s24,-3)*((15*s23*s24+9*s14*(2*s23+13*s24)+s13*(87*s14+17*s23+114*s24)+37*(s13*s13)+51*(s14*s14)+s23*s23+63*(s24*s24))*pow(s12,6)+(26*s13+30*s14+5*s23+33*s24)*pow(s12,7)+7*pow(s12,8)+s12*s24*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(s13*s13*(-3*s14*(s23-2*s24)+11*(s24*s24))+s13*((-6*s23+3*s24)*(s14*s14)+2*(-4*s23+s24)*(s24*s24)+s14*(-24*s23*s24+3*(s23*s23)+5*(s24*s24)))+3*s24*pow(s13,3)+s23*(3*(7*s23-2*s24)*(s14*s14)+s14*(24*s23*s24+6*(s23*s23)-4*(s24*s24))+s24*(8*s23*s24+3*(s23*s23)-s24*s24)-3*pow(s14,3)))+pow(s12,5)*(3*(30*s14+7*s23+50*s24)*(s13*s13)+3*(8*s23+53*s24)*(s14*s14)+2*s24*(6*s23*s24+3*(s23*s23)+31*(s24*s24))+3*s14*(11*s23*s24+s23*s23+59*(s24*s24))+3*s13*(19*s23*s24+s14*(15*s23+103*s24)+36*(s14*s14)+s23*s23+67*(s24*s24))+25*pow(s13,3)+43*pow(s14,3))+pow(s12,4)*(3*s14*s24*(-2*s23*s24+7*(s23*s23)+43*(s24*s24))+3*(s14*s14)*(4*s23*s24+s23*s23+60*(s24*s24))+3*(s13*s13)*(24*s23*s24+12*s14*(s23+8*s24)+24*(s14*s14)+s23*s23+80*(s24*s24))+(39*s14+11*s23+93*s24)*pow(s13,3)+8*pow(s13,4)+2*(7*s23+51*s24)*pow(s14,3)+s13*(3*(13*s23+99*s24)*(s14*s14)+6*s14*(14*s23*s24+s23*s23+70*(s24*s24))+s24*(66*s23*s24+9*(s23*s23)+181*(s24*s24))+59*pow(s14,3))+18*pow(s14,4)+s24*(15*s24*(s23*s23)-5*s23*(s24*s24)+21*pow(s23,3)+33*pow(s24,3)))+s24*(s13+s14+s23+s24)*(s12*s12)*(s13*s13*(s24*(9*s23+58*s24)+s14*(-12*s23+69*s24)+18*(s14*s14))+22*(s23*s23)*(s24*s24)+s14*s14*(-39*s23*s24+48*(s23*s23)+10*(s24*s24))+3*(4*s14+s23+10*s24)*pow(s13,3)+3*pow(s13,4)+9*(-2*s23+s24)*pow(s14,3)+3*pow(s14,4)+21*s24*pow(s23,3)+3*pow(s23,4)-7*s23*pow(s24,3)+s14*(63*s24*(s23*s23)-28*s23*(s24*s24)+36*pow(s23,3)+5*pow(s24,3))+s13*((-33*s23+48*s24)*(s14*s14)-19*s23*(s24*s24)+2*s14*(-33*s23*s24+6*(s23*s23)+28*(s24*s24))+12*pow(s14,3)+3*pow(s23,3)+20*pow(s24,3))+pow(s24,4))+pow(s12,3)*(3*s24*(s14*s14)*(-18*s23*s24+11*(s23*s23)+29*(s24*s24))+(36*s23*s24+3*s14*(3*s23+37*s24)+15*(s14*s14)+s23*s23+132*(s24*s24))*pow(s13,3)+(6*s14+2*s23+27*s24)*pow(s13,4)+pow(s13,5)+(-18*s23*s24+s23*s23+78*(s24*s24))*pow(s14,3)+s13*s13*(3*(5*s23+57*s24)*(s14*s14)+3*s14*(18*s23*s24+s23*s23+114*(s24*s24))+s24*(90*s23*s24+9*(s23*s23)+191*(s24*s24))+19*pow(s14,3))+3*(s23+10*s24)*pow(s14,4)+3*pow(s14,5)+3*s14*s24*(17*s24*(s23*s23)-15*s23*(s24*s24)+23*pow(s23,3)+15*pow(s24,3))+s13*(6*s14*s24*(2*s23*s24+3*(s23*s23)+45*(s24*s24))+3*(s14*s14)*(s23*s23+96*(s24*s24))+(11*s23+117*s24)*pow(s14,3)+12*pow(s14,4)+s24*(9*s24*(s23*s23)+25*s23*(s24*s24)+15*pow(s23,3)+87*pow(s24,3)))+s24*(20*(s23*s23)*(s24*s24)+48*s24*pow(s23,3)+15*pow(s23,4)-12*s23*pow(s24,3)+9*pow(s24,4)))+s24*(3*s14*s23*(-s13+s23)*s24+3*(s14*s14)*(s23*s23)+(-(s13*s23)+s13*s13+s23*s23)*(s24*s24))*pow(s13+s14+s23+s24,3))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-3)+s12*(s12+s13+s14)*(7*s12-s13-5*s23-4*s24)*s24*pow(2*s12+s13+s14+s23+s24,-2)-(s12+s13+s23)*(3*s12-s23-s24)*s24*(s12+s13+s14+s23+s24)*pow(2*s12+s13+s14+s23+s24,-2)+s24*(4*s12-2*(2*s23+s24))*(s12*s24*(s13+s14+s23+s24)*(-5*s23*s24+s14*(-8*s23+3*s24)+s13*(4*s14+7*s24)+2*(s13*s13)+2*(s14*s14)-2*(s23*s23)+s24*s24)+s24*(-2*s14*s23+(s13-s23)*s24)*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(2*s14*(s23+10*s24)+2*s13*(6*s14+s23+10*s24)+5*(s13*s13)+7*(s14*s14)+12*(s24*s24))*pow(s12,3)+(7*s13+8*s14+s23+10*s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(-4*s14*(s23-4*s24)*s24+(4*s14+s23+12*s24)*(s13*s13)+(s23+12*s24)*(s14*s14)+s13*(4*s24*(s23+5*s24)+2*s14*(s23+12*s24)+5*(s14*s14))+2*s24*(-2*s23*s24-3*(s23*s23)+3*(s24*s24))+pow(s13,3)+2*pow(s14,3)))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-(4*s12-s13-2*s23-s24)*(s12-s23-s24)*s24*pow(2*s12+s13+s14+s23+s24,-1)+s12*s24*(-s12+s23+s24)*(-(s13*s23)+s14*s24+s12*(-s23+s24)-s23*s23+s24*s24)*pow(s23+s24,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+s24*(-((s13+3*s23)*(s23+s24))+s12*(-s13+6*s23+3*s24)-3*(s12*s12))*(s24*(s13+s14+s23+s24)+s12*(s13+s14+2*s24)+s12*s12)*pow(s12+s14+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+512*pow(s12+s13+s14,-1)*pow(s23,-1)*(-((s12+s23+s24)*(s12*s12)*pow(s13+s14,-2))-s12*(s12-s13-s14)*pow(s13+s14,-1)+s13*(-7*s12+2*(s13+s14-s23))*pow(s12+s13+s14+s23+s24,-1)+3*s13*(s12+s13+s23)*pow(s12+s13+s14+s23+s24,-1)+(s12+s13+s23)*(5*s12-s13-s14+s23)*pow(s12+s13+s14+s23+s24,-1)+(s12*(4*s13+4*s14-3*s23)+(s13+s14)*s23-5*(s12*s12))*pow(s12+s13+s14+s23+s24,-1)-3*(s13*s13)*pow(s12+s13+s14+s23+s24,-1)-(s12+s13+s23)*(s12+s13+s23)*pow(s12+s13+s14+s23+s24,-1)+s12*(-((2*s14*s23+s13*(s14-s24))*(s14+s24)*((s13+s14)*(s13+s14)))+2*s12*(s24*(s13+s23+s24)-s14*s14)*((s13+s14)*(s13+s14))+2*(s13*(2*s14+s23+s24)+s14*(s14+2*(s23+s24))+s13*s13)*pow(s12,3)+(s13+2*s14)*pow(s12,4)+s12*s12*(2*(s14+s23+2*s24)*(s13*s13)+2*s14*(s14*(s23+2*s24)+(s23+s24)*(s23+s24))+s13*(4*s14*(s23+2*s24)+s14*s14+(s23+s24)*(s23+s24))+pow(s13,3)))*pow(s14,-2)*pow(s13+s14,-2)*pow(s12+s13+s14+s23+s24,-1)+s12*(2*s12-s13-s14+s23)*((s13+s14)*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s14,-1)*pow(s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)+s12*s12*((s12+s23+s24)*(s12+s23+s24))*pow(2*s12+s13+s14+s23+s24,-3)+pow(s12+s14+s24,-3)*((87*s23*s24+s13*(15*s14+17*s23+18*s24)+3*s14*(38*s23+39*s24)+s13*s13+63*(s14*s14)+37*(s23*s23)+51*(s24*s24))*pow(s12,6)+(5*s13+33*s14+26*s23+30*s24)*pow(s12,7)+7*pow(s12,8)+s12*s14*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(s13*s13*(24*s14*s24+3*s24*(s23+7*s24)+8*(s14*s14))+s14*s23*(s14*(11*s23+5*s24)+2*(s14*s14)+3*((s23+s24)*(s23+s24)))+3*(s14+2*s24)*pow(s13,3)-s13*(6*s14*s24*(4*s23+s24)+4*(2*s23+s24)*(s14*s14)+3*s24*((s23+s24)*(s23+s24))+pow(s14,3)))+pow(s12,4)*(60*(s14*s14)*(7*s23*s24+4*(s23*s23)+3*(s24*s24))+3*s14*(31*s23+34*s24)*((s23+s24)*(s23+s24))+(23*s23*s24+8*(s23*s23)+18*(s24*s24))*((s23+s24)*(s23+s24))+3*(s13*s13)*(s14*(3*s23+7*s24)+5*(s14*s14)+(s23+s24)*(s23+s24))+21*s14*pow(s13,3)+s13*((66*s23-6*s24)*(s14*s14)+12*s14*(7*s23*s24+6*(s23*s23)+s24*s24)+(11*s23+14*s24)*((s23+s24)*(s23+s24))-5*pow(s14,3))+(181*s23+129*s24)*pow(s14,3)+33*pow(s14,4))+pow(s12,5)*(3*(2*s14+s23+s24)*(s13*s13)+3*(67*s23+59*s24)*(s14*s14)+90*s24*(s23*s23)+108*s23*(s24*s24)+3*s13*(15*s23*s24+s14*(19*s23+11*s24)+4*(s14*s14)+7*(s23*s23)+8*(s24*s24))+3*s14*(103*s23*s24+50*(s23*s23)+53*(s24*s24))+62*pow(s14,3)+25*pow(s23,3)+43*pow(s24,3))+pow(s12,3)*(6*(22*s23+13*s24)*(s14*s14)*((s23+s24)*(s23+s24))+3*s14*(16*s14+5*s23+23*s24)*pow(s13,3)+15*s14*pow(s13,4)+(270*s23*s24+191*(s23*s23)+87*(s24*s24))*pow(s14,3)+(87*s23+45*s24)*pow(s14,4)+9*pow(s14,5)+3*s14*(9*s23+10*s24)*pow(s23+s24,3)+(3*s23*s24+s23*s23+3*(s24*s24))*pow(s23+s24,3)+s13*s13*((9*s23+51*s24)*(s14*s14)+3*s14*(6*s23*s24+3*(s23*s23)+11*(s24*s24))+20*pow(s14,3)+pow(s23+s24,3))+s13*(6*(s14*s14)*(2*s23*s24+15*(s23*s23)-9*(s24*s24))+18*s14*(2*s23-s24)*((s23+s24)*(s23+s24))+5*(5*s23-9*s24)*pow(s14,3)-12*pow(s14,4)+(2*s23+3*s24)*pow(s23+s24,3)))+s14*(s13+s14+s23+s24)*(s12*s12)*(s13*s13*(63*s14*s24+12*s24*(s23+4*s24)+22*(s14*s14))+2*(s14*s14)*(28*s23*s24+29*(s23*s23)+5*(s24*s24))+3*s14*(10*s23+3*s24)*((s23+s24)*(s23+s24))+3*(7*s14+s23+12*s24)*pow(s13,3)+3*pow(s13,4)+5*(4*s23+s24)*pow(s14,3)-s13*((19*s23+28*s24)*(s14*s14)+s14*(66*s23*s24-9*(s23*s23)+39*(s24*s24))-3*(s23-6*s24)*((s23+s24)*(s23+s24))+7*pow(s14,3))+pow(s14,4)+3*pow(s23+s24,4))+s14*(-(s13*s14*s23*(s14+3*s24))+s14*s14*(s23*s23)+s13*s13*(3*s14*s24+s14*s14+3*(s24*s24)))*pow(s13+s14+s23+s24,3))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-3)-s12*(2*s12-s13-s14)*(s12+s23+s24)*pow(2*s12+s13+s14+s23+s24,-2)-(3*s12-s13-s14+s23)*(s12*s14*(s13+s14+s23+s24)*(s14*(7*s23+3*s24)-s13*(5*s14+8*s24)-2*(s13*s13)+s14*s14+2*((s23+s24)*(s23+s24)))-s14*(-(s14*s23)+s13*(s14+2*s24))*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(20*s14*(s23+s24)+(s23+s24)*(2*s13+5*s23+7*s24)+12*(s14*s14))*pow(s12,3)+(s13+10*s14+7*s23+8*s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(-6*s14*(s13*s13)+4*(5*s23+4*s24)*(s14*s14)+12*s14*((s23+s24)*(s23+s24))+(s23+2*s24)*((s23+s24)*(s23+s24))+s13*(4*s14*(s23-s24)-4*(s14*s14)+(s23+s24)*(s23+s24))+6*pow(s14,3)))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+s12*(s12-2*(s13+s14))*pow(2*s12+s13+s14+s23+s24,-1)+(s14*(s13+s14+s23+s24)+s12*(2*s14+s23+s24)+s12*s12)*(-((s13+s14)*s23)+s12*(-3*s13-3*s14+2*s23)+3*(s12*s12))*pow(s12+s14+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+512*pow(s13,-1)*pow(s12+s23+s24,-1)*(-((s12+s13+s14)*(s12*s12)*pow(s23+s24,-2))-s12*(s12-s23-s24)*pow(s23+s24,-1)+3*s23*(s12+s13+s23)*pow(s12+s13+s14+s23+s24,-1)+(s12+s13+s23)*(5*s12+s13-s23-s24)*pow(s12+s13+s14+s23+s24,-1)+s23*(-7*s12+2*(-s13+s23+s24))*pow(s12+s13+s14+s23+s24,-1)+(s13*(s23+s24)+s12*(-3*s13+4*(s23+s24))-5*(s12*s12))*pow(s12+s13+s14+s23+s24,-1)-3*(s23*s23)*pow(s12+s13+s14+s23+s24,-1)-(s12+s13+s23)*(s12+s13+s23)*pow(s12+s13+s14+s23+s24,-1)+s12*((s14+s24)*(s14*s23-(2*s13+s23)*s24)*((s23+s24)*(s23+s24))+2*s12*(s13*s14+s14*s23+s14*s14-s24*s24)*((s23+s24)*(s23+s24))+s12*s12*((s23+2*s24)*(s13*s13)+(s23+2*s24)*(s14*s14)+4*s14*((s23+s24)*(s23+s24))+s23*((s23+s24)*(s23+s24))+2*s13*(s14*(s23+2*s24)+(s23+s24)*(s23+s24)))+2*(s13*(s23+2*s24)+s14*(s23+2*s24)+(s23+s24)*(s23+s24))*pow(s12,3)+(s23+2*s24)*pow(s12,4))*pow(s24,-2)*pow(s23+s24,-2)*pow(s12+s13+s14+s23+s24,-1)+s12*(2*s12+s13-s23-s24)*((s14+s24)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s24,-1)*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+s12*s12*((s12+s13+s14)*(s12+s13+s14))*pow(2*s12+s13+s14+s23+s24,-3)+pow(s12+s14+s24,-3)*((15*s23*s24+9*s14*(2*s23+13*s24)+s13*(87*s14+17*s23+114*s24)+37*(s13*s13)+51*(s14*s14)+s23*s23+63*(s24*s24))*pow(s12,6)+(26*s13+30*s14+5*s23+33*s24)*pow(s12,7)+7*pow(s12,8)+s12*s24*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(s13*s13*(-3*s14*(s23-2*s24)+11*(s24*s24))+s13*((-6*s23+3*s24)*(s14*s14)+2*(-4*s23+s24)*(s24*s24)+s14*(-24*s23*s24+3*(s23*s23)+5*(s24*s24)))+3*s24*pow(s13,3)+s23*(3*(7*s23-2*s24)*(s14*s14)+s14*(24*s23*s24+6*(s23*s23)-4*(s24*s24))+s24*(8*s23*s24+3*(s23*s23)-s24*s24)-3*pow(s14,3)))+pow(s12,5)*(3*(30*s14+7*s23+50*s24)*(s13*s13)+3*(8*s23+53*s24)*(s14*s14)+2*s24*(6*s23*s24+3*(s23*s23)+31*(s24*s24))+3*s14*(11*s23*s24+s23*s23+59*(s24*s24))+3*s13*(19*s23*s24+s14*(15*s23+103*s24)+36*(s14*s14)+s23*s23+67*(s24*s24))+25*pow(s13,3)+43*pow(s14,3))+pow(s12,4)*(3*s14*s24*(-2*s23*s24+7*(s23*s23)+43*(s24*s24))+3*(s14*s14)*(4*s23*s24+s23*s23+60*(s24*s24))+3*(s13*s13)*(24*s23*s24+12*s14*(s23+8*s24)+24*(s14*s14)+s23*s23+80*(s24*s24))+(39*s14+11*s23+93*s24)*pow(s13,3)+8*pow(s13,4)+2*(7*s23+51*s24)*pow(s14,3)+s13*(3*(13*s23+99*s24)*(s14*s14)+6*s14*(14*s23*s24+s23*s23+70*(s24*s24))+s24*(66*s23*s24+9*(s23*s23)+181*(s24*s24))+59*pow(s14,3))+18*pow(s14,4)+s24*(15*s24*(s23*s23)-5*s23*(s24*s24)+21*pow(s23,3)+33*pow(s24,3)))+s24*(s13+s14+s23+s24)*(s12*s12)*(s13*s13*(s24*(9*s23+58*s24)+s14*(-12*s23+69*s24)+18*(s14*s14))+22*(s23*s23)*(s24*s24)+s14*s14*(-39*s23*s24+48*(s23*s23)+10*(s24*s24))+3*(4*s14+s23+10*s24)*pow(s13,3)+3*pow(s13,4)+9*(-2*s23+s24)*pow(s14,3)+3*pow(s14,4)+21*s24*pow(s23,3)+3*pow(s23,4)-7*s23*pow(s24,3)+s14*(63*s24*(s23*s23)-28*s23*(s24*s24)+36*pow(s23,3)+5*pow(s24,3))+s13*((-33*s23+48*s24)*(s14*s14)-19*s23*(s24*s24)+2*s14*(-33*s23*s24+6*(s23*s23)+28*(s24*s24))+12*pow(s14,3)+3*pow(s23,3)+20*pow(s24,3))+pow(s24,4))+pow(s12,3)*(3*s24*(s14*s14)*(-18*s23*s24+11*(s23*s23)+29*(s24*s24))+(36*s23*s24+3*s14*(3*s23+37*s24)+15*(s14*s14)+s23*s23+132*(s24*s24))*pow(s13,3)+(6*s14+2*s23+27*s24)*pow(s13,4)+pow(s13,5)+(-18*s23*s24+s23*s23+78*(s24*s24))*pow(s14,3)+s13*s13*(3*(5*s23+57*s24)*(s14*s14)+3*s14*(18*s23*s24+s23*s23+114*(s24*s24))+s24*(90*s23*s24+9*(s23*s23)+191*(s24*s24))+19*pow(s14,3))+3*(s23+10*s24)*pow(s14,4)+3*pow(s14,5)+3*s14*s24*(17*s24*(s23*s23)-15*s23*(s24*s24)+23*pow(s23,3)+15*pow(s24,3))+s13*(6*s14*s24*(2*s23*s24+3*(s23*s23)+45*(s24*s24))+3*(s14*s14)*(s23*s23+96*(s24*s24))+(11*s23+117*s24)*pow(s14,3)+12*pow(s14,4)+s24*(9*s24*(s23*s23)+25*s23*(s24*s24)+15*pow(s23,3)+87*pow(s24,3)))+s24*(20*(s23*s23)*(s24*s24)+48*s24*pow(s23,3)+15*pow(s23,4)-12*s23*pow(s24,3)+9*pow(s24,4)))+s24*(3*s14*s23*(-s13+s23)*s24+3*(s14*s14)*(s23*s23)+(-(s13*s23)+s13*s13+s23*s23)*(s24*s24))*pow(s13+s14+s23+s24,3))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-3)-s12*(s12+s13+s14)*(2*s12-s23-s24)*pow(2*s12+s13+s14+s23+s24,-2)-(3*s12+s13-s23-s24)*(s12*s24*(s13+s14+s23+s24)*(-5*s23*s24+s14*(-8*s23+3*s24)+s13*(4*s14+7*s24)+2*(s13*s13)+2*(s14*s14)-2*(s23*s23)+s24*s24)+s24*(-2*s14*s23+(s13-s23)*s24)*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(2*s14*(s23+10*s24)+2*s13*(6*s14+s23+10*s24)+5*(s13*s13)+7*(s14*s14)+12*(s24*s24))*pow(s12,3)+(7*s13+8*s14+s23+10*s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(-4*s14*(s23-4*s24)*s24+(4*s14+s23+12*s24)*(s13*s13)+(s23+12*s24)*(s14*s14)+s13*(4*s24*(s23+5*s24)+2*s14*(s23+12*s24)+5*(s14*s14))+2*s24*(-2*s23*s24-3*(s23*s23)+3*(s24*s24))+pow(s13,3)+2*pow(s14,3)))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+s12*(s12-2*(s23+s24))*pow(2*s12+s13+s14+s23+s24,-1)+(s24*(s13+s14+s23+s24)+s12*(s13+s14+2*s24)+s12*s12)*(-(s13*(s23+s24))+s12*(2*s13-3*(s23+s24))+3*(s12*s12))*pow(s12+s14+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+256*pow(s24,-1)*(-(s13*(s12+s13+s14+s23+s24)*pow(s13+s14,-2))-(s12+s23+s24)*(s12*s12)*pow(s13,-1)*pow(s13+s14,-2)-(s12-s13)*(s12+s24)*pow(s13,-1)*pow(s13+s14,-1)+4*s13*pow(s12+s13+s14+s23+s24,-1)-2*(s12+s13+s23)*pow(s12+s13+s14+s23+s24,-1)+(8*s12+s13+5*s23+2*s24)*pow(s12+s13+s14+s23+s24,-1)-(s12+s13+s23)*(2*s12+2*s13+s23)*pow(s13,-1)*pow(s12+s13+s14+s23+s24,-1)+(s23*(2*s23+s24)+s13*(3*s23+s24)+s12*(2*s13+5*s23+2*s24)+4*(s12*s12))*pow(s13,-1)*pow(s12+s13+s14+s23+s24,-1)-(-((2*s14*s23+s13*(s14-s24))*(s14+s24)*((s13+s14)*(s13+s14)))+2*s12*(s24*(s13+s23+s24)-s14*s14)*((s13+s14)*(s13+s14))+2*(s13*(2*s14+s23+s24)+s14*(s14+2*(s23+s24))+s13*s13)*pow(s12,3)+(s13+2*s14)*pow(s12,4)+s12*s12*(2*(s14+s23+2*s24)*(s13*s13)+2*s14*(s14*(s23+2*s24)+(s23+s24)*(s23+s24))+s13*(4*s14*(s23+2*s24)+s14*s14+(s23+s24)*(s23+s24))+pow(s13,3)))*pow(s14,-2)*pow(s13+s14,-2)*pow(s12+s13+s14+s23+s24,-1)-(2*s12+2*s23+s24)*((s13+s14)*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s14,-1)*pow(s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)+2*s12*(s12+s13+s23)*(s12+s23+s24)*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-3)+4*(s12*s12)*((s12+s23+s24)*(s12+s23+s24))*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-3)-2*pow(s13,-1)*pow(s12+s14+s24,-3)*((87*s23*s24+s13*(15*s14+17*s23+18*s24)+3*s14*(38*s23+39*s24)+s13*s13+63*(s14*s14)+37*(s23*s23)+51*(s24*s24))*pow(s12,6)+(5*s13+33*s14+26*s23+30*s24)*pow(s12,7)+7*pow(s12,8)+s12*s14*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(s13*s13*(24*s14*s24+3*s24*(s23+7*s24)+8*(s14*s14))+s14*s23*(s14*(11*s23+5*s24)+2*(s14*s14)+3*((s23+s24)*(s23+s24)))+3*(s14+2*s24)*pow(s13,3)-s13*(6*s14*s24*(4*s23+s24)+4*(2*s23+s24)*(s14*s14)+3*s24*((s23+s24)*(s23+s24))+pow(s14,3)))+pow(s12,4)*(60*(s14*s14)*(7*s23*s24+4*(s23*s23)+3*(s24*s24))+3*s14*(31*s23+34*s24)*((s23+s24)*(s23+s24))+(23*s23*s24+8*(s23*s23)+18*(s24*s24))*((s23+s24)*(s23+s24))+3*(s13*s13)*(s14*(3*s23+7*s24)+5*(s14*s14)+(s23+s24)*(s23+s24))+21*s14*pow(s13,3)+s13*((66*s23-6*s24)*(s14*s14)+12*s14*(7*s23*s24+6*(s23*s23)+s24*s24)+(11*s23+14*s24)*((s23+s24)*(s23+s24))-5*pow(s14,3))+(181*s23+129*s24)*pow(s14,3)+33*pow(s14,4))+pow(s12,5)*(3*(2*s14+s23+s24)*(s13*s13)+3*(67*s23+59*s24)*(s14*s14)+90*s24*(s23*s23)+108*s23*(s24*s24)+3*s13*(15*s23*s24+s14*(19*s23+11*s24)+4*(s14*s14)+7*(s23*s23)+8*(s24*s24))+3*s14*(103*s23*s24+50*(s23*s23)+53*(s24*s24))+62*pow(s14,3)+25*pow(s23,3)+43*pow(s24,3))+pow(s12,3)*(6*(22*s23+13*s24)*(s14*s14)*((s23+s24)*(s23+s24))+3*s14*(16*s14+5*s23+23*s24)*pow(s13,3)+15*s14*pow(s13,4)+(270*s23*s24+191*(s23*s23)+87*(s24*s24))*pow(s14,3)+(87*s23+45*s24)*pow(s14,4)+9*pow(s14,5)+3*s14*(9*s23+10*s24)*pow(s23+s24,3)+(3*s23*s24+s23*s23+3*(s24*s24))*pow(s23+s24,3)+s13*s13*((9*s23+51*s24)*(s14*s14)+3*s14*(6*s23*s24+3*(s23*s23)+11*(s24*s24))+20*pow(s14,3)+pow(s23+s24,3))+s13*(6*(s14*s14)*(2*s23*s24+15*(s23*s23)-9*(s24*s24))+18*s14*(2*s23-s24)*((s23+s24)*(s23+s24))+5*(5*s23-9*s24)*pow(s14,3)-12*pow(s14,4)+(2*s23+3*s24)*pow(s23+s24,3)))+s14*(s13+s14+s23+s24)*(s12*s12)*(s13*s13*(63*s14*s24+12*s24*(s23+4*s24)+22*(s14*s14))+2*(s14*s14)*(28*s23*s24+29*(s23*s23)+5*(s24*s24))+3*s14*(10*s23+3*s24)*((s23+s24)*(s23+s24))+3*(7*s14+s23+12*s24)*pow(s13,3)+3*pow(s13,4)+5*(4*s23+s24)*pow(s14,3)-s13*((19*s23+28*s24)*(s14*s14)+s14*(66*s23*s24-9*(s23*s23)+39*(s24*s24))-3*(s23-6*s24)*((s23+s24)*(s23+s24))+7*pow(s14,3))+pow(s14,4)+3*pow(s23+s24,4))+s14*(-(s13*s14*s23*(s14+3*s24))+s14*s14*(s23*s23)+s13*s13*(3*s14*s24+s14*s14+3*(s24*s24)))*pow(s13+s14+s23+s24,3))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-3)+s12*(-8*s12+s13-5*s23-2*s24)*(s12+s23+s24)*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-2)-(s12-s13+s23)*(s12+s13+s23)*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-2)+s12*pow(s13,-1)*((-6*s13*s14+s13*s13-3*(s14*s14))*pow(s12,4)+pow(s12,3)*(-2*s13*s14*(15*s14+5*s23+7*s24)+(-16*s14+3*s23+s24)*(s13*s13)-(8*s14+5*s23+7*s24)*(s14*s14)+6*pow(s13,3))+s12*s12*(s13*s13*(s23*(3*s23+2*s24)-2*s14*(7*s23+17*s24)-56*(s14*s14))-s14*s14*(8*s23*s24+12*s14*(s23+s24)+7*(s14*s14)+2*(s23*s23)+5*(s24*s24))-2*s13*s14*(8*s23*s24+5*s14*(4*s23+5*s24)+22*(s14*s14)+2*(s23*s23)+5*(s24*s24))+(-8*s14+14*s23+4*s24)*pow(s13,3)+11*pow(s13,4))+2*(s13+s14)*(-(s23*(s14+s24)*(s14+s23+s24)*(s14*s14))-s13*s14*(s14+s24)*(4*s23*s24+3*s14*(2*s23+s24)+2*(s14*s14)+3*(s23*s23)+s24*s24)+(s14*(2*s23-3*s24)+s23*(3*s23+2*s24)-3*(s14*s14))*pow(s13,3)+(s14+3*s23+s24)*pow(s13,4)+pow(s13,5)+s13*s13*(-3*(2*s23+3*s24)*(s14*s14)+(s23+s24)*(s23*s23)+s14*(-6*s23*s24+s23*s23-4*(s24*s24))-5*pow(s14,3)))+s12*((8*s14*(s23-3*s24)+2*s23*(5*s23+3*s24)-32*(s14*s14))*pow(s13,3)+(6*s14+17*s23+5*s24)*pow(s13,4)+8*pow(s13,5)+s13*s13*(-4*(11*s23+17*s24)*(s14*s14)+(s23+s24)*(s23*s23)+2*s14*(-14*s23*s24+s23*s23-9*(s24*s24))-52*pow(s14,3))-s14*s14*((9*s23+5*s24)*(s14*s14)+4*s14*(3*s23*s24+s23*s23+s24*s24)+s24*(3*s23*s24+2*(s23*s23)+s24*s24)+2*pow(s14,3))-2*s13*s14*(22*(s23+s24)*(s14*s14)+s24*(3*s23*s24+2*(s23*s23)+s24*s24)+s14*(23*s23*s24+6*(s23*s23)+11*(s24*s24))+12*pow(s14,3))))*pow(s13+s14,-2)*pow(s12+s13+s14,-2)*pow(2*s12+s13+s14+s23+s24,-2)+2*(3*s12+2*s23+s24)*pow(s13,-1)*(s12*s14*(s13+s14+s23+s24)*(s14*(7*s23+3*s24)-s13*(5*s14+8*s24)-2*(s13*s13)+s14*s14+2*((s23+s24)*(s23+s24)))-s14*(-(s14*s23)+s13*(s14+2*s24))*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(20*s14*(s23+s24)+(s23+s24)*(2*s13+5*s23+7*s24)+12*(s14*s14))*pow(s12,3)+(s13+10*s14+7*s23+8*s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(-6*s14*(s13*s13)+4*(5*s23+4*s24)*(s14*s14)+12*s14*((s23+s24)*(s23+s24))+(s23+2*s24)*((s23+s24)*(s23+s24))+s13*(4*s14*(s23-s24)-4*(s14*s14)+(s23+s24)*(s23+s24))+6*pow(s14,3)))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+(-(s13*s24)+s23*s24+s12*(-2*s13+4*s23+2*s24)+4*(s12*s12)+2*(s23*s23))*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-1)-s12*(s12+s13+2*s23+s24)*(s12*(s13-s14)+s13*s23-s14*(s14+s24)+s13*s13)*pow(s13,-1)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)-(s14*(s13+s14+s23+s24)+s12*(2*s14+s23+s24)+s12*s12)*(4*s12*(2*s23+s24)+s23*(s13+3*s23+2*s24)+6*(s12*s12))*pow(s13,-1)*pow(s12+s14+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+256*(-((s12+s13+s14+s23+s24)*pow(s12+s13+s14,-1)*pow(s23+s24,-1))+s12*pow(s23,-1)*pow(s23+s24,-1)+(s14*(s23+2*s24)+s13*(2*s23+3*s24)+s12*(s13+s14+2*s23+4*s24)+s12*s12)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s23+s24,-1)+((s14+s24)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s12+s13+s14,-1)*pow(s24,-1)*pow(s23+s24,-1)-2*s23*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)-(2*s12+s13+s14-s23+s24)*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)+(s12+s13+s23)*(s23+s24)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23+s24,-1)-(3*s14*s23+s14*s24+4*s23*s24+s13*(s14+5*s23+3*s24)+s12*(4*s13+3*s14+5*s23+4*s24)+3*(s12*s12)+s13*s13+4*(s23*s23))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23+s24,-1)-2*(s12+s13+s14)*(s12*s12)*pow(s23,-1)*pow(2*s12+s13+s14+s23+s24,-3)+2*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s14+s24,-3)*((15*s23*s24+9*s14*(2*s23+13*s24)+s13*(87*s14+17*s23+114*s24)+37*(s13*s13)+51*(s14*s14)+s23*s23+63*(s24*s24))*pow(s12,6)+(26*s13+30*s14+5*s23+33*s24)*pow(s12,7)+7*pow(s12,8)+s12*s24*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(s13*s13*(-3*s14*(s23-2*s24)+11*(s24*s24))+s13*((-6*s23+3*s24)*(s14*s14)+2*(-4*s23+s24)*(s24*s24)+s14*(-24*s23*s24+3*(s23*s23)+5*(s24*s24)))+3*s24*pow(s13,3)+s23*(3*(7*s23-2*s24)*(s14*s14)+s14*(24*s23*s24+6*(s23*s23)-4*(s24*s24))+s24*(8*s23*s24+3*(s23*s23)-s24*s24)-3*pow(s14,3)))+pow(s12,5)*(3*(30*s14+7*s23+50*s24)*(s13*s13)+3*(8*s23+53*s24)*(s14*s14)+2*s24*(6*s23*s24+3*(s23*s23)+31*(s24*s24))+3*s14*(11*s23*s24+s23*s23+59*(s24*s24))+3*s13*(19*s23*s24+s14*(15*s23+103*s24)+36*(s14*s14)+s23*s23+67*(s24*s24))+25*pow(s13,3)+43*pow(s14,3))+pow(s12,4)*(3*s14*s24*(-2*s23*s24+7*(s23*s23)+43*(s24*s24))+3*(s14*s14)*(4*s23*s24+s23*s23+60*(s24*s24))+3*(s13*s13)*(24*s23*s24+12*s14*(s23+8*s24)+24*(s14*s14)+s23*s23+80*(s24*s24))+(39*s14+11*s23+93*s24)*pow(s13,3)+8*pow(s13,4)+2*(7*s23+51*s24)*pow(s14,3)+s13*(3*(13*s23+99*s24)*(s14*s14)+6*s14*(14*s23*s24+s23*s23+70*(s24*s24))+s24*(66*s23*s24+9*(s23*s23)+181*(s24*s24))+59*pow(s14,3))+18*pow(s14,4)+s24*(15*s24*(s23*s23)-5*s23*(s24*s24)+21*pow(s23,3)+33*pow(s24,3)))+s24*(s13+s14+s23+s24)*(s12*s12)*(s13*s13*(s24*(9*s23+58*s24)+s14*(-12*s23+69*s24)+18*(s14*s14))+22*(s23*s23)*(s24*s24)+s14*s14*(-39*s23*s24+48*(s23*s23)+10*(s24*s24))+3*(4*s14+s23+10*s24)*pow(s13,3)+3*pow(s13,4)+9*(-2*s23+s24)*pow(s14,3)+3*pow(s14,4)+21*s24*pow(s23,3)+3*pow(s23,4)-7*s23*pow(s24,3)+s14*(63*s24*(s23*s23)-28*s23*(s24*s24)+36*pow(s23,3)+5*pow(s24,3))+s13*((-33*s23+48*s24)*(s14*s14)-19*s23*(s24*s24)+2*s14*(-33*s23*s24+6*(s23*s23)+28*(s24*s24))+12*pow(s14,3)+3*pow(s23,3)+20*pow(s24,3))+pow(s24,4))+pow(s12,3)*(3*s24*(s14*s14)*(-18*s23*s24+11*(s23*s23)+29*(s24*s24))+(36*s23*s24+3*s14*(3*s23+37*s24)+15*(s14*s14)+s23*s23+132*(s24*s24))*pow(s13,3)+(6*s14+2*s23+27*s24)*pow(s13,4)+pow(s13,5)+(-18*s23*s24+s23*s23+78*(s24*s24))*pow(s14,3)+s13*s13*(3*(5*s23+57*s24)*(s14*s14)+3*s14*(18*s23*s24+s23*s23+114*(s24*s24))+s24*(90*s23*s24+9*(s23*s23)+191*(s24*s24))+19*pow(s14,3))+3*(s23+10*s24)*pow(s14,4)+3*pow(s14,5)+3*s14*s24*(17*s24*(s23*s23)-15*s23*(s24*s24)+23*pow(s23,3)+15*pow(s24,3))+s13*(6*s14*s24*(2*s23*s24+3*(s23*s23)+45*(s24*s24))+3*(s14*s14)*(s23*s23+96*(s24*s24))+(11*s23+117*s24)*pow(s14,3)+12*pow(s14,4)+s24*(9*s24*(s23*s23)+25*s23*(s24*s24)+15*pow(s23,3)+87*pow(s24,3)))+s24*(20*(s23*s23)*(s24*s24)+48*s24*pow(s23,3)+15*pow(s23,4)-12*s23*pow(s24,3)+9*pow(s24,4)))+s24*(3*s14*s23*(-s13+s23)*s24+3*(s14*s14)*(s23*s23)+(-(s13*s23)+s13*s13+s23*s23)*(s24*s24))*pow(s13+s14+s23+s24,3))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-3)+s12*(3*s12+s13+s14-s23+s24)*pow(s23,-1)*pow(2*s12+s13+s14+s23+s24,-2)+(s12+s13+s23)*(s23+s24)*(s12+s13+s14+s23+s24)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(2*s12+s13+s14+s23+s24,-2)-2*(2*s12+s13+s14-s23)*(s12*s24*(s13+s14+s23+s24)*(-5*s23*s24+s14*(-8*s23+3*s24)+s13*(4*s14+7*s24)+2*(s13*s13)+2*(s14*s14)-2*(s23*s23)+s24*s24)+s24*(-2*s14*s23+(s13-s23)*s24)*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(2*s14*(s23+10*s24)+2*s13*(6*s14+s23+10*s24)+5*(s13*s13)+7*(s14*s14)+12*(s24*s24))*pow(s12,3)+(7*s13+8*s14+s23+10*s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(-4*s14*(s23-4*s24)*s24+(4*s14+s23+12*s24)*(s13*s13)+(s23+12*s24)*(s14*s14)+s13*(4*s24*(s23+5*s24)+2*s14*(s23+12*s24)+5*(s14*s14))+2*s24*(-2*s23*s24-3*(s23*s23)+3*(s24*s24))+pow(s13,3)+2*pow(s14,3)))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-(s14*(-s23+s24)+s12*(s13-s23+3*s24)+s13*(s14+s23+3*s24)+s12*s12+s13*s13)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(2*s12+s13+s14+s23+s24,-1)+s12*(s13*s23+s12*(s23-s24)-s14*s24+s23*s23-s24*s24)*pow(s23,-1)*pow(s23+s24,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+(s24*(s13+s14+s23+s24)+s12*(s13+s14+2*s24)+s12*s12)*(3*s23*(s23+s24)+s12*(8*s13+5*s14+2*s23+4*s24)+s13*(3*s14+4*(s23+s24))+6*(s12*s12)+3*(s13*s13))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s14+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+64*pow(s13,-1)*(-4*s12*pow(s13+s14,-1)-4*(s12*(3*s13+3*s14+s23+s24)+(s13+s14)*(s13+s14+2*(s23+s24))+s12*s12)*pow(s13+s14,-1)*pow(s12+s23+s24,-1)+4*(s13+s14)*(s12+s14+s24)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+4*s14*(s13+3*s14+s23+s24)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-4*(s12*(3*s13+3*s14+s23+s24)+s13*(3*s14+2*(s23+s24))+s14*(2*s14+3*(s23+s24))+s12*s12+s13*s13)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(s14*s14)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-4*s14*((s13+s14)*(s13+s23)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(s12+s23+s24)*(s12*s12)*pow(2*s12+s13+s14+s23+s24,-3)+pow(s12+s13+s23,-3)*pow(s12+s23+s24,-1)*(8*(87*s23*s24+s14*(18*s23+17*s24)+3*s13*(5*s14+39*s23+38*s24)+63*(s13*s13)+s14*s14+51*(s23*s23)+37*(s24*s24))*pow(s12,6)+8*(33*s13+5*s14+30*s23+26*s24)*pow(s12,7)+56*pow(s12,8)+8*pow(s12,5)*(3*(4*s14+59*s23+67*s24)*(s13*s13)+(s23+s24)*(65*s23*s24+3*s14*(8*s23+7*s24)+3*(s14*s14)+43*(s23*s23)+25*(s24*s24))+3*s13*(103*s23*s24+s14*(11*s23+19*s24)+2*(s14*s14)+53*(s23*s23)+50*(s24*s24))+62*pow(s13,3))+8*s12*s13*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(s13*s13*(-4*s14*(s23+2*s24)+s24*(5*s23+11*s24)+8*(s14*s14))+3*s14*s23*(s14*(7*s23+s24)+2*(s14*s14)-(s23+s24)*(s23+s24))-(s14-2*s24)*pow(s13,3)+3*s13*(-2*s14*s23*(s23+4*s24)+8*s23*(s14*s14)+s24*((s23+s24)*(s23+s24))+pow(s14,3)))+8*pow(s12,4)*(3*(s13*s13)*(-2*s14*(s23-11*s24)+5*(s14*s14)+20*(7*s23*s24+3*(s23*s23)+4*(s24*s24)))+(23*s23*s24+s14*(14*s23+11*s24)+3*(s14*s14)+18*(s23*s23)+8*(s24*s24))*((s23+s24)*(s23+s24))+(-5*s14+129*s23+181*s24)*pow(s13,3)+33*pow(s13,4)+3*s13*((7*s23+3*s24)*(s14*s14)+4*s14*(7*s23*s24+s23*s23+6*(s24*s24))+(34*s23+31*s24)*((s23+s24)*(s23+s24))+7*pow(s14,3)))+pow(s12,3)*(8*(-5*s14*(9*s23-5*s24)+270*s23*s24+20*(s14*s14)+87*(s23*s23)+191*(s24*s24))*pow(s13,3)+(-96*s14+360*s23+696*s24)*pow(s13,4)+72*pow(s13,5)+24*(s13*s13)*((17*s23+3*s24)*(s14*s14)+s14*(4*s23*s24-18*(s23*s23)+30*(s24*s24))+2*(13*s23+22*s24)*((s23+s24)*(s23+s24))+16*pow(s14,3))+8*(3*s23*s24+s14*(3*s23+2*s24)+s14*s14+3*(s23*s23)+s24*s24)*pow(s23+s24,3)+24*s13*(s14*s14*(6*s23*s24+11*(s23*s23)+3*(s24*s24))-6*s14*(s23-2*s24)*((s23+s24)*(s23+s24))+(23*s23+5*s24)*pow(s14,3)+5*pow(s14,4)+(10*s23+9*s24)*pow(s23+s24,3)))+8*s13*(s13+s14+s23+s24)*(s12*s12)*(s13*s13*(56*s23*s24-s14*(28*s23+19*s24)+22*(s14*s14)+10*(s23*s23)+58*(s24*s24))+(-7*s14+5*(s23+4*s24))*pow(s13,3)+pow(s13,4)+3*s13*(21*s23*(s14*s14)+s14*(-22*s23*s24-13*(s23*s23)+3*(s24*s24))+(3*s23+10*s24)*((s23+s24)*(s23+s24))+7*pow(s14,3))+3*(4*s23*(4*s23+s24)*(s14*s14)-s14*(6*s23-s24)*((s23+s24)*(s23+s24))+(12*s23+s24)*pow(s14,3)+pow(s14,4)+pow(s23+s24,4)))+8*s13*(3*s13*s14*s23*(s14-s24)+3*(s14*s14)*(s23*s23)+s13*s13*(-(s14*s24)+s14*s14+s24*s24))*pow(s13+s14+s23+s24,3))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-3)-8*s12*(s12-s13-s14)*pow(2*s12+s13+s14+s23+s24,-2)-8*(s12-s13-2*s14)*(s12*s13*(s13+s14+s23+s24)*(s13*(-5*s14+3*s23+7*s24)+s13*s13+2*(-4*s14*s23-s14*s14+(s23+s24)*(s23+s24)))-s13*(2*s14*s23+s13*(s14-s24))*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(20*s13*(s23+s24)+(s23+s24)*(2*s14+7*s23+5*s24)+12*(s13*s13))*pow(s12,3)+(10*s13+s14+8*s23+7*s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(-4*(s14-4*s23-5*s24)*(s13*s13)+(s14+2*s23+s24)*((s23+s24)*(s23+s24))+s13*(-4*s14*(s23-s24)-6*(s14*s14)+12*((s23+s24)*(s23+s24)))+6*pow(s13,3)))*pow(s12+s13+s23,-2)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+4*(s12*(s13+s14+s23+s24)+(s13+s14)*(s13+s14+s23+s24)+2*(s12*s12))*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+4*(s12*(2*s13+s23+s24)+s13*(s13+s14+s23+s24)+s12*s12)*(s12*(s13-s14+s23+s24)+(s13+s14)*(s13+3*s14+s23+s24)+2*(s12*s12))*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+256*(s12*pow(s13,-1)*pow(s13+s14,-1)-(s12+s13+s14+s23+s24)*pow(s13+s14,-1)*pow(s12+s23+s24,-1)+(s12*(2*s13+4*s14+s23+s24)+s13*(2*s23+s24)+s14*(3*s23+2*s24)+s12*s12)*pow(s13,-1)*pow(s13+s14,-1)*pow(s12+s23+s24,-1)+((s13+s14)*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s14,-1)*pow(s13+s14,-1)*pow(s12+s23+s24,-1)-2*s13*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-(2*s12-s13+s14+s23+s24)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+(s13+s14)*(s12+s13+s23)*pow(s13,-1)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-(3*s14*s23+s14*s24+s23*s24+s12*(5*s13+4*s14+4*s23+3*s24)+s13*(4*s14+5*s23+3*s24)+3*(s12*s12)+4*(s13*s13)+s23*s23)*pow(s13,-1)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-2*(s12+s23+s24)*(s12*s12)*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-3)+2*pow(s13,-1)*pow(s12+s14+s24,-3)*pow(s12+s23+s24,-1)*((87*s23*s24+s13*(15*s14+17*s23+18*s24)+3*s14*(38*s23+39*s24)+s13*s13+63*(s14*s14)+37*(s23*s23)+51*(s24*s24))*pow(s12,6)+(5*s13+33*s14+26*s23+30*s24)*pow(s12,7)+7*pow(s12,8)+s12*s14*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(s13*s13*(24*s14*s24+3*s24*(s23+7*s24)+8*(s14*s14))+s14*s23*(s14*(11*s23+5*s24)+2*(s14*s14)+3*((s23+s24)*(s23+s24)))+3*(s14+2*s24)*pow(s13,3)-s13*(6*s14*s24*(4*s23+s24)+4*(2*s23+s24)*(s14*s14)+3*s24*((s23+s24)*(s23+s24))+pow(s14,3)))+pow(s12,4)*(60*(s14*s14)*(7*s23*s24+4*(s23*s23)+3*(s24*s24))+3*s14*(31*s23+34*s24)*((s23+s24)*(s23+s24))+(23*s23*s24+8*(s23*s23)+18*(s24*s24))*((s23+s24)*(s23+s24))+3*(s13*s13)*(s14*(3*s23+7*s24)+5*(s14*s14)+(s23+s24)*(s23+s24))+21*s14*pow(s13,3)+s13*((66*s23-6*s24)*(s14*s14)+12*s14*(7*s23*s24+6*(s23*s23)+s24*s24)+(11*s23+14*s24)*((s23+s24)*(s23+s24))-5*pow(s14,3))+(181*s23+129*s24)*pow(s14,3)+33*pow(s14,4))+pow(s12,5)*(3*(2*s14+s23+s24)*(s13*s13)+3*(67*s23+59*s24)*(s14*s14)+90*s24*(s23*s23)+108*s23*(s24*s24)+3*s13*(15*s23*s24+s14*(19*s23+11*s24)+4*(s14*s14)+7*(s23*s23)+8*(s24*s24))+3*s14*(103*s23*s24+50*(s23*s23)+53*(s24*s24))+62*pow(s14,3)+25*pow(s23,3)+43*pow(s24,3))+pow(s12,3)*(6*(22*s23+13*s24)*(s14*s14)*((s23+s24)*(s23+s24))+3*s14*(16*s14+5*s23+23*s24)*pow(s13,3)+15*s14*pow(s13,4)+(270*s23*s24+191*(s23*s23)+87*(s24*s24))*pow(s14,3)+(87*s23+45*s24)*pow(s14,4)+9*pow(s14,5)+3*s14*(9*s23+10*s24)*pow(s23+s24,3)+(3*s23*s24+s23*s23+3*(s24*s24))*pow(s23+s24,3)+s13*s13*((9*s23+51*s24)*(s14*s14)+3*s14*(6*s23*s24+3*(s23*s23)+11*(s24*s24))+20*pow(s14,3)+pow(s23+s24,3))+s13*(6*(s14*s14)*(2*s23*s24+15*(s23*s23)-9*(s24*s24))+18*s14*(2*s23-s24)*((s23+s24)*(s23+s24))+5*(5*s23-9*s24)*pow(s14,3)-12*pow(s14,4)+(2*s23+3*s24)*pow(s23+s24,3)))+s14*(s13+s14+s23+s24)*(s12*s12)*(s13*s13*(63*s14*s24+12*s24*(s23+4*s24)+22*(s14*s14))+2*(s14*s14)*(28*s23*s24+29*(s23*s23)+5*(s24*s24))+3*s14*(10*s23+3*s24)*((s23+s24)*(s23+s24))+3*(7*s14+s23+12*s24)*pow(s13,3)+3*pow(s13,4)+5*(4*s23+s24)*pow(s14,3)-s13*((19*s23+28*s24)*(s14*s14)+s14*(66*s23*s24-9*(s23*s23)+39*(s24*s24))-3*(s23-6*s24)*((s23+s24)*(s23+s24))+7*pow(s14,3))+pow(s14,4)+3*pow(s23+s24,4))+s14*(-(s13*s14*s23*(s14+3*s24))+s14*s14*(s23*s23)+s13*s13*(3*s14*s24+s14*s14+3*(s24*s24)))*pow(s13+s14+s23+s24,3))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-3)+s12*(3*s12-s13+s14+s23+s24)*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-2)+(s13+s14)*(s12+s13+s23)*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-2*(2*s12-s13+s23+s24)*pow(s13,-1)*(s12*s14*(s13+s14+s23+s24)*(s14*(7*s23+3*s24)-s13*(5*s14+8*s24)-2*(s13*s13)+s14*s14+2*((s23+s24)*(s23+s24)))-s14*(-(s14*s23)+s13*(s14+2*s24))*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(20*s14*(s23+s24)+(s23+s24)*(2*s13+5*s23+7*s24)+12*(s14*s14))*pow(s12,3)+(s13+10*s14+7*s23+8*s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(-6*s14*(s13*s13)+4*(5*s23+4*s24)*(s14*s14)+12*s14*((s23+s24)*(s23+s24))+(s23+2*s24)*((s23+s24)*(s23+s24))+s13*(4*s14*(s23-s24)-4*(s14*s14)+(s23+s24)*(s23+s24))+6*pow(s14,3)))*pow(s12+s14+s24,-2)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+s12*(s12*(s13-s14)+s13*s23-s14*(s14+s24)+s13*s13)*pow(s13,-1)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)-(3*s14*s23+s12*(-s13+3*s14+s23)+s13*(s23-s24)+s14*s24+s23*s24+s12*s12+s23*s23)*pow(s13,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+(s14*(s13+s14+s23+s24)+s12*(2*s14+s23+s24)+s12*s12)*(s13*(3*s14+4*s23)+s12*(2*s13+4*s14+8*s23+5*s24)+s23*(4*s14+3*(s23+s24))+6*(s12*s12)+3*(s13*s13))*pow(s13,-1)*pow(s12+s14+s24,-1)*pow(s12+s23+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1)))/512.;
}

// Coefficient order epsilon^0 of master 8
template<>
double qq2yyg4SC<8,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s13,-3)*pow(s14,-3)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-3)*pow(s24,-3)*pow(s23+s24,-1)*(-(s13*(s23+s24)*(-4*s23*s24+(14*s14-s24)*s24+14*(s23*s23))*(s24*s24)*pow(s14,6)*pow(s23,4))-s24*s24*(7*s23*s24+6*(s23*s23)+s24*s24)*pow(s14,7)*pow(s23,5)+(s23+s24)*(s23*s23)*pow(s13,7)*pow(s24,3)*(4*s14*(s23-s24)*s24+2*(4*s23+s24)*(s14*s14)+5*pow(s24,3))-s13*s13*pow(s14,5)*pow(s23,3)*(2*s14*s23*s24*(3*s24*(s23*s23)+20*s23*(s24*s24)+2*pow(s23,3)+19*pow(s24,3))-s24*s24*(52*(s23*s23)*(s24*s24)+26*s24*pow(s23,3)-4*pow(s23,4)+29*s23*pow(s24,3)+7*pow(s24,4))+s14*s14*(-4*(s23*s23)*(s24*s24)+4*s24*pow(s23,3)+pow(s23,4)+4*s23*pow(s24,3)+17*pow(s24,4)))+pow(s12,6)*(2*s13*(s23*s23)*(s24*s24)*(s23*s24-4*(s23*s23)+5*(s24*s24))*pow(s14,3)-s23*s23*(s23*s24+6*(s23*s23)-5*(s24*s24))*(s24*s24)*pow(s14,4)+5*(s23+s24)*(s23*s23)*pow(s13,4)*pow(s24,3)+s13*s13*(s14*s14)*(2*(s23*s23)*(s24*s24)*(-(s23*s24)-2*(s23*s23)+s24*s24)+s14*s14*(-2*(s23*s23)*(s24*s24)+2*s24*pow(s23,3)-pow(s23,4)+4*s23*pow(s24,3)+5*pow(s24,4)))+s14*pow(s13,3)*(2*(s23*s23)*(s24*s24)*(2*s23*s24-3*(s23*s23)+5*(s24*s24))+s14*s14*(-2*(s23*s23)*(s24*s24)+2*s24*pow(s23,3)-pow(s23,4)+4*s23*pow(s24,3)+5*pow(s24,4))))+s14*(s24*s24)*pow(s13,6)*(-(s23*s23*(s24*s24)*(19*s24*(s23*s23)+3*s23*(s24*s24)+6*pow(s23,3)-10*pow(s24,3)))-2*s14*s24*(s23*s23)*(-11*s24*(s23*s23)-11*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+s14*s14*(26*(s24*s24)*pow(s23,3)+39*s24*pow(s23,4)+10*pow(s23,5)+6*(s23*s23)*pow(s24,3)+8*s23*pow(s24,4)+5*pow(s24,5)))-s23*s23*pow(s13,3)*pow(s14,4)*(s14*s14*(-12*(s24*s24)*pow(s23,3)+21*s24*pow(s23,4)+7*pow(s23,5)+24*(s23*s23)*pow(s24,3)+81*s23*pow(s24,4)+7*pow(s24,5))+2*s14*s24*(10*(s24*s24)*pow(s23,3)-5*s24*pow(s23,4)+2*pow(s23,5)+35*(s23*s23)*pow(s24,3)+26*s23*pow(s24,4)+8*pow(s24,5))+s24*s24*(-26*(s24*s24)*pow(s23,3)-52*s24*pow(s23,4)-14*pow(s23,5)+60*(s23*s23)*pow(s24,3)+67*s23*pow(s24,4)+19*pow(s24,5)))+pow(s12,5)*(-(s13*(s23+s24)*(s23*s23)*(s14*(36*s23-41*s24)+6*(-(s23*s24)+4*(s23*s23)-5*(s24*s24)))*(s24*s24)*pow(s14,3))-3*(s14+s23+s24)*(s23*s23)*(s23*s24+6*(s23*s23)-5*(s24*s24))*(s24*s24)*pow(s14,4)+15*(s23+s24)*(s23*s23)*pow(s13,5)*pow(s24,3)+pow(s13,4)*(s14*(s23*s23)*(s24*s24)*(23*s23*s24-14*(s23*s23)+37*(s24*s24))+15*(s23*s23)*((s23+s24)*(s23+s24))*pow(s24,3)-3*pow(s14,3)*(2*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)+pow(s23,4)-4*s23*pow(s24,3)-5*pow(s24,4)))+s14*pow(s13,3)*(-2*s14*(s23*s23)*(s23*s24+15*(s23*s23)-14*(s24*s24))*(s24*s24)-6*(3*s23-5*s24)*(s23*s23)*(s24*s24)*((s23+s24)*(s23+s24))-6*pow(s14,3)*(2*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)+pow(s23,4)-4*s23*pow(s24,3)-5*pow(s24,4))+s14*s14*(-2*(s24*s24)*pow(s23,3)+s24*pow(s23,4)-3*pow(s23,5)+10*(s23*s23)*pow(s24,3)+27*s23*pow(s24,4)+15*pow(s24,5)))+s13*s13*(s14*s14)*(10*s14*(s23*s23)*(s24*s24)*(s23*s24-3*(s23*s23)+4*(s24*s24))-6*(2*s23-s24)*(s23*s23)*(s24*s24)*((s23+s24)*(s23+s24))-3*pow(s14,3)*(2*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)+pow(s23,4)-4*s23*pow(s24,3)-5*pow(s24,4))+s14*s14*(-2*(s24*s24)*pow(s23,3)+s24*pow(s23,4)-3*pow(s23,5)+10*(s23*s23)*pow(s24,3)+27*s23*pow(s24,4)+15*pow(s24,5))))+s24*(s14*s14)*pow(s13,5)*(-(s23*s23*(s24*s24)*(31*(s23*s23)*(s24*s24)+17*s24*pow(s23,3)+4*pow(s23,4)+8*s23*pow(s24,3)-10*pow(s24,4)))+2*s14*s23*s24*(20*(s24*s24)*pow(s23,3)+16*s24*pow(s23,4)+7*pow(s23,5)+2*(s23*s23)*pow(s24,3)-14*s23*pow(s24,4)-5*pow(s24,5))+s14*s14*(45*(s24*s24)*pow(s23,4)+43*s24*pow(s23,5)+4*pow(s23,6)-32*pow(s23,3)*pow(s24,3)-20*(s23*s23)*pow(s24,4)-s23*pow(s24,5)+5*pow(s24,6)))-s23*pow(s13,4)*pow(s14,3)*(2*s14*(s24*s24)*(12*(s24*s24)*pow(s23,3)-20*s24*pow(s23,4)-15*pow(s23,5)+35*(s23*s23)*pow(s24,3)+23*s23*pow(s24,4)+5*pow(s24,5))+s23*(s24*s24)*(7*(s24*s24)*pow(s23,3)-25*s24*pow(s23,4)-10*pow(s23,5)+64*(s23*s23)*pow(s24,3)+50*s23*pow(s24,4)+8*pow(s24,5))+s14*s14*(-41*(s24*s24)*pow(s23,4)+13*s24*pow(s23,5)+6*pow(s23,6)+6*pow(s23,3)*pow(s24,3)+112*(s23*s23)*pow(s24,4)+31*s23*pow(s24,5)+9*pow(s24,6)))+s12*(-3*(s14+s23+s24)*(5*s23*s24+6*(s23*s23)-s24*s24)*(s24*s24)*pow(s14,6)*pow(s23,4)-s13*(s23+s24)*(s24*s24)*pow(s14,5)*pow(s23,3)*(14*s24*(s14*s14)+26*s24*(s23*s23)-12*s23*(s24*s24)+s14*(13*s23*s24+48*(s23*s23)+12*(s24*s24))+36*pow(s23,3)-2*pow(s24,3))+(s23+s24)*(s23*s23)*(s24*s24)*pow(s13,7)*(8*s14*(s23-s24)*s24+2*(4*s23+s24)*(s14*s14)+15*pow(s24,3))+s24*(s23+s24)*pow(s13,6)*(2*s24*(s14*s14)*(s23*s23)*(29*s23*s24+5*(s23*s23)-7*(s24*s24))+s14*(s23*s23)*(s24*s24)*(-16*s23*s24-4*(s23*s23)+29*(s24*s24))+15*(s23+s24)*(s23*s23)*pow(s24,4)+pow(s14,3)*(9*(s23*s23)*(s24*s24)+41*s24*pow(s23,3)-4*pow(s23,4)+5*s23*pow(s24,3)+15*pow(s24,4)))-s13*s13*(s23*s23)*pow(s14,4)*(-(s24*s24*((s23+s24)*(s23+s24))*(30*s24*(s23*s23)+44*s23*(s24*s24)-20*pow(s23,3)+17*pow(s24,3)))+pow(s14,3)*(2*(s23*s23)*(s24*s24)+6*s24*pow(s23,3)+3*pow(s23,4)-8*s23*pow(s24,3)+3*pow(s24,4))+s14*s24*(40*(s24*s24)*pow(s23,3)+56*s24*pow(s23,4)+8*pow(s23,5)-54*(s23*s23)*pow(s24,3)-77*s23*pow(s24,4)-31*pow(s24,5))+s14*s14*(10*(s24*s24)*pow(s23,3)+19*s24*pow(s23,4)+3*pow(s23,5)+36*(s23*s23)*pow(s24,3)+43*s23*pow(s24,4)-11*pow(s24,5)))-s23*pow(s13,3)*pow(s14,3)*(2*s23*(s24*s24)*((s23+s24)*(s23+s24))*(2*s24*(s23*s23)-29*s23*(s24*s24)+9*pow(s23,3)-18*pow(s24,3))+2*pow(s14,3)*(s24*s24*pow(s23,3)+21*s24*pow(s23,4)+9*pow(s23,5)-20*(s23*s23)*pow(s24,3)+9*s23*pow(s24,4)+3*pow(s24,5))+s14*s24*(-56*(s24*s24)*pow(s23,4)+6*s24*pow(s23,5)+8*pow(s23,6)-104*pow(s23,3)*pow(s24,3)-71*(s23*s23)*pow(s24,4)-15*s23*pow(s24,5)+6*pow(s24,6))+s14*s14*(-6*(s24*s24)*pow(s23,4)+63*s24*pow(s23,5)+15*pow(s23,6)-6*pow(s23,3)*pow(s24,3)+91*(s23*s23)*pow(s24,4)+19*s23*pow(s24,5)+12*pow(s24,6)))+s14*pow(s13,5)*(-2*(s23*s23)*(10*s23*s24+6*(s23*s23)-15*(s24*s24))*((s23+s24)*(s23+s24))*pow(s24,3)+s14*(s23*s23)*(s24*s24)*(-29*(s23*s23)*(s24*s24)-33*s24*pow(s23,3)-10*pow(s23,4)+26*s23*pow(s24,3)+32*pow(s24,4))+s24*(s14*s14)*(195*(s24*s24)*pow(s23,4)+63*s24*pow(s23,5)-4*pow(s23,6)+96*pow(s23,3)*pow(s24,3)-20*(s23*s23)*pow(s24,4)+15*s23*pow(s24,5)+15*pow(s24,6))+pow(s14,3)*(52*(s24*s24)*pow(s23,4)-38*s24*pow(s23,5)-12*pow(s23,6)+94*pow(s23,3)*pow(s24,3)+10*(s23*s23)*pow(s24,4)+34*s23*pow(s24,5)+30*pow(s24,6)))+s14*s14*pow(s13,4)*(-(s23*s23*(s24*s24)*((s23+s24)*(s23+s24))*(35*s24*(s23*s23)+18*s23*(s24*s24)+12*pow(s23,3)-20*pow(s24,3)))+s14*s23*(s24*s24)*(49*(s24*s24)*pow(s23,3)+33*s24*pow(s23,4)+10*pow(s23,5)+46*(s23*s23)*pow(s24,3)+14*s23*pow(s24,4)-6*pow(s24,5))+pow(s14,3)*(23*(s24*s24)*pow(s23,4)-70*s24*pow(s23,5)-27*pow(s23,6)+86*pow(s23,3)*pow(s24,3)-17*(s23*s23)*pow(s24,4)+8*s23*pow(s24,5)+15*pow(s24,6))+s14*s14*(69*(s24*s24)*pow(s23,5)-48*s24*pow(s23,6)-12*pow(s23,7)+163*pow(s23,4)*pow(s24,3)-10*pow(s23,3)*pow(s24,4)-44*(s23*s23)*pow(s24,5)+3*s23*pow(s24,6)+15*pow(s24,7))))+pow(s12,4)*(-(s13*(s23+s24)*(s23*s23)*(s24*s24)*((48*s23-52*s24)*(s14*s14)+s14*(-26*s23*s24+102*(s23*s23)-91*(s24*s24))+6*(4*s23-5*s24)*((s23+s24)*(s23+s24)))*pow(s14,3))-3*(s23+s24)*(s23*s23)*(s24*s24)*((6*s23-5*s24)*(s14*s14)+s14*(-(s23*s24)+18*(s23*s23)-10*(s24*s24))+(6*s23-5*s24)*((s23+s24)*(s23+s24)))*pow(s14,4)+15*(s23+s24)*(s23*s23)*pow(s13,6)*pow(s24,3)+pow(s13,5)*(2*s14*(s23*s23)*(s24*s24)*(17*s23*s24-3*(s23*s23)+20*(s24*s24))+15*(s23*s23)*(5*s23*s24+2*(s23*s23)+3*(s24*s24))*pow(s24,3)-3*pow(s14,3)*(2*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)+pow(s23,4)-4*s23*pow(s24,3)-5*pow(s24,4)))+s14*pow(s13,3)*(2*s14*(s23*s23)*(s24*s24)*(-47*s24*(s23*s23)+28*s23*(s24*s24)-41*pow(s23,3)+34*pow(s24,3))-9*pow(s14,4)*(2*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)+pow(s23,4)-4*s23*pow(s24,3)-5*pow(s24,4))+pow(s14,3)*(-18*(s24*s24)*pow(s23,3)-9*s24*pow(s23,4)-21*pow(s23,5)+44*(s23*s23)*pow(s24,3)+127*s23*pow(s24,4)+75*pow(s24,5))+s14*s14*(-51*(s24*s24)*pow(s23,4)-8*s24*pow(s23,5)-3*pow(s23,6)+40*pow(s23,3)*pow(s24,3)+111*(s23*s23)*pow(s24,4)+46*s23*pow(s24,5)+15*pow(s24,6))-6*(3*s23-5*s24)*(s23*s23)*(s24*s24)*pow(s23+s24,3))+s13*s13*(s14*s14)*(-2*s14*(s23*s23)*(s24*s24)*(25*s24*(s23*s23)-66*s23*(s24*s24)+40*pow(s23,3)-51*pow(s24,3))-3*pow(s14,4)*(2*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)+pow(s23,4)-4*s23*pow(s24,3)-5*pow(s24,4))+pow(s14,3)*(-12*(s24*s24)*pow(s23,3)+2*s24*pow(s23,4)-9*pow(s23,5)+20*(s23*s23)*pow(s24,3)+57*s23*pow(s24,4)+30*pow(s24,5))+s14*s14*(-59*(s24*s24)*pow(s23,4)-8*s24*pow(s23,5)-3*pow(s23,6)+47*pow(s23,3)*pow(s24,3)+126*(s23*s23)*pow(s24,4)+46*s23*pow(s24,5)+15*pow(s24,6))-6*(2*s23-s24)*(s23*s23)*(s24*s24)*pow(s23+s24,3))+pow(s13,4)*(s14*s14*(s23*s23)*(s24*s24)*(13*s23*s24-28*(s23*s23)+41*(s24*s24))+s14*(s23*s23)*(s24*s24)*(-(s24*(s23*s23))+137*s23*(s24*s24)-34*pow(s23,3)+104*pow(s24,3))-9*pow(s14,4)*(2*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)+pow(s23,4)-4*s23*pow(s24,3)-5*pow(s24,4))+pow(s14,3)*(-6*(s24*s24)*pow(s23,3)-11*s24*pow(s23,4)-12*pow(s23,5)+24*(s23*s23)*pow(s24,3)+70*s23*pow(s24,4)+45*pow(s24,5))+15*(s23*s23)*pow(s24,3)*pow(s23+s24,3)))+s12*s12*((s23+s24)*(s23*s23)*(s24*s24)*(4*s14*(s23-s24)+15*(s24*s24))*pow(s13,7)-3*(s23+s24)*(s24*s24)*((6*s23-3*s24)*(s14*s14)+s14*(5*s23*s24+18*(s23*s23)-6*(s24*s24))+3*(2*s23-s24)*((s23+s24)*(s23+s24)))*pow(s14,5)*pow(s23,3)-s13*(s23+s24)*(s23*s23)*(s24*s24)*pow(s14,4)*(s14*s14*(-4*s23*s24+54*(s23*s23)-9*(s24*s24))+(-16*s23*s24+30*(s23*s23)-9*(s24*s24))*((s23+s24)*(s23+s24))+2*s14*(20*s24*(s23*s23)-27*s23*(s24*s24)+60*pow(s23,3)-9*pow(s24,3)))+pow(s13,6)*(12*(s14*s14)*(s23*s23)*(2*s23*s24+3*(s23*s23)-s24*s24)*(s24*s24)+s14*(s23*s23)*(s24*s24)*(5*s24*(s23*s23)+31*s23*(s24*s24)+2*pow(s23,3)+28*pow(s24,3))+15*(s23*s23)*(5*s23*s24+2*(s23*s23)+3*(s24*s24))*pow(s24,4)+pow(s14,3)*(-2*(s24*s24)*pow(s23,3)-13*s24*pow(s23,4)-6*pow(s23,5)+4*(s23*s23)*pow(s24,3)+16*s23*pow(s24,4)+15*pow(s24,5)))+s14*pow(s13,4)*(s14*(s23*s23)*(s24*s24)*(-115*(s23*s23)*(s24*s24)-183*s24*pow(s23,3)-62*pow(s23,4)+86*s23*pow(s24,3)+80*pow(s24,4))-3*pow(s14,4)*(10*(s24*s24)*pow(s23,3)+13*s24*pow(s23,4)+9*pow(s23,5)-4*(s23*s23)*pow(s24,3)-19*s23*pow(s24,4)-15*pow(s24,5))+pow(s14,3)*(29*(s24*s24)*pow(s23,4)-120*s24*pow(s23,5)-42*pow(s23,6)+136*pow(s23,3)*pow(s24,3)+56*(s23*s23)*pow(s24,4)+128*s23*pow(s24,5)+75*pow(s24,6))+s14*s14*(-10*(s24*s24)*pow(s23,5)-27*s24*pow(s23,6)-6*pow(s23,7)+94*pow(s23,4)*pow(s24,3)+143*pow(s23,3)*pow(s24,4)+85*(s23*s23)*pow(s24,5)+34*s23*pow(s24,6)+15*pow(s24,7))-s23*s23*(13*s23*s24+6*(s23*s23)-30*(s24*s24))*(s24*s24)*pow(s23+s24,3))+s23*(s13*s13)*pow(s14,3)*(pow(s14,4)*(-8*(s23*s23)*(s24*s24)-3*pow(s23,4)+3*pow(s24,4))+pow(s14,3)*(-16*(s24*s24)*pow(s23,3)-20*s24*pow(s23,4)-9*pow(s23,5)+16*(s23*s23)*pow(s24,3)+5*s23*pow(s24,4)+10*pow(s24,5))+s14*s24*(-90*(s24*s24)*pow(s23,4)-108*s24*pow(s23,5)-4*pow(s23,6)+200*pow(s23,3)*pow(s24,3)+285*(s23*s23)*pow(s24,4)+103*s23*pow(s24,5)+4*pow(s24,6))+s14*s14*(-93*(s24*s24)*pow(s23,4)-26*s24*pow(s23,5)-3*pow(s23,6)-31*pow(s23,3)*pow(s24,3)+108*(s23*s23)*pow(s24,4)+86*s23*pow(s24,5)+11*pow(s24,6))-2*s23*(-5*s23*s24+10*(s23*s23)-11*(s24*s24))*(s24*s24)*pow(s23+s24,3))+s14*s14*pow(s13,3)*(pow(s14,4)*(-26*(s24*s24)*pow(s23,3)-13*s24*pow(s23,4)-15*pow(s23,5)+4*(s23*s23)*pow(s24,3)+25*s23*pow(s24,4)+15*pow(s24,5))-4*s14*s23*s24*(38*(s24*s24)*pow(s23,4)+26*s24*pow(s23,5)+pow(s23,6)-34*pow(s23,3)*pow(s24,3)-82*(s23*s23)*pow(s24,4)-36*s23*pow(s24,5)-pow(s24,6))+pow(s14,3)*(-28*(s24*s24)*pow(s23,4)-100*s24*pow(s23,5)-39*pow(s23,6)+78*pow(s23,3)*pow(s24,3)+29*(s23*s23)*pow(s24,4)+66*s23*pow(s24,5)+30*pow(s24,6))+s14*s14*(-67*(s24*s24)*pow(s23,5)-53*s24*pow(s23,6)-9*pow(s23,7)+75*pow(s23,4)*pow(s24,3)+202*pow(s23,3)*pow(s24,4)+146*(s23*s23)*pow(s24,5)+45*s23*pow(s24,6)+15*pow(s24,7))-2*(s23*s23)*(4*s23*s24+11*(s23*s23)-6*(s24*s24))*(s24*s24)*pow(s23+s24,3))+pow(s13,5)*(s14*s14*(s23*s23)*(s24*s24)*(28*s24*(s23*s23)+49*s23*(s24*s24)+2*pow(s23,3)+23*pow(s24,3))-2*s14*(s23*s23)*(s24*s24)*(3*(s23*s23)*(s24*s24)+23*s24*pow(s23,3)+4*pow(s23,4)-66*s23*pow(s24,3)-50*pow(s24,4))+pow(s14,4)*(-14*(s24*s24)*pow(s23,3)-39*s24*pow(s23,4)-21*pow(s23,5)+12*(s23*s23)*pow(s24,3)+51*s23*pow(s24,4)+45*pow(s24,5))+pow(s14,3)*(73*(s24*s24)*pow(s23,4)-40*s24*pow(s23,5)-12*pow(s23,6)+98*pow(s23,3)*pow(s24,3)+24*(s23*s23)*pow(s24,4)+72*s23*pow(s24,5)+45*pow(s24,6))+15*(s23*s23)*pow(s24,4)*pow(s23+s24,3)))+pow(s12,3)*(5*(s23+s24)*(s23*s23)*pow(s13,7)*pow(s24,3)+pow(s13,6)*(3*s14*(s23*s23)*(s24*s24)*(5*s23*s24+2*(s23*s23)+3*(s24*s24))+15*(s23*s23)*(4*s23*s24+s23*s23+3*(s24*s24))*pow(s24,3)+pow(s14,3)*(-2*(s23*s23)*(s24*s24)+2*s24*pow(s23,3)-pow(s23,4)+4*s23*pow(s24,3)+5*pow(s24,4)))+pow(s13,5)*(s14*s14*(s23*s23)*(s24*s24)*(27*s23*s24+26*(s23*s23)+s24*s24)+15*(s23+3*s24)*(s23*s23)*((s23+s24)*(s23+s24))*pow(s24,3)+2*s14*(s23*s23)*(s24*s24)*(s24*(s23*s23)+63*s23*(s24*s24)-7*pow(s23,3)+55*pow(s24,3))-4*pow(s14,4)*(2*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)+pow(s23,4)-4*s23*pow(s24,3)-5*pow(s24,4))+pow(s14,3)*(-6*(s24*s24)*pow(s23,3)-25*s24*pow(s23,4)-15*pow(s23,5)+18*(s23*s23)*pow(s24,3)+59*s23*pow(s24,4)+45*pow(s24,5)))-s13*(s23+s24)*(s23*s23)*(s24*s24)*pow(s14,3)*(2*(s14*s14)*(-19*s23*s24+66*(s23*s23)-35*(s24*s24))+(20*s23-21*s24)*pow(s14,3)+s14*(59*s24*(s23*s23)-96*s23*(s24*s24)+96*pow(s23,3)-59*pow(s24,3))+2*(4*s23-5*s24)*pow(s23+s24,3))-(s23+s24)*(s23*s23)*(s24*s24)*pow(s14,4)*(3*(s14*s14)*(-5*s23*s24+18*(s23*s23)-5*(s24*s24))+(6*s23-5*s24)*pow(s14,3)+3*s14*(13*s24*(s23*s23)-10*s23*(s24*s24)+18*pow(s23,3)-5*pow(s24,3))+(6*s23-5*s24)*pow(s23+s24,3))+s14*pow(s13,3)*(-2*s14*(s23*s23)*(9*s23*s24+37*(s23*s23)-26*(s24*s24))*(s24*s24)*((s23+s24)*(s23+s24))-4*pow(s14,5)*(2*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)+pow(s23,4)-4*s23*pow(s24,3)-5*pow(s24,4))+pow(s14,4)*(-42*(s24*s24)*pow(s23,3)-23*s24*pow(s23,4)-33*pow(s23,5)+38*(s23*s23)*pow(s24,3)+125*s23*pow(s24,4)+75*pow(s24,5))+pow(s14,3)*(-46*(s24*s24)*pow(s23,4)-66*s24*pow(s23,5)-24*pow(s23,6)+105*pow(s23,3)*pow(s24,3)+175*(s23*s23)*pow(s24,4)+154*s23*pow(s24,5)+60*pow(s24,6))-s14*s14*(137*(s24*s24)*pow(s23,5)+11*s24*pow(s23,6)+pow(s23,7)+63*pow(s23,4)*pow(s24,3)-249*pow(s23,3)*pow(s24,4)-207*(s23*s23)*pow(s24,5)-27*s23*pow(s24,6)-5*pow(s24,7))-2*(3*s23-5*s24)*(s23*s23)*(s24*s24)*pow(s23+s24,4))+s13*s13*(s14*s14)*(-2*s14*(s23*s23)*(-15*s23*s24+35*(s23*s23)-42*(s24*s24))*(s24*s24)*((s23+s24)*(s23+s24))+pow(s14,5)*(-2*(s23*s23)*(s24*s24)+2*s24*pow(s23,3)-pow(s23,4)+4*s23*pow(s24,3)+5*pow(s24,4))+pow(s14,4)*(-18*(s24*s24)*pow(s23,3)+s24*pow(s23,4)-9*pow(s23,5)+10*(s23*s23)*pow(s24,3)+33*s23*pow(s24,4)+15*pow(s24,5))+pow(s14,3)*(-47*(s24*s24)*pow(s23,4)-22*s24*pow(s23,5)-9*pow(s23,6)+43*pow(s23,3)*pow(s24,3)+96*(s23*s23)*pow(s24,4)+56*s23*pow(s24,5)+15*pow(s24,6))-s14*s14*(147*(s24*s24)*pow(s23,5)+11*s24*pow(s23,6)+pow(s23,7)+32*pow(s23,4)*pow(s24,3)-283*pow(s23,3)*pow(s24,4)-200*(s23*s23)*pow(s24,5)-27*s23*pow(s24,6)-5*pow(s24,7))-2*(2*s23-s24)*(s23*s23)*(s24*s24)*pow(s23+s24,4))+pow(s13,4)*(-(s14*(s23*s23)*(3*s23*s24+26*(s23*s23)-97*(s24*s24))*(s24*s24)*((s23+s24)*(s23+s24)))+s14*s14*(s23*s23)*(s24*s24)*(-101*s24*(s23*s23)+78*s23*(s24*s24)-78*pow(s23,3)+101*pow(s24,3))-6*pow(s14,5)*(2*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)+pow(s23,4)-4*s23*pow(s24,3)-5*pow(s24,4))+pow(s14,4)*(-30*(s24*s24)*pow(s23,3)-49*s24*pow(s23,4)-39*pow(s23,5)+46*(s23*s23)*pow(s24,3)+151*s23*pow(s24,4)+105*pow(s24,5))+pow(s14,3)*(7*(s24*s24)*pow(s23,4)-44*s24*pow(s23,5)-15*pow(s23,6)+81*pow(s23,3)*pow(s24,3)+92*(s23*s23)*pow(s24,4)+98*s23*pow(s24,5)+45*pow(s24,6))+5*(s23*s23)*pow(s24,3)*pow(s23+s24,4))))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1))/4.+(-256*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s24,-1)*pow(s12+s14+s24,-3)*pow(s23+s24,-1)*(2*(39*s23*s24+6*s13*(2*s23+5*s24)+12*s14*(2*s23+5*s24)+14*(s23*s23)+59*(s24*s24))*pow(s12,7)+4*(2*s23+5*s24)*pow(s12,8)+pow(s12,6)*(13*(2*s23+5*s24)*(s13*s13)+61*(2*s23+5*s24)*(s14*s14)+132*s24*(s23*s23)+260*s23*(s24*s24)+s13*(215*s23*s24+62*s14*(2*s23+5*s24)+60*(s23*s23)+339*(s24*s24))+s14*(399*s23*s24+152*(s23*s23)+599*(s24*s24))+34*pow(s23,3)+294*pow(s24,3))+pow(s12,5)*(222*(s23*s23)*(s24*s24)+s13*s13*(210*s23*s24+57*s14*(2*s23+5*s24)+41*(s23*s23)+350*(s24*s24))+s14*s14*(857*s23*s24+345*(s23*s23)+1269*(s24*s24))+6*(2*s23+5*s24)*pow(s13,3)+85*(2*s23+5*s24)*pow(s14,3)+102*s24*pow(s23,3)+17*pow(s23,4)+429*s23*pow(s24,3)+s13*(132*(2*s23+5*s24)*(s14*s14)+273*s24*(s23*s23)+683*s23*(s24*s24)+2*s14*(457*s23*s24+139*(s23*s23)+721*(s24*s24))+46*pow(s23,3)+792*pow(s24,3))+s14*(602*s24*(s23*s23)+1095*s23*(s24*s24)+168*pow(s23,3)+1225*pow(s24,3))+400*pow(s24,4))+(s13+s14+s23+s24)*(s13+s14+s23+s24)*(s13*s13*(s24*s24)*(s14*s24*(10*s23+19*s24)+(7*s23+16*s24)*(s14*s14)+3*(2*s23+3*s24)*(s24*s24)+3*pow(s14,3))+s14*((3*s23*s24+2*(s23*s23)+4*(s24*s24))*pow(s14,4)-s14*(s24*s24)*(10*s24*(s23*s23)+9*s23*(s24*s24)+pow(s23,3)-3*pow(s24,3))-2*s23*(5*s23*s24+2*(s23*s23)+3*(s24*s24))*pow(s24,3)+s24*(s14*s14)*(3*s24*(s23*s23)+s23*(s24*s24)+3*pow(s23,3)+10*pow(s24,3))+pow(s14,3)*(8*s24*(s23*s23)+7*s23*(s24*s24)+3*pow(s23,3)+11*pow(s24,3)))+s13*(s14*s14*(s24*s24)*(2*s23*s24-5*(s23*s23)+25*(s24*s24))+s24*(s23*s24-3*(s23*s23)+22*(s24*s24))*pow(s14,3)+(3*s23*s24+2*(s23*s23)+7*(s24*s24))*pow(s14,4)+2*s14*(3*s23*s24-s23*s23+7*(s24*s24))*pow(s24,3)+4*((s23+s24)*(s23+s24))*pow(s24,4)))+pow(s12,4)*((85*s23*s24+22*s14*(2*s23+5*s24)+9*(s23*s23)+153*(s24*s24))*pow(s13,3)+(2*s23+5*s24)*pow(s13,4)+(996*s23*s24+422*(s23*s23)+1445*(s24*s24))*pow(s14,3)+70*(2*s23+5*s24)*pow(s14,4)+77*(s24*s24)*pow(s23,3)+32*s24*pow(s23,4)+3*pow(s23,5)+153*(s23*s23)*pow(s24,3)+s13*s13*(99*(2*s23+5*s24)*(s14*s14)+179*s24*(s23*s23)+612*s23*(s24*s24)+s14*(718*s23*s24+160*(s23*s23)+1215*(s24*s24))+15*pow(s23,3)+757*pow(s24,3))+s14*s14*(1124*s24*(s23*s23)+1899*s23*(s24*s24)+339*pow(s23,3)+2083*pow(s24,3))+393*s23*pow(s24,4)+2*s14*(398*(s23*s23)*(s24*s24)+209*s24*pow(s23,3)+38*pow(s23,4)+702*s23*pow(s24,3)+655*pow(s24,4))+s13*(491*(s23*s23)*(s24*s24)+s14*s14*(1576*s23*s24+521*(s23*s23)+2474*(s24*s24))+148*(2*s23+5*s24)*pow(s14,3)+129*s24*pow(s23,3)+11*pow(s23,4)+1094*s23*pow(s24,3)+s14*(977*s24*(s23*s23)+2278*s23*(s24*s24)+192*pow(s23,3)+2675*pow(s24,3))+985*pow(s24,4))+320*pow(s24,5))+s12*s12*((s14*s24*(22*s23+49*s24)+3*(2*s23+5*s24)*(s14*s14)+6*(4*s23+7*s24)*(s24*s24))*pow(s13,4)+pow(s13,3)*(3*(s24*s24)*(87*s23*s24+21*(s23*s23)+95*(s24*s24))+3*(s14*s14)*(70*s23*s24+11*(s23*s23)+136*(s24*s24))+2*s14*s24*(191*s23*s24+34*(s23*s23)+289*(s24*s24))+18*(2*s23+5*s24)*pow(s14,3))+2*(127*s23*s24+60*(s23*s23)+174*(s24*s24))*pow(s14,5)+9*(2*s23+5*s24)*pow(s14,6)-s24*s24*((s23+s24)*(s23+s24))*(26*s24*(s23*s23)+21*s23*(s24*s24)+pow(s23,3)-38*pow(s24,3))+pow(s14,4)*(590*s24*(s23*s23)+870*s23*(s24*s24)+204*pow(s23,3)+886*pow(s24,3))+s13*s13*((584*s23*s24+170*(s23*s23)+1009*(s24*s24))*pow(s14,3)+36*(2*s23+5*s24)*pow(s14,4)+s24*s24*(323*s24*(s23*s23)+706*s23*(s24*s24)+50*pow(s23,3)+497*pow(s24,3))+s14*s24*(519*s24*(s23*s23)+1530*s23*(s24*s24)+76*pow(s23,3)+1540*pow(s24,3))+s14*s14*(443*s24*(s23*s23)+1383*s23*(s24*s24)+66*pow(s23,3)+1882*pow(s24,3)))+pow(s14,3)*(825*(s23*s23)*(s24*s24)+534*s24*pow(s23,3)+116*pow(s23,4)+1195*s23*pow(s24,3)+1067*pow(s24,4))+s13*((650*s23*s24+257*(s23*s23)+998*(s24*s24))*pow(s14,4)+30*(2*s23+5*s24)*pow(s14,5)+pow(s14,3)*(906*s24*(s23*s23)+1837*s23*(s24*s24)+250*pow(s23,3)+2213*pow(s24,3))+s24*s24*(299*(s23*s23)*(s24*s24)+74*s24*pow(s23,3)+10*pow(s23,4)+511*s23*pow(s24,3)+276*pow(s24,4))+s14*s24*(667*(s23*s23)*(s24*s24)+199*s24*pow(s23,3)+39*pow(s23,4)+1598*s23*pow(s24,3)+1219*pow(s24,4))+s14*s14*(1036*(s23*s23)*(s24*s24)+402*s24*pow(s23,3)+57*pow(s23,4)+2354*s23*pow(s24,3)+2308*pow(s24,4)))+s14*s24*(-105*(s24*s24)*pow(s23,3)+17*s24*pow(s23,4)+9*pow(s23,5)-93*(s23*s23)*pow(s24,3)+255*s23*pow(s24,4)+235*pow(s24,5))+s14*s14*(296*(s24*s24)*pow(s23,3)+156*s24*pow(s23,4)+18*pow(s23,5)+302*(s23*s23)*pow(s24,3)+761*s23*pow(s24,4)+681*pow(s24,5)))+pow(s12,3)*((30*(2*s23+5*s24)*(s14*s14)+s24*(215*s23*s24+37*(s23*s23)+301*(s24*s24))+s14*(223*s23*s24+29*(s23*s23)+419*(s24*s24)))*pow(s13,3)+3*(4*s24*(s23+2*s24)+s14*(2*s23+5*s24))*pow(s13,4)+(669*s23*s24+298*(s23*s23)+945*(s24*s24))*pow(s14,4)+34*(2*s23+5*s24)*pow(s14,5)+pow(s14,3)*(1098*s24*(s23*s23)+1733*s23*(s24*s24)+356*pow(s23,3)+1843*pow(s24,3))+s13*s13*(12*(s14*s14)*(79*s23*s24+20*(s23*s23)+135*(s24*s24))+85*(2*s23+5*s24)*pow(s14,3)+s24*(325*s24*(s23*s23)+892*s23*(s24*s24)+40*pow(s23,3)+838*pow(s24,3))+2*s14*(240*s24*(s23*s23)+772*s23*(s24*s24)+26*pow(s23,3)+993*pow(s24,3)))+s14*s14*(1140*(s23*s23)*(s24*s24)+674*s24*pow(s23,3)+134*pow(s23,4)+1829*s23*pow(s24,3)+1688*pow(s24,4))+s13*((1394*s23*s24+501*(s23*s23)+2166*(s24*s24))*pow(s14,3)+92*(2*s23+5*s24)*pow(s14,4)+s14*s14*(1356*s24*(s23*s23)+2954*s23*(s24*s24)+314*pow(s23,3)+3511*pow(s24,3))+s24*(480*(s23*s23)*(s24*s24)+131*s24*pow(s23,3)+18*pow(s23,4)+988*s23*pow(s24,3)+697*pow(s24,4))+s14*(1204*(s23*s23)*(s24*s24)+380*s24*pow(s23,3)+41*pow(s23,4)+2677*s23*pow(s24,3)+2502*pow(s24,4)))+s24*(-36*(s24*s24)*pow(s23,3)+5*s24*pow(s23,4)+3*pow(s23,5)+15*(s23*s23)*pow(s24,3)+203*s23*pow(s24,4)+150*pow(s24,5))+s14*(245*(s24*s24)*pow(s23,3)+116*s24*pow(s23,4)+12*pow(s23,5)+347*(s23*s23)*pow(s24,3)+900*s23*pow(s24,4)+770*pow(s24,5)))+s12*((48*s23*s24+25*(s23*s23)+64*(s24*s24))*pow(s14,6)+(2*s23+5*s24)*pow(s14,7)+s14*(s24*s24)*((s23+s24)*(s23+s24))*(-44*s24*(s23*s23)-49*s23*(s24*s24)-2*pow(s23,3)+29*pow(s24,3))+2*pow(s14,5)*(82*s24*(s23*s23)+111*s23*(s24*s24)+30*pow(s23,3)+107*pow(s24,3))+pow(s13,4)*(s24*(13*s23+31*s24)*(s14*s14)+s14*(26*s23+53*s24)*(s24*s24)+(2*s23+5*s24)*pow(s14,3)+4*(5*s23+8*s24)*pow(s24,3))+pow(s13,3)*(3*s14*(s24*s24)*(93*s23*s24+19*(s23*s23)+113*(s24*s24))+s24*(s14*s14)*(207*s23*s24+31*(s23*s23)+353*(s24*s24))+(72*s23*s24+15*(s23*s23)+152*(s24*s24))*pow(s14,3)+4*(2*s23+5*s24)*pow(s14,4)+(157*s23*s24+51*(s23*s23)+129*(s24*s24))*pow(s24,3))+s13*s13*((153*s23*s24+55*(s23*s23)+275*(s24*s24))*pow(s14,4)+6*(2*s23+5*s24)*pow(s14,5)+pow(s24,3)*(181*s24*(s23*s23)+290*s23*(s24*s24)+39*pow(s23,3)+148*pow(s24,3))+s14*(s24*s24)*(266*s24*(s23*s23)+718*s23*(s24*s24)+36*pow(s23,3)+557*pow(s24,3))+pow(s14,3)*(154*s24*(s23*s23)+486*s23*(s24*s24)+36*pow(s23,3)+737*pow(s24,3))+s24*(s14*s14)*(217*s24*(s23*s23)+806*s23*(s24*s24)+33*pow(s23,3)+901*pow(s24,3)))+pow(s14,4)*(304*(s23*s23)*(s24*s24)+208*s24*pow(s23,3)+49*pow(s23,4)+389*s23*pow(s24,3)+325*pow(s24,4))+s13*((142*s23*s24+65*(s23*s23)+218*(s24*s24))*pow(s14,5)+4*(2*s23+5*s24)*pow(s14,6)+(31*s23*s24+4*(s23*s23)+55*(s24*s24))*((s23+s24)*(s23+s24))*pow(s24,3)+pow(s14,4)*(287*s24*(s23*s23)+527*s23*(s24*s24)+96*pow(s23,3)+651*pow(s24,3))+5*pow(s14,3)*(73*(s23*s23)*(s24*s24)+36*s24*pow(s23,3)+7*pow(s23,4)+173*s23*pow(s24,3)+180*pow(s24,4))+s14*(s24*s24)*(165*(s23*s23)*(s24*s24)-5*s24*pow(s23,3)+3*pow(s23,4)+455*s23*pow(s24,3)+282*pow(s24,4))+s24*(s14*s14)*(220*(s23*s23)*(s24*s24)+63*s24*pow(s23,3)+24*pow(s23,4)+786*s23*pow(s24,3)+674*pow(s24,4)))+s24*(s14*s14)*(-85*(s24*s24)*pow(s23,3)+19*s24*pow(s23,4)+9*pow(s23,5)-129*(s23*s23)*pow(s24,3)+81*s23*pow(s24,4)+115*pow(s24,5))+pow(s14,3)*(165*(s24*s24)*pow(s23,3)+92*s24*pow(s23,4)+12*pow(s23,5)+139*(s23*s23)*pow(s24,3)+291*s23*pow(s24,4)+260*pow(s24,5))+2*(-3*s23*s24-2*(s23*s23)+2*(s24*s24))*pow(s24,3)*pow(s23+s24,3)))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-256*pow(s13,-1)*pow(s14,-1)*pow(s13+s14,-1)*pow(s12+s14+s24,-3)*(2*(3*s13*(13*s14+4*s23+8*s24)+s14*(59*s14+30*(s23+2*s24))+14*(s13*s13))*pow(s12,7)+4*(2*s13+5*s14)*pow(s12,8)+pow(s12,6)*(4*(33*s14+15*s23+38*s24)*(s13*s13)+s13*(s14*(215*s23+399*s24)+260*(s14*s14)+2*(62*s23*s24+13*(s23*s23)+61*(s24*s24)))+s14*(s14*(339*s23+599*s24)+294*(s14*s14)+5*(62*s23*s24+13*(s23*s23)+61*(s24*s24)))+34*pow(s13,3))+pow(s12,5)*(s13*s13*(278*s23*s24+7*s14*(39*s23+86*s24)+222*(s14*s14)+41*(s23*s23)+345*(s24*s24))+2*(51*s14+23*s23+84*s24)*pow(s13,3)+17*pow(s13,4)+s13*((683*s23+1095*s24)*(s14*s14)+s14*(914*s23*s24+210*(s23*s23)+857*(s24*s24))+429*pow(s14,3)+2*(57*s24*(s23*s23)+132*s23*(s24*s24)+6*pow(s23,3)+85*pow(s24,3)))+s14*((792*s23+1225*s24)*(s14*s14)+s14*(1442*s23*s24+350*(s23*s23)+1269*(s24*s24))+400*pow(s14,3)+5*(57*s24*(s23*s23)+132*s23*(s24*s24)+6*pow(s23,3)+85*pow(s24,3))))-(s13+s14+s23+s24)*(s13+s14+s23+s24)*(s24*pow(s13,3)*(s24*(s14*s14)-3*s14*(s24*s24)+4*pow(s14,3)-3*pow(s24,3))-s14*s14*(s24*(s14*s14)*(25*s23*s24+19*(s23*s23)+10*(s24*s24))+s14*(s24*s24)*(22*s23*s24+16*(s23*s23)+11*(s24*s24))+(14*s23*s24+9*(s23*s23)+3*(s24*s24))*pow(s14,3)+4*s23*pow(s14,4)+(7*s23*s24+3*(s23*s23)+4*(s24*s24))*pow(s24,3))+s13*s13*((5*s23-3*s24)*(s14*s14)*(s24*s24)+2*s24*(s23+5*s24)*pow(s14,3)+(-4*s23+10*s24)*pow(s14,4)+s14*(3*s23-8*s24)*pow(s24,3)-2*(s23+s24)*pow(s24,4))-s13*s14*(s24*(s14*s14)*(2*s23*s24+10*(s23*s23)+s24*s24)+s14*(s24*s24)*(s23*s24+7*(s23*s23)+7*(s24*s24))+(6*s23*s24+6*(s23*s23)-9*(s24*s24))*pow(s14,3)+(8*s23-6*s24)*pow(s14,4)+3*(s23+s24)*pow(s24,4)))+pow(s12,4)*((s14*(129*s23+418*s24)+77*(s14*s14)+3*(64*s23*s24+5*(s23*s23)+113*(s24*s24)))*pow(s13,3)+(32*s14+11*s23+76*s24)*pow(s13,4)+3*pow(s13,5)+s13*s13*((491*s23+796*s24)*(s14*s14)+160*s24*(s23*s23)+521*s23*(s24*s24)+s14*(977*s23*s24+179*(s23*s23)+1124*(s24*s24))+153*pow(s14,3)+9*pow(s23,3)+422*pow(s24,3))+s13*(s14*s14*(2278*s23*s24+612*(s23*s23)+1899*(s24*s24))+2*(547*s23+702*s24)*pow(s14,3)+393*pow(s14,4)+s14*(718*s24*(s23*s23)+1576*s23*(s24*s24)+85*pow(s23,3)+996*pow(s24,3))+2*(99*(s23*s23)*(s24*s24)+22*s24*pow(s23,3)+pow(s23,4)+148*s23*pow(s24,3)+70*pow(s24,4)))+s14*(s14*s14*(2675*s23*s24+757*(s23*s23)+2083*(s24*s24))+5*(197*s23+262*s24)*pow(s14,3)+320*pow(s14,4)+s14*(1215*s24*(s23*s23)+2474*s23*(s24*s24)+153*pow(s23,3)+1445*pow(s24,3))+5*(99*(s23*s23)*(s24*s24)+22*s24*pow(s23,3)+pow(s23,4)+148*s23*pow(s24,3)+70*pow(s24,4))))+pow(s12,3)*((2*s14*(9*s23+58*s24)+s24*(41*s23+134*s24)+5*(s14*s14))*pow(s13,4)+3*(s14+4*s24)*pow(s13,5)+pow(s13,3)*((131*s23+245*s24)*(s14*s14)+2*s24*(157*s23*s24+26*(s23*s23)+178*(s24*s24))+s14*(380*s23*s24+40*(s23*s23)+674*(s24*s24))-36*pow(s14,3))+s13*s13*(s14*s14*(1204*s23*s24+325*(s23*s23)+1140*(s24*s24))+(480*s23+347*s24)*pow(s14,3)+15*pow(s14,4)+s24*(240*s24*(s23*s23)+501*s23*(s24*s24)+29*pow(s23,3)+298*pow(s24,3))+s14*(480*s24*(s23*s23)+1356*s23*(s24*s24)+37*pow(s23,3)+1098*pow(s24,3)))+s13*(2*s24*(24*s23*s24+3*(s23*s23)+34*(s24*s24))*((s23+s24)*(s23+s24))+(2677*s23*s24+892*(s23*s23)+1829*(s24*s24))*pow(s14,3)+(988*s23+900*s24)*pow(s14,4)+203*pow(s14,5)+s14*s14*(1544*s24*(s23*s23)+2954*s23*(s24*s24)+215*pow(s23,3)+1733*pow(s24,3))+s14*(948*(s23*s23)*(s24*s24)+223*s24*pow(s23,3)+12*pow(s23,4)+1394*s23*pow(s24,3)+669*pow(s24,4)))+s14*(5*s24*(24*s23*s24+3*(s23*s23)+34*(s24*s24))*((s23+s24)*(s23+s24))+2*(1251*s23*s24+419*(s23*s23)+844*(s24*s24))*pow(s14,3)+(697*s23+770*s24)*pow(s14,4)+150*pow(s14,5)+s14*s14*(1986*s24*(s23*s23)+3511*s23*(s24*s24)+301*pow(s23,3)+1843*pow(s24,3))+s14*(1620*(s23*s23)*(s24*s24)+419*s24*pow(s23,3)+24*pow(s23,4)+2166*s23*pow(s24,3)+945*pow(s24,4))))+s12*s12*((9*s14*s24-s14*s14+18*(s24*s24))*pow(s13,5)+pow(s13,4)*(39*s14*s24*(s23+4*s24)+(10*s23+17*s24)*(s14*s14)+(57*s23+116*s24)*(s24*s24)-28*pow(s14,3))+pow(s13,3)*(2*(s24*s24)*(125*s23*s24+33*(s23*s23)+102*(s24*s24))+2*s14*s24*(201*s23*s24+38*(s23*s23)+267*(s24*s24))+s14*s14*(199*s23*s24+50*(s23*s23)+296*(s24*s24))+(74*s23-105*s24)*pow(s14,3)-74*pow(s14,4))+s13*s13*((667*s23*s24+323*(s23*s23)+302*(s24*s24))*pow(s14,3)+(299*s23-93*s24)*pow(s14,4)-30*pow(s14,5)+s24*s24*(170*s24*(s23*s23)+257*s23*(s24*s24)+33*pow(s23,3)+120*pow(s24,3))+s14*s24*(443*s24*(s23*s23)+906*s23*(s24*s24)+68*pow(s23,3)+590*pow(s24,3))+s14*s14*(519*s24*(s23*s23)+1036*s23*(s24*s24)+63*pow(s23,3)+825*pow(s24,3)))+s13*((1598*s23*s24+706*(s23*s23)+761*(s24*s24))*pow(s14,4)+(511*s23+255*s24)*pow(s14,5)+55*pow(s14,6)+pow(s14,3)*(1530*s24*(s23*s23)+2354*s23*(s24*s24)+261*pow(s23,3)+1195*pow(s24,3))+2*s14*s24*(292*(s23*s23)*(s24*s24)+105*s24*pow(s23,3)+11*pow(s23,4)+325*s23*pow(s24,3)+127*pow(s24,4))+s14*s14*(1383*(s23*s23)*(s24*s24)+382*s24*pow(s23,3)+24*pow(s23,4)+1837*s23*pow(s24,3)+870*pow(s24,4))+6*(s23+3*s24)*(s24*s24)*pow(s23+s24,3))+s14*((1219*s23*s24+497*(s23*s23)+681*(s24*s24))*pow(s14,4)+(276*s23+235*s24)*pow(s14,5)+38*pow(s14,6)+pow(s14,3)*(1540*s24*(s23*s23)+2308*s23*(s24*s24)+285*pow(s23,3)+1067*pow(s24,3))+s14*s24*(1009*(s23*s23)*(s24*s24)+408*s24*pow(s23,3)+49*pow(s23,4)+998*s23*pow(s24,3)+348*pow(s24,4))+s14*s14*(1882*(s23*s23)*(s24*s24)+578*s24*pow(s23,3)+42*pow(s23,4)+2213*s23*pow(s24,3)+886*pow(s24,4))+15*(s23+3*s24)*(s24*s24)*pow(s23+s24,3)))+s12*(pow(s13,5)*(-2*s24*(s14*s14)+9*s14*(s24*s24)-4*pow(s14,3)+12*pow(s24,3))+pow(s13,4)*(s24*(3*s23+19*s24)*(s14*s14)+4*s14*(6*s23+23*s24)*(s24*s24)+4*(s23-12*s24)*pow(s14,3)-18*pow(s14,4)+7*(5*s23+7*s24)*pow(s24,3))+pow(s13,3)*(3*s24*(s14*s14)*(21*s23*s24+12*(s23*s23)+55*(s24*s24))+s14*(s24*s24)*(180*s23*s24+33*(s23*s23)+208*(s24*s24))+(-5*s23*s24+39*(s23*s23)-85*(s24*s24))*pow(s14,3)+(39*s23-139*s24)*pow(s14,4)-26*pow(s14,5)+12*(8*s23*s24+3*(s23*s23)+5*(s24*s24))*pow(s24,3))+s13*s13*((165*s23*s24+181*(s23*s23)-129*(s24*s24))*pow(s14,4)+(121*s23-113*s24)*pow(s14,5)-10*pow(s14,6)+5*(3*s23+5*s24)*((s23+s24)*(s23+s24))*pow(s24,3)+pow(s14,3)*(266*s24*(s23*s23)+220*s23*(s24*s24)+51*pow(s23,3)+139*pow(s24,3))+s14*(s24*s24)*(154*s24*(s23*s23)+287*s23*(s24*s24)+31*pow(s23,3)+164*pow(s24,3))+s24*(s14*s14)*(217*s24*(s23*s23)+365*s23*(s24*s24)+57*pow(s23,3)+304*pow(s24,3)))+s13*(s14*(s24*s24)*(46*s23*s24+13*(s23*s23)+48*(s24*s24))*((s23+s24)*(s23+s24))+(455*s23*s24+290*(s23*s23)+81*(s24*s24))*pow(s14,5)+3*(47*s23+3*s24)*pow(s14,6)+6*pow(s14,7)+pow(s14,4)*(718*s24*(s23*s23)+786*s23*(s24*s24)+157*pow(s23,3)+291*pow(s24,3))+s24*(s14*s14)*(486*(s23*s23)*(s24*s24)+207*s24*pow(s23,3)+26*pow(s23,4)+527*s23*pow(s24,3)+222*pow(s24,4))+pow(s14,3)*(806*(s23*s23)*(s24*s24)+279*s24*pow(s23,3)+20*pow(s23,4)+865*s23*pow(s24,3)+389*pow(s24,4))+2*pow(s24,3)*pow(s23+s24,4))+s14*(s14*(s24*s24)*(90*s23*s24+31*(s23*s23)+64*(s24*s24))*((s23+s24)*(s23+s24))+(282*s23*s24+148*(s23*s23)+115*(s24*s24))*pow(s14,5)+(55*s23+29*s24)*pow(s14,6)+4*pow(s14,7)+pow(s14,4)*(557*s24*(s23*s23)+674*s23*(s24*s24)+129*pow(s23,3)+260*pow(s24,3))+s24*(s14*s14)*(737*(s23*s23)*(s24*s24)+353*s24*pow(s23,3)+53*pow(s23,4)+651*s23*pow(s24,3)+214*pow(s24,4))+pow(s14,3)*(901*(s23*s23)*(s24*s24)+339*s24*pow(s23,3)+32*pow(s23,4)+900*s23*pow(s24,3)+325*pow(s24,4))+5*pow(s24,3)*pow(s23+s24,4))))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+32*pow(s13,-2)*pow(s24,-1)*(-48*s12*s13+48*s13*s14-24*s13*(s13+s14)+8*s13*s24-8*s13*(s12+s13+s14+s23+s24)+8*s13*(2*s12+s13+s14+s23+s24)+32*(s13*s13)+s13*(8*(s12-s14)*(s13+s14)*(2*s12+s13+s14+s23+s24)-8*(s12+s23+s24)*(s12*s12))*pow(s13+s14,-2)+8*s13*(s12+s13+s14+s23+s24)*(3*s13*s14-s12*(s13+s14)+s13*s13+3*(s14*s14))*pow(s13+s14,-2)-8*s13*(s14*(8*s14+2*s23+s24)+s12*(4*s13+2*s23+3*s24)+s13*(13*s14+6*s23+4*s24)+9*(s12*s12)+7*(s13*s13))*pow(s13+s14,-1)+s13*(8*(s12+s13-2*s14-s24)*(s12+s14+s24)+8*(s12+s13-3*s14-s24)*(2*s12+s13+s14+s23+s24))*pow(s12+s13+s14+s23+s24,-1)+8*s13*(s12*(3*s13+5*s14+s23+s24)+s13*(4*s14+s23+2*s24)+s14*(3*s14+2*s23+3*s24)+s12*s12+s13*s13)*pow(s12+s13+s14+s23+s24,-1)+8*s13*(-(s12*(5*s13+8*s14))+s13*(11*s14+s24)+s14*(13*s14+s24)+2*(s13*s13))*pow(s12+s13+s14+s23+s24,-1)-16*s13*(4*s13*s14+s13*s13+3*(s14*s14))*pow(s12+s13+s14+s23+s24,-1)-8*s13*(s12*(s13-13*s14-2*s24)+2*s14*s24-4*s23*s24+s13*(12*s14+3*s23+5*s24)+7*(s12*s12)+12*(s14*s14)-3*(s24*s24))*pow(s12+s13+s14+s23+s24,-1)+8*(-((s13+s23)*(-2*s14*s23+s13*(2*s14+s23+4*s24)+s13*s13)*((s13+s14)*(s13+s14)))+(4*s14*(s14+s23+s24)+s13*(4*s14+6*(s23+s24)))*pow(s12,3)+(3*s13+2*s14)*pow(s12,4)+s12*s12*(-2*(2*s14-s23+s24)*(s13*s13)+2*s14*(2*s14*(2*s23+s24)+s14*s14+(s23+s24)*(s23+s24))+s13*(2*s14*(5*s23+s24)+s14*s14+3*((s23+s24)*(s23+s24)))-3*pow(s13,3))-2*s12*(s13+s14)*(-2*s14*s23*(s14+s23+s24)+(3*s14+2*s23+s24)*(s13*s13)+s13*(s24*(s14+s24)-s23*s23)+3*pow(s13,3)))*pow(s13+s14,-2)*pow(s12+s13+s14+s23+s24,-1)+8*(s12*(5*s13-3*s14)+s14*(2*s14+3*s24)+s13*(3*s14+3*s23+5*s24))*((s13+s14)*(s13+s23)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)+8*s13*(s12+s13+s14+s23+s24)*((s12-s13-2*s14-s23)*(s12+s14+s24)+(3*s12-s13-s14)*(2*s12+s13+s14+s23+s24))*pow(2*s12+s13+s14+s23+s24,-2)+(s13*(-16*(s13+s14)*(-7*s12+4*s13+5*s14+s24)*(2*s12+s13+s14+s23+s24)+16*s12*(s12+s23+s24)*(-2*s12+5*s13+6*s14+s23+2*s24))*pow(2*s12+s13+s14+s23+s24,-2))/2.+16*s13*(s13+s14)*(2*s12*(s13+s14-s23-s24)+(s13+s14)*(s13+s14+s23+s24)-2*(s12*s12))*pow(2*s12+s13+s14+s23+s24,-2)+8*s13*(s12+s13+s14+s23+s24)*(s12*(3*s13+s14-s23-s24)+s14*(s14+s24)+s13*(2*s14+s23+2*s24)-s12*s12+s13*s13)*pow(2*s12+s13+s14+s23+s24,-2)+4*s12*s13*(12*s13*s14*pow(s12,4)+6*(s13*s13)*pow(s12,4)-2*(s14*s14)*pow(s12,4)+2*pow(s12,3)*(2*s13*s14*(8*s14+7*s23+5*s24)+(30*s14+7*s23+5*s24)*(s13*s13)-(6*s14+s23+3*s24)*(s14*s14)+8*pow(s13,3))+4*(s13+s14)*(s13+s14+s23+s24)*(s13*s14*s23*(3*s14+s23+3*s24)+s13*s13*(s23*s24+3*s14*(s23+s24)+3*(s14*s14))-s14*s14*((s14+s24)*(s14+s24))+(2*s14+s24)*pow(s13,3))+s12*s12*(-2*(s14*s14)*(s24*(2*s23+3*s24)+2*s14*(2*s23+7*s24)+11*(s14*s14))+4*s13*s14*(8*s23*s24+s14*(17*s23+7*s24)+4*(s14*s14)+5*(s23*s23)+2*(s24*s24))+2*(s13*s13)*(8*s23*s24+10*s14*(5*s23+4*s24)+56*(s14*s14)+5*(s23*s23)+2*(s24*s24))+8*(11*s14+3*(s23+s24))*pow(s13,3)+14*pow(s13,4))+2*s12*(-((s14+s24)*(s14*s14)*(s24*(s23+s24)+s14*(5*s23+9*s24)+8*(s14*s14)))+4*(3*s23*s24+11*s14*(s23+s24)+13*(s14*s14)+s23*s23+s24*s24)*pow(s13,3)+(24*s14+5*s23+9*s24)*pow(s13,4)+2*pow(s13,5)+2*s13*s14*(4*(3*s23-s24)*(s14*s14)+s14*(14*s23*s24+9*(s23*s23)-s24*s24)+s23*(3*s23*s24+s23*s23+2*(s24*s24))-3*pow(s14,3))+s13*s13*((68*s23+44*s24)*(s14*s14)+s23*(3*s23*s24+s23*s23+2*(s24*s24))+2*s14*(23*s23*s24+11*(s23*s23)+6*(s24*s24))+32*pow(s14,3))))*pow(s13+s14,-2)*pow(s12+s13+s14,-2)*pow(2*s12+s13+s14+s23+s24,-2)-16*s13*pow(s12+s13+s23,-2)*(s13*(s13+2*s14)*(4*s14*s23+s13*(2*s14+s23-2*s24)+s13*s13)*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(28*s23*s24-10*s14*(4*s23+3*s24)+s13*(-44*s14+23*s23+32*s24)+s13*s13+15*(s23*s23)+13*(s24*s24))*pow(s12,4)+(15*s13-15*s14+18*s23+17*s24)*pow(s12,5)+7*pow(s12,6)-s12*s12*(s13*s13*(18*s23*(s23+s24)+s14*(56*s23+60*s24)-23*(s14*s14))+2*s14*(-4*s14*s23*(s23+s24)-2*(2*s23+s24)*(s14*s14)+(5*s23+2*s24)*((s23+s24)*(s23+s24)))+2*(6*s14+13*s23+10*s24)*pow(s13,3)+9*pow(s13,4)+s13*((-14*s23+4*s24)*(s14*s14)+s14*(94*s23*s24+54*(s23*s23)+40*(s24*s24))+(s23-4*s24)*((s23+s24)*(s23+s24))-22*pow(s14,3)))+pow(s12,3)*(-4*(12*s14+4*s23-s24)*(s13*s13)+4*s23*(s14*s14)-s14*(54*s23*s24+35*(s23*s23)+19*(s24*s24))+s13*(-10*s14*(9*s23+7*s24)-4*(s14*s14)+7*(4*s23*s24+s23*s23+3*(s24*s24)))+(4*s23+3*s24)*((s23+s24)*(s23+s24))-16*pow(s13,3)+4*pow(s14,3))+s12*(4*s23*(s23+s24)*(s14+s23+s24)*(s14*s14)+(18*s14*(s23-s24)-18*s23*s24+35*(s14*s14)-7*(s23*s23)-11*(s24*s24))*pow(s13,3)+(13*s14-2*s23-9*s24)*pow(s13,4)+pow(s13,5)+s13*s13*((62*s23+7*s24)*(s14*s14)-s14*(32*s23*s24+3*(s23*s23)+29*(s24*s24))-(4*s23+s24)*((s23+s24)*(s23+s24))+31*pow(s14,3))+2*s13*s14*((19*s23+6*s24)*(s14*s14)+s14*(11*s23*s24+13*(s23*s23)-2*(s24*s24))+4*pow(s14,3)-4*pow(s23+s24,3))))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+8*s13*pow(s12+s13+s23,-3)*(3*(21*s23*s24-4*s14*(2*s23+s24)+s13*(-7*s14+22*s23+28*s24)+10*(s13*s13)+s14*s14+11*(s23*s23)+10*(s24*s24))*pow(s12,5)+(25*s13-6*s14+25*s23+24*s24)*pow(s12,6)+7*pow(s12,7)+s13*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(3*s13*s14*s23*(3*s14+2*s23-3*s24)+9*(s14*s14)*(s23*s23)+s13*s13*(s14*(10*s23-3*s24)-2*s23*s24+3*(s14*s14)+s23*s23+3*(s24*s24))+2*(2*s14+s23-s24)*pow(s13,3)+pow(s13,4))+pow(s12,4)*((-21*s14+45*s23+105*s24)*(s13*s13)+3*(4*s23+s24)*(s14*s14)-3*s14*(13*s23*s24+12*(s23*s23)+2*(s24*s24))+3*s13*(54*s23*s24-s14*(24*s23+11*s24)+5*(s14*s14)+19*(s23*s23)+34*(s24*s24))+(19*s23+16*s24)*((s23+s24)*(s23+s24))+11*pow(s13,3)+3*pow(s14,3))+3*(s12*s12)*(s14*s23*((3*s23+2*s24)*(s14*s14)+s14*(5*s23*s24+4*(s23*s23)+s24*s24)-(2*s23+s24)*((s23+s24)*(s23+s24)))+(4*s14*(4*s23-s24)+6*s23*s24+26*(s14*s14)-7*(s23*s23)+22*(s24*s24))*pow(s13,3)+(13*s14-2*s23+s24)*pow(s13,4)+pow(s13,5)+s13*s13*(-(s14*s23*(9*s23+32*s24))+3*(16*s23+s24)*(s14*s14)+9*s24*(s23*s23)+33*s23*(s24*s24)+17*pow(s14,3)-4*pow(s23,3)+20*pow(s24,3))+s13*(s14*s14*(10*s23*s24+26*(s23*s23)-s24*s24)+s24*(4*s23+3*s24)*((s23+s24)*(s23+s24))+(26*s23+4*s24)*pow(s14,3)+3*pow(s14,4)+s14*(-33*s24*(s23*s23)-18*s23*(s24*s24)-14*pow(s23,3)+pow(s24,3))))+s12*(3*(s23+s24)*(s14+s23+s24)*(s14*s14)*(s23*s23)+3*(-3*s23*s24+s14*(25*s23+s24)+17*(s14*s14)+s23*s23+4*(s24*s24))*pow(s13,4)+3*(9*s14+3*s23-s24)*pow(s13,5)+4*pow(s13,6)+3*s13*s14*s23*(15*s14*s23*(s23+s24)+2*(11*s23+5*s24)*(s14*s14)-2*(s23+2*s24)*((s23+s24)*(s23+s24))+6*pow(s14,3))+pow(s13,3)*(3*(47*s23+5*s24)*(s14*s14)-9*s24*(s23*s23)+24*s23*(s24*s24)+3*s14*(-6*s23*s24+21*(s23*s23)+s24*s24)+37*pow(s14,3)-5*pow(s23,3)+28*pow(s24,3))+3*(s13*s13)*(s14*s14*(11*s23*s24+44*(s23*s23)-s24*s24)-(-(s23*s24)+s23*s23-3*(s24*s24))*((s23+s24)*(s23+s24))+(31*s23+3*s24)*pow(s14,3)+3*pow(s14,4)+s14*(-15*s24*(s23*s23)-16*s23*(s24*s24)+3*pow(s23,3)+2*pow(s24,3))))+pow(s12,3)*(6*s23*(3*s23+2*s24)*(s14*s14)-6*s14*s23*(7*s23*s24+4*(s23*s23)+3*(s24*s24))+3*(s13*s13)*(-(s14*(17*s23+11*s24))+17*(s14*s14)+2*(21*s23*s24+s23*s23+21*(s24*s24)))+(12*s14-7*s23+51*s24)*pow(s13,3)-pow(s13,4)+3*(3*s23+s24)*pow(s14,3)+s13*(3*(19*s23+s24)*(s14*s14)-3*s14*(36*s23*s24+29*(s23*s23)+3*(s24*s24))+30*pow(s14,3)+2*(45*s24*(s23*s23)+63*s23*(s24*s24)+8*pow(s23,3)+26*pow(s24,3)))+(4*s23+3*s24)*pow(s23+s24,3)))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+8*s13*(4*s14*s23+9*s14*s24+4*s23*s24+s12*(-4*s13-11*s14+3*s23+6*s24)+s13*(13*s14+4*s23+6*s24)+14*(s12*s12)+7*(s13*s13)+8*(s14*s14)+5*(s24*s24))*pow(2*s12+s13+s14+s23+s24,-1)+8*s13*(3*(s13+s14)*(s23+s24)+s12*(s13-2*s14+3*s23+4*s24)+6*(s12*s12))*(s12*(s13-s14)+s13*s23-s14*(s14+s24)+s13*s13)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*s13*(s12*(2*s13+s23+s24)+s13*(s13+s14+s23+s24)+s12*s12)*(s12*(7*s13+14*s14-4*s24)-5*s14*s24-s23*s24-s13*(9*s14+4*s24)-8*(s12*s12)-10*(s14*s14)-s24*s24)*pow(s12+s13+s23,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s13,-1)*pow(s12+s23+s24,-1)*(-56*s12-8*s13-24*s14+8*s23+8*s24-16*(s23+s24)+8*(2*s12+s13+s14+s23+s24)+8*s12*((s23+s24)*(s13+s14+2*(s23+s24))+s12*(-2*s13-2*s14+3*(s23+s24))-2*(s12*s12))*pow(s23+s24,-2)-8*(-3*s13*s23+4*s14*s23+7*s14*s24+2*s23*s24+s12*(6*s13+12*s14-s23+5*s24)+12*(s12*s12)-2*(s23*s23)+4*(s24*s24))*pow(s23+s24,-1)+(16*(9*s12+2*s13+4*s14)*(s23+s24)+8*s24*(14*s12+5*s13+9*s14+s23+s24))*pow(s12+s13+s14+s23+s24,-1)+(-16*(6*s12+s13+2*s14)*(2*s12+s13+s14+s23+s24)-8*(s12+s14+s24)*(10*s12+3*s13+5*s14+2*s23+2*s24))*pow(s12+s13+s14+s23+s24,-1)+24*(4*s23*s24+s23*s23+3*(s24*s24))*pow(s12+s13+s14+s23+s24,-1)-24*(2*s14*s23+3*s14*s24+4*s23*s24+s13*(s23+2*s24)+s12*(s13+s14+3*s23+5*s24)+s12*s12+s23*s23+3*(s24*s24))*pow(s12+s13+s14+s23+s24,-1)+8*(4*s14*s23+6*s14*s24+4*s23*s24+2*s13*(2*s14+s23+2*s24)+2*s12*(3*s13+5*s14+3*s23+5*s24)+8*(s12*s12)+s13*s13+3*(s14*s14)+s23*s23+3*(s24*s24))*pow(s12+s13+s14+s23+s24,-1)+8*(8*s14*s23+10*s14*s24+9*s23*s24+2*s13*(5*s14+s23+2*s24)+s12*(26*s13+53*s14+8*s23+11*s24)+53*(s12*s12)-s13*s13+11*(s14*s14)+3*(s23*s23)+6*(s24*s24))*pow(s12+s13+s14+s23+s24,-1)-8*((s13+s23)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(2*s13*(s23+2*s24)+(s14+s23+s24)*(3*s23+5*s24)+s12*(7*s13+13*s14+6*s23+8*s24)+19*(s12*s12))*pow(s23,-1)*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-8*pow(s23,-2)*pow(s23+s24,-2)*(2*s12*(3*s24*(s13*s13)-(4*s14+2*s23+3*s24)*(s23*s23)+s13*(s23*s24+s14*(-3*s23+s24)-2*(s23*s23)+s24*s24))*((s23+s24)*(s23+s24))+2*(5*s14*s24*(s23+s24)+(3*s23+2*s24)*(s13*s13)+(3*s23+2*s24)*(s14*s14)+s13*(13*s23*s24+s14*(6*s23+4*s24)+4*(s23*s23)+9*(s24*s24))-(2*s23-3*s24)*((s23+s24)*(s23+s24)))*pow(s12,3)+(11*s23*s24+4*s13*(3*s23+2*s24)+4*s14*(3*s23+2*s24)+2*(s23*s23)+9*(s24*s24))*pow(s12,4)+(6*s23+4*s24)*pow(s12,5)+(s23+s24)*(s12*s12)*((6*s23+9*s24)*(s13*s13)+(-2*s23+s24)*(s14*s14)-11*s24*(s23*s23)-2*s14*(s23*s23-s24*s24)+2*s23*(s24*s24)+2*s13*(4*s23*s24+s14*(2*s23+5*s24)-2*(s23*s23)+6*(s24*s24))-12*pow(s23,3)+pow(s24,3))+(s13+s23)*(-2*s14*s23+(s13-s23)*s24)*pow(s23+s24,3))*pow(s12+s13+s14+s23+s24,-1)-8*(s13+s14)*(s12+s13+s14+s23+s24)*(3*s12+s13+2*s14+s23+2*s24)*pow(2*s12+s13+s14+s23+s24,-2)+((-16*s12*(s12+s13+s14)*(3*s12+s13+3*s14-s23-s24)+16*(5*s12+s13+3*s14-s23-s24)*(s23+s24)*(2*s12+s13+s14+s23+s24))*pow(2*s12+s13+s14+s23+s24,-2))/2.+8*(s23+s24)*(-2*s12*(s13+s14-s23-s24)+(s23+s24)*(s13+s14+s23+s24)-2*(s12*s12))*pow(2*s12+s13+s14+s23+s24,-2)-4*(2*(4*s12+s13+2*s14)*(4*s12*(s13+s14+s23+s24)*(s13*(s14*(-s23+s24)+s23*(2*s23+5*s24))+s24*(s13*s13)+s23*(3*s23*s24+s14*(-2*s23+s24)-s14*s14+2*(s23*s23)+s24*s24))+2*s23*(s23*(-s14+s23+s24)+s13*(s23+2*s24))*((s13+s14+s23+s24)*(s13+s14+s23+s24))-4*(s14*(6*s23-2*s24)+4*s13*(s14+s23-s24)-4*s23*s24+2*(s13*s13)+2*(s14*s14)+s23*s23-s24*s24)*pow(s12,3)-2*(5*s13+5*s14+5*s23-3*s24)*pow(s12,4)-4*pow(s12,5)-2*(s12*s12)*((3*s14+3*s23-7*s24)*(s13*s13)+(9*s23-s24)*(s14*s14)+s14*(-6*s23*s24+8*(s23*s23)-2*(s24*s24))-4*s23*(3*s23*s24+s23*s23+2*(s24*s24))+s13*(4*s14*(3*s23-2*s24)+3*(s14*s14)-2*(9*s23*s24+s23*s23+2*(s24*s24)))+pow(s13,3)+pow(s14,3)))-4*(3*s12+s13+2*s14)*(s12*s23*(s13+s14+s23+s24)*(7*s14*s23+s13*(4*s14+3*s23-8*s24)-5*s23*s24+2*(s13*s13)+2*(s14*s14)+s23*s23-2*(s24*s24))+s23*(s14*s23-(2*s13+s23)*s24)*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(2*s14*(10*s23+s24)+2*s13*(6*s14+10*s23+s24)+7*(s13*s13)+5*(s14*s14)+12*(s23*s23))*pow(s12,3)+(8*s13+7*s14+10*s23+s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(4*s14*s23*(5*s23+s24)+(5*s14+12*s23+s24)*(s13*s13)+(12*s23+s24)*(s14*s14)+2*s13*(2*s23*(4*s23-s24)+s14*(12*s23+s24)+2*(s14*s14))+2*s23*(-2*s23*s24+3*(s23*s23)-3*(s24*s24))+2*pow(s13,3)+pow(s14,3))))*pow(s12+s13+s23,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-8*pow(s12+s13+s23,-3)*(s23*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(s23*s23*(4*s23*s24-s14*(2*s23+3*s24)+3*(s14*s14)+s23*s23+3*(s24*s24))+s13*s23*(10*s23*s24-s14*(2*s23+9*s24)+2*(s23*s23)+9*(s24*s24))+s13*s13*((s23+3*s24)*(s23+3*s24)))+3*(s13*(21*s14+22*s23-8*s24)+4*s14*(7*s23-s24)-7*s23*s24+11*(s13*s13)+10*(s14*s14)+10*(s23*s23)+s24*s24)*pow(s12,5)+(25*s13+24*s14+25*s23-6*s24)*pow(s12,6)+7*pow(s12,7)+pow(s12,4)*((54*s14+57*s23-36*s24)*(s13*s13)+6*(17*s23-s24)*(s14*s14)-21*s24*(s23*s23)+15*s23*(s24*s24)+3*s14*(-11*s23*s24+35*(s23*s23)+s24*s24)+3*s13*(s14*(54*s23-13*s24)-24*s23*s24+17*(s14*s14)+15*(s23*s23)+4*(s24*s24))+19*pow(s13,3)+16*pow(s14,3)+11*pow(s23,3)+3*pow(s24,3))+pow(s12,3)*(9*s23*(14*s23-s24)*(s14*s14)+3*(s13*s13)*(2*s14*(15*s23-7*s24)-29*s23*s24+7*(s14*s14)+2*(s23*s23)+6*(s24*s24))+(15*s14+16*s23-24*s24)*pow(s13,3)+4*pow(s13,4)+52*s23*pow(s14,3)+3*pow(s14,4)+3*s14*(-11*s24*(s23*s23)+s23*(s24*s24)+17*pow(s23,3)+pow(s24,3))+s13*(18*(7*s23-s24)*(s14*s14)-51*s24*(s23*s23)+57*s23*(s24*s24)+6*s14*(-18*s23*s24+21*(s23*s23)+2*(s24*s24))+13*pow(s14,3)-7*pow(s23,3)+9*pow(s24,3))+s23*(12*s24*(s23*s23)+51*s23*(s24*s24)-pow(s23,3)+30*pow(s24,3)))+3*(s12*s12)*((s14*(4*s23-5*s24)-14*s23*s24-4*(s23*s23)+4*(s24*s24))*pow(s13,3)-2*s24*pow(s13,4)+s13*s13*((11*s23-4*s24)*(s14*s14)-9*s24*(s23*s23)+26*s23*(s24*s24)+s14*(-33*s23*s24+9*(s23*s23)+5*(s24*s24))-7*pow(s23,3)+3*pow(s24,3))+s23*(s14*s14*(22*(s23*s23)-s24*s24)+(11*s23*s24+s23*s23+3*(s24*s24))*((s23+s24)*(s23+s24))+(20*s23+s24)*pow(s14,3)+3*pow(s14,4)+s14*(-4*s24*(s23*s23)+3*s23*(s24*s24)+pow(s23,3)+4*pow(s24,3)))+s13*(s14*s14*(-18*s23*s24+33*(s23*s23)+s24*s24)+(10*s23-s24)*pow(s14,3)+2*s14*(-16*s24*(s23*s23)+5*s23*(s24*s24)+3*pow(s23,3)+pow(s24,3))+2*s23*(8*s24*(s23*s23)+24*s23*(s24*s24)-pow(s23,3)+13*pow(s24,3))))+s12*(-3*(2*s23*s24+s23*s23-s24*s24)*pow(s13,4)+s23*s23*(3*(s14*s14)*(s23*s24+4*(s23*s23)-s24*s24)-3*s14*(s23-3*s24)*((s23+s24)*(s23+s24))+(19*s23*s24+4*(s23*s23)+9*(s24*s24))*((s23+s24)*(s23+s24))+(28*s23+6*s24)*pow(s14,3)+9*pow(s14,4))+pow(s13,3)*(9*s24*(s23*s23)-3*s14*(8*s23*s24+s23*s23-2*(s24*s24))+45*s23*(s24*s24)-5*pow(s23,3)+3*pow(s24,3))+3*s13*s23*(8*s23*(s23-2*s24)*(s14*s14)+(19*s23*s24+3*(s23*s23)+6*(s24*s24))*((s23+s24)*(s23+s24))+(7*s23-4*s24)*pow(s14,3)+s14*(-6*s24*(s23*s23)+11*s23*(s24*s24)-3*pow(s23,3)+10*pow(s24,3)))+3*(s13*s13)*(s14*s14*(-10*s23*s24+4*(s23*s23)+s24*s24)+s14*(-15*s24*(s23*s23)+15*s23*(s24*s24)-3*pow(s23,3)+pow(s24,3))+s23*(21*s24*(s23*s23)+44*s23*(s24*s24)+pow(s23,3)+22*pow(s24,3)))))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+8*(7*s14*s23+9*s14*s24+2*s23*s24+2*s13*(5*s14+s23+2*s24)+s12*(14*s13+25*s14-2*s23+4*s24)+16*(s12*s12)+3*(s13*s13)+7*(s14*s14)-2*(s23*s23)+4*(s24*s24))*pow(2*s12+s13+s14+s23+s24,-1)-24*((s13+s14)*(s23+s24)+2*s12*(s13+s14+s23+s24)+2*(s12*s12))*(s13*s23+s12*(s23-s24)-s14*s24+s23*s23-s24*s24)*pow(s23+s24,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*(s12*(s13+s14+2*s23)+s23*(s13+s14+s23+s24)+s12*s12)*(5*s14*s23+5*s14*s24+s23*s24+s13*(11*s14+s23+s24)+s12*(19*s13+39*s14+2*s23+3*s24)+34*(s12*s12)+s13*s13+10*(s14*s14)+s24*s24)*pow(s12+s13+s23,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s12+s13+s14,-1)*pow(s23,-1)*(-56*s12+8*s13+8*s14-16*(s13+s14)-8*s23-24*s24+8*(2*s12+s13+s14+s23+s24)+8*s12*((s13+s14)*(2*s13+2*s14+s23+s24)+s12*(3*s13+3*s14-2*(s23+s24))-2*(s12*s12))*pow(s13+s14,-2)-8*(s13*(2*s14-3*s23+4*s24)+s14*(4*s14+7*s24)+s12*(-s13+5*s14+6*s23+12*s24)+12*(s12*s12)-2*(s13*s13))*pow(s13+s14,-1)+(-16*(2*s12+s13+s14+s23+s24)*(6*s12+s23+2*s24)-8*(s12+s14+s24)*(10*s12+2*s13+2*s14+3*s23+5*s24))*pow(s12+s13+s14+s23+s24,-1)+8*(2*s12*(9*s13+16*s14)+s13*(s14+4*s23+8*s24)+s14*(s14+9*s23+17*s24))*pow(s12+s13+s14+s23+s24,-1)-24*(s12*(3*s13+5*s14+s23+s24)+s13*(4*s14+s23+2*s24)+s14*(3*s14+2*s23+3*s24)+s12*s12+s13*s13)*pow(s12+s13+s14+s23+s24,-1)+24*(4*s13*s14+s13*s13+3*(s14*s14))*pow(s12+s13+s14+s23+s24,-1)+8*(4*s14*s23+6*s14*s24+4*s23*s24+2*s13*(2*s14+s23+2*s24)+2*s12*(3*s13+5*s14+3*s23+5*s24)+8*(s12*s12)+s13*s13+3*(s14*s14)+s23*s23+3*(s24*s24))*pow(s12+s13+s14+s23+s24,-1)+8*(4*s14*s23+10*s14*s24+10*s23*s24+s13*(9*s14+2*s23+8*s24)+s12*(8*s13+11*s14+26*s23+53*s24)+53*(s12*s12)+3*(s13*s13)+6*(s14*s14)-s23*s23+11*(s24*s24))*pow(s12+s13+s14+s23+s24,-1)-8*((s13+s14)*(s13+s23)+s12*(s13+s14+s23+s24)+s12*s12)*(s13*(8*s14+2*s23+3*s24)+s14*(5*s14+4*s23+5*s24)+s12*(6*s13+8*s14+7*s23+13*s24)+19*(s12*s12)+3*(s13*s13))*pow(s13,-1)*pow(s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)-8*pow(s13,-2)*pow(s13+s14,-2)*((s14*(9*s14+8*(s23+s24))+s13*(11*s14+12*(s23+s24))+2*(s13*s13))*pow(s12,4)+(6*s13+4*s14)*pow(s12,5)+2*pow(s12,3)*(-((s14-4*s23)*(s13*s13))+s14*(s14*(9*s23+5*s24)+3*(s14*s14)+2*((s23+s24)*(s23+s24)))+s13*(s14*(13*s23+5*s24)+4*(s14*s14)+3*((s23+s24)*(s23+s24)))-2*pow(s13,3))-2*s12*((s13+s14)*(s13+s14))*(-(s13*s23*(s14-3*s24))-s14*s23*(s14+3*s23+s24)+(3*s14+2*s23+4*s24)*(s13*s13)+2*pow(s13,3))-(s13+s14)*(s12*s12)*((11*s14+4*s23+2*s24)*(s13*s13)-2*s13*(4*s14*s23+2*s23*s24+s14*s14+3*(s23*s23)-s24*s24)-s14*(10*s23*s24+2*s14*(6*s23+s24)+s14*s14+9*(s23*s23)+s24*s24)+12*pow(s13,3))-(s13+s23)*(-(s14*s23)+s13*(s14+2*s24))*pow(s13+s14,3))*pow(s12+s13+s14+s23+s24,-1)-8*(s23+s24)*(s12+s13+s14+s23+s24)*(3*s12+s13+2*s14+s23+2*s24)*pow(2*s12+s13+s14+s23+s24,-2)-8*((s13+s14)*(-5*s12+s13+s14-s23-3*s24)*(2*s12+s13+s14+s23+s24)+s12*(s12+s23+s24)*(3*s12-s13-s14+s23+3*s24))*pow(2*s12+s13+s14+s23+s24,-2)+8*(s13+s14)*(2*s12*(s13+s14-s23-s24)+(s13+s14)*(s13+s14+s23+s24)-2*(s12*s12))*pow(2*s12+s13+s14+s23+s24,-2)-4*pow(s12+s13+s23,-2)*(-4*(3*s12+s23+2*s24)*(s12*s13*(s13+s14+s23+s24)*(s13*(-5*s14+3*s23+7*s24)+s13*s13+2*(-4*s14*s23-s14*s14+(s23+s24)*(s23+s24)))-s13*(2*s14*s23+s13*(s14-s24))*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(20*s13*(s23+s24)+(s23+s24)*(2*s14+7*s23+5*s24)+12*(s13*s13))*pow(s12,3)+(10*s13+s14+8*s23+7*s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(-4*(s14-4*s23-5*s24)*(s13*s13)+(s14+2*s23+s24)*((s23+s24)*(s23+s24))+s13*(-4*s14*(s23-s24)-6*(s14*s14)+12*((s23+s24)*(s23+s24)))+6*pow(s13,3)))+2*(4*s12+s23+2*s24)*(2*s13*(2*s14*s23+s13*(s14+s23-s24)+s13*s13)*((s13+s14+s23+s24)*(s13+s14+s23+s24))-4*(-2*s14*(2*s23+s24)+s13*(-4*s14+4*s23+6*s24)+s13*s13-s14*s14+2*((s23+s24)*(s23+s24)))*pow(s12,3)-2*(5*s13-3*s14+5*(s23+s24))*pow(s12,4)-4*pow(s12,5)+4*s12*(s13+s14+s23+s24)*(s14*s23*(s23+s24)+(3*s14+2*s23-2*s24)*(s13*s13)+s13*(-(s24*(s23+s24))+s14*(5*s23+s24)+s14*s14)+2*pow(s13,3))+2*(s12*s12)*(2*(6*s14+s23-4*s24)*(s13*s13)+2*(2*s23+s24)*(s14*s14)+s14*(8*s23*s24+7*(s23*s23)+s24*s24)+s13*(6*s14*(3*s23+s24)+8*(s14*s14)-3*(4*s23*s24+s23*s23+3*(s24*s24)))+4*pow(s13,3)-pow(s23+s24,3))))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-8*pow(s12+s13+s23,-3)*(3*(21*s23*s24-4*s14*(2*s23+s24)+s13*(-7*s14+22*s23+28*s24)+10*(s13*s13)+s14*s14+11*(s23*s23)+10*(s24*s24))*pow(s12,5)+(25*s13-6*s14+25*s23+24*s24)*pow(s12,6)+7*pow(s12,7)+s13*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(3*s13*s14*s23*(3*s14+2*s23-3*s24)+9*(s14*s14)*(s23*s23)+s13*s13*(s14*(10*s23-3*s24)-2*s23*s24+3*(s14*s14)+s23*s23+3*(s24*s24))+2*(2*s14+s23-s24)*pow(s13,3)+pow(s13,4))+pow(s12,4)*((-21*s14+45*s23+105*s24)*(s13*s13)+3*(4*s23+s24)*(s14*s14)-3*s14*(13*s23*s24+12*(s23*s23)+2*(s24*s24))+3*s13*(54*s23*s24-s14*(24*s23+11*s24)+5*(s14*s14)+19*(s23*s23)+34*(s24*s24))+(19*s23+16*s24)*((s23+s24)*(s23+s24))+11*pow(s13,3)+3*pow(s14,3))+3*(s12*s12)*(s14*s23*((3*s23+2*s24)*(s14*s14)+s14*(5*s23*s24+4*(s23*s23)+s24*s24)-(2*s23+s24)*((s23+s24)*(s23+s24)))+(4*s14*(4*s23-s24)+6*s23*s24+26*(s14*s14)-7*(s23*s23)+22*(s24*s24))*pow(s13,3)+(13*s14-2*s23+s24)*pow(s13,4)+pow(s13,5)+s13*s13*(-(s14*s23*(9*s23+32*s24))+3*(16*s23+s24)*(s14*s14)+9*s24*(s23*s23)+33*s23*(s24*s24)+17*pow(s14,3)-4*pow(s23,3)+20*pow(s24,3))+s13*(s14*s14*(10*s23*s24+26*(s23*s23)-s24*s24)+s24*(4*s23+3*s24)*((s23+s24)*(s23+s24))+(26*s23+4*s24)*pow(s14,3)+3*pow(s14,4)+s14*(-33*s24*(s23*s23)-18*s23*(s24*s24)-14*pow(s23,3)+pow(s24,3))))+s12*(3*(s23+s24)*(s14+s23+s24)*(s14*s14)*(s23*s23)+3*(-3*s23*s24+s14*(25*s23+s24)+17*(s14*s14)+s23*s23+4*(s24*s24))*pow(s13,4)+3*(9*s14+3*s23-s24)*pow(s13,5)+4*pow(s13,6)+3*s13*s14*s23*(15*s14*s23*(s23+s24)+2*(11*s23+5*s24)*(s14*s14)-2*(s23+2*s24)*((s23+s24)*(s23+s24))+6*pow(s14,3))+pow(s13,3)*(3*(47*s23+5*s24)*(s14*s14)-9*s24*(s23*s23)+24*s23*(s24*s24)+3*s14*(-6*s23*s24+21*(s23*s23)+s24*s24)+37*pow(s14,3)-5*pow(s23,3)+28*pow(s24,3))+3*(s13*s13)*(s14*s14*(11*s23*s24+44*(s23*s23)-s24*s24)-(-(s23*s24)+s23*s23-3*(s24*s24))*((s23+s24)*(s23+s24))+(31*s23+3*s24)*pow(s14,3)+3*pow(s14,4)+s14*(-15*s24*(s23*s23)-16*s23*(s24*s24)+3*pow(s23,3)+2*pow(s24,3))))+pow(s12,3)*(6*s23*(3*s23+2*s24)*(s14*s14)-6*s14*s23*(7*s23*s24+4*(s23*s23)+3*(s24*s24))+3*(s13*s13)*(-(s14*(17*s23+11*s24))+17*(s14*s14)+2*(21*s23*s24+s23*s23+21*(s24*s24)))+(12*s14-7*s23+51*s24)*pow(s13,3)-pow(s13,4)+3*(3*s23+s24)*pow(s14,3)+s13*(3*(19*s23+s24)*(s14*s14)-3*s14*(36*s23*s24+29*(s23*s23)+3*(s24*s24))+30*pow(s14,3)+2*(45*s24*(s23*s23)+63*s23*(s24*s24)+8*pow(s23,3)+26*pow(s24,3)))+(4*s23+3*s24)*pow(s23+s24,3)))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+8*(4*s14*s23+9*s14*s24+10*s23*s24+s13*(2*s14+2*s23+7*s24)+s12*(-2*s13+4*s14+14*s23+25*s24)+16*(s12*s12)-2*(s13*s13)+4*(s14*s14)+3*(s23*s23)+7*(s24*s24))*pow(2*s12+s13+s14+s23+s24,-1)-24*((s13+s14)*(s23+s24)+2*s12*(s13+s14+s23+s24)+2*(s12*s12))*(s12*(s13-s14)+s13*s23-s14*(s14+s24)+s13*s13)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*(s12*(2*s13+s23+s24)+s13*(s13+s14+s23+s24)+s12*s12)*(s14*s23+5*s14*s24+11*s23*s24+s13*(s14+s23+5*s24)+s12*(2*s13+3*s14+19*s23+39*s24)+34*(s12*s12)+s14*s14+s23*s23+10*(s24*s24))*pow(s12+s13+s23,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s23,-1)*(8*(s23+s24)*pow(s12+s13+s14,-1)-8*(s13+s14+s23+s24)*pow(s12+s13+s14,-1)-8*s24*(s12+s13+s14+s23+s24)*pow(s12+s13+s14,-1)*pow(s23+s24,-1)+8*(-((s23+s24)*(s13+s14+s23+s24))+s12*(s13+s14-2*(s23+s24))+s12*s12)*pow(s12+s13+s14,-1)*pow(s23+s24,-1)+8*(9*s14*s23+8*s14*s24+8*s23*s24+s13*(6*s23+5*s24)+s12*(3*s13+3*s14+11*s23+9*s24)+3*(s12*s12)+3*(s23*s23)+5*(s24*s24))*pow(s12+s13+s14,-1)*pow(s23+s24,-1)-8*(s23+s24)*(3*s12+s13+2*s14+s23+2*s24)*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(s23+2*s24)*(s13+s14+s23+3*s24)*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(4*s23*s24+s23*s23+3*(s24*s24))*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(3*s14*s23+10*s14*s24+6*s23*s24+s13*(-s14+5*s23+8*s24)+s12*(2*s13+3*s14+7*s23+9*s24)+3*(s12*s12)-s13*s13+3*(s23*s23)+7*(s24*s24))*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)+8*((s13+s23)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(s12*s23+s13*s23+s14*s23+5*s23*s24+3*(s24*s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(s12+s14+s24)*(s23+s24)*(s12+s13+s14+s23+s24)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-2)-((32*(s12-s23-s24)*(s23+s24)*(2*s12+s13+s14+s23+s24)+16*s12*(s12+s13+s14)*(s12+s13+s14+s23+3*s24))*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-2))/2.-8*(s23+s24)*(-2*s12*(s13+s14-s23-s24)+(s23+s24)*(s13+s14+s23+s24)-2*(s12*s12))*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-2)-4*(2*(s12-s23-2*s24)*(4*s12*(s13+s14+s23+s24)*(s13*(s14*(-s23+s24)+s23*(2*s23+5*s24))+s24*(s13*s13)+s23*(3*s23*s24+s14*(-2*s23+s24)-s14*s14+2*(s23*s23)+s24*s24))+2*s23*(s23*(-s14+s23+s24)+s13*(s23+2*s24))*((s13+s14+s23+s24)*(s13+s14+s23+s24))-4*(s14*(6*s23-2*s24)+4*s13*(s14+s23-s24)-4*s23*s24+2*(s13*s13)+2*(s14*s14)+s23*s23-s24*s24)*pow(s12,3)-2*(5*s13+5*s14+5*s23-3*s24)*pow(s12,4)-4*pow(s12,5)-2*(s12*s12)*((3*s14+3*s23-7*s24)*(s13*s13)+(9*s23-s24)*(s14*s14)+s14*(-6*s23*s24+8*(s23*s23)-2*(s24*s24))-4*s23*(3*s23*s24+s23*s23+2*(s24*s24))+s13*(4*s14*(3*s23-2*s24)+3*(s14*s14)-2*(9*s23*s24+s23*s23+2*(s24*s24)))+pow(s13,3)+pow(s14,3)))+4*(s23+2*s24)*(s12*s23*(s13+s14+s23+s24)*(7*s14*s23+s13*(4*s14+3*s23-8*s24)-5*s23*s24+2*(s13*s13)+2*(s14*s14)+s23*s23-2*(s24*s24))+s23*(s14*s23-(2*s13+s23)*s24)*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(2*s14*(10*s23+s24)+2*s13*(6*s14+10*s23+s24)+7*(s13*s13)+5*(s14*s14)+12*(s23*s23))*pow(s12,3)+(8*s13+7*s14+10*s23+s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(4*s14*s23*(5*s23+s24)+(5*s14+12*s23+s24)*(s13*s13)+(12*s23+s24)*(s14*s14)+2*s13*(2*s23*(4*s23-s24)+s14*(12*s23+s24)+2*(s14*s14))+2*s23*(-2*s23*s24+3*(s23*s23)-3*(s24*s24))+2*pow(s13,3)+pow(s14,3))))*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-8*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-3)*(s23*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(s23*s23*(4*s23*s24-s14*(2*s23+3*s24)+3*(s14*s14)+s23*s23+3*(s24*s24))+s13*s23*(10*s23*s24-s14*(2*s23+9*s24)+2*(s23*s23)+9*(s24*s24))+s13*s13*((s23+3*s24)*(s23+3*s24)))+3*(s13*(21*s14+22*s23-8*s24)+4*s14*(7*s23-s24)-7*s23*s24+11*(s13*s13)+10*(s14*s14)+10*(s23*s23)+s24*s24)*pow(s12,5)+(25*s13+24*s14+25*s23-6*s24)*pow(s12,6)+7*pow(s12,7)+pow(s12,4)*((54*s14+57*s23-36*s24)*(s13*s13)+6*(17*s23-s24)*(s14*s14)-21*s24*(s23*s23)+15*s23*(s24*s24)+3*s14*(-11*s23*s24+35*(s23*s23)+s24*s24)+3*s13*(s14*(54*s23-13*s24)-24*s23*s24+17*(s14*s14)+15*(s23*s23)+4*(s24*s24))+19*pow(s13,3)+16*pow(s14,3)+11*pow(s23,3)+3*pow(s24,3))+pow(s12,3)*(9*s23*(14*s23-s24)*(s14*s14)+3*(s13*s13)*(2*s14*(15*s23-7*s24)-29*s23*s24+7*(s14*s14)+2*(s23*s23)+6*(s24*s24))+(15*s14+16*s23-24*s24)*pow(s13,3)+4*pow(s13,4)+52*s23*pow(s14,3)+3*pow(s14,4)+3*s14*(-11*s24*(s23*s23)+s23*(s24*s24)+17*pow(s23,3)+pow(s24,3))+s13*(18*(7*s23-s24)*(s14*s14)-51*s24*(s23*s23)+57*s23*(s24*s24)+6*s14*(-18*s23*s24+21*(s23*s23)+2*(s24*s24))+13*pow(s14,3)-7*pow(s23,3)+9*pow(s24,3))+s23*(12*s24*(s23*s23)+51*s23*(s24*s24)-pow(s23,3)+30*pow(s24,3)))+3*(s12*s12)*((s14*(4*s23-5*s24)-14*s23*s24-4*(s23*s23)+4*(s24*s24))*pow(s13,3)-2*s24*pow(s13,4)+s13*s13*((11*s23-4*s24)*(s14*s14)-9*s24*(s23*s23)+26*s23*(s24*s24)+s14*(-33*s23*s24+9*(s23*s23)+5*(s24*s24))-7*pow(s23,3)+3*pow(s24,3))+s23*(s14*s14*(22*(s23*s23)-s24*s24)+(11*s23*s24+s23*s23+3*(s24*s24))*((s23+s24)*(s23+s24))+(20*s23+s24)*pow(s14,3)+3*pow(s14,4)+s14*(-4*s24*(s23*s23)+3*s23*(s24*s24)+pow(s23,3)+4*pow(s24,3)))+s13*(s14*s14*(-18*s23*s24+33*(s23*s23)+s24*s24)+(10*s23-s24)*pow(s14,3)+2*s14*(-16*s24*(s23*s23)+5*s23*(s24*s24)+3*pow(s23,3)+pow(s24,3))+2*s23*(8*s24*(s23*s23)+24*s23*(s24*s24)-pow(s23,3)+13*pow(s24,3))))+s12*(-3*(2*s23*s24+s23*s23-s24*s24)*pow(s13,4)+s23*s23*(3*(s14*s14)*(s23*s24+4*(s23*s23)-s24*s24)-3*s14*(s23-3*s24)*((s23+s24)*(s23+s24))+(19*s23*s24+4*(s23*s23)+9*(s24*s24))*((s23+s24)*(s23+s24))+(28*s23+6*s24)*pow(s14,3)+9*pow(s14,4))+pow(s13,3)*(9*s24*(s23*s23)-3*s14*(8*s23*s24+s23*s23-2*(s24*s24))+45*s23*(s24*s24)-5*pow(s23,3)+3*pow(s24,3))+3*s13*s23*(8*s23*(s23-2*s24)*(s14*s14)+(19*s23*s24+3*(s23*s23)+6*(s24*s24))*((s23+s24)*(s23+s24))+(7*s23-4*s24)*pow(s14,3)+s14*(-6*s24*(s23*s23)+11*s23*(s24*s24)-3*pow(s23,3)+10*pow(s24,3)))+3*(s13*s13)*(s14*s14*(-10*s23*s24+4*(s23*s23)+s24*s24)+s14*(-15*s24*(s23*s23)+15*s23*(s24*s24)-3*pow(s23,3)+pow(s24,3))+s23*(21*s24*(s23*s23)+44*s23*(s24*s24)+pow(s23,3)+22*pow(s24,3)))))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-8*(6*s14*s23+6*s14*s24+8*s23*s24+s12*(-2*s13+3*s14+8*s23+4*s24)+s13*(-s14+2*(s23+s24))+4*(s12*s12)-2*(s13*s13)+s14*s14+3*(s23*s23)+5*(s24*s24))*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)-24*s12*(s13*s23+s12*(s23-s24)-s14*s24+s23*s23-s24*s24)*pow(s23+s24,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*(s12*(s13+s14+2*s23)+s23*(s13+s14+s23+s24)+s12*s12)*(2*s14*s23+5*s14*s24+11*s23*s24+s12*(3*s13+3*s14+4*s23+s24)+s13*(4*s23+3*s24)+6*(s12*s12)+s13*s13+s14*s14+3*(s23*s23)+10*(s24*s24))*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s13,-1)*(24+24*s23*pow(s24,-1)+8*(7*s12+2*s13+4*s14-s24)*pow(s24,-1)-8*(s12+s13+s14+s23+s24)*pow(s24,-1)-8*(2*s12+s13+s14+s23+s24)*pow(s24,-1)+8*(s12+s13+s14+s23+s24)*(s12+s23+2*s24)*pow(s23+s24,-2)-8*s12*(-(s12*(s13+s14-s23-2*s24))+2*s23*s24+s24*(s13+s14+s24)-s12*s12+s23*s23)*pow(s24,-1)*pow(s23+s24,-2)+8*(s12*(3*s13-s14+2*s23-2*s24)+2*s23*s24+s24*(-3*s13+s14+s24)+3*(s12*s12)+2*(s23*s23))*pow(s24,-1)*pow(s23+s24,-1)+(-8*(8*s12+2*s13+5*s14+s24)*(s23+s24)-8*s24*(6*s12+3*s13+5*s14+s23+s24))*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)+(8*(2*s12+s13+s14+s23+s24)*(2*s12+s14+2*s24)+8*(s12+s14+s24)*(2*s12+s14+s23+2*s24))*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(3*s14*s23+12*s14*s24+3*s23*s24+s13*(3*s14+s23+3*s24)+s12*(8*s13+17*s14+5*s23+10*s24)+14*(s12*s12)+7*(s14*s14)+2*(s23*s23)+2*(s24*s24))*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)-16*(4*s23*s24+s23*s23+3*(s24*s24))*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(2*s14*s23+3*s14*s24+4*s23*s24+s13*(s23+2*s24)+s12*(s13+s14+3*s23+5*s24)+s12*s12+s23*s23+3*(s24*s24))*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(-2*s12*(s23+s24)*(-((s23+2*s24)*(s13*s13))+s23*(s14*(s23+s24)+3*s23*(s23+s24)+s14*s14)+2*s13*(-(s24*(s14+s24))+s23*s23))-(s13+s23)*(s13*(s23-2*s24)+s23*(4*s14+s23+2*s24))*((s23+s24)*(s23+s24))+s12*s12*((3*s23+2*s24)*(s13*s13)+(3*s23+2*s24)*(s14*s14)+s14*(2*s23*s24-2*(s23*s23)+4*(s24*s24))+2*s13*(5*s23*s24+s14*(3*s23+2*s24)+s23*s23+4*(s24*s24))-(3*s23-2*s24)*((s23+s24)*(s23+s24)))+(4*s24*(s23+s24)+s13*(6*s23+4*s24)+s14*(6*s23+4*s24))*pow(s12,3)+(3*s23+2*s24)*pow(s12,4))*pow(s23,-2)*pow(s23+s24,-2)*pow(s12+s13+s14+s23+s24,-1)+8*(6*s12+3*s13+7*s14+s23+s24)*((s13+s23)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s23,-1)*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+((16*s12*(s12+s13+s14)*(4*s12+2*s13+5*s14-s24)-16*(8*s12+2*s13+5*s14-s24)*(s23+s24)*(2*s12+s13+s14+s23+s24))*pow(s24,-1)*pow(2*s12+s13+s14+s23+s24,-2))/2.-16*(s23+s24)*(-2*s12*(s13+s14-s23-s24)+(s23+s24)*(s13+s14+s23+s24)-2*(s12*s12))*pow(s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+8*(s12+s13+s14+s23+s24)*(s12*(s13+3*s14+s23-3*s24)+(s14-s24)*(s13+2*s14+s23+2*s24)+s12*s12)*pow(s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+8*pow(s24,-1)*(5*s14*s23*s24-2*(s13+s14-s23)*(s12*s12)+s23*(s13*s13)+2*s23*(s14*s14)+s24*(s14*s14)+3*s14*(s23*s23)+3*s24*(s23*s23)+2*s14*(s24*s24)+3*s23*(s24*s24)+s13*(3*s23*s24+s14*(3*s23+s24)+2*(s23*s23)+s24*s24)+s12*(s13*(-2*s14+3*s23)+s14*(4*s23+s24)-s13*s13-s14*s14+2*(3*s23*s24+2*(s23*s23)+s24*s24))-pow(s12,3)+pow(s23,3)+pow(s24,3))*pow(2*s12+s13+s14+s23+s24,-2)+8*s12*pow(s24,-1)*pow(s23+s24,-2)*((6*s23*s24+7*(s23*s23)-5*(s24*s24))*pow(s12,4)+s12*s12*(s14*s14*(-2*s23*s24+4*(s23*s23)-11*(s24*s24))+s13*s13*(16*s23*s24+13*(s23*s23)-2*(s24*s24))+2*(20*s23*s24+10*(s23*s23)-17*(s24*s24))*((s23+s24)*(s23+s24))+s13*(87*s24*(s23*s23)+2*s14*(8*s23*s24+9*(s23*s23)-6*(s24*s24))+33*s23*(s24*s24)+33*pow(s23,3)-21*pow(s24,3))+3*s14*(17*s24*(s23*s23)-7*s23*(s24*s24)+9*pow(s23,3)-15*pow(s24,3)))+pow(s12,3)*(46*s24*(s23*s23)+s14*(6*s23*s24+11*(s23*s23)-13*(s24*s24))+s13*(18*s23*s24+17*(s23*s23)-7*(s24*s24))+4*s23*(s24*s24)+20*pow(s23,3)-22*pow(s24,3))+s12*(s14*(28*s23*s24+21*(s23*s23)-47*(s24*s24))*((s23+s24)*(s23+s24))+s23*(3*s23+4*s24)*pow(s13,3)-s24*(2*s23+3*s24)*pow(s14,3)+s13*(s14*s14*(2*s23*s24+4*(s23*s23)-5*(s24*s24))+(52*s23*s24+19*(s23*s23)-21*(s24*s24))*((s23+s24)*(s23+s24))+2*s14*(35*s24*(s23*s23)+8*s23*(s24*s24)+14*pow(s23,3)-13*pow(s24,3)))+4*(s14*s14)*(2*s24*(s23*s23)-7*s23*(s24*s24)+2*pow(s23,3)-7*pow(s24,3))+s13*s13*(44*s24*(s23*s23)+s14*(8*s23*s24+7*(s23*s23)-2*(s24*s24))+26*s23*(s24*s24)+14*pow(s23,3)-4*pow(s24,3))+2*(13*s23*s24+4*(s23*s23)-11*(s24*s24))*pow(s23+s24,3))+(s23+s24)*(5*s14*(2*s23*s24+s23*s23-3*(s24*s24))*((s23+s24)*(s23+s24))+s23*(s23+4*s24)*pow(s13,3)-s24*(2*s23+5*s24)*pow(s14,3)+s13*(s14*s14*(6*s23*s24+4*(s23*s23)-7*(s24*s24))+(16*s23*s24+3*(s23*s23)-7*(s24*s24))*((s23+s24)*(s23+s24))+2*s14*(16*s24*(s23*s23)+4*s23*(s24*s24)+5*pow(s23,3)-7*pow(s24,3)))+s14*s14*(6*s24*(s23*s23)-13*s23*(s24*s24)+4*pow(s23,3)-15*pow(s24,3))+s13*s13*(17*s24*(s23*s23)+s14*(12*s23*s24+5*(s23*s23)-2*(s24*s24))+12*s23*(s24*s24)+3*pow(s23,3)-2*pow(s24,3))+(6*s23*s24+s23*s23-5*(s24*s24))*pow(s23+s24,3)))*pow(s12+s23+s24,-2)*pow(2*s12+s13+s14+s23+s24,-2)+4*(2*(3*s12+s13+2*s14)*(4*s12*(s13+s14+s23+s24)*(s13*(s14*(-s23+s24)+s23*(2*s23+5*s24))+s24*(s13*s13)+s23*(3*s23*s24+s14*(-2*s23+s24)-s14*s14+2*(s23*s23)+s24*s24))+2*s23*(s23*(-s14+s23+s24)+s13*(s23+2*s24))*((s13+s14+s23+s24)*(s13+s14+s23+s24))-4*(s14*(6*s23-2*s24)+4*s13*(s14+s23-s24)-4*s23*s24+2*(s13*s13)+2*(s14*s14)+s23*s23-s24*s24)*pow(s12,3)-2*(5*s13+5*s14+5*s23-3*s24)*pow(s12,4)-4*pow(s12,5)-2*(s12*s12)*((3*s14+3*s23-7*s24)*(s13*s13)+(9*s23-s24)*(s14*s14)+s14*(-6*s23*s24+8*(s23*s23)-2*(s24*s24))-4*s23*(3*s23*s24+s23*s23+2*(s24*s24))+s13*(4*s14*(3*s23-2*s24)+3*(s14*s14)-2*(9*s23*s24+s23*s23+2*(s24*s24)))+pow(s13,3)+pow(s14,3)))-4*(2*s12+s13+2*s14)*(s12*s23*(s13+s14+s23+s24)*(7*s14*s23+s13*(4*s14+3*s23-8*s24)-5*s23*s24+2*(s13*s13)+2*(s14*s14)+s23*s23-2*(s24*s24))+s23*(s14*s23-(2*s13+s23)*s24)*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(2*s14*(10*s23+s24)+2*s13*(6*s14+10*s23+s24)+7*(s13*s13)+5*(s14*s14)+12*(s23*s23))*pow(s12,3)+(8*s13+7*s14+10*s23+s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(4*s14*s23*(5*s23+s24)+(5*s14+12*s23+s24)*(s13*s13)+(12*s23+s24)*(s14*s14)+2*s13*(2*s23*(4*s23-s24)+s14*(12*s23+s24)+2*(s14*s14))+2*s23*(-2*s23*s24+3*(s23*s23)-3*(s24*s24))+2*pow(s13,3)+pow(s14,3))))*pow(s12+s13+s23,-2)*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+8*pow(s12+s13+s23,-3)*pow(s24,-1)*(s23*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(s23*s23*(4*s23*s24-s14*(2*s23+3*s24)+3*(s14*s14)+s23*s23+3*(s24*s24))+s13*s23*(10*s23*s24-s14*(2*s23+9*s24)+2*(s23*s23)+9*(s24*s24))+s13*s13*((s23+3*s24)*(s23+3*s24)))+3*(s13*(21*s14+22*s23-8*s24)+4*s14*(7*s23-s24)-7*s23*s24+11*(s13*s13)+10*(s14*s14)+10*(s23*s23)+s24*s24)*pow(s12,5)+(25*s13+24*s14+25*s23-6*s24)*pow(s12,6)+7*pow(s12,7)+pow(s12,4)*((54*s14+57*s23-36*s24)*(s13*s13)+6*(17*s23-s24)*(s14*s14)-21*s24*(s23*s23)+15*s23*(s24*s24)+3*s14*(-11*s23*s24+35*(s23*s23)+s24*s24)+3*s13*(s14*(54*s23-13*s24)-24*s23*s24+17*(s14*s14)+15*(s23*s23)+4*(s24*s24))+19*pow(s13,3)+16*pow(s14,3)+11*pow(s23,3)+3*pow(s24,3))+pow(s12,3)*(9*s23*(14*s23-s24)*(s14*s14)+3*(s13*s13)*(2*s14*(15*s23-7*s24)-29*s23*s24+7*(s14*s14)+2*(s23*s23)+6*(s24*s24))+(15*s14+16*s23-24*s24)*pow(s13,3)+4*pow(s13,4)+52*s23*pow(s14,3)+3*pow(s14,4)+3*s14*(-11*s24*(s23*s23)+s23*(s24*s24)+17*pow(s23,3)+pow(s24,3))+s13*(18*(7*s23-s24)*(s14*s14)-51*s24*(s23*s23)+57*s23*(s24*s24)+6*s14*(-18*s23*s24+21*(s23*s23)+2*(s24*s24))+13*pow(s14,3)-7*pow(s23,3)+9*pow(s24,3))+s23*(12*s24*(s23*s23)+51*s23*(s24*s24)-pow(s23,3)+30*pow(s24,3)))+3*(s12*s12)*((s14*(4*s23-5*s24)-14*s23*s24-4*(s23*s23)+4*(s24*s24))*pow(s13,3)-2*s24*pow(s13,4)+s13*s13*((11*s23-4*s24)*(s14*s14)-9*s24*(s23*s23)+26*s23*(s24*s24)+s14*(-33*s23*s24+9*(s23*s23)+5*(s24*s24))-7*pow(s23,3)+3*pow(s24,3))+s23*(s14*s14*(22*(s23*s23)-s24*s24)+(11*s23*s24+s23*s23+3*(s24*s24))*((s23+s24)*(s23+s24))+(20*s23+s24)*pow(s14,3)+3*pow(s14,4)+s14*(-4*s24*(s23*s23)+3*s23*(s24*s24)+pow(s23,3)+4*pow(s24,3)))+s13*(s14*s14*(-18*s23*s24+33*(s23*s23)+s24*s24)+(10*s23-s24)*pow(s14,3)+2*s14*(-16*s24*(s23*s23)+5*s23*(s24*s24)+3*pow(s23,3)+pow(s24,3))+2*s23*(8*s24*(s23*s23)+24*s23*(s24*s24)-pow(s23,3)+13*pow(s24,3))))+s12*(-3*(2*s23*s24+s23*s23-s24*s24)*pow(s13,4)+s23*s23*(3*(s14*s14)*(s23*s24+4*(s23*s23)-s24*s24)-3*s14*(s23-3*s24)*((s23+s24)*(s23+s24))+(19*s23*s24+4*(s23*s23)+9*(s24*s24))*((s23+s24)*(s23+s24))+(28*s23+6*s24)*pow(s14,3)+9*pow(s14,4))+pow(s13,3)*(9*s24*(s23*s23)-3*s14*(8*s23*s24+s23*s23-2*(s24*s24))+45*s23*(s24*s24)-5*pow(s23,3)+3*pow(s24,3))+3*s13*s23*(8*s23*(s23-2*s24)*(s14*s14)+(19*s23*s24+3*(s23*s23)+6*(s24*s24))*((s23+s24)*(s23+s24))+(7*s23-4*s24)*pow(s14,3)+s14*(-6*s24*(s23*s23)+11*s23*(s24*s24)-3*pow(s23,3)+10*pow(s24,3)))+3*(s13*s13)*(s14*s14*(-10*s23*s24+4*(s23*s23)+s24*s24)+s14*(-15*s24*(s23*s23)+15*s23*(s24*s24)-3*pow(s23,3)+pow(s24,3))+s23*(21*s24*(s23*s23)+44*s23*(s24*s24)+pow(s23,3)+22*pow(s24,3)))))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-8*(2*s14*s23+s13*(5*s14+3*s23-2*s24)+s12*(8*s13+12*s14+3*s23-2*s24)+2*s14*s24+2*s23*s24+12*(s12*s12)+2*(s13*s13)+7*(s14*s14)+2*(s23*s23)+s24*s24)*pow(s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*s12*(3*s12+2*s13+6*s14+s23+3*s24)*(-(s13*s23)+s14*s24+s12*(-s23+s24)-s23*s23+s24*s24)*pow(s24,-1)*pow(s23+s24,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*(s12*(s13+s14+2*s23)+s23*(s13+s14+s23+s24)+s12*s12)*(2*s14*s23+5*s14*s24+2*s23*s24+s13*(9*s14+4*s23+3*s24)+s12*(15*s13+4*(6*s14+s23+s24))+18*(s12*s12)+2*(s13*s13)+10*(s14*s14)+2*(s23*s23)+s24*s24)*pow(s12+s13+s23,-1)*pow(s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s13,-1)*pow(s24,-2)*(-48*s12*s24+8*s13*s24+48*s23*s24-24*s24*(s23+s24)-8*s24*(s12+s13+s14+s23+s24)+8*s24*(2*s12+s13+s14+s23+s24)+32*(s24*s24)+s24*(8*(s12-s23)*(s23+s24)*(2*s12+s13+s14+s23+s24)-8*(s12+s13+s14)*(s12*s12))*pow(s23+s24,-2)+8*s24*(s12+s13+s14+s23+s24)*(3*s23*s24-s12*(s23+s24)+3*(s23*s23)+s24*s24)*pow(s23+s24,-2)-8*s24*(2*s14*s23+6*s14*s24+13*s23*s24+s12*(3*s13+2*s14+4*s24)+s13*(s23+4*s24)+9*(s12*s12)+8*(s23*s23)+7*(s24*s24))*pow(s23+s24,-1)+s24*(8*(s12+s13+s23)*(s12-s13-2*s23+s24)+8*(s12-s13-3*s23+s24)*(2*s12+s13+s14+s23+s24))*pow(s12+s13+s14+s23+s24,-1)-8*s24*(s12*(-2*s13-13*s23+s24)+s13*(-4*s14+2*s23+5*s24)+7*(s12*s12)-3*(s13*s13)+3*(s14*s24+4*s23*s24+4*(s23*s23)))*pow(s12+s13+s14+s23+s24,-1)-16*s24*(4*s23*s24+3*(s23*s23)+s24*s24)*pow(s12+s13+s14+s23+s24,-1)+8*s24*(2*s14*s23+s14*s24+4*s23*s24+s13*(3*s23+2*s24)+s12*(s13+s14+5*s23+3*s24)+s12*s12+3*(s23*s23)+s24*s24)*pow(s12+s13+s14+s23+s24,-1)+8*s24*(11*s23*s24+s13*(s23+s24)-s12*(8*s23+5*s24)+13*(s23*s23)+2*(s24*s24))*pow(s12+s13+s14+s23+s24,-1)+8*(-2*s12*(s23+s24)*(s13*(-2*s14*s23+s24*(s23+s24))+s24*(s13*s13)-(2*s23+s24)*(s14*s14)-2*s14*(s23*s23-s24*s24)+3*(s23+s24)*(s24*s24))-(s14+s24)*(s14*(-2*s23+s24)+s24*(4*s13+2*s23+s24))*((s23+s24)*(s23+s24))+s12*s12*((2*s23+3*s24)*(s13*s13)+(2*s23+3*s24)*(s14*s14)+2*s13*(s23*s24+s14*(2*s23+3*s24)+2*(s23*s23)-s24*s24)+2*s14*(5*s23*s24+4*(s23*s23)+s24*s24)+(2*s23-3*s24)*((s23+s24)*(s23+s24)))+(4*s23*(s23+s24)+s13*(4*s23+6*s24)+s14*(4*s23+6*s24))*pow(s12,3)+(2*s23+3*s24)*pow(s12,4))*pow(s23+s24,-2)*pow(s12+s13+s14+s23+s24,-1)+8*((s14+s24)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(3*s14*s24+3*s23*s24+s12*(-3*s23+5*s24)+s13*(3*s23+5*s24)+2*(s23*s23))*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*s24*(s12+s13+s14+s23+s24)*((s12+s13+s23)*(s12-s14-2*s23-s24)+(3*s12-s23-s24)*(2*s12+s13+s14+s23+s24))*pow(2*s12+s13+s14+s23+s24,-2)+8*s24*((7*s12-s13-5*s23-4*s24)*(s23+s24)*(2*s12+s13+s14+s23+s24)+s12*(s12+s13+s14)*(-2*s12+2*s13+s14+6*s23+5*s24))*pow(2*s12+s13+s14+s23+s24,-2)+16*s24*(s23+s24)*(-2*s12*(s13+s14-s23-s24)+(s23+s24)*(s13+s14+s23+s24)-2*(s12*s12))*pow(2*s12+s13+s14+s23+s24,-2)+8*s24*(3*s14*s23*s24-2*(s13+s14-s24)*(s12*s12)+(s23+2*s24)*(s13*s13)+s24*(s14*s14)+s14*(s23*s23)+3*s24*(s23*s23)+2*s14*(s24*s24)+3*s23*(s24*s24)+s13*(5*s23*s24+s14*(s23+3*s24)+2*(s23*s23)+3*(s24*s24))+s12*(3*s14*s24+6*s23*s24+s13*(-2*s14+s23+4*s24)-s13*s13-s14*s14+2*(s23*s23)+4*(s24*s24))-pow(s12,3)+pow(s23,3)+pow(s24,3))*pow(2*s12+s13+s14+s23+s24,-2)+8*s12*s24*pow(s23+s24,-2)*((6*s23*s24-s23*s23+3*(s24*s24))*pow(s12,4)+pow(s12,3)*(16*s24*(s23*s23)+30*s23*(s24*s24)+s13*(10*s23*s24-3*(s23*s23)+5*(s24*s24))+s14*(14*s23*s24-s23*s23+7*(s24*s24))-6*pow(s23,3)+8*pow(s24,3))+s12*s12*(5*s24*(2*s23+s24)*(s14*s14)+s13*s13*(4*s23*s24-3*(s23*s23)+2*(s24*s24))-(-30*s23*s24+11*(s23*s23)-7*(s24*s24))*((s23+s24)*(s23+s24))-2*s13*(-7*s24*(s23*s23)+s14*(-8*s23*s24+s23*s23-4*(s24*s24))-20*s23*(s24*s24)+7*pow(s23,3)-6*pow(s24,3))+s14*(34*s24*(s23*s23)+50*s23*(s24*s24)-4*pow(s23,3)+12*pow(s24,3)))+s12*(2*s24*(s14*s14)*(11*s23*s24+9*(s23*s23)+2*(s24*s24))-s14*(-34*s23*s24+5*(s23*s23)-5*(s24*s24))*((s23+s24)*(s23+s24))-s23*s23*pow(s13,3)+s24*(2*s23+s24)*pow(s14,3)+s13*s13*(s14*(4*s23*s24-s23*s23+2*(s24*s24))-2*(s24*(s23*s23)-6*s23*(s24*s24)+5*pow(s23,3)-2*pow(s24,3)))+s13*(3*s24*(2*s23+s24)*(s14*s14)-(-26*s23*s24+17*(s23*s23)-9*(s24*s24))*((s23+s24)*(s23+s24))+s14*(28*s24*(s23*s23)+46*s23*(s24*s24)-6*pow(s23,3)+12*pow(s24,3)))-2*(-9*s23*s24+4*(s23*s23)-s24*s24)*pow(s23+s24,3))-2*(s23+s24)*(s23*s23*pow(s13,3)+s13*s13*(s24*(s23*s23)+s14*(-3*s23*s24+s23*s23-s24*s24)-3*s23*(s24*s24)+3*pow(s23,3)-pow(s24,3))-s13*(s24*(4*s23+s24)*(s14*s14)-(-4*s23*s24+3*(s23*s23)-s24*s24)*((s23+s24)*(s23+s24))+2*s14*(3*s24*(s23*s23)+5*s23*(s24*s24)-pow(s23,3)+pow(s24,3)))+s23*(-4*s24*(s23+s24)*(s14*s14)+s14*(s23-5*s24)*((s23+s24)*(s23+s24))-s24*pow(s14,3)+(s23-2*s24)*pow(s23+s24,3))))*pow(s12+s23+s24,-2)*pow(2*s12+s13+s14+s23+s24,-2)+8*s24*(s24*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(s24*s24*(4*s23*s24-s13*(3*s23+2*s24)+3*(s13*s13)+3*(s23*s23)+s24*s24)+s14*s24*(10*s23*s24-s13*(9*s23+2*s24)+9*(s23*s23)+2*(s24*s24))+s14*s14*((3*s23+s24)*(3*s23+s24)))+3*(-7*s23*s24+s14*(-8*s23+22*s24)+s13*(21*s14-4*s23+28*s24)+10*(s13*s13)+11*(s14*s14)+s23*s23+10*(s24*s24))*pow(s12,5)+(24*s13+25*s14-6*s23+25*s24)*pow(s12,6)+7*pow(s12,7)+pow(s12,4)*(3*(17*s14-2*s23+34*s24)*(s13*s13)+(-36*s23+57*s24)*(s14*s14)+15*s24*(s23*s23)-21*s23*(s24*s24)+3*s14*(-24*s23*s24+4*(s23*s23)+15*(s24*s24))+3*s13*(-11*s23*s24+s14*(-13*s23+54*s24)+18*(s14*s14)+s23*s23+35*(s24*s24))+16*pow(s13,3)+19*pow(s14,3)+3*pow(s23,3)+11*pow(s24,3))+s12*(3*(s13*s13)*(8*s14*(-2*s23+s24)*(s24*s24)+s24*s24*(s23*s24-s23*s23+4*(s24*s24))+s14*s14*(-10*s23*s24+s23*s23+4*(s24*s24)))+3*s14*s24*(19*s23*s24+6*(s23*s23)+3*(s24*s24))*((s23+s24)*(s23+s24))+s24*s24*(19*s23*s24+9*(s23*s23)+4*(s24*s24))*((s23+s24)*(s23+s24))+s24*(-3*s14*(4*s23-7*s24)+2*s24*(3*s23+14*s24))*pow(s13,3)+9*(s24*s24)*pow(s13,4)+3*(-2*s23*s24+s23*s23-s24*s24)*pow(s14,4)+3*s13*((3*s23-s24)*(s24*s24)*((s23+s24)*(s23+s24))+(-8*s23*s24+2*(s23*s23)-s24*s24)*pow(s14,3)+s14*s14*(15*s24*(s23*s23)-15*s23*(s24*s24)+pow(s23,3)-3*pow(s24,3))+s14*s24*(11*s24*(s23*s23)-6*s23*(s24*s24)+10*pow(s23,3)-3*pow(s24,3)))+pow(s14,3)*(45*s24*(s23*s23)+9*s23*(s24*s24)+3*pow(s23,3)-5*pow(s24,3))+3*s24*(s14*s14)*(44*s24*(s23*s23)+21*s23*(s24*s24)+22*pow(s23,3)+pow(s24,3)))+pow(s12,3)*(3*(s13*s13)*(-6*s14*(s23-7*s24)-3*(s23-14*s24)*s24+7*(s14*s14))+3*(s14*s14)*(-29*s23*s24+6*(s23*s23)+2*(s24*s24))+13*(s14+4*s24)*pow(s13,3)+3*pow(s13,4)-8*(3*s23-2*s24)*pow(s14,3)+4*pow(s14,4)+s14*(57*s24*(s23*s23)-51*s23*(s24*s24)+9*pow(s23,3)-7*pow(s24,3))+s24*(51*s24*(s23*s23)+12*s23*(s24*s24)+30*pow(s23,3)-pow(s24,3))+3*s13*((-14*s23+30*s24)*(s14*s14)+s24*(s23*s23)-11*s23*(s24*s24)+s14*(-36*s23*s24+4*(s23*s23)+42*(s24*s24))+5*pow(s14,3)+pow(s23,3)+17*pow(s24,3)))+3*(s12*s12)*(s24*(11*s23*s24+3*(s23*s23)+s24*s24)*((s23+s24)*(s23+s24))+(-(s14*(s23-10*s24))+s24*(s23+20*s24))*pow(s13,3)+3*s24*pow(s13,4)+2*(-7*s23*s24+2*(s23*s23)-2*(s24*s24))*pow(s14,3)-2*s23*pow(s14,4)+s14*s14*(26*s24*(s23*s23)-9*s23*(s24*s24)+3*pow(s23,3)-7*pow(s24,3))+2*s14*s24*(24*s24*(s23*s23)+8*s23*(s24*s24)+13*pow(s23,3)-pow(s24,3))+s13*s13*((-4*s23+11*s24)*(s14*s14)-s24*(s23*s23)+s14*(-18*s23*s24+s23*s23+33*(s24*s24))+22*pow(s24,3))+s13*(s14*s14*(-33*s23*s24+5*(s23*s23)+9*(s24*s24))+(-5*s23+4*s24)*pow(s14,3)+s24*(3*s24*(s23*s23)-4*s23*(s24*s24)+4*pow(s23,3)+pow(s24,3))+2*s14*(5*s24*(s23*s23)-16*s23*(s24*s24)+pow(s23,3)+3*pow(s24,3)))))*pow(s12+s14+s24,-3)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+4*s24*((4*s12-2*(2*s23+s24))*(-4*s12*(s13+s14+s23+s24)*(-(s14*s24*(5*s23+2*s24))+s13*(s14*(-s23+s24)+s24*(-s23+2*s24))+s24*(s13*s13)-s23*(s14*s14)-s24*(3*s23*s24+s23*s23+2*(s24*s24)))+2*s24*(s24*(-s13+s23+s24)+s14*(2*s23+s24))*((s13+s14+s23+s24)*(s13+s14+s23+s24))-4*(-4*s14*(s23-s24)-4*s23*s24+s13*(4*s14-2*s23+6*s24)+2*(s13*s13)+2*(s14*s14)-s23*s23+s24*s24)*pow(s12,3)-2*(5*s13+5*s14-3*s23+5*s24)*pow(s12,4)-4*pow(s12,5)+s12*s12*(-2*(3*s14-s23+9*s24)*(s13*s13)+2*(7*s23-3*s24)*(s14*s14)-2*s13*(s14*(-8*s23+12*s24)+3*(s14*s14)-2*(3*s23*s24+s23*s23-4*(s24*s24)))+8*s24*(3*s23*s24+2*(s23*s23)+s24*s24)+4*s14*(9*s23*s24+2*(s23*s23)+s24*s24)-2*pow(s13,3)-2*pow(s14,3)))+2*(-2*s12+4*s23+2*s24)*(s12*s24*(s13+s14+s23+s24)*(-5*s23*s24+s14*(-8*s23+3*s24)+s13*(4*s14+7*s24)+2*(s13*s13)+2*(s14*s14)-2*(s23*s23)+s24*s24)+s24*(-2*s14*s23+(s13-s23)*s24)*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(2*s14*(s23+10*s24)+2*s13*(6*s14+s23+10*s24)+5*(s13*s13)+7*(s14*s14)+12*(s24*s24))*pow(s12,3)+(7*s13+8*s14+s23+10*s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(-4*s14*(s23-4*s24)*s24+(4*s14+s23+12*s24)*(s13*s13)+(s23+12*s24)*(s14*s14)+s13*(4*s24*(s23+5*s24)+2*s14*(s23+12*s24)+5*(s14*s14))+2*s24*(-2*s23*s24-3*(s23*s23)+3*(s24*s24))+pow(s13,3)+2*pow(s14,3))))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+8*s24*(4*s14*s23+s12*(6*s13+3*s14-11*s23-4*s24)+4*s14*s24+13*s23*s24+s13*(4*s14+9*s23+6*s24)+14*(s12*s12)+5*(s13*s13)+8*(s23*s23)+7*(s24*s24))*pow(2*s12+s13+s14+s23+s24,-1)+8*s24*(s12*(4*s13+3*s14-2*s23+s24)+3*(s13+s14)*(s23+s24)+6*(s12*s12))*(-(s13*s23)+s14*s24+s12*(-s23+s24)-s23*s23+s24*s24)*pow(s23+s24,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*s24*(s24*(s13+s14+s23+s24)+s12*(s13+s14+2*s24)+s12*s12)*(-(s13*(s14+5*s23+4*s24))-s23*(10*s23+9*s24)+s12*(-4*s13+7*(2*s23+s24))-8*(s12*s12)-s13*s13)*pow(s12+s14+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s12+s13+s14,-1)*pow(s23,-1)*(48*s12-16*s13-16*s14+16*(s13+s14)-8*(2*s12+s13+s14+s23+s24)-8*s12*((s13+s14)*(2*s13+2*s14+s23+s24)+s12*(3*s13+3*s14-2*(s23+s24))-2*(s12*s12))*pow(s13+s14,-2)+8*(s12*(-7*s13-3*s14+2*s23)+2*s13*(s14-2*s23+s24)+s14*(3*s14-2*s23+4*s24)+5*(s12*s12)-s13*s13)*pow(s13+s14,-1)+(-16*(5*s12-s13-s14+s23)*(2*s12+s13+s14+s23+s24)-8*(s12+s13+s23)*(8*s12+3*s23+s24))*pow(s12+s13+s14+s23+s24,-1)+8*(2*s12*(12*s13+7*s14)+4*s14*(-s14+s23)+s13*(-11*s14+9*s23+s24)-7*(s13*s13))*pow(s12+s13+s14+s23+s24,-1)-24*(s12*(5*s13+3*s14+s23+s24)+s14*(s14+2*s23+s24)+s13*(4*s14+3*s23+2*s24)+s12*s12+3*(s13*s13))*pow(s12+s13+s14+s23+s24,-1)+8*(s14*(3*s14-3*s23+2*s24)+s13*(10*s14+s23+6*s24)+s12*(-9*s13-13*s14+22*s23+6*s24)+32*(s12*s12)+7*(s13*s13))*pow(s12+s13+s14+s23+s24,-1)+24*(4*s13*s14+3*(s13*s13)+s14*s14)*pow(s12+s13+s14+s23+s24,-1)+8*(4*s14*s23+2*s14*s24+4*s23*s24+2*s12*(5*s13+3*s14+5*s23+3*s24)+s13*(4*s14+6*s23+4*s24)+8*(s12*s12)+3*(s13*s13)+s14*s14+3*(s23*s23)+s24*s24)*pow(s12+s13+s14+s23+s24,-1)-8*((s13+s14)*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(s12*(s13+7*s23+s24)+(s13+s14)*(4*s13+3*s14+3*s23+2*s24)+13*(s12*s12))*pow(s14,-1)*pow(s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)-8*pow(s14,-2)*pow(s13+s14,-2)*(2*s12*(s24*(s13*s13)+s13*(s14*s24+s24*(s23+3*s24)-3*(s14*s14))-s14*(3*s23*s24+2*s14*(2*s23+s24)+2*(s14*s14)))*((s13+s14)*(s13+s14))+(2*s14*(s14+6*(s23+s24))+s13*(11*s14+8*(s23+s24))+9*(s13*s13))*pow(s12,4)+(4*s13+6*s14)*pow(s12,5)+(s13+s14)*(s12*s12)*(2*(s14+s23+6*s24)*(s13*s13)-2*s14*(-2*s23*s24+s14*(s23+2*s24)+6*(s14*s14)+s23*s23-3*(s24*s24))+s13*(8*s14*s24+10*s23*s24-11*(s14*s14)+s23*s23+9*(s24*s24))+pow(s13,3))+2*pow(s12,3)*((4*s14+5*s23+9*s24)*(s13*s13)+s13*(s14*(5*s23+13*s24)-s14*s14+2*((s23+s24)*(s23+s24)))+s14*(4*s14*s24-2*(s14*s14)+3*((s23+s24)*(s23+s24)))+3*pow(s13,3))-(2*s14*s23+s13*(s14-s24))*(s14+s24)*pow(s13+s14,3))*pow(s12+s13+s14+s23+s24,-1)+8*(s12+s13+s23)*(s23+s24)*(s12+s13+s14+s23+s24)*pow(2*s12+s13+s14+s23+s24,-2)-8*(s13+s14)*(2*s12*(s13+s14-s23-s24)+(s13+s14)*(s13+s14+s23+s24)-2*(s12*s12))*pow(2*s12+s13+s14+s23+s24,-2)+8*(-(s12*(7*s13+7*s14-s23+s24)*(s23+s24))+(-11*s13-11*s14+2*s23)*(s12*s12)+2*(s13+s14+s23+s24)*((s13+s14)*(s13+s14))+pow(s12,3))*pow(2*s12+s13+s14+s23+s24,-2)-4*pow(s12+s14+s24,-2)*(4*(-2*s12+s13+s14-s23)*(s12*s14*(s13+s14+s23+s24)*(s14*(7*s23+3*s24)-s13*(5*s14+8*s24)-2*(s13*s13)+s14*s14+2*((s23+s24)*(s23+s24)))-s14*(-(s14*s23)+s13*(s14+2*s24))*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(20*s14*(s23+s24)+(s23+s24)*(2*s13+5*s23+7*s24)+12*(s14*s14))*pow(s12,3)+(s13+10*s14+7*s23+8*s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(-6*s14*(s13*s13)+4*(5*s23+4*s24)*(s14*s14)+12*s14*((s23+s24)*(s23+s24))+(s23+2*s24)*((s23+s24)*(s23+s24))+s13*(4*s14*(s23-s24)-4*(s14*s14)+(s23+s24)*(s23+s24))+6*pow(s14,3)))+4*(3*s12-s13-s14+s23)*(2*s12*(s13+s14+s23+s24)*(s14*(s13*s13)+s14*(-2*s14*(s23-s24)-s23*(s23+s24)+2*(s14*s14))+s13*(s24*(s23+s24)+s14*(s23+5*s24)+3*(s14*s14)))+s14*(s14*(s14-s23+s24)+s13*(s14+2*s24))*((s13+s14+s23+s24)*(s13+s14+s23+s24))+2*(2*s13*(2*s14+s23+2*s24)-2*s14*(3*s23+2*s24)+s13*s13-s14*s14-2*((s23+s24)*(s23+s24)))*pow(s12,3)+(3*s13-5*(s14+s23+s24))*pow(s12,4)-2*pow(s12,5)+s12*s12*(2*(4*s14+s23+2*s24)*(s13*s13)+(-8*s23+2*s24)*(s14*s14)-3*s14*(4*s23*s24+3*(s23*s23)+s24*s24)+s13*(8*s23*s24+6*s14*(s23+3*s24)+12*(s14*s14)+s23*s23+7*(s24*s24))+4*pow(s14,3)-pow(s23+s24,3))))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-8*pow(s12+s14+s24,-3)*(s14*(s14*s14*(-2*s14*(s23-s24)-2*s23*s24+s14*s14+3*(s23*s23)+s24*s24)+3*(s13*s13)*(3*s14*s24+s14*s14+3*(s24*s24))+s13*s14*(-9*s23*s24+s14*(-3*s23+10*s24)+4*(s14*s14)+6*(s24*s24)))*((s13+s14+s23+s24)*(s13+s14+s23+s24))+3*(21*s23*s24-s13*(7*s14+4*s23+8*s24)+s14*(28*s23+22*s24)+s13*s13+10*(s14*s14)+10*(s23*s23)+11*(s24*s24))*pow(s12,5)+(-6*s13+25*s14+24*s23+25*s24)*pow(s12,6)+7*pow(s12,7)+pow(s12,4)*(3*(5*s14+s23+4*s24)*(s13*s13)+15*(7*s23+3*s24)*(s14*s14)-3*s13*(13*s23*s24+s14*(11*s23+24*s24)+7*(s14*s14)+2*(s23*s23)+12*(s24*s24))+3*s14*(54*s23*s24+34*(s23*s23)+19*(s24*s24))+(16*s23+19*s24)*((s23+s24)*(s23+s24))+3*pow(s13,3)+11*pow(s14,3))+3*(s12*s12)*((s24*(2*s23+3*s24)+s14*(4*s23+26*s24)+17*(s14*s14))*pow(s13,3)+3*s14*pow(s13,4)+s13*s13*(3*(s23+16*s24)*(s14*s14)+s24*(5*s23*s24+s23*s23+4*(s24*s24))+s14*(10*s23*s24-s23*s23+26*(s24*s24))+26*pow(s14,3))+s13*(-(s24*(32*s23+9*s24)*(s14*s14))-s24*(s23+2*s24)*((s23+s24)*(s23+s24))-4*(s23-4*s24)*pow(s14,3)+13*pow(s14,4)+s14*(-18*s24*(s23*s23)-33*s23*(s24*s24)+pow(s23,3)-14*pow(s24,3)))+s14*(s14*s14*(6*s23*s24+22*(s23*s23)-7*(s24*s24))+s23*(3*s23+4*s24)*((s23+s24)*(s23+s24))+(s23-2*s24)*pow(s14,3)+pow(s14,4)+s14*(33*s24*(s23*s23)+9*s23*(s24*s24)+20*pow(s23,3)-4*pow(s24,3))))+s12*(9*s14*(s14+2*s24)*pow(s13,4)+pow(s13,3)*(6*s14*s24*(5*s23+11*s24)+(9*s23+93*s24)*(s14*s14)+3*(s23+s24)*(s24*s24)+37*pow(s14,3))+3*(s13*s13)*(15*s14*(s23+s24)*(s24*s24)+s14*s14*(11*s23*s24-s23*s23+44*(s24*s24))+s24*s24*((s23+s24)*(s23+s24))+(5*s23+47*s24)*pow(s14,3)+17*pow(s14,4))+s14*s14*(3*(s14*s14)*(-3*s23*s24+4*(s23*s23)+s24*s24)+3*(s23*s24+3*(s23*s23)-s24*s24)*((s23+s24)*(s23+s24))-3*(s23-3*s24)*pow(s14,3)+4*pow(s14,4)+s14*(24*s24*(s23*s23)-9*s23*(s24*s24)+28*pow(s23,3)-5*pow(s24,3)))+3*s13*s14*(s14*s14*(-6*s23*s24+s23*s23+21*(s24*s24))-2*s24*(2*s23+s24)*((s23+s24)*(s23+s24))+(s23+25*s24)*pow(s14,3)+9*pow(s14,4)+s14*(-16*s24*(s23*s23)-15*s23*(s24*s24)+2*pow(s23,3)+3*pow(s24,3))))+pow(s12,3)*(3*(s13*s13)*(2*s24*(2*s23+3*s24)+s14*(s23+19*s24)+17*(s14*s14))+6*(s14*s14)*(21*s23*s24+21*(s23*s23)+s24*s24)+3*(10*s14+s23+3*s24)*pow(s13,3)+(51*s23-7*s24)*pow(s14,3)+3*s13*(-((11*s23+17*s24)*(s14*s14))-2*s24*(7*s23*s24+3*(s23*s23)+4*(s24*s24))-s14*(36*s23*s24+3*(s23*s23)+29*(s24*s24))+4*pow(s14,3))-pow(s14,4)+2*s14*(63*s24*(s23*s23)+45*s23*(s24*s24)+26*pow(s23,3)+8*pow(s24,3))+(3*s23+4*s24)*pow(s23+s24,3)))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-8*(s14*s23+4*s14*s24+2*s23*s24+s12*(-12*s13-8*s14+7*s23+2*s24)+s13*(2*s14+s23+4*s24)+5*(s12*s12)-s13*s13+3*(s14*s14)+2*(s23*s23))*pow(2*s12+s13+s14+s23+s24,-1)+8*(2*(s13+s14)*(s23+s24)+s12*(4*s13+4*s14+s23+s24)+4*(s12*s12))*(s12*(s13-s14)+s13*s23-s14*(s14+s24)+s13*s13)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*(s14*(s13+s14+s23+s24)+s12*(2*s14+s23+s24)+s12*s12)*(s13*(3*s14+4*s24)+s12*(-10*s13-13*s14+16*s23+4*s24)+s23*(-4*s14+3*(s23+s24))+19*(s12*s12)+3*(s13*s13))*pow(s12+s14+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s13,-1)*pow(s12+s23+s24,-1)*(48*s12-16*s23-16*s24+16*(s23+s24)-8*(2*s12+s13+s14+s23+s24)+8*s12*(s12*(2*s13+2*s14-3*(s23+s24))-(s23+s24)*(s13+s14+2*(s23+s24))+2*(s12*s12))*pow(s23+s24,-2)+8*(2*s14*s23+s12*(2*s13-7*s23-3*s24)+4*s14*s24+2*s23*s24-2*s13*(2*s23+s24)+5*(s12*s12)-s23*s23+3*(s24*s24))*pow(s23+s24,-1)+(-8*(8*s12+3*s13+s14)*(s12+s13+s23)-16*(5*s12+s13-s23-s24)*(2*s12+s13+s14+s23+s24))*pow(s12+s13+s14+s23+s24,-1)+8*(s14*s23-11*s23*s24+s13*(9*s23+4*s24)+2*s12*(12*s23+7*s24)-7*(s23*s23)-4*(s24*s24))*pow(s12+s13+s14+s23+s24,-1)+24*(4*s23*s24+3*(s23*s23)+s24*s24)*pow(s12+s13+s14+s23+s24,-1)-24*(2*s14*s23+s14*s24+4*s23*s24+s13*(3*s23+2*s24)+s12*(s13+s14+5*s23+3*s24)+s12*s12+3*(s23*s23)+s24*s24)*pow(s12+s13+s14+s23+s24,-1)+8*(4*s14*s23+2*s14*s24+4*s23*s24+2*s12*(5*s13+3*s14+5*s23+3*s24)+s13*(4*s14+6*s23+4*s24)+8*(s12*s12)+3*(s13*s13)+s14*s14+3*(s23*s23)+s24*s24)*pow(s12+s13+s14+s23+s24,-1)+8*(6*s14*s23+s12*(22*s13+6*s14-9*s23-13*s24)+s13*(s23-3*s24)+2*s14*s24+10*s23*s24+32*(s12*s12)+7*(s23*s23)+3*(s24*s24))*pow(s12+s13+s14+s23+s24,-1)-8*((s14+s24)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(s12*(7*s13+s14+s23)+(s23+s24)*(3*s13+2*s14+4*s23+3*s24)+13*(s12*s12))*pow(s24,-1)*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-8*pow(s24,-2)*pow(s23+s24,-2)*(2*s12*(3*s23*(s14*s14)+s13*(s14*(s23-3*s24)-4*(s24*s24))+s14*(s23*s24+s23*s23-2*(s24*s24))-(3*s23+2*s24)*(s24*s24))*((s23+s24)*(s23+s24))+2*(s13*(5*s23*(s23+s24)+s14*(4*s23+6*s24))+(2*s23+3*s24)*(s13*s13)+(2*s23+3*s24)*(s14*s14)+s14*(13*s23*s24+9*(s23*s23)+4*(s24*s24))+(3*s23-2*s24)*((s23+s24)*(s23+s24)))*pow(s12,3)+(11*s23*s24+4*s13*(2*s23+3*s24)+4*s14*(2*s23+3*s24)+9*(s23*s23)+2*(s24*s24))*pow(s12,4)+(4*s23+6*s24)*pow(s12,5)+(s23+s24)*(s12*s12)*((s23-2*s24)*(s13*s13)+(9*s23+6*s24)*(s14*s14)+2*s24*(s23*s23)+2*s13*(s14*(5*s23+2*s24)+s23*s23-s24*s24)+4*s14*(2*s23*s24+3*(s23*s23)-s24*s24)-11*s23*(s24*s24)+pow(s23,3)-12*pow(s24,3))+(s14+s24)*(s14*s23-(2*s13+s23)*s24)*pow(s23+s24,3))*pow(s12+s13+s14+s23+s24,-1)+8*(s13+s14)*(s12+s13+s23)*(s12+s13+s14+s23+s24)*pow(2*s12+s13+s14+s23+s24,-2)-8*(s23+s24)*(-2*s12*(s13+s14-s23-s24)+(s23+s24)*(s13+s14+s23+s24)-2*(s12*s12))*pow(2*s12+s13+s14+s23+s24,-2)+8*(s12*(s13+s14)*(s13-s14-7*(s23+s24))+(2*s13-11*(s23+s24))*(s12*s12)+2*(s13+s14+s23+s24)*((s23+s24)*(s23+s24))+pow(s12,3))*pow(2*s12+s13+s14+s23+s24,-2)-8*(s24*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(s24*s24*(4*s23*s24-s13*(3*s23+2*s24)+3*(s13*s13)+3*(s23*s23)+s24*s24)+s14*s24*(10*s23*s24-s13*(9*s23+2*s24)+9*(s23*s23)+2*(s24*s24))+s14*s14*((3*s23+s24)*(3*s23+s24)))+3*(-7*s23*s24+s14*(-8*s23+22*s24)+s13*(21*s14-4*s23+28*s24)+10*(s13*s13)+11*(s14*s14)+s23*s23+10*(s24*s24))*pow(s12,5)+(24*s13+25*s14-6*s23+25*s24)*pow(s12,6)+7*pow(s12,7)+pow(s12,4)*(3*(17*s14-2*s23+34*s24)*(s13*s13)+(-36*s23+57*s24)*(s14*s14)+15*s24*(s23*s23)-21*s23*(s24*s24)+3*s14*(-24*s23*s24+4*(s23*s23)+15*(s24*s24))+3*s13*(-11*s23*s24+s14*(-13*s23+54*s24)+18*(s14*s14)+s23*s23+35*(s24*s24))+16*pow(s13,3)+19*pow(s14,3)+3*pow(s23,3)+11*pow(s24,3))+s12*(3*(s13*s13)*(8*s14*(-2*s23+s24)*(s24*s24)+s24*s24*(s23*s24-s23*s23+4*(s24*s24))+s14*s14*(-10*s23*s24+s23*s23+4*(s24*s24)))+3*s14*s24*(19*s23*s24+6*(s23*s23)+3*(s24*s24))*((s23+s24)*(s23+s24))+s24*s24*(19*s23*s24+9*(s23*s23)+4*(s24*s24))*((s23+s24)*(s23+s24))+s24*(-3*s14*(4*s23-7*s24)+2*s24*(3*s23+14*s24))*pow(s13,3)+9*(s24*s24)*pow(s13,4)+3*(-2*s23*s24+s23*s23-s24*s24)*pow(s14,4)+3*s13*((3*s23-s24)*(s24*s24)*((s23+s24)*(s23+s24))+(-8*s23*s24+2*(s23*s23)-s24*s24)*pow(s14,3)+s14*s14*(15*s24*(s23*s23)-15*s23*(s24*s24)+pow(s23,3)-3*pow(s24,3))+s14*s24*(11*s24*(s23*s23)-6*s23*(s24*s24)+10*pow(s23,3)-3*pow(s24,3)))+pow(s14,3)*(45*s24*(s23*s23)+9*s23*(s24*s24)+3*pow(s23,3)-5*pow(s24,3))+3*s24*(s14*s14)*(44*s24*(s23*s23)+21*s23*(s24*s24)+22*pow(s23,3)+pow(s24,3)))+pow(s12,3)*(3*(s13*s13)*(-6*s14*(s23-7*s24)-3*(s23-14*s24)*s24+7*(s14*s14))+3*(s14*s14)*(-29*s23*s24+6*(s23*s23)+2*(s24*s24))+13*(s14+4*s24)*pow(s13,3)+3*pow(s13,4)-8*(3*s23-2*s24)*pow(s14,3)+4*pow(s14,4)+s14*(57*s24*(s23*s23)-51*s23*(s24*s24)+9*pow(s23,3)-7*pow(s24,3))+s24*(51*s24*(s23*s23)+12*s23*(s24*s24)+30*pow(s23,3)-pow(s24,3))+3*s13*((-14*s23+30*s24)*(s14*s14)+s24*(s23*s23)-11*s23*(s24*s24)+s14*(-36*s23*s24+4*(s23*s23)+42*(s24*s24))+5*pow(s14,3)+pow(s23,3)+17*pow(s24,3)))+3*(s12*s12)*(s24*(11*s23*s24+3*(s23*s23)+s24*s24)*((s23+s24)*(s23+s24))+(-(s14*(s23-10*s24))+s24*(s23+20*s24))*pow(s13,3)+3*s24*pow(s13,4)+2*(-7*s23*s24+2*(s23*s23)-2*(s24*s24))*pow(s14,3)-2*s23*pow(s14,4)+s14*s14*(26*s24*(s23*s23)-9*s23*(s24*s24)+3*pow(s23,3)-7*pow(s24,3))+2*s14*s24*(24*s24*(s23*s23)+8*s23*(s24*s24)+13*pow(s23,3)-pow(s24,3))+s13*s13*((-4*s23+11*s24)*(s14*s14)-s24*(s23*s23)+s14*(-18*s23*s24+s23*s23+33*(s24*s24))+22*pow(s24,3))+s13*(s14*s14*(-33*s23*s24+5*(s23*s23)+9*(s24*s24))+(-5*s23+4*s24)*pow(s14,3)+s24*(3*s24*(s23*s23)-4*s23*(s24*s24)+4*pow(s23,3)+pow(s24,3))+2*s14*(5*s24*(s23*s23)-16*s23*(s24*s24)+pow(s23,3)+3*pow(s24,3)))))*pow(s12+s14+s24,-3)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-4*(2*(3*s12+s13-s23-s24)*(-4*s12*(s13+s14+s23+s24)*(-(s14*s24*(5*s23+2*s24))+s13*(s14*(-s23+s24)+s24*(-s23+2*s24))+s24*(s13*s13)-s23*(s14*s14)-s24*(3*s23*s24+s23*s23+2*(s24*s24)))+2*s24*(s24*(-s13+s23+s24)+s14*(2*s23+s24))*((s13+s14+s23+s24)*(s13+s14+s23+s24))-4*(-4*s14*(s23-s24)-4*s23*s24+s13*(4*s14-2*s23+6*s24)+2*(s13*s13)+2*(s14*s14)-s23*s23+s24*s24)*pow(s12,3)-2*(5*s13+5*s14-3*s23+5*s24)*pow(s12,4)-4*pow(s12,5)+s12*s12*(-2*(3*s14-s23+9*s24)*(s13*s13)+2*(7*s23-3*s24)*(s14*s14)-2*s13*(s14*(-8*s23+12*s24)+3*(s14*s14)-2*(3*s23*s24+s23*s23-4*(s24*s24)))+8*s24*(3*s23*s24+2*(s23*s23)+s24*s24)+4*s14*(9*s23*s24+2*(s23*s23)+s24*s24)-2*pow(s13,3)-2*pow(s14,3)))+4*(-2*s12-s13+s23+s24)*(s12*s24*(s13+s14+s23+s24)*(-5*s23*s24+s14*(-8*s23+3*s24)+s13*(4*s14+7*s24)+2*(s13*s13)+2*(s14*s14)-2*(s23*s23)+s24*s24)+s24*(-2*s14*s23+(s13-s23)*s24)*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(2*s14*(s23+10*s24)+2*s13*(6*s14+s23+10*s24)+5*(s13*s13)+7*(s14*s14)+12*(s24*s24))*pow(s12,3)+(7*s13+8*s14+s23+10*s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(-4*s14*(s23-4*s24)*s24+(4*s14+s23+12*s24)*(s13*s13)+(s23+12*s24)*(s14*s14)+s13*(4*s24*(s23+5*s24)+2*s14*(s23+12*s24)+5*(s14*s14))+2*s24*(-2*s23*s24-3*(s23*s23)+3*(s24*s24))+pow(s13,3)+2*pow(s14,3))))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-8*(s12*(7*s13+2*(s14-6*s23-4*s24))+s13*(2*s14+s23+s24)+(s23+s24)*(4*s14-s23+3*s24)+5*(s12*s12)+2*(s13*s13))*pow(2*s12+s13+s14+s23+s24,-1)+8*(2*(s13+s14)*(s23+s24)+s12*(s13+s14+4*(s23+s24))+4*(s12*s12))*(s13*s23+s12*(s23-s24)-s14*s24+s23*s23-s24*s24)*pow(s23+s24,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*(s24*(s13+s14+s23+s24)+s12*(s13+s14+2*s24)+s12*s12)*(s12*(16*s13+4*s14-10*s23-13*s24)+s13*(3*s14-4*s24)+s23*(4*s14+3*(s23+s24))+19*(s12*s12)+3*(s13*s13))*pow(s12+s14+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s24,-1)*(24+24*s14*pow(s13,-1)-8*(s12+s13+s14+s23+s24)*pow(s13,-1)-8*(2*s12+s13+s14+s23+s24)*pow(s13,-1)+8*(7*s12-s13+4*s23+2*s24)*pow(s13,-1)+8*(s12+2*s13+s14)*(s12+s13+s14+s23+s24)*pow(s13+s14,-2)-8*s12*(s12*(2*s13+s14-s23-s24)+s13*(2*s14+s23+s24)-s12*s12+s13*s13+s14*s14)*pow(s13,-1)*pow(s13+s14,-2)+8*(-(s12*(2*s13-2*s14+s23-3*s24))+s13*(2*s14+s23-3*s24)+3*(s12*s12)+s13*s13+2*(s14*s14))*pow(s13,-1)*pow(s13+s14,-1)+(8*(s12+s13+s23)*(2*s12+2*s13+s14+s23)+8*(2*s12+2*s13+s23)*(2*s12+s13+s14+s23+s24))*pow(s13,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(2*s12*(7*s13+4*s14)+s14*(5*s23+2*s24)+s13*(2*s14+10*s23+5*s24)+2*(s13*s13))*pow(s13,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(s12*(5*s13+3*s14+s23+s24)+s14*(s14+2*s23+s24)+s13*(4*s14+3*s23+2*s24)+s12*s12+3*(s13*s13))*pow(s13,-1)*pow(s12+s13+s14+s23+s24,-1)-16*(4*s13*s14+3*(s13*s13)+s14*s14)*pow(s13,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(3*s14*s23+s14*s24+3*s23*s24+3*s13*(s14+4*s23+s24)+s12*(10*s13+5*s14+17*s23+8*s24)+14*(s12*s12)+2*(s13*s13)+2*(s14*s14)+7*(s23*s23))*pow(s13,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(-((s14+s24)*(2*s13*(s14-s24)+s14*(s14+4*s23+s24))*((s13+s14)*(s13+s14)))+2*s12*(s13+s14)*(2*s24*(s13*s13)+s13*(-(s14*s23)+2*s24*(s23+s24)-3*(s14*s14))-s14*(s14*(s23+2*s24)+3*(s14*s14)+s23*s23-s24*s24))+(6*s14*(s23+s24)+4*s13*(s14+s23+s24)+4*(s13*s13))*pow(s12,3)+(2*s13+3*s14)*pow(s12,4)+s12*s12*((s14+4*s23+8*s24)*(s13*s13)+2*s13*(s14*(s23+5*s24)-2*(s14*s14)+(s23+s24)*(s23+s24))+s14*(-2*s14*(s23-s24)-3*(s14*s14)+3*((s23+s24)*(s23+s24)))+2*pow(s13,3)))*pow(s14,-2)*pow(s13+s14,-2)*pow(s12+s13+s14+s23+s24,-1)+8*(6*s12+s13+s14+7*s23+3*s24)*((s13+s14)*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s14,-1)*pow(s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)+8*((s13+s14)*(-8*s12+s13-5*s23-2*s24)*(2*s12+s13+s14+s23+s24)+s12*(s12+s23+s24)*(4*s12-s13+5*s23+2*s24))*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-2)-16*(s13+s14)*(2*s12*(s13+s14-s23-s24)+(s13+s14)*(s13+s14+s23+s24)-2*(s12*s12))*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-2)+8*(s12+s13+s14+s23+s24)*(-((s13-s23)*(2*s13+s14+2*s23+s24))+s12*(-3*s13+s14+3*s23+s24)+s12*s12)*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-2)+8*(s12+s13+s14+s23+s24)*(s13*(2*s14+s23)+s12*(s13+3*s14-s23-s24)+s14*(s14+2*s23+s24)-s12*s12+s13*s13)*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-2)-8*s12*pow(s13,-1)*pow(s13+s14,-2)*pow(s12+s13+s14,-2)*((-6*s13*s14+5*(s13*s13)-7*(s14*s14))*pow(s12,4)+pow(s12,3)*(-2*s13*s14*(23*s14+3*s23+9*s24)+(-4*s14+13*s23+7*s24)*(s13*s13)-(20*s14+11*s23+17*s24)*(s14*s14)+22*pow(s13,3))+s12*s12*(-(s13*s14*(s14*(51*s23+87*s24)+80*(s14*s14)-2*(-8*s23*s24+s23*s23-8*(s24*s24))))+s13*s13*(3*s14*(7*s23-11*s24)+12*s23*s24-66*(s14*s14)+11*(s23*s23)+2*(s24*s24))-s14*s14*(18*s23*s24+3*s14*(9*s23+11*s24)+20*(s14*s14)+4*(s23*s23)+13*(s24*s24))+(28*s14+45*s23+21*s24)*pow(s13,3)+34*pow(s13,4))+s12*((2*s14*(33*s23-5*s24)+26*s23*s24-20*(s14*s14)+28*(s23*s23)+4*(s24*s24))*pow(s13,3)+(40*s14+47*s23+21*s24)*pow(s13,4)+22*pow(s13,5)+s13*s13*(-6*(5*s23+17*s24)*(s14*s14)+2*s14*(-8*s23*s24+14*(s23*s23)-13*(s24*s24))+s23*(5*s23*s24+3*(s23*s23)+2*(s24*s24))-80*pow(s14,3))-s14*s14*((21*s23+19*s24)*(s14*s14)+s24*(7*s23*s24+4*(s23*s23)+3*(s24*s24))+2*s14*(14*s23*s24+4*(s23*s23)+7*(s24*s24))+8*pow(s14,3))-2*s13*s14*(5*(7*s23+9*s24)*(s14*s14)+s24*(s23*s23)+4*s23*(s24*s24)+s14*(35*s23*s24+4*(s23*s23)+22*(s24*s24))+25*pow(s14,3)-pow(s23,3)+2*pow(s24,3)))+(s13+s14)*(-((s14+s24)*(s14*s14)*(5*s23*s24+s14*(5*s23+2*s24)+s14*s14+4*(s23*s23)+s24*s24))+(s14*(20*s23-2*s24)+14*s23*s24-4*(s14*s14)+15*(s23*s23)+2*(s24*s24))*pow(s13,3)+(9*s14+15*s23+7*s24)*pow(s13,4)+5*pow(s13,5)+s13*s13*(-2*(5*s23+14*s24)*(s14*s14)+s14*(-8*s23*s24+13*(s23*s23)-12*(s24*s24))+s23*(7*s23*s24+5*(s23*s23)+2*(s24*s24))-16*pow(s14,3))-s13*s14*((20*s23+22*s24)*(s14*s14)+6*s24*(s23*s23)+12*s23*(s24*s24)+s14*(32*s23*s24+6*(s23*s23)+17*(s24*s24))+9*pow(s14,3)-2*pow(s23,3)+4*pow(s24,3))))*pow(2*s12+s13+s14+s23+s24,-2)+4*pow(s13,-1)*pow(s12+s14+s24,-2)*(-4*(2*s12+2*s23+s24)*(s12*s14*(s13+s14+s23+s24)*(s14*(7*s23+3*s24)-s13*(5*s14+8*s24)-2*(s13*s13)+s14*s14+2*((s23+s24)*(s23+s24)))-s14*(-(s14*s23)+s13*(s14+2*s24))*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(20*s14*(s23+s24)+(s23+s24)*(2*s13+5*s23+7*s24)+12*(s14*s14))*pow(s12,3)+(s13+10*s14+7*s23+8*s24)*pow(s12,4)+3*pow(s12,5)+s12*s12*(-6*s14*(s13*s13)+4*(5*s23+4*s24)*(s14*s14)+12*s14*((s23+s24)*(s23+s24))+(s23+2*s24)*((s23+s24)*(s23+s24))+s13*(4*s14*(s23-s24)-4*(s14*s14)+(s23+s24)*(s23+s24))+6*pow(s14,3)))+4*(3*s12+2*s23+s24)*(2*s12*(s13+s14+s23+s24)*(s14*(s13*s13)+s14*(-2*s14*(s23-s24)-s23*(s23+s24)+2*(s14*s14))+s13*(s24*(s23+s24)+s14*(s23+5*s24)+3*(s14*s14)))+s14*(s14*(s14-s23+s24)+s13*(s14+2*s24))*((s13+s14+s23+s24)*(s13+s14+s23+s24))+2*(2*s13*(2*s14+s23+2*s24)-2*s14*(3*s23+2*s24)+s13*s13-s14*s14-2*((s23+s24)*(s23+s24)))*pow(s12,3)+(3*s13-5*(s14+s23+s24))*pow(s12,4)-2*pow(s12,5)+s12*s12*(2*(4*s14+s23+2*s24)*(s13*s13)+(-8*s23+2*s24)*(s14*s14)-3*s14*(4*s23*s24+3*(s23*s23)+s24*s24)+s13*(8*s23*s24+6*s14*(s23+3*s24)+12*(s14*s14)+s23*s23+7*(s24*s24))+4*pow(s14,3)-pow(s23+s24,3))))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+8*pow(s13,-1)*pow(s12+s14+s24,-3)*(s14*(s14*s14*(-2*s14*(s23-s24)-2*s23*s24+s14*s14+3*(s23*s23)+s24*s24)+3*(s13*s13)*(3*s14*s24+s14*s14+3*(s24*s24))+s13*s14*(-9*s23*s24+s14*(-3*s23+10*s24)+4*(s14*s14)+6*(s24*s24)))*((s13+s14+s23+s24)*(s13+s14+s23+s24))+3*(21*s23*s24-s13*(7*s14+4*s23+8*s24)+s14*(28*s23+22*s24)+s13*s13+10*(s14*s14)+10*(s23*s23)+11*(s24*s24))*pow(s12,5)+(-6*s13+25*s14+24*s23+25*s24)*pow(s12,6)+7*pow(s12,7)+pow(s12,4)*(3*(5*s14+s23+4*s24)*(s13*s13)+15*(7*s23+3*s24)*(s14*s14)-3*s13*(13*s23*s24+s14*(11*s23+24*s24)+7*(s14*s14)+2*(s23*s23)+12*(s24*s24))+3*s14*(54*s23*s24+34*(s23*s23)+19*(s24*s24))+(16*s23+19*s24)*((s23+s24)*(s23+s24))+3*pow(s13,3)+11*pow(s14,3))+3*(s12*s12)*((s24*(2*s23+3*s24)+s14*(4*s23+26*s24)+17*(s14*s14))*pow(s13,3)+3*s14*pow(s13,4)+s13*s13*(3*(s23+16*s24)*(s14*s14)+s24*(5*s23*s24+s23*s23+4*(s24*s24))+s14*(10*s23*s24-s23*s23+26*(s24*s24))+26*pow(s14,3))+s13*(-(s24*(32*s23+9*s24)*(s14*s14))-s24*(s23+2*s24)*((s23+s24)*(s23+s24))-4*(s23-4*s24)*pow(s14,3)+13*pow(s14,4)+s14*(-18*s24*(s23*s23)-33*s23*(s24*s24)+pow(s23,3)-14*pow(s24,3)))+s14*(s14*s14*(6*s23*s24+22*(s23*s23)-7*(s24*s24))+s23*(3*s23+4*s24)*((s23+s24)*(s23+s24))+(s23-2*s24)*pow(s14,3)+pow(s14,4)+s14*(33*s24*(s23*s23)+9*s23*(s24*s24)+20*pow(s23,3)-4*pow(s24,3))))+s12*(9*s14*(s14+2*s24)*pow(s13,4)+pow(s13,3)*(6*s14*s24*(5*s23+11*s24)+(9*s23+93*s24)*(s14*s14)+3*(s23+s24)*(s24*s24)+37*pow(s14,3))+3*(s13*s13)*(15*s14*(s23+s24)*(s24*s24)+s14*s14*(11*s23*s24-s23*s23+44*(s24*s24))+s24*s24*((s23+s24)*(s23+s24))+(5*s23+47*s24)*pow(s14,3)+17*pow(s14,4))+s14*s14*(3*(s14*s14)*(-3*s23*s24+4*(s23*s23)+s24*s24)+3*(s23*s24+3*(s23*s23)-s24*s24)*((s23+s24)*(s23+s24))-3*(s23-3*s24)*pow(s14,3)+4*pow(s14,4)+s14*(24*s24*(s23*s23)-9*s23*(s24*s24)+28*pow(s23,3)-5*pow(s24,3)))+3*s13*s14*(s14*s14*(-6*s23*s24+s23*s23+21*(s24*s24))-2*s24*(2*s23+s24)*((s23+s24)*(s23+s24))+(s23+25*s24)*pow(s14,3)+9*pow(s14,4)+s14*(-16*s24*(s23*s23)-15*s23*(s24*s24)+2*pow(s23,3)+3*pow(s24,3))))+pow(s12,3)*(3*(s13*s13)*(2*s24*(2*s23+3*s24)+s14*(s23+19*s24)+17*(s14*s14))+6*(s14*s14)*(21*s23*s24+21*(s23*s23)+s24*s24)+3*(10*s14+s23+3*s24)*pow(s13,3)+(51*s23-7*s24)*pow(s14,3)+3*s13*(-((11*s23+17*s24)*(s14*s14))-2*s24*(7*s23*s24+3*(s23*s23)+4*(s24*s24))-s14*(36*s23*s24+3*(s23*s23)+29*(s24*s24))+4*pow(s14,3))-pow(s14,4)+2*s14*(63*s24*(s23*s23)+45*s23*(s24*s24)+26*pow(s23,3)+8*pow(s24,3))+(3*s23+4*s24)*pow(s23+s24,3)))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-8*(2*s14*s23+2*s13*(s14+s23-s24)+3*s14*s24+5*s23*s24+s12*(-2*s13+3*s14+12*s23+8*s24)+12*(s12*s12)+s13*s13+2*(s14*s14)+7*(s23*s23)+2*(s24*s24))*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*s12*(3*s12+3*s13+s14+6*s23+2*s24)*(s12*(s13-s14)+s13*s23-s14*(s14+s24)+s13*s13)*pow(s13,-1)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*(s14*(s13+s14+s23+s24)+s12*(2*s14+s23+s24)+s12*s12)*(2*s14*s23+4*s14*s24+9*s23*s24+s13*(2*s14+5*s23+3*s24)+s12*(4*s13+4*s14+24*s23+15*s24)+18*(s12*s12)+s13*s13+2*(s14*s14)+10*(s23*s23)+2*(s24*s24))*pow(s13,-1)*pow(s12+s14+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s13,-1)*(8*(s13+s14)*pow(s12+s23+s24,-1)-8*(s13+s14+s23+s24)*pow(s12+s23+s24,-1)-8*s14*(s12+s13+s14+s23+s24)*pow(s13+s14,-1)*pow(s12+s23+s24,-1)-8*(s12*(2*s13+2*s14-s23-s24)+(s13+s14)*(s13+s14+s23+s24)-s12*s12)*pow(s13+s14,-1)*pow(s12+s23+s24,-1)+8*(s14*(5*s14+5*s23+8*s24)+s13*(8*s14+6*s23+9*s24)+s12*(11*s13+3*(3*s14+s23+s24))+3*(s12*s12)+3*(s13*s13))*pow(s13+s14,-1)*pow(s12+s23+s24,-1)-8*(s13+2*s14)*(s13+3*s14+s23+s24)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(s13+s14)*(3*s12+s13+2*s14+s23+2*s24)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(4*s13*s14+s13*s13+3*(s14*s14))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(8*s14*s23+10*s14*s24-s23*s24+s12*(7*s13+9*s14+2*s23+3*s24)+s13*(6*s14+5*s23+3*s24)+3*(s12*s12)+3*(s13*s13)+7*(s14*s14)-s23*s23)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*((s13+s14)*(s13+s23)+s12*(s13+s14+s23+s24)+s12*s12)*(s12*s13+s13*(5*s14+s23+s24)+3*(s14*s14))*pow(s13,-1)*pow(s13+s14,-1)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(s13+s14)*(s12+s14+s24)*(s12+s13+s14+s23+s24)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-((32*(s12-s13-s14)*(s13+s14)*(2*s12+s13+s14+s23+s24)+16*s12*(s12+s23+s24)*(s12+s13+3*s14+s23+s24))*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2))/2.-8*(s13+s14)*(2*s12*(s13+s14-s23-s24)+(s13+s14)*(s13+s14+s23+s24)-2*(s12*s12))*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+16*pow(s12+s13+s23,-2)*(s13*(s13+2*s14)*(4*s14*s23+s13*(2*s14+s23-2*s24)+s13*s13)*((s13+s14+s23+s24)*(s13+s14+s23+s24))+(-(s13*(36*s14+5*s23))-13*(s13*s13)+2*(-(s14*(17*s23+14*s24))+s14*s14+2*((s23+s24)*(s23+s24))))*pow(s12,4)+(-13*s14+5*(s23+s24))*pow(s12,5)+2*pow(s12,6)-s12*s12*(s13*s13*(34*s23*s24+s14*(26*s23+58*s24)-38*(s14*s14)+19*(s23*s23)+15*(s24*s24))+2*s14*(-5*s14*s23*(s23+s24)-2*(2*s23+s24)*(s14*s14)+2*(2*s23+s24)*((s23+s24)*(s23+s24)))+(-2*s14+22*s23+28*s24)*pow(s13,3)+6*pow(s13,4)+s13*(-2*(18*s23+s24)*(s14*s14)+6*s14*(13*s23*s24+6*(s23*s23)+7*(s24*s24))+3*s23*((s23+s24)*(s23+s24))-26*pow(s14,3)))+s12*(4*s23*(s23+s24)*(s14+s23+s24)*(s14*s14)+2*(s14*(15*s23-8*s24)-9*s23*s24+20*(s14*s14)-2*(s23*s23)-7*(s24*s24))*pow(s13,3)+(17*s14+s23-9*s24)*pow(s13,4)+2*pow(s13,5)+2*s13*s14*(3*(7*s23+2*s24)*(s14*s14)+s14*(15*s23*s24+17*(s23*s23)-2*(s24*s24))-2*(s23+2*s24)*((s23+s24)*(s23+s24))+4*pow(s14,3))+s13*s13*((75*s23+9*s24)*(s14*s14)+s14*(-22*s23*s24+9*(s23*s23)-31*(s24*s24))+33*pow(s14,3)-3*pow(s23+s24,3)))+pow(s12,3)*(-2*(16*s14+15*s23+12*s24)*(s13*s13)+2*(4*s23+s24)*(s14*s14)+2*s13*(-34*s14*(s23+s24)-4*s23*(s23+s24)+5*(s14*s14))-s14*(48*s23*s24+29*(s23*s23)+19*(s24*s24))-18*pow(s13,3)+4*pow(s14,3)+pow(s23+s24,3)))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-8*pow(s12+s13+s23,-3)*(3*(21*s23*s24-4*s14*(2*s23+s24)+s13*(-7*s14+22*s23+28*s24)+10*(s13*s13)+s14*s14+11*(s23*s23)+10*(s24*s24))*pow(s12,5)+(25*s13-6*s14+25*s23+24*s24)*pow(s12,6)+7*pow(s12,7)+s13*((s13+s14+s23+s24)*(s13+s14+s23+s24))*(3*s13*s14*s23*(3*s14+2*s23-3*s24)+9*(s14*s14)*(s23*s23)+s13*s13*(s14*(10*s23-3*s24)-2*s23*s24+3*(s14*s14)+s23*s23+3*(s24*s24))+2*(2*s14+s23-s24)*pow(s13,3)+pow(s13,4))+pow(s12,4)*((-21*s14+45*s23+105*s24)*(s13*s13)+3*(4*s23+s24)*(s14*s14)-3*s14*(13*s23*s24+12*(s23*s23)+2*(s24*s24))+3*s13*(54*s23*s24-s14*(24*s23+11*s24)+5*(s14*s14)+19*(s23*s23)+34*(s24*s24))+(19*s23+16*s24)*((s23+s24)*(s23+s24))+11*pow(s13,3)+3*pow(s14,3))+3*(s12*s12)*(s14*s23*((3*s23+2*s24)*(s14*s14)+s14*(5*s23*s24+4*(s23*s23)+s24*s24)-(2*s23+s24)*((s23+s24)*(s23+s24)))+(4*s14*(4*s23-s24)+6*s23*s24+26*(s14*s14)-7*(s23*s23)+22*(s24*s24))*pow(s13,3)+(13*s14-2*s23+s24)*pow(s13,4)+pow(s13,5)+s13*s13*(-(s14*s23*(9*s23+32*s24))+3*(16*s23+s24)*(s14*s14)+9*s24*(s23*s23)+33*s23*(s24*s24)+17*pow(s14,3)-4*pow(s23,3)+20*pow(s24,3))+s13*(s14*s14*(10*s23*s24+26*(s23*s23)-s24*s24)+s24*(4*s23+3*s24)*((s23+s24)*(s23+s24))+(26*s23+4*s24)*pow(s14,3)+3*pow(s14,4)+s14*(-33*s24*(s23*s23)-18*s23*(s24*s24)-14*pow(s23,3)+pow(s24,3))))+s12*(3*(s23+s24)*(s14+s23+s24)*(s14*s14)*(s23*s23)+3*(-3*s23*s24+s14*(25*s23+s24)+17*(s14*s14)+s23*s23+4*(s24*s24))*pow(s13,4)+3*(9*s14+3*s23-s24)*pow(s13,5)+4*pow(s13,6)+3*s13*s14*s23*(15*s14*s23*(s23+s24)+2*(11*s23+5*s24)*(s14*s14)-2*(s23+2*s24)*((s23+s24)*(s23+s24))+6*pow(s14,3))+pow(s13,3)*(3*(47*s23+5*s24)*(s14*s14)-9*s24*(s23*s23)+24*s23*(s24*s24)+3*s14*(-6*s23*s24+21*(s23*s23)+s24*s24)+37*pow(s14,3)-5*pow(s23,3)+28*pow(s24,3))+3*(s13*s13)*(s14*s14*(11*s23*s24+44*(s23*s23)-s24*s24)-(-(s23*s24)+s23*s23-3*(s24*s24))*((s23+s24)*(s23+s24))+(31*s23+3*s24)*pow(s14,3)+3*pow(s14,4)+s14*(-15*s24*(s23*s23)-16*s23*(s24*s24)+3*pow(s23,3)+2*pow(s24,3))))+pow(s12,3)*(6*s23*(3*s23+2*s24)*(s14*s14)-6*s14*s23*(7*s23*s24+4*(s23*s23)+3*(s24*s24))+3*(s13*s13)*(-(s14*(17*s23+11*s24))+17*(s14*s14)+2*(21*s23*s24+s23*s23+21*(s24*s24)))+(12*s14-7*s23+51*s24)*pow(s13,3)-pow(s13,4)+3*(3*s23+s24)*pow(s14,3)+s13*(3*(19*s23+s24)*(s14*s14)-3*s14*(36*s23*s24+29*(s23*s23)+3*(s24*s24))+30*pow(s14,3)+2*(45*s24*(s23*s23)+63*s23*(s24*s24)+8*pow(s23,3)+26*pow(s24,3)))+(4*s23+3*s24)*pow(s23+s24,3)))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-24*s12*(s12*(s13-s14)+s13*s23-s14*(s14+s24)+s13*s13)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*(2*s14*s23+6*s14*s24-s23*s24+s12*(8*s13+4*s14-2*s23+3*s24)+2*s13*(4*s14+s23+3*s24)+4*(s12*s12)+3*(s13*s13)+5*(s14*s14)-2*(s23*s23)+s24*s24)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*(s12*(2*s13+s23+s24)+s13*(s13+s14+s23+s24)+s12*s12)*(3*s14*s23+5*s14*s24+s13*(11*s14+4*s23+2*s24)+s12*(4*s13+s14+3*(s23+s24))+6*(s12*s12)+3*(s13*s13)+10*(s14*s14)+s23*s23+s24*s24)*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1)))/512.;
}

// Coefficient order epsilon^1 of master 8
template<>
double qq2yyg4SC<8,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return -(pow(s13,-3)*pow(s14,-3)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-3)*pow(s24,-3)*pow(s23+s24,-1)*(s13*(s23+s24)*(s24*s24)*(2*s14*(2*s23-5*s24)+3*s23*s24-12*(s23*s23)+4*(s24*s24))*pow(s14,6)*pow(s23,4)-2*(s24*s24)*(4*s23*s24+3*(s23*s23)+s24*s24)*pow(s14,7)*pow(s23,5)+2*(s23+s24)*(s23*s23)*pow(s13,7)*pow(s24,3)*(s14*(s23-s24)*s24+(2*s23+5*s24)*(s14*s14)+2*pow(s24,3))+(s13+s14)*(s23+s24)*pow(s12,6)*(s13*(4*s23-s24)*(s14*s14)*(s23*s23)*(s24*s24)+2*(-3*s23+2*s24)*(s23*s23)*(s24*s24)*pow(s14,3)-s14*(s13*s13)*((4*s23+s24)*(s23*s23)*(s24*s24)+s14*s14*(-3*s24*(s23*s23)+5*s23*(s24*s24)+2*pow(s23,3)-4*pow(s24,3)))+4*(s23*s23)*pow(s13,3)*pow(s24,3))-s13*s13*pow(s14,5)*pow(s23,3)*(-2*s14*s24*(-8*(s23*s23)*(s24*s24)+6*s24*pow(s23,3)+pow(s23,4)-9*s23*pow(s24,3)+4*pow(s24,4))+s14*s14*(-8*(s23*s23)*(s24*s24)+s24*pow(s23,3)+2*pow(s23,4)-s23*pow(s24,3)+10*pow(s24,4))-s24*s24*(43*(s23*s23)*(s24*s24)+10*s24*pow(s23,3)-6*pow(s23,4)+39*s23*pow(s24,3)+12*pow(s24,4)))+s14*(s24*s24)*pow(s13,6)*(s23*s23*(s24*s24)*(-8*s24*(s23*s23)+7*s23*(s24*s24)-4*pow(s23,3)+11*pow(s24,3))+2*s14*s24*(s23*s23)*(13*s24*(s23*s23)+33*s23*(s24*s24)-4*pow(s23,3)+16*pow(s24,3))+s14*s14*(77*(s24*s24)*pow(s23,3)+40*s24*pow(s23,4)+8*pow(s23,5)+58*(s23*s23)*pow(s24,3)+13*s23*pow(s24,4)+4*pow(s24,5)))-s23*s23*pow(s13,3)*pow(s14,4)*(3*(s24*s24)*((s23+s24)*(s23+s24))*(-3*s24*(s23*s23)+3*s23*(s24*s24)-4*pow(s23,3)+6*pow(s24,3))+2*s14*(s24*s24)*(44*(s23*s23)*(s24*s24)+39*s24*pow(s23,3)+6*pow(s23,4)+15*s23*pow(s24,3)+4*pow(s24,4))+s14*s14*(9*(s24*s24)*pow(s23,3)+15*s24*pow(s23,4)+8*pow(s23,5)+49*(s23*s23)*pow(s24,3)+71*s23*pow(s24,4)+8*pow(s24,5)))+pow(s12,5)*(-3*s13*(3*s14+s23+s24)*(s23*s23)*(-(s23*s24)+2*(s23*s23)-3*(s24*s24))*(s24*s24)*pow(s14,3)-6*(s14+s23+s24)*(s23*s23)*(s23*s24+3*(s23*s23)-2*(s24*s24))*(s24*s24)*pow(s14,4)+12*(s23+s24)*(s23*s23)*pow(s13,5)*pow(s24,3)+(s23+s24)*pow(s13,4)*(s14*(-10*s23+19*s24)*(s23*s23)*(s24*s24)-3*pow(s14,3)*(-3*s24*(s23*s23)+5*s23*(s24*s24)+2*pow(s23,3)-4*pow(s24,3))+12*(s23+s24)*(s23*s23)*pow(s24,3))+s14*pow(s13,3)*(s14*(s23*s23)*(s24*s24)*(-5*s23*s24-14*(s23*s23)+9*(s24*s24))-3*(4*s23-3*s24)*(s23*s23)*(s24*s24)*((s23+s24)*(s23+s24))-6*pow(s14,3)*(2*(s23*s23)*(s24*s24)-s24*pow(s23,3)+2*pow(s23,4)+s23*pow(s24,3)-4*pow(s24,4))+s14*s14*(3*(s24*s24)*pow(s23,3)+s24*pow(s23,4)-6*pow(s23,5)+3*(s23*s23)*pow(s24,3)+17*s23*pow(s24,4)+12*pow(s24,5)))+s13*s13*(s14*s14)*(s14*(s23*s23)*(s24*s24)*(11*s23*s24-6*(s23*s23)+17*(s24*s24))-6*(s23*s23)*((s23+s24)*(s23+s24))*pow(s24,3)-3*pow(s14,3)*(2*(s23*s23)*(s24*s24)-s24*pow(s23,3)+2*pow(s23,4)+s23*pow(s24,3)-4*pow(s24,4))+s14*s14*(3*(s24*s24)*pow(s23,3)+s24*pow(s23,4)-6*pow(s23,5)+3*(s23*s23)*pow(s24,3)+17*s23*pow(s24,4)+12*pow(s24,5))))-s23*pow(s13,4)*pow(s14,3)*(-(s23*(s24*s24)*((s23+s24)*(s23+s24))*(-10*s24*(s23*s23)-11*s23*(s24*s24)+12*pow(s23,3)+3*pow(s24,3)))+s14*s14*(27*(s24*s24)*pow(s23,4)+16*s24*pow(s23,5)+6*pow(s23,6)+69*pow(s23,3)*pow(s24,3)+63*(s23*s23)*pow(s24,4)-15*s23*pow(s24,5)-2*pow(s24,6))+2*s14*s24*(25*(s24*s24)*pow(s23,4)+6*s24*pow(s23,5)+pow(s23,6)+14*pow(s23,3)*pow(s24,3)-19*(s23*s23)*pow(s24,4)-10*s23*pow(s24,5)+3*pow(s24,6)))+s24*(s14*s14)*pow(s13,5)*(s23*s23*(s24*s24)*(s23*s23*(s24*s24)-26*s24*pow(s23,3)-12*pow(s23,4)+39*s23*pow(s24,3)+24*pow(s24,4))+2*s14*s23*s24*(38*(s24*s24)*pow(s23,3)+5*s24*pow(s23,4)+4*pow(s23,5)+71*(s23*s23)*pow(s24,3)+31*s23*pow(s24,4)-3*pow(s24,5))+s14*s14*(17*(s24*s24)*pow(s23,4)-2*s24*pow(s23,5)-2*pow(s23,6)+61*pow(s23,3)*pow(s24,3)+71*(s23*s23)*pow(s24,4)+15*s23*pow(s24,5)+4*pow(s24,6)))+s12*(-18*(s23+s24)*(s14+s23+s24)*(s24*s24)*pow(s14,6)*pow(s23,5)+2*(s23+s24)*(s23*s23)*(s24*s24)*pow(s13,7)*(2*s14*(s23-s24)*s24+(2*s23+5*s24)*(s14*s14)+6*pow(s24,3))+s13*(s23+s24)*(s24*s24)*pow(s14,5)*pow(s23,3)*((8*s23-4*s24)*(s14*s14)-17*s24*(s23*s23)+23*s23*(s24*s24)+5*s14*(s23*s24-6*(s23*s23)+2*(s24*s24))-26*pow(s23,3)+14*pow(s24,3))+s24*pow(s13,6)*(s14*(s23*s23)*(s24*s24)*(-8*s24*(s23*s23)+27*s23*(s24*s24)-4*pow(s23,3)+31*pow(s24,3))+2*s24*(s14*s14)*(s23*s23)*(28*s24*(s23*s23)+65*s23*(s24*s24)-2*pow(s23,3)+35*pow(s24,3))+12*(s23*s23)*((s23+s24)*(s23+s24))*pow(s24,4)+pow(s14,3)*(83*(s24*s24)*pow(s23,3)+20*s24*pow(s23,4)-6*pow(s23,5)+76*(s23*s23)*pow(s24,3)+25*s23*pow(s24,4)+12*pow(s24,5)))+s13*s13*(s23*s23)*pow(s14,4)*(2*(s24*s24)*((s23+s24)*(s23+s24))*(11*s24*(s23*s23)+39*s23*(s24*s24)-9*pow(s23,3)+22*pow(s24,3))+pow(s14,3)*(4*(s23*s23)*(s24*s24)-s24*pow(s23,3)-6*pow(s23,4)+33*s23*pow(s24,3)+28*pow(s24,4))+s14*s14*(47*(s24*s24)*pow(s23,3)+s24*pow(s23,4)-6*pow(s23,5)+99*(s23*s23)*pow(s24,3)+147*s23*pow(s24,4)+96*pow(s24,5))+s14*s24*(71*(s24*s24)*pow(s23,3)-8*s24*pow(s23,4)+4*pow(s23,5)+295*(s23*s23)*pow(s24,3)+324*s23*pow(s24,4)+112*pow(s24,5)))+s14*pow(s13,5)*(-(s23*s23*(6*s23*s24+8*(s23*s23)-25*(s24*s24))*((s23+s24)*(s23+s24))*pow(s24,3))+s14*(s23*s23)*(s24*s24)*(104*(s23*s23)*(s24*s24)-34*s24*pow(s23,3)-20*pow(s23,4)+243*s23*pow(s24,3)+125*pow(s24,4))+2*pow(s14,3)*(9*(s24*s24)*pow(s23,4)-17*s24*pow(s23,5)-6*pow(s23,6)+77*pow(s23,3)*pow(s24,3)+82*(s23*s23)*pow(s24,4)+31*s23*pow(s24,5)+12*pow(s24,6))+s24*(s14*s14)*(251*(s24*s24)*pow(s23,4)+8*s24*pow(s23,5)-8*pow(s23,6)+501*pow(s23,3)*pow(s24,3)+295*(s23*s23)*pow(s24,4)+33*s23*pow(s24,5)+12*pow(s24,6)))+s23*pow(s13,3)*pow(s14,3)*(-(s23*(s24*s24)*((s23+s24)*(s23+s24))*(7*s24*(s23*s23)-92*s23*(s24*s24)+20*pow(s23,3)-67*pow(s24,3)))-2*pow(s14,3)*(s24*s24*pow(s23,3)+12*s24*pow(s23,4)+12*pow(s23,5)-48*(s23*s23)*pow(s24,3)-49*s23*pow(s24,4)-6*pow(s24,5))+s14*s24*(151*(s24*s24)*pow(s23,4)+2*s24*pow(s23,5)+2*pow(s23,6)+527*pow(s23,3)*pow(s24,3)+599*(s23*s23)*pow(s24,4)+225*s23*pow(s24,5)+2*pow(s24,6))+s14*s14*(19*(s24*s24)*pow(s23,4)-31*s24*pow(s23,5)-18*pow(s23,6)+187*pow(s23,3)*pow(s24,3)+399*(s23*s23)*pow(s24,4)+282*s23*pow(s24,5)+14*pow(s24,6)))+s14*s14*pow(s13,4)*(-4*(s23*s23)*(s24*s24)*((s23+s24)*(s23+s24))*(6*s24*(s23*s23)-6*s23*(s24*s24)+3*pow(s23,3)-8*pow(s24,3))-s14*s23*s24*((s23+s24)*(s23+s24))*(-89*(s23*s23)*(s24*s24)+18*s24*pow(s23,3)+2*pow(s23,4)-223*s23*pow(s24,3)-2*pow(s24,4))+pow(s14,3)*(-4*(s24*s24)*pow(s23,4)-51*s24*pow(s23,5)-30*pow(s23,6)+148*pow(s23,3)*pow(s24,3)+168*(s23*s23)*pow(s24,4)+49*s23*pow(s24,5)+12*pow(s24,6))+s14*s14*(-8*(s24*s24)*pow(s23,5)-40*s24*pow(s23,6)-12*pow(s23,7)+291*pow(s23,4)*pow(s24,3)+619*pow(s23,3)*pow(s24,4)+407*(s23*s23)*pow(s24,5)+47*s23*pow(s24,6)+12*pow(s24,7))))+pow(s12,4)*(-(s13*(s23+s24)*(s23*s23)*(s24*s24)*((26*s23-51*s24)*(s14*s14)+s14*(-27*s23*s24+52*(s23*s23)-68*(s24*s24))+3*(2*s23-3*s24)*((s23+s24)*(s23+s24)))*pow(s14,3))-6*(s23+s24)*(s23*s23)*(s24*s24)*((3*s23-2*s24)*(s14*s14)+s14*(s23*s24+9*(s23*s23)-4*(s24*s24))+(3*s23-2*s24)*((s23+s24)*(s23+s24)))*pow(s14,4)+12*(s23+s24)*(s23*s23)*pow(s13,6)*pow(s24,3)+3*(s23+s24)*pow(s13,5)*(s14*(-2*s23+9*s24)*(s23*s23)*(s24*s24)+4*(2*s23+3*s24)*(s23*s23)*pow(s24,3)+pow(s14,3)*(3*s24*(s23*s23)-5*s23*(s24*s24)-2*pow(s23,3)+4*pow(s24,3)))+s14*pow(s13,3)*(s14*(s23*s23)*(s24*s24)*(-57*s24*(s23*s23)+11*s23*(s24*s24)-44*pow(s23,3)+24*pow(s24,3))-9*pow(s14,4)*(2*(s23*s23)*(s24*s24)-s24*pow(s23,3)+2*pow(s23,4)+s23*pow(s24,3)-4*pow(s24,4))+pow(s14,3)*(5*(s24*s24)*pow(s23,3)-3*s24*pow(s23,4)-36*pow(s23,5)+17*(s23*s23)*pow(s24,3)+89*s23*pow(s24,4)+60*pow(s24,5))+s14*s14*(4*(s24*s24)*pow(s23,4)+s24*pow(s23,5)-6*pow(s23,6)+136*pow(s23,3)*pow(s24,3)+168*(s23*s23)*pow(s24,4)+45*s23*pow(s24,5)+12*pow(s24,6))-3*(4*s23-3*s24)*(s23*s23)*(s24*s24)*pow(s23+s24,3))+s13*s13*(s14*s14)*(s14*(s23*s23)*(s24*s24)*(6*s24*(s23*s23)+79*s23*(s24*s24)-24*pow(s23,3)+49*pow(s24,3))-3*pow(s14,4)*(2*(s23*s23)*(s24*s24)-s24*pow(s23,3)+2*pow(s23,4)+s23*pow(s24,3)-4*pow(s24,4))+pow(s14,3)*(3*s24*pow(s23,4)-18*pow(s23,5)+5*(s23*s23)*pow(s24,3)+44*s23*pow(s24,4)+24*pow(s24,5))+s14*s14*(10*(s24*s24)*pow(s23,4)+s24*pow(s23,5)-6*pow(s23,6)+138*pow(s23,3)*pow(s24,3)+164*(s23*s23)*pow(s24,4)+45*s23*pow(s24,5)+12*pow(s24,6))-6*(s23*s23)*pow(s24,3)*pow(s23+s24,3))+pow(s13,4)*(2*(s14*s14)*(s23*s23)*(s24*s24)*(17*s23*s24-10*(s23*s23)+27*(s24*s24))+s14*(s23*s23)*(s24*s24)*(-12*s24*(s23*s23)+67*s23*(s24*s24)-24*pow(s23,3)+55*pow(s24,3))-9*pow(s14,4)*(2*(s23*s23)*(s24*s24)-s24*pow(s23,3)+2*pow(s23,4)+s23*pow(s24,3)-4*pow(s24,4))+pow(s14,3)*(5*(s24*s24)*pow(s23,3)-6*s24*pow(s23,4)-18*pow(s23,5)+12*(s23*s23)*pow(s24,3)+45*s23*pow(s24,4)+36*pow(s24,5))+12*(s23*s23)*pow(s24,3)*pow(s23+s24,3)))+s12*s12*(2*(s23+s24)*(s23*s23)*(s24*s24)*(s14*(s23-s24)+6*(s24*s24))*pow(s13,7)-6*(s23+s24)*(s24*s24)*((3*s23-s24)*(s14*s14)+s14*(4*s23*s24+9*(s23*s23)-2*(s24*s24))+(3*s23-s24)*((s23+s24)*(s23+s24)))*pow(s14,5)*pow(s23,3)+s13*(s23+s24)*(s23*s23)*(s24*s24)*pow(s14,4)*(s14*s14*(35*s23*s24-24*(s23*s23)+26*(s24*s24))-(-9*s23*s24+16*(s23*s23)-14*(s24*s24))*((s23+s24)*(s23+s24))+(4*s23+6*s24)*pow(s14,3)+s14*(-5*s24*(s23*s23)+86*s23*(s24*s24)-78*pow(s23,3)+34*pow(s24,3)))+pow(s13,6)*(2*(s14*s14)*(s23*s23)*(s24*s24)*(27*s23*s24+8*(s23*s23)+19*(s24*s24))+s14*(s23*s23)*(31*s23*s24+2*(s23*s23)+29*(s24*s24))*pow(s24,3)+12*(s23*s23)*(5*s23*s24+2*(s23*s23)+3*(s24*s24))*pow(s24,4)+pow(s14,3)*(-(s24*s24*pow(s23,3))-8*s24*pow(s23,4)-6*pow(s23,5)+6*(s23*s23)*pow(s24,3)+11*s23*pow(s24,4)+12*pow(s24,5)))+s14*pow(s13,4)*(2*s14*(s23*s23)*(s24*s24)*(38*(s23*s23)*(s24*s24)-57*s24*pow(s23,3)-30*pow(s23,4)+125*s23*pow(s24,3)+60*pow(s24,4))-3*pow(s14,4)*(7*(s24*s24)*pow(s23,3)+7*s24*pow(s23,4)+12*pow(s23,5)-5*(s23*s23)*pow(s24,3)-21*s23*pow(s24,4)-12*pow(s24,5))+pow(s14,3)*(50*(s24*s24)*pow(s23,4)-80*s24*pow(s23,5)-48*pow(s23,6)+441*pow(s23,3)*pow(s24,3)+484*(s23*s23)*pow(s24,4)+177*s23*pow(s24,5)+60*pow(s24,6))+s14*s14*(-37*(s24*s24)*pow(s23,5)-18*s24*pow(s23,6)-6*pow(s23,7)+346*pow(s23,4)*pow(s24,3)+864*pow(s23,3)*pow(s24,4)+540*(s23*s23)*pow(s24,5)+55*s23*pow(s24,6)+12*pow(s24,7))-s23*s23*(6*s23*s24+4*(s23*s23)-17*(s24*s24))*(s24*s24)*pow(s23+s24,3))+s23*(s13*s13)*pow(s14,3)*(pow(s14,4)*(-6*(s23*s23)*(s24*s24)+s24*pow(s23,3)-6*pow(s23,4)-s23*pow(s24,3)+10*pow(s24,4))+pow(s14,3)*(32*(s24*s24)*pow(s23,3)-s24*pow(s23,4)-18*pow(s23,5)+149*(s23*s23)*pow(s24,3)+146*s23*pow(s24,4)+28*pow(s24,5))+2*s14*s24*(25*(s24*s24)*pow(s23,4)-25*s24*pow(s23,5)+pow(s23,6)+229*pow(s23,3)*pow(s24,3)+285*(s23*s23)*pow(s24,4)+111*s23*pow(s24,5)+4*pow(s24,6))+s14*s14*(36*(s24*s24)*pow(s23,4)+5*s24*pow(s23,5)-6*pow(s23,6)+298*pow(s23,3)*pow(s24,3)+593*(s23*s23)*pow(s24,4)+350*s23*pow(s24,5)+26*pow(s24,6))-s23*(-8*s23*s24+12*(s23*s23)-15*(s24*s24))*(s24*s24)*pow(s23+s24,3))+s14*s14*pow(s13,3)*(pow(s14,4)*(-19*(s24*s24)*pow(s23,3)-5*s24*pow(s23,4)-24*pow(s23,5)+3*(s23*s23)*pow(s24,3)+41*s23*pow(s24,4)+12*pow(s24,5))+s14*s23*s24*(-35*(s24*s24)*pow(s23,4)-76*s24*pow(s23,5)+2*pow(s23,6)+441*pow(s23,3)*pow(s24,3)+669*(s23*s23)*pow(s24,4)+279*s23*pow(s24,5)+8*pow(s24,6))+pow(s14,3)*(48*(s24*s24)*pow(s23,4)-49*s24*pow(s23,5)-54*pow(s23,6)+375*pow(s23,3)*pow(s24,3)+412*(s23*s23)*pow(s24,4)+124*s23*pow(s24,5)+24*pow(s24,6))+s14*s14*(33*(s24*s24)*pow(s23,5)-13*s24*pow(s23,6)-12*pow(s23,7)+544*pow(s23,4)*pow(s24,3)+1138*pow(s23,3)*pow(s24,4)+705*(s23*s23)*pow(s24,5)+81*s23*pow(s24,6)+12*pow(s24,7))-s23*s23*(3*s23*s24+16*(s23*s23)-6*(s24*s24))*(s24*s24)*pow(s23+s24,3))+pow(s13,5)*(s14*s14*(s23*s23)*(s24*s24)*(75*s24*(s23*s23)+275*s23*(s24*s24)-28*pow(s23,3)+172*pow(s24,3))+s14*(s23*s23)*(s24*s24)*(16*(s23*s23)*(s24*s24)-28*s24*pow(s23,3)-6*pow(s23,4)+115*s23*pow(s24,3)+77*pow(s24,4))+pow(s14,4)*(-9*(s24*s24)*pow(s23,3)-23*s24*pow(s23,4)-24*pow(s23,5)+17*(s23*s23)*pow(s24,3)+43*s23*pow(s24,4)+36*pow(s24,5))+pow(s14,3)*(44*(s24*s24)*pow(s23,4)-32*s24*pow(s23,5)-12*pow(s23,6)+259*pow(s23,3)*pow(s24,3)+252*(s23*s23)*pow(s24,4)+81*s23*pow(s24,5)+36*pow(s24,6))+12*(s23*s23)*pow(s24,4)*pow(s23+s24,3)))+pow(s12,3)*(4*(s23+s24)*(s23*s23)*pow(s13,7)*pow(s24,3)+(s23+s24)*pow(s13,6)*(s14*(2*s23+9*s24)*(s23*s23)*(s24*s24)+12*(s23+3*s24)*(s23*s23)*pow(s24,3)+pow(s14,3)*(3*s24*(s23*s23)-5*s23*(s24*s24)-2*pow(s23,3)+4*pow(s24,3)))+pow(s13,5)*(s14*s14*(s23*s23)*(s24*s24)*(77*s23*s24+6*(s23*s23)+71*(s24*s24))+12*(s23+3*s24)*(s23*s23)*((s23+s24)*(s23+s24))*pow(s24,3)+s14*(s23*s23)*(s24*s24)*(s24*(s23*s23)+92*s23*(s24*s24)-12*pow(s23,3)+79*pow(s24,3))-4*pow(s14,4)*(2*(s23*s23)*(s24*s24)-s24*pow(s23,3)+2*pow(s23,4)+s23*pow(s24,3)-4*pow(s24,4))+pow(s14,3)*(s24*s24*pow(s23,3)-15*s24*pow(s23,4)-18*pow(s23,5)+15*(s23*s23)*pow(s24,3)+39*s23*pow(s24,4)+36*pow(s24,5)))-s13*(s23+s24)*(s23*s23)*(s24*s24)*pow(s14,3)*(s14*s14*(-63*s23*s24+78*(s23*s23)-85*(s24*s24))+(6*s23-33*s24)*pow(s14,3)+s14*(23*s24*(s23*s23)-82*s23*(s24*s24)+50*pow(s23,3)-55*pow(s24,3))+(2*s23-3*s24)*pow(s23+s24,3))-2*(s23+s24)*(s23*s23)*(s24*s24)*pow(s14,4)*(3*(s14*s14)*(-(s23*s24)+9*(s23*s23)-2*(s24*s24))+(3*s23-2*s24)*pow(s14,3)+3*s14*(8*s24*(s23*s23)-3*s23*(s24*s24)+9*pow(s23,3)-2*pow(s24,3))+(3*s23-2*s24)*pow(s23+s24,3))+s14*pow(s13,3)*(-(s14*(s23*s23)*(11*s23*s24+46*(s23*s23)-21*(s24*s24))*(s24*s24)*((s23+s24)*(s23+s24)))-4*pow(s14,5)*(2*(s23*s23)*(s24*s24)-s24*pow(s23,3)+2*pow(s23,4)+s23*pow(s24,3)-4*pow(s24,4))+pow(s14,4)*(-17*(s24*s24)*pow(s23,3)-9*s24*pow(s23,4)-54*pow(s23,5)+17*(s23*s23)*pow(s24,3)+113*s23*pow(s24,4)+60*pow(s24,5))+pow(s14,3)*(72*(s24*s24)*pow(s23,4)-24*s24*pow(s23,5)-36*pow(s23,6)+448*pow(s23,3)*pow(s24,3)+502*(s23*s23)*pow(s24,4)+174*s23*pow(s24,5)+48*pow(s24,6))+s14*s14*(-57*(s24*s24)*pow(s23,5)+3*s24*pow(s23,6)-2*pow(s23,7)+174*pow(s23,4)*pow(s24,3)+580*pow(s23,3)*pow(s24,4)+375*(s23*s23)*pow(s24,5)+35*s23*pow(s24,6)+4*pow(s24,7))-(4*s23-3*s24)*(s23*s23)*(s24*s24)*pow(s23+s24,4))+s13*s13*(s14*s14)*(-(s14*(s23*s23)*(-27*s23*s24+30*(s23*s23)-47*(s24*s24))*(s24*s24)*((s23+s24)*(s23+s24)))+pow(s14,5)*(-2*(s23*s23)*(s24*s24)+s24*pow(s23,3)-2*pow(s23,4)-s23*pow(s24,3)+4*pow(s24,4))+pow(s14,4)*(-9*(s24*s24)*pow(s23,3)+3*s24*pow(s23,4)-18*pow(s23,5)+s23*s23*pow(s24,3)+37*s23*pow(s24,4)+12*pow(s24,5))+pow(s14,3)*(44*(s24*s24)*pow(s23,4)+s24*pow(s23,5)-18*pow(s23,6)+241*pow(s23,3)*pow(s24,3)+263*(s23*s23)*pow(s24,4)+73*s23*pow(s24,5)+12*pow(s24,6))+s14*s14*(-27*(s24*s24)*pow(s23,5)+3*s24*pow(s23,6)-2*pow(s23,7)+212*pow(s23,4)*pow(s24,3)+550*pow(s23,3)*pow(s24,4)+337*(s23*s23)*pow(s24,5)+35*s23*pow(s24,6)+4*pow(s24,7))-2*(s23*s23)*pow(s24,3)*pow(s23+s24,4))+pow(s13,4)*(-(s14*(s23*s23)*(3*s23*s24+18*(s23*s23)-53*(s24*s24))*(s24*s24)*((s23+s24)*(s23+s24)))-2*(s14*s14)*(s23*s23)*(s24*s24)*(8*s24*(s23*s23)-97*s23*(s24*s24)+34*pow(s23,3)-71*pow(s24,3))-6*pow(s14,5)*(2*(s23*s23)*(s24*s24)-s24*pow(s23,3)+2*pow(s23,4)+s23*pow(s24,3)-4*pow(s24,4))+pow(s14,4)*(-7*(s24*s24)*pow(s23,3)-27*s24*pow(s23,4)-54*pow(s23,5)+31*(s23*s23)*pow(s24,3)+115*s23*pow(s24,4)+84*pow(s24,5))+pow(s14,3)*(32*(s24*s24)*pow(s23,4)-25*s24*pow(s23,5)-18*pow(s23,6)+306*pow(s23,3)*pow(s24,3)+334*(s23*s23)*pow(s24,4)+101*s23*pow(s24,5)+36*pow(s24,6))+4*(s23*s23)*pow(s24,3)*pow(s23+s24,4))))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1))/4.+(32*pow(s13,-1)*pow(s12+s23+s24,-1)*(40*s12+16*s13+32*s14+16*(s23+s24)-8*(2*s12+s13+s14+s23+s24)-8*((s23+s24)*(s13+s14+s23+s24)+s12*(3*s13+3*s14+4*(s23+s24))+5*(s12*s12))*pow(s23+s24,-1)+8*(3*s14*s23+2*s14*s24+s23*s24+s13*(2*s23+s24)+s12*(8*s13+10*s14+9*s24)+11*(s12*s12)-s23*s23+2*(s24*s24))*pow(s23+s24,-1)+24*(s23+s24)*(2*s12+s13+s14+s23+s24)*pow(s12+s13+s14+s23+s24,-1)+(-8*(s13+s14-s23-s24)*s24-8*(s23+s24)*(14*s12+5*s13+9*s14+s23+s24))*pow(s12+s13+s14+s23+s24,-1)+(8*(2*s12+s13+s14+s23+s24)*(10*s12+3*s13+5*s14+2*s23+2*s24)+8*(s12+s14+s24)*(s13+s14-2*(s23+s24)))*pow(s12+s13+s14+s23+s24,-1)-8*(10*s14*s23+18*s14*s24+10*s23*s24+s13*(20*s14+13*s23+9*s24)+s12*(34*s13+48*s14+17*s23+21*s24)+40*(s12*s12)+5*(s13*s13)+15*(s14*s14)+9*(s23*s23)+13*(s24*s24))*pow(s12+s13+s14+s23+s24,-1)-24*((s23+s24)*(s23+s24))*pow(s12+s13+s14+s23+s24,-1)-8*((2*s12+s13+s14+s23+s24)*(2*s12+s13+s14+s23+s24))*pow(s12+s13+s14+s23+s24,-1)-8*(2*s12*(s23+s24)*(s23*(s14+2*s23)*(s14+s23+s24)+2*s13*s23*(2*s14+2*s23+s24)+(2*s23-s24)*(s13*s13))+s12*s12*((s23-4*s24)*(s13*s13)+2*s13*(s14*(3*s23-2*s24)+5*s23*s24+7*(s23*s23)-2*(s24*s24))+s23*(14*s23*s24+10*s14*(s23+s24)+5*(s14*s14)+11*(s23*s23)+3*(s24*s24)))+s23*((s13+s23)*(s13+s23))*((s23+s24)*(s23+s24))-2*(-4*s23*s24+s14*(-5*s23+2*s24)+s13*(2*s14-3*s23+4*s24)+s13*s13+s14*s14-5*(s23*s23)+s24*s24)*pow(s12,3)-(4*s13+4*s14-5*s23+4*s24)*pow(s12,4)-2*pow(s12,5))*pow(s23,-2)*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*((s13+s23)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(2*s14*s23+4*s14*s24+7*s23*s24+s13*(s23+3*s24)+s12*(7*s13+11*s14+8*s23+9*s24)+15*(s12*s12)+6*(s23*s23)+7*(s24*s24))*pow(s23,-1)*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(s13+s14)*(s12+s13+s23)*(s12+s13+s14+s23+s24)*pow(2*s12+s13+s14+s23+s24,-2)+((16*s12*(s12+s13+s14)*(s12+s13-s14+s23+s24)-16*(3*s12+s13+3*s14-s23-s24)*(s23+s24)*(2*s12+s13+s14+s23+s24))*pow(2*s12+s13+s14+s23+s24,-2))/2.-8*(7*s14*s23+13*s14*s24+s23*s24+s13*(10*s14+3*s23+9*s24)+s12*(17*s13+23*s14+4*s23+13*s24)+16*(s12*s12)+s13*s13+9*(s14*s14)-s23*s23+2*(s24*s24))*pow(2*s12+s13+s14+s23+s24,-1)-8*((s23+s24)*(s23+s24))*pow(2*s12+s13+s14+s23+s24,-1)+8*(3*s12*(s23+s24)-(s13+s14)*(s23+s24)+3*(s12*s12))*(s13*s23+s12*(s23-s24)-s14*s24+s23*s23-s24*s24)*pow(s23+s24,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-16*(3*s12+s13+2*s14)*(s12*s12*(2*s13*(s14+s23-2*s24)+s14*(4*s23-2*s24)-4*s23*s24+s13*s13+s14*s14)-s23*((s23+2*s24)*(s13*s13)+2*s13*(2*s23*s24+s24*(s14+s24)+s23*s23)+s23*(-(s14*s14)+(s23+s24)*(s23+s24)))-2*s12*(s13*(s14*(-s23+s24)+s23*(s23+3*s24))+s24*(s13*s13)+s23*(s14*(-s23+s24)-s14*s14+(s23+s24)*(s23+s24)))+2*(s13+s14+s23-s24)*pow(s12,3)+pow(s12,4))*pow(s12+s13+s23,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*pow(s12+s13+s23,-3)*(3*(s13*(2*s14+2*s23-3*s24)+s14*(3*s23-2*s24)+s13*s13+s14*s14+(s23-s24)*(s23-s24))*pow(s12,4)+3*(s13+s14+s23-s24)*pow(s12,5)+pow(s12,6)+pow(s12,3)*(3*(s14+s23-3*s24)*(s13*s13)+(9*s23-3*s24)*(s14*s14)+3*s14*(-4*s23*s24+3*(s23*s23)+s24*s24)+2*s23*(s23*s23+3*(s24*s24))+3*s13*(4*s14*(s23-s24)-4*s23*s24+s14*s14+s23*s23+3*(s24*s24))+pow(s13,3)+pow(s14,3))+s23*((3*s23*s24+s23*s23+3*(s24*s24))*pow(s13,3)+3*(s13*s13)*(3*s24*(s23*s23)+3*s23*(s24*s24)+(s14+s24)*(s24*s24)+pow(s23,3))+3*s13*s23*(-(s24*(s14*s14))+3*s24*(s23*s23)+3*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+s23*s23*(pow(s14,3)+pow(s23+s24,3)))+3*(s12*s12)*((s14*(s23-2*s24)+s24*(-2*s23+3*s24))*(s13*s13)+s13*((2*s23-s24)*(s14*s14)+2*s14*(-3*s23*s24+s23*s23+s24*s24)+s23*(2*s23*s24+s23*s23+5*(s24*s24)))-s24*pow(s13,3)+s23*((3*s23-2*s24)*(s14*s14)+s14*((s23-s24)*(s23-s24))+pow(s14,3)+pow(s23+s24,3)))+3*s12*(s24*s24*pow(s13,3)+s13*s13*(-2*s23*(s14-2*s24)*s24+3*s24*(s23*s23)+s14*(s24*s24)+pow(s23,3))+s23*s23*((s23-s24)*(s14*s14)+pow(s14,3)+pow(s23+s24,3))+s13*s23*(2*s14*s24*(-s23+s24)+(s23-2*s24)*(s14*s14)+2*pow(s23+s24,3))))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*(s12*(s13+s14+2*s23)+s23*(s13+s14+s23+s24)+s12*s12)*(8*s14*s23+14*s14*s24+3*s23*s24+s13*(13*s14+10*s23+4*s24)+s12*(22*s13+34*s14+9*s23+12*s24)+25*(s12*s12)+7*(s13*s13)+12*(s14*s14)+3*(s23*s23)+6*(s24*s24))*pow(s12+s13+s23,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s13,-2)*pow(s24,-1)*(16*s12*s13-48*s13*s14+24*s13*(s13+s14)-8*s13*s23-8*s13*s24+8*s13*(s12+s13+s14+s23+s24)-8*s13*(2*s12+s13+s14+s23+s24)-40*(s13*s13)-8*s13*(s12+s13+s14+s23+s24)*(2*s13*s14+s14*(-s12+3*s14)+s13*s13)*pow(s13+s14,-2)-8*s12*s13*(2*s13*s14+s12*(s13+2*s14)+s14*(s14+s23+s24)+s13*s13)*pow(s13+s14,-2)+8*s13*(s13*(10*s14+3*s23+s24)+s12*(6*s13+10*s14+s23+4*s24)+s14*(13*s14+5*s23+6*s24)+8*(s12*s12)+4*(s13*s13))*pow(s13+s14,-1)-8*s13*(s13+s14)*(2*s12+s13+s14+s23+s24)*pow(s12+s13+s14+s23+s24,-1)+s13*(-8*(s12+s14+s24)*(s12-s13+s23+s24)-8*(s12+s13-2*s14-s24)*(2*s12+s13+s14+s23+s24))*pow(s12+s13+s14+s23+s24,-1)+s13*(-8*(s13+s14)*(-3*s12+2*s13+6*s14)+8*s14*(s12-s13+s23+2*s24))*pow(s12+s13+s14+s23+s24,-1)+16*s13*((s13+s14)*(s13+s14))*pow(s12+s13+s14+s23+s24,-1)+8*s13*(5*s14*s23+4*s14*s24+5*s23*s24+s13*(14*s14+16*s23+9*s24)+s12*(13*s13+5*s14+13*s23+12*s24)+14*(s12*s12)+9*(s13*s13)+12*(s14*s14)+6*(s23*s23)+2*(s24*s24))*pow(s12+s13+s14+s23+s24,-1)-8*((s13+s14)*(s13+s23)+s12*(s13+s14+s23+s24)+s12*s12)*(3*s12*(s13-s14)+s14*(-s23+s24)+s13*(3*s14+4*s23+3*s24)+3*(s13*s13))*pow(s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)+8*((s13+s14)*(s13+s23)*(-(s14*s23)+s13*(s14+s23+2*s24)+s13*s13)+s12*s12*(-2*s14*(2*s23+s24)+2*s13*(s14+s23+2*s24)+3*(s13*s13)-s14*s14-(s23+s24)*(s23+s24))+2*(s13-s14-s23-s24)*pow(s12,3)-pow(s12,4)+2*s12*(s13*(s14+s24)*(s23+s24)-s14*s23*(s14+s23+s24)+(2*s14+2*s23+s24)*(s13*s13)+2*pow(s13,3)))*pow(s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)+(s13*(s12+s13+s14+s23+s24)*(-16*(s12+s14+s24)*(2*s12+s13-s14-s23+s24)+16*(-s12+s13+2*s14+s23)*(2*s12+s13+s14+s23+s24))*pow(2*s12+s13+s14+s23+s24,-2))/2.+8*s13*(s12*(s13-s14-s23+s24)*(s12+s23+s24)+(s13+s14)*(2*s12+s13+s14+s23+s24)*(-2*s12+5*s13+6*s14+s23+2*s24))*pow(2*s12+s13+s14+s23+s24,-2)-8*s12*s13*pow(s13+s14,-2)*pow(s12+s13+s14,-2)*(2*(6*s13*s14+5*(s13*s13)-3*(s14*s14))*pow(s12,4)+4*pow(s12,3)*(s13*s14*(5*s14+8*s23+4*s24)+(19*s14+6*s23+4*s24)*(s13*s13)-(7*s14+2*s23+4*s24)*(s14*s14)+7*pow(s13,3))+s12*s12*(s13*s13*(26*s23*s24+s14*(137*s23+91*s24)+122*(s14*s14)+18*(s23*s23)+6*(s24*s24))+s13*s14*(s14*(67*s23-7*s24)-20*(s14*s14)+2*(16*s23*s24+13*(s23*s23)+s24*s24))-s14*s14*(s14*(25*s23+59*s24)+45*(s14*s14)+2*(7*s23*s24+s23*s23+7*(s24*s24)))+(124*s14+45*s23+39*s24)*pow(s13,3)+27*pow(s13,4))+(s13+s14)*(-((s14+s24)*(s14*s14)*(9*s23*s24+s14*(9*s23+14*s24)+7*(s14*s14)+2*(s23*s23)+7*(s24*s24)))+(14*s23*s24+32*s14*(s23+s24)+26*(s14*s14)+3*(s23*s23)+6*(s24*s24))*pow(s13,3)+(13*s14+3*s23+7*s24)*pow(s13,4)+pow(s13,5)+s13*s13*((46*s23+22*s24)*(s14*s14)+s23*(7*s23*s24+s23*s23+6*(s24*s24))+s14*(52*s23*s24+25*(s23*s23)+12*(s24*s24))+10*pow(s14,3))+s13*s14*(8*(s23-3*s24)*(s14*s14)+20*s24*(s23*s23)+5*s14*(4*s23*s24+4*(s23*s23)-3*(s24*s24))+12*s23*(s24*s24)-11*pow(s14,3)+6*pow(s23,3)-2*pow(s24,3)))+2*s12*((20*s23*s24+s14*(67*s23+57*s24)+66*(s14*s14)+9*(s23*s23)+6*(s24*s24))*pow(s13,3)+(37*s14+12*s23+15*s24)*pow(s13,4)+5*pow(s13,5)-s14*s14*((13*s23+32*s24)*(s14*s14)+s24*(3*s23*s24+s23*s23+2*(s24*s24))+s14*(16*s23*s24+2*(s23*s23)+19*(s24*s24))+15*pow(s14,3))+s13*s13*((85*s23+37*s24)*(s14*s14)+s23*(5*s23*s24+2*(s23*s23)+3*(s24*s24))+s14*(58*s23*s24+33*(s23*s23)+10*(s24*s24))+26*pow(s14,3))+s13*s14*((17*s23-37*s24)*(s14*s14)+7*s24*(s23*s23)+s14*(22*s23*s24+22*(s23*s23)-15*(s24*s24))+3*s23*(s24*s24)-23*pow(s14,3)+3*pow(s23,3)-pow(s24,3))))*pow(2*s12+s13+s14+s23+s24,-2)-8*s13*(s13+s14)*(s12+s13+s14+s23+s24)*pow(2*s12+s13+s14+s23+s24,-1)-16*s13*((s13+s14)*(s13+s14))*pow(2*s12+s13+s14+s23+s24,-1)-8*s13*(8*s14*s23+12*s14*s24+8*s23*s24+s13*(10*s14+9*s23+3*s24)+s12*(4*s13-2*s14+6*s23+8*s24)+7*(s12*s12)+4*(s13*s13)+13*(s14*s14)+6*(s23*s23)+5*(s24*s24))*pow(2*s12+s13+s14+s23+s24,-1)+8*s13*((s13+s14)*(s23+s24)+s12*(3*s13+14*s14+6*s23+3*s24)+4*(s12*s12))*(s12*(s13-s14)+s13*s23-s14*(s14+s24)+s13*s13)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)+16*s13*(-s12+s13+2*s14)*(s12*s12*(2*s14*(2*s23+s24)+s13*(4*s14-2*(s23+2*s24))-(s23+s24)*(s23+s24))-2*(s13-s14+s23+s24)*pow(s12,3)-pow(s12,4)+2*s12*(s14*s23*(s23+s24)+(2*s14+s23-s24)*(s13*s13)+s13*(-(s24*(s23+s24))+s14*(3*s23+s24)+s14*s14)+pow(s13,3))+s13*(2*s14*s23*(s14+s23+s24)+2*(s14+s23)*(s13*s13)+s13*(4*s14*s23+s14*s14+s23*s23-s24*s24)+pow(s13,3)))*pow(s12+s13+s23,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*s13*pow(s12+s13+s23,-3)*(3*(-(s14*(3*s23+2*s24))+s13*(-2*s14+2*s23+3*s24)+s13*s13+s14*s14+(s23+s24)*(s23+s24))*pow(s12,4)+3*(s13-s14+s23+s24)*pow(s12,5)+pow(s12,6)+3*s12*(2*s13*s14*s23*(-(s24*(s23+s24))+s14*(2*s23+s24)+s14*s14)+(s23+s24)*(s14*s14)*(s23*s23)+(6*s14*s23+3*(s14*s14)+s23*s23+s24*s24)*pow(s13,3)+(3*s14+2*s23)*pow(s13,4)+pow(s13,5)+s13*s13*(6*s23*(s14*s14)+s14*(-2*s23*s24+3*(s23*s23)-s24*s24)+(s23+s24)*(s24*s24)+pow(s14,3)))+3*(s12*s12)*(s13*s13*(2*s14*(s23-s24)+s24*(2*s23+3*s24)+3*(s14*s14))+s14*s23*(s14*(3*s23+2*s24)-(s23+s24)*(s23+s24))+(3*s14+s23+s24)*pow(s13,3)+pow(s13,4)+s13*((5*s23+s24)*(s14*s14)-2*s14*(3*s23*s24+s23*s23+s24*s24)+s24*((s23+s24)*(s23+s24))+pow(s14,3)))+s13*(3*(s14+s23+s24)*(s14*s14)*(s23*s23)+3*s13*s14*s23*(3*s14*s23+s14*s14+s23*s23-s24*s24)+3*(3*s14*s23+s14*s14+s23*s23)*pow(s13,3)+3*(s14+s23)*pow(s13,4)+pow(s13,5)+s13*s13*(9*s23*(s14*s14)+9*s14*(s23*s23)+pow(s14,3)+pow(s23,3)+pow(s24,3)))+pow(s12,3)*(3*(s23+3*s24)*(s13*s13)+3*(3*s23+s24)*(s14*s14)-3*s14*(4*s23*s24+3*(s23*s23)+s24*s24)+3*s13*(4*s23*s24-4*s14*(s23+s24)+2*(s14*s14)+s23*s23+3*(s24*s24))+2*pow(s13,3)+pow(s23+s24,3)))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*s13*(s12*(2*s13+s23+s24)+s13*(s13+s14+s23+s24)+s12*s12)*(6*s14*s23+14*s14*s24+9*s23*s24+s13*(11*s14+12*s23+10*s24)+s12*(9*s13+4*s14+12*s23+14*s24)+11*(s12*s12)+6*(s13*s13)+12*(s14*s14)+6*(s23*s23)+6*(s24*s24))*pow(s12+s13+s23,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+256*pow(s12+s13+s14,-1)*pow(s23,-1)*(3*s12-s13-s14+2*(s13+s14)+s23+3*s24-((s13+s14)*(s13+s14+s23+s24)+s12*(4*s13+4*s14+3*(s23+s24))+5*(s12*s12))*pow(s13+s14,-1)+(s14*(2*s14+s23+2*s24)+s13*(s14+2*s23+3*s24)+s12*(9*s14+8*s23+10*s24)+11*(s12*s12)-s13*s13)*pow(s13+s14,-1)+3*(s13+s14)*(2*s12+s13+s14+s23+s24)*pow(s12+s13+s14+s23+s24,-1)-(14*s12*(s13+s14)+2*s14*(3*s23+5*s24)+s13*(s14+5*s23+9*s24)+s13*s13)*pow(s12+s13+s14+s23+s24,-1)+(3*(s23+s24)*(2*s14+s23+2*s24)+s12*(12*s13+12*s14+17*s23+21*s24)+s13*(2*s14+5*(s23+s24))+20*(s12*s12)+2*(s13*s13))*pow(s12+s13+s14+s23+s24,-1)-3*((s13+s14)*(s13+s14))*pow(s12+s13+s14+s23+s24,-1)-(9*s14*s23+18*s14*s24+20*s23*s24+s13*(10*s14+13*s23+10*s24)+s12*(17*s13+21*s14+34*s23+48*s24)+40*(s12*s12)+9*(s13*s13)+13*(s14*s14)+5*(s23*s23)+15*(s24*s24))*pow(s12+s13+s14+s23+s24,-1)-(2*s12+s13+s14+s23+s24)*(2*s12+s13+s14+s23+s24)*pow(s12+s13+s14+s23+s24,-1)+((s13+s14)*(s13+s23)+s12*(s13+s14+s23+s24)+s12*s12)*(s13*(7*s14+s23+2*s24)+s14*(7*s14+3*s23+4*s24)+s12*(8*s13+9*s14+7*s23+11*s24)+15*(s12*s12)+6*(s13*s13))*pow(s13,-1)*pow(s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)+pow(s13,-2)*(-(s13*((s13+s14)*(s13+s14))*((s13+s23)*(s13+s23)))+2*(2*s14*(2*s23+s24)-s13*(4*s14+3*s23+5*s24)-5*(s13*s13)+s14*s14+(s23+s24)*(s23+s24))*pow(s12,3)+(-5*s13+4*(s14+s23+s24))*pow(s12,4)+2*pow(s12,5)-s12*s12*(-4*s14*s23*(s14+s23+s24)+2*(7*s14+7*s23+5*s24)*(s13*s13)+s13*(6*s23*s24+10*s14*(s23+s24)+3*(s14*s14)+s23*s23+5*(s24*s24))+11*pow(s13,3))-2*s12*(-(s14*s14*(s23*s23))+s13*s14*(4*s23*s24+s14*(2*s23+s24)+s23*s23+s24*s24)+s13*s13*(4*s23*s24+s14*(6*s23+4*s24)+2*(s14*s14)+2*(s23*s23)+s24*s24)+(4*s14+4*s23+3*s24)*pow(s13,3)+2*pow(s13,4)))*pow(s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)+(s12+s13+s23)*(s23+s24)*(s12+s13+s14+s23+s24)*pow(2*s12+s13+s14+s23+s24,-2)+(s12*(s12+s13+s14+s23-s24)*(s12+s23+s24)+(s13+s14)*(-3*s12+s13+s14-s23-3*s24)*(2*s12+s13+s14+s23+s24))*pow(2*s12+s13+s14+s23+s24,-2)-(s13+s14)*(s13+s14)*pow(2*s12+s13+s14+s23+s24,-1)-(9*s14*s23+13*s14*s24+10*s23*s24+s13*(s14+3*s23+7*s24)+s12*(4*s13+13*s14+17*s23+23*s24)+16*(s12*s12)-s13*s13+2*(s14*s14)+s23*s23+9*(s24*s24))*pow(2*s12+s13+s14+s23+s24,-1)+(3*s12*(s13+s14)-(s13+s14)*(s23+s24)+3*(s12*s12))*(s12*(s13-s14)+s13*s23-s14*(s14+s24)+s13*s13)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)-2*(3*s12+s23+2*s24)*(s12*s12*(-2*s14*(2*s23+s24)+s13*(-4*s14+2*s23+4*s24)+(s23+s24)*(s23+s24))+2*(s13-s14+s23+s24)*pow(s12,3)+pow(s12,4)-2*s12*(s14*s23*(s23+s24)+(2*s14+s23-s24)*(s13*s13)+s13*(-(s24*(s23+s24))+s14*(3*s23+s24)+s14*s14)+pow(s13,3))-s13*(2*s14*s23*(s14+s23+s24)+2*(s14+s23)*(s13*s13)+s13*(4*s14*s23+s14*s14+s23*s23-s24*s24)+pow(s13,3)))*pow(s12+s13+s23,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+pow(s12+s13+s23,-3)*(3*(-(s14*(3*s23+2*s24))+s13*(-2*s14+2*s23+3*s24)+s13*s13+s14*s14+(s23+s24)*(s23+s24))*pow(s12,4)+3*(s13-s14+s23+s24)*pow(s12,5)+pow(s12,6)+3*s12*(2*s13*s14*s23*(-(s24*(s23+s24))+s14*(2*s23+s24)+s14*s14)+(s23+s24)*(s14*s14)*(s23*s23)+(6*s14*s23+3*(s14*s14)+s23*s23+s24*s24)*pow(s13,3)+(3*s14+2*s23)*pow(s13,4)+pow(s13,5)+s13*s13*(6*s23*(s14*s14)+s14*(-2*s23*s24+3*(s23*s23)-s24*s24)+(s23+s24)*(s24*s24)+pow(s14,3)))+3*(s12*s12)*(s13*s13*(2*s14*(s23-s24)+s24*(2*s23+3*s24)+3*(s14*s14))+s14*s23*(s14*(3*s23+2*s24)-(s23+s24)*(s23+s24))+(3*s14+s23+s24)*pow(s13,3)+pow(s13,4)+s13*((5*s23+s24)*(s14*s14)-2*s14*(3*s23*s24+s23*s23+s24*s24)+s24*((s23+s24)*(s23+s24))+pow(s14,3)))+s13*(3*(s14+s23+s24)*(s14*s14)*(s23*s23)+3*s13*s14*s23*(3*s14*s23+s14*s14+s23*s23-s24*s24)+3*(3*s14*s23+s14*s14+s23*s23)*pow(s13,3)+3*(s14+s23)*pow(s13,4)+pow(s13,5)+s13*s13*(9*s23*(s14*s14)+9*s14*(s23*s23)+pow(s14,3)+pow(s23,3)+pow(s24,3)))+pow(s12,3)*(3*(s23+3*s24)*(s13*s13)+3*(3*s23+s24)*(s14*s14)-3*s14*(4*s23*s24+3*(s23*s23)+s24*s24)+3*s13*(4*s23*s24-4*s14*(s23+s24)+2*(s14*s14)+s23*s23+3*(s24*s24))+2*pow(s13,3)+pow(s23+s24,3)))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+(s12*(2*s13+s23+s24)+s13*(s13+s14+s23+s24)+s12*s12)*(4*s14*s23+14*s14*s24+13*s23*s24+s13*(3*s14+10*s23+8*s24)+s12*(9*s13+12*s14+22*s23+34*s24)+25*(s12*s12)+3*(s13*s13)+6*(s14*s14)+7*(s23*s23)+12*(s24*s24))*pow(s12+s13+s23,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s23,-1)*(-8*(s23+s24)*pow(s12+s13+s14,-1)+8*(2*s12+s13+s14+s23+s24)*pow(s12+s13+s14,-1)+8*(s12+2*(s13+s14+s24))*pow(s12+s13+s14,-1)+8*(s12+s13+s14+s23+s24)*(s23+3*s24)*pow(s12+s13+s14,-1)*pow(s23+s24,-1)-8*(s12*(3*s13+3*s14+7*s23+11*s24)+2*(s14*(4*s23+7*s24)+3*s24*(s13+2*(s23+s24)))+3*(s12*s12))*pow(s12+s13+s14,-1)*pow(s23+s24,-1)+8*(s23+s24)*(2*s12+s13+s14+s23+s24)*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)-2*(8*(s12+s13+s14)*s24-4*(s23+s24)*(s13+s14+s23+3*s24))*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(13*s14*s24+2*s23*s24+s13*(5*s14+6*s23+7*s24)+s12*(7*s13+5*(2*s14+s23+2*s24))+6*(s12*s12)+s13*s13+4*(s14*s14)+4*(s23*s23)+10*(s24*s24))*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)-8*((s23+s24)*(s23+s24))*pow(s12+s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)-8*((s13+s23)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(3*s12*s23+3*s13*s23+3*s14*s23+8*s23*s24+2*(s24*s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(s23+s24)*(s12+s13+s14+s23+s24)*(4*s12+s13+3*s14+s23+3*s24)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-2)-((32*s12*(s12+s13+s14)*(s23-s24)+16*(s23+s24)*(2*s12+s13+s14+s23+s24)*(s12+s13+s14+s23+3*s24))*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-2))/2.+8*(10*s14*s23+12*s14*s24+12*s23*s24+2*s13*(s23+2*s24)+s12*(-3*s13+5*s14+12*s23+10*s24)+3*(s12*s12)-s13*s13+s14*s14+12*(s24*s24))*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*((s23+s24)*(s23+s24))*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*(2*s12-3*(s23+s24))*(s13*s23+s12*(s23-s24)-s14*s24+s23*s23-s24*s24)*pow(s23+s24,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-16*(s23+2*s24)*(-(s12*s12*(2*s13*(s14+s23-2*s24)+s14*(4*s23-2*s24)-4*s23*s24+s13*s13+s14*s14))+s23*((s23+2*s24)*(s13*s13)+2*s13*(2*s23*s24+s24*(s14+s24)+s23*s23)+s23*(-(s14*s14)+(s23+s24)*(s23+s24)))+2*s12*(s13*(s14*(-s23+s24)+s23*(s23+3*s24))+s24*(s13*s13)+s23*(s14*(-s23+s24)-s14*s14+(s23+s24)*(s23+s24)))-2*(s13+s14+s23-s24)*pow(s12,3)-pow(s12,4))*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-3)*(3*(s13*(2*s14+2*s23-3*s24)+s14*(3*s23-2*s24)+s13*s13+s14*s14+(s23-s24)*(s23-s24))*pow(s12,4)+3*(s13+s14+s23-s24)*pow(s12,5)+pow(s12,6)+pow(s12,3)*(3*(s14+s23-3*s24)*(s13*s13)+(9*s23-3*s24)*(s14*s14)+3*s14*(-4*s23*s24+3*(s23*s23)+s24*s24)+2*s23*(s23*s23+3*(s24*s24))+3*s13*(4*s14*(s23-s24)-4*s23*s24+s14*s14+s23*s23+3*(s24*s24))+pow(s13,3)+pow(s14,3))+s23*((3*s23*s24+s23*s23+3*(s24*s24))*pow(s13,3)+3*(s13*s13)*(3*s24*(s23*s23)+3*s23*(s24*s24)+(s14+s24)*(s24*s24)+pow(s23,3))+3*s13*s23*(-(s24*(s14*s14))+3*s24*(s23*s23)+3*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+s23*s23*(pow(s14,3)+pow(s23+s24,3)))+3*(s12*s12)*((s14*(s23-2*s24)+s24*(-2*s23+3*s24))*(s13*s13)+s13*((2*s23-s24)*(s14*s14)+2*s14*(-3*s23*s24+s23*s23+s24*s24)+s23*(2*s23*s24+s23*s23+5*(s24*s24)))-s24*pow(s13,3)+s23*((3*s23-2*s24)*(s14*s14)+s14*((s23-s24)*(s23-s24))+pow(s14,3)+pow(s23+s24,3)))+3*s12*(s24*s24*pow(s13,3)+s13*s13*(-2*s23*(s14-2*s24)*s24+3*s24*(s23*s23)+s14*(s24*s24)+pow(s23,3))+s23*s23*((s23-s24)*(s14*s14)+pow(s14,3)+pow(s23+s24,3))+s13*s23*(2*s14*s24*(-s23+s24)+(s23-2*s24)*(s14*s14)+2*pow(s23+s24,3))))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*(s12*(s13+s14+2*s23)+s23*(s13+s14+s23+s24)+s12*s12)*(s12*(11*s13+11*s14+10*s23+14*s24)+10*(s12*s12)+2*(5*s23*s24+s13*(3*s14+5*s23+4*s24)+s14*(2*s23+7*s24)+3*(s13*s13)+3*(s14*s14)+2*(s23*s23)+6*(s24*s24)))*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s13,-1)*(-24-24*s23*pow(s24,-1)-8*(4*s12+3*s13+4*s14+s23-s24)*pow(s24,-1)+8*(s12+s13+s14+s23+s24)*pow(s24,-1)+8*(2*s12+s13+s14+s23+s24)*pow(s24,-1)-8*s23*(s12+s24)*(s12+s13+s14+s23+s24)*pow(s24,-1)*pow(s23+s24,-2)+8*(s12+s23+s24)*(s23*(s13+s14+s23+s24)+s12*(2*s23+s24))*pow(s24,-1)*pow(s23+s24,-2)-8*(s13*(4*s23-2*s24)-s14*s24+3*s23*s24+s12*(2*s13-3*s14+6*s23+2*s24)+2*(s12*s12)+6*(s23*s23)+s24*s24)*pow(s24,-1)*pow(s23+s24,-1)-8*(s23+s24)*(2*s12+s13+s14+s23+s24)*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)+(8*(s12+2*s13+s14-s24)*s24+8*(s23+s24)*(6*s12+3*s13+5*s14+s23+s24))*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)+(-8*(s12+s13+s14-s24)*(s12+s14+s24)-8*(2*s12+s13+s14+s23+s24)*(2*s12+s14+s23+2*s24))*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(8*s14*s23+18*s14*s24+6*s23*s24+s13*(11*s14+7*s23+6*s24)+s12*(19*s13+24*s14+14*s23+16*s24)+18*(s12*s12)+5*(s13*s13)+11*(s14*s14)+6*(s23*s23)+8*(s24*s24))*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)+16*((s23+s24)*(s23+s24))*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*((s13+s23)*(s23+s24)*(s13*(s23-s24)+s23*(2*s14+s23+s24))+2*s12*(-(s24*(s13*s13))+s23*(s14*(s23+s24)+2*s23*(s23+s24)+s14*s14)+s13*(s14*(s23-s24)+s23*s24+2*(s23*s23)-s24*s24))-s12*s12*(-2*s23*s24+s14*(-4*s23+2*s24)+2*s13*(s14-s23+2*s24)+s13*s13+s14*s14-3*(s23*s23)+s24*s24)-2*(s13+s14-s23+s24)*pow(s12,3)-pow(s12,4))*pow(s23,-2)*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(2*s12+5*s14+2*s24)*((s13+s23)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s23,-1)*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+((16*(4*s12+2*s13+5*s14-s24)*(s23+s24)*(2*s12+s13+s14+s23+s24)-16*s12*(s12+s13+s14)*(s12+2*(s13+s24)))*pow(s24,-1)*pow(2*s12+s13+s14+s23+s24,-2))/2.-8*(s12+s13+s14+s23+s24)*(2*s13*s14+s12*(3*s14-s23)+s14*s23+s14*s24-s23*s24+s14*s14)*pow(s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+8*s12*pow(s24,-1)*(6*s24*(s14*s14)*(s23*s23)+9*s23*(s14*s14)*(s24*s24)+14*s14*(s23*s23)*(s24*s24)+(6*s23*s24-s23*s23+3*(s24*s24))*pow(s12,3)-s23*s23*pow(s13,3)+2*s23*s24*pow(s14,3)+s24*s24*pow(s14,3)+4*s14*s24*pow(s23,3)+4*(s24*s24)*pow(s23,3)-s14*pow(s23,4)-s24*pow(s23,4)-pow(s23,5)+12*s14*s23*pow(s24,3)+3*(s14*s14)*pow(s24,3)+8*(s23*s23)*pow(s24,3)+s13*s13*(-(s24*(s23*s23))+4*s23*(s24*s24)+s14*(4*s23*s24-s23*s23+2*(s24*s24))-3*pow(s23,3)+2*pow(s24,3))+s12*s12*(9*s24*(s23*s23)+19*s23*(s24*s24)+s13*(10*s23*s24-3*(s23*s23)+5*(s24*s24))+s14*(14*s23*s24-s23*s23+7*(s24*s24))-3*pow(s23,3)+7*pow(s24,3))+s13*(3*s24*(2*s23+s24)*(s14*s14)-(-4*s23*s24+3*(s23*s23)-3*(s24*s24))*((s23+s24)*(s23+s24))+s14*(8*s24*(s23*s23)+16*s23*(s24*s24)-2*pow(s23,3)+6*pow(s24,3)))+s12*(5*s24*(2*s23+s24)*(s14*s14)+s13*s13*(4*s23*s24-3*(s23*s23)+2*(s24*s24))-(-8*s23*s24+3*(s23*s23)-5*(s24*s24))*((s23+s24)*(s23+s24))-2*s14*(-8*s24*(s23*s23)-14*s23*(s24*s24)+pow(s23,3)-5*pow(s24,3))+s13*(6*s24*(s23*s23)-2*s14*(-8*s23*s24+s23*s23-4*(s24*s24))+20*s23*(s24*s24)-6*pow(s23,3)+8*pow(s24,3)))+3*s14*pow(s24,4)+5*s23*pow(s24,4)+pow(s24,5))*pow(s23+s24,-2)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-8*(s23+s24)*(s12+s13+s14+s23+s24)*pow(s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*(3*s14*s23+8*s14*s24+3*s23*s24+s13*(9*s14+6*s23+2*s24)+s12*(11*s13+13*s14+6*s23+7*s24)+10*(s12*s12)+4*(s13*s13)+10*(s14*s14)+6*(s23*s23)+s24*s24)*pow(s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+16*((s23+s24)*(s23+s24))*pow(s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*(3*(s13+s14)*(s23+s24)+s12*(2*s13+7*s14+6*s23+3*s24)+5*(s12*s12))*(s13*s23+s12*(s23-s24)-s14*s24+s23*s23-s24*s24)*pow(s24,-1)*pow(s23+s24,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+16*(2*s12+s13+2*s14)*(s12*s12*(2*s13*(s14+s23-2*s24)+s14*(4*s23-2*s24)-4*s23*s24+s13*s13+s14*s14)-s23*((s23+2*s24)*(s13*s13)+2*s13*(2*s23*s24+s24*(s14+s24)+s23*s23)+s23*(-(s14*s14)+(s23+s24)*(s23+s24)))-2*s12*(s13*(s14*(-s23+s24)+s23*(s23+3*s24))+s24*(s13*s13)+s23*(s14*(-s23+s24)-s14*s14+(s23+s24)*(s23+s24)))+2*(s13+s14+s23-s24)*pow(s12,3)+pow(s12,4))*pow(s12+s13+s23,-2)*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*pow(s12+s13+s23,-3)*pow(s24,-1)*(3*(s13*(2*s14+2*s23-3*s24)+s14*(3*s23-2*s24)+s13*s13+s14*s14+(s23-s24)*(s23-s24))*pow(s12,4)+3*(s13+s14+s23-s24)*pow(s12,5)+pow(s12,6)+pow(s12,3)*(3*(s14+s23-3*s24)*(s13*s13)+(9*s23-3*s24)*(s14*s14)+3*s14*(-4*s23*s24+3*(s23*s23)+s24*s24)+2*s23*(s23*s23+3*(s24*s24))+3*s13*(4*s14*(s23-s24)-4*s23*s24+s14*s14+s23*s23+3*(s24*s24))+pow(s13,3)+pow(s14,3))+s23*((3*s23*s24+s23*s23+3*(s24*s24))*pow(s13,3)+3*(s13*s13)*(3*s24*(s23*s23)+3*s23*(s24*s24)+(s14+s24)*(s24*s24)+pow(s23,3))+3*s13*s23*(-(s24*(s14*s14))+3*s24*(s23*s23)+3*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+s23*s23*(pow(s14,3)+pow(s23+s24,3)))+3*(s12*s12)*((s14*(s23-2*s24)+s24*(-2*s23+3*s24))*(s13*s13)+s13*((2*s23-s24)*(s14*s14)+2*s14*(-3*s23*s24+s23*s23+s24*s24)+s23*(2*s23*s24+s23*s23+5*(s24*s24)))-s24*pow(s13,3)+s23*((3*s23-2*s24)*(s14*s14)+s14*((s23-s24)*(s23-s24))+pow(s14,3)+pow(s23+s24,3)))+3*s12*(s24*s24*pow(s13,3)+s13*s13*(-2*s23*(s14-2*s24)*s24+3*s24*(s23*s23)+s14*(s24*s24)+pow(s23,3))+s23*s23*((s23-s24)*(s14*s14)+pow(s14,3)+pow(s23+s24,3))+s13*s23*(2*s14*s24*(-s23+s24)+(s23-2*s24)*(s14*s14)+2*pow(s23+s24,3))))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*(s12*(s13+s14+2*s23)+s23*(s13+s14+s23+s24)+s12*s12)*(s12*(20*s13+3*(8*s14+4*s23+5*s24))+17*(s12*s12)+2*(s13*(7*s14+6*s23+5*s24)+s14*(3*s23+7*s24)+3*(s13*s13)+6*(s14*s14)+3*(s23*s24+s23*s23+s24*s24)))*pow(s12+s13+s23,-1)*pow(s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s13,-1)*pow(s24,-2)*(16*s12*s24-8*s13*s24-8*s14*s24-48*s23*s24+24*s24*(s23+s24)+8*s24*(s12+s13+s14+s23+s24)-8*s24*(2*s12+s13+s14+s23+s24)-40*(s24*s24)-8*s12*s24*(s13*s23+s14*s23+2*s23*s24+s12*(2*s23+s24)+s23*s23+s24*s24)*pow(s23+s24,-2)-8*s24*(s12+s13+s14+s23+s24)*(-(s12*s23)+2*s23*s24+3*(s23*s23)+s24*s24)*pow(s23+s24,-2)+8*s24*(5*s14*s23+3*s14*s24+10*s23*s24+s13*(6*s23+s24)+s12*(4*s13+s14+10*s23+6*s24)+8*(s12*s12)+13*(s23*s23)+4*(s24*s24))*pow(s23+s24,-1)-8*s24*(s23+s24)*(2*s12+s13+s14+s23+s24)*pow(s12+s13+s14+s23+s24,-1)+s24*(-8*(s12+s13+s23)*(s12+s13+s14-s24)-8*(s12-s13-2*s23+s24)*(2*s12+s13+s14+s23+s24))*pow(s12+s13+s14+s23+s24,-1)+s24*(8*s23*(s12+2*s13+s14-s24)-8*(s23+s24)*(-3*s12+6*s23+2*s24))*pow(s12+s13+s14+s23+s24,-1)+8*s24*(5*s14*s23+16*s14*s24+14*s23*s24+s13*(5*s14+4*s23+9*s24)+s12*(12*s13+13*s14+5*s23+13*s24)+14*(s12*s12)+2*(s13*s13)+6*(s14*s14)+12*(s23*s23)+9*(s24*s24))*pow(s12+s13+s14+s23+s24,-1)+16*s24*((s23+s24)*(s23+s24))*pow(s12+s13+s14+s23+s24,-1)-8*((s14+s24)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(-(s14*s23)-3*s12*(s23-s24)+4*s14*s24+3*s23*s24+s13*(s23+3*s24)+3*(s24*s24))*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*((s14+s24)*(s23+s24)*(s14*(-s23+s24)+s24*(2*s13+s23+s24))-s12*s12*(2*s13*(s14+s23-2*s24)+s14*(4*s23-2*s24)-2*s23*s24+s13*s13+s14*s14+s23*s23-3*(s24*s24))+2*s12*(s13*(s14*(-s23+s24)+s24*(s23+s24))+s24*(s13*s13)-s23*(s14*s14)+2*(s23+s24)*(s24*s24)+s14*(s23*s24-s23*s23+2*(s24*s24)))-2*(s13+s14+s23-s24)*pow(s12,3)-pow(s12,4))*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+(s24*(s12+s13+s14+s23+s24)*(-16*(s12+s13+s23)*(2*s12+s13-s14-s23+s24)+16*(2*s12+s13+s14+s23+s24)*(-s12+s14+2*s23+s24))*pow(2*s12+s13+s14+s23+s24,-2))/2.+8*s24*(s12*(s12+s13+s14)*(s13-s14-s23+s24)+(s23+s24)*(2*s12+s13+s14+s23+s24)*(-2*s12+2*s13+s14+6*s23+5*s24))*pow(2*s12+s13+s14+s23+s24,-2)-8*s12*s24*pow(s23+s24,-2)*((12*s23*s24-6*(s23*s23)+10*(s24*s24))*pow(s12,4)-4*pow(s12,3)*(-5*s24*(s23*s23)+2*s14*(-4*s23*s24+s23*s23-3*(s24*s24))+4*s13*(-(s23*s24)+s23*s23-s24*s24)-19*s23*(s24*s24)+7*pow(s23,3)-7*pow(s24,3))+s12*s12*(-2*(s14*s14)*(-13*s23*s24+s23*s23-9*(s24*s24))+s13*s13*(2*s23*s24-14*(s23*s23)+6*(s24*s24))-(-70*s23*s24+45*(s23*s23)-27*(s24*s24))*((s23+s24)*(s23+s24))+s13*(-7*s24*(s23*s23)+91*s23*(s24*s24)+s14*(32*s23*s24-14*(s23*s23)+26*(s24*s24))-59*pow(s23,3)+39*pow(s24,3))+s14*(67*s24*(s23*s23)+137*s23*(s24*s24)-25*pow(s23,3)+45*pow(s24,3)))+2*s12*(-(s14*(-43*s23*s24+13*(s23*s23)-12*(s24*s24))*((s23+s24)*(s23+s24)))-s23*(2*s23+s24)*pow(s13,3)+s24*(3*s23+2*s24)*pow(s14,3)+s13*s13*(-15*s24*(s23*s23)+10*s23*(s24*s24)+3*s14*(s23*s24-s23*s23+s24*s24)-19*pow(s23,3)+6*pow(s24,3))+s14*s14*(22*s24*(s23*s23)+33*s23*(s24*s24)-2*pow(s23,3)+9*pow(s24,3))+s13*(s14*s14*(7*s23*s24-s23*s23+5*(s24*s24))-(-27*s23*s24+32*(s23*s23)-15*(s24*s24))*((s23+s24)*(s23+s24))+s14*(22*s24*(s23*s23)+58*s23*(s24*s24)-16*pow(s23,3)+20*pow(s24,3)))-(-22*s23*s24+15*(s23*s23)-5*(s24*s24))*pow(s23+s24,3))-(s23+s24)*(s14*(-26*s23*s24+9*(s23*s23)-3*(s24*s24))*((s23+s24)*(s23+s24))+s23*(7*s23+2*s24)*pow(s13,3)-s24*(6*s23+s24)*pow(s14,3)+s13*(s14*s14*(-20*s23*s24+2*(s23*s23)-7*(s24*s24))+(-18*s23*s24+21*(s23*s23)-7*(s24*s24))*((s23+s24)*(s23+s24))+2*s14*(-10*s24*(s23*s23)-26*s23*(s24*s24)+9*pow(s23,3)-7*pow(s24,3)))+s14*s14*(-20*s24*(s23*s23)-25*s23*(s24*s24)+2*pow(s23,3)-3*pow(s24,3))+3*(s13*s13)*(5*s24*(s23*s23)+s14*(-4*s23*s24+3*(s23*s23)-2*(s24*s24))-4*s23*(s24*s24)+7*pow(s23,3)-2*pow(s24,3))+(-10*s23*s24+7*(s23*s23)-s24*s24)*pow(s23+s24,3)))*pow(s12+s23+s24,-2)*pow(2*s12+s13+s14+s23+s24,-2)-8*s24*(s23+s24)*(s12+s13+s14+s23+s24)*pow(2*s12+s13+s14+s23+s24,-1)-8*s24*(8*s14*s23+9*s14*s24+10*s23*s24+s13*(8*s14+12*s23+3*s24)+s12*(8*s13+6*s14-2*s23+4*s24)+7*(s12*s12)+5*(s13*s13)+6*(s14*s14)+13*(s23*s23)+4*(s24*s24))*pow(2*s12+s13+s14+s23+s24,-1)-16*s24*((s23+s24)*(s23+s24))*pow(2*s12+s13+s14+s23+s24,-1)+8*s24*((s13+s14)*(s23+s24)+s12*(3*s13+6*s14+14*s23+3*s24)+4*(s12*s12))*(-(s13*s23)+s14*s24+s12*(-s23+s24)-s23*s23+s24*s24)*pow(s23+s24,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+16*s24*(-s12+2*s23+s24)*(-(s12*s12*(-4*s23*s24+s14*(-4*s23+2*s24)+2*s13*(s14-s23+2*s24)+s13*s13+s14*s14))+2*s12*(s13*(s23-s24)*(s14+s24)+s14*s24*(3*s23+s24)-s24*(s13*s13)+s23*(s14*s14)+s24*((s23+s24)*(s23+s24)))+s24*(2*s13*s14*s23-s24*(s13*s13)+(2*s23+s24)*(s14*s14)+2*s14*((s23+s24)*(s23+s24))+s24*((s23+s24)*(s23+s24)))-2*(s13+s14-s23+s24)*pow(s12,3)-pow(s12,4))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*s24*pow(s12+s14+s24,-3)*(3*(s14*(-3*s23+2*s24)+s13*(2*s14-2*s23+3*s24)+s13*s13+s14*s14+(s23-s24)*(s23-s24))*pow(s12,4)+3*(s13+s14-s23+s24)*pow(s12,5)+pow(s12,6)+pow(s12,3)*(3*(s14-s23+3*s24)*(s13*s13)+(-9*s23+3*s24)*(s14*s14)+2*s24*(3*(s23*s23)+s24*s24)+3*s14*(-4*s23*s24+3*(s23*s23)+s24*s24)+3*s13*(-4*s14*(s23-s24)-4*s23*s24+s14*s14+s23*s23+3*(s24*s24))+pow(s13,3)+pow(s14,3))+3*(s12*s12)*((-(s14*(s23-2*s24))+s24*(-2*s23+3*s24))*(s13*s13)+s23*(3*s23-2*s24)*(s14*s14)+s14*s24*(2*s23*s24+5*(s23*s23)+s24*s24)+s13*((-2*s23+s24)*(s14*s14)+s24*((s23-s24)*(s23-s24))+2*s14*(-3*s23*s24+s23*s23+s24*s24))+s24*pow(s13,3)-s23*pow(s14,3)+s24*pow(s23+s24,3))+3*s12*(s13*s14*s23*(s14*(s23-2*s24)+2*(s23-s24)*s24)+s24*(s14*(-2*s23+s24)+s24*(-s23+s24))*(s13*s13)+s24*(s14*s14)*(3*s23*s24+4*(s23*s23)+s24*s24)+s24*s24*pow(s13,3)+s23*s23*pow(s14,3)+2*s14*s24*pow(s23+s24,3)+s24*s24*pow(s23+s24,3))+s24*(-3*s14*s23*s24*(s13*s13)+3*s13*(s14*s14)*(s23*s23)+s24*s24*pow(s13,3)+(3*s23*s24+3*(s23*s23)+s24*s24)*pow(s14,3)+3*s14*s24*pow(s23+s24,3)+3*(s14*s14)*pow(s23+s24,3)+s24*s24*pow(s23+s24,3)))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*s24*(s24*(s13+s14+s23+s24)+s12*(s13+s14+2*s24)+s12*s12)*(6*s14*s23+12*s14*s24+11*s23*s24+s12*(14*s13+12*s14+4*s23+9*s24)+s13*(9*s14+14*s23+10*s24)+11*(s12*s12)+6*(s13*s13)+6*(s14*s14)+12*(s23*s23)+6*(s24*s24))*pow(s12+s14+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s13,-1)*pow(s12+s23+s24,-1)*(-24*s12-16*s13+16*s23+16*s24-16*(s23+s24)+8*(2*s12+s13+s14+s23+s24)+8*((s23+s24)*(s13+s14+s23+s24)+s12*(3*s13+3*s14+4*(s23+s24))+5*(s12*s12))*pow(s23+s24,-1)-8*(s14*s23+s12*(7*s13-s14-6*s23-2*s24)+s13*(2*s23-s24)-2*s14*s24+2*s23*s24+2*(s12*s12)+2*(s23*s23))*pow(s23+s24,-1)+24*(s23+s24)*(2*s12+s13+s14+s23+s24)*pow(s12+s13+s14+s23+s24,-1)+(8*s23*(-s13-s14+s23+s24)+8*(s23+s24)*(-10*s12-5*s13-s14+3*s23+3*s24))*pow(s12+s13+s14+s23+s24,-1)+(8*(8*s12+3*s13+s14)*(2*s12+s13+s14+s23+s24)+8*(s12+s13+s23)*(s13+s14-2*(s23+s24)))*pow(s12+s13+s14+s23+s24,-1)-8*(15*s14*s23+13*s14*s24+17*s23*s24+s13*(11*s14+17*s23+3*s24)+s12*(33*s13+26*s14+18*s23+11*s24)+32*(s12*s12)+5*(s13*s13)+6*(s14*s14)+18*(s23*s23)+11*(s24*s24))*pow(s12+s13+s14+s23+s24,-1)-24*((s23+s24)*(s23+s24))*pow(s12+s13+s14+s23+s24,-1)-8*((2*s12+s13+s14+s23+s24)*(2*s12+s13+s14+s23+s24))*pow(s12+s13+s14+s23+s24,-1)-8*(2*s12*(s23+s24)*(s24*(s13+s23+s24)*(s13+2*s24)+2*s14*s24*(2*s13+s23+2*s24)-(s23-2*s24)*(s14*s14))+s12*s12*(s13*(10*s24*(s23+s24)+s14*(-4*s23+6*s24))+5*s24*(s13*s13)+(-4*s23+s24)*(s14*s14)+s24*(14*s23*s24+3*(s23*s23)+11*(s24*s24))+s14*(10*s23*s24-4*(s23*s23)+14*(s24*s24)))+s24*((s14+s24)*(s14+s24))*((s23+s24)*(s23+s24))-2*(s13*(2*s14+2*s23-5*s24)+s14*(4*s23-3*s24)-4*s23*s24+s13*s13+s14*s14+s23*s23-5*(s24*s24))*pow(s12,3)-(4*s13+4*s14+4*s23-5*s24)*pow(s12,4)-2*pow(s12,5))*pow(s24,-2)*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*((s14+s24)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(s14*s23+s14*s24+7*s23*s24+2*s13*(s23+s24)+s12*(7*s13+3*(s14+2*s23+s24))+11*(s12*s12)+8*(s23*s23)+5*(s24*s24))*pow(s24,-1)*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(s13+s14)*(s12+s13+s14+s23+s24)*(4*s12+3*s13+s14+3*s23+s24)*pow(2*s12+s13+s14+s23+s24,-2)+((-32*s12*(s13-s14)*(s12+s13+s14)+16*(s12+s13-s14-3*s23-3*s24)*(s23+s24)*(2*s12+s13+s14+s23+s24))*pow(2*s12+s13+s14+s23+s24,-2))/2.+8*(2*s12*(7*s13+4*s14-3*s23-s24)+3*(s12*s12)+2*(5*s14*(s23+s24)+s23*(s23+s24)+2*s13*(2*s14+s23+s24)+s13*s13+3*(s14*s14)))*pow(2*s12+s13+s14+s23+s24,-1)+8*((s23+s24)*(s23+s24))*pow(2*s12+s13+s14+s23+s24,-1)+8*(3*(s13+s14)*(s23+s24)+s12*(7*s13+7*s14+2*(s23+s24))+2*(s12*s12))*(s13*s23+s12*(s23-s24)-s14*s24+s23*s23-s24*s24)*pow(s23+s24,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-16*(2*s12+s13-s23-s24)*(s12*s12*(-4*s23*s24+s14*(-4*s23+2*s24)+2*s13*(s14-s23+2*s24)+s13*s13+s14*s14)+2*s12*(-(s13*(s23-s24)*(s14+s24))-s14*s24*(3*s23+s24)+s24*(s13*s13)-s23*(s14*s14)-s24*((s23+s24)*(s23+s24)))-s24*(2*s13*s14*s23-s24*(s13*s13)+(2*s23+s24)*(s14*s14)+2*s14*((s23+s24)*(s23+s24))+s24*((s23+s24)*(s23+s24)))+2*(s13+s14-s23+s24)*pow(s12,3)+pow(s12,4))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*pow(s12+s14+s24,-3)*(3*(s14*(-3*s23+2*s24)+s13*(2*s14-2*s23+3*s24)+s13*s13+s14*s14+(s23-s24)*(s23-s24))*pow(s12,4)+3*(s13+s14-s23+s24)*pow(s12,5)+pow(s12,6)+pow(s12,3)*(3*(s14-s23+3*s24)*(s13*s13)+(-9*s23+3*s24)*(s14*s14)+2*s24*(3*(s23*s23)+s24*s24)+3*s14*(-4*s23*s24+3*(s23*s23)+s24*s24)+3*s13*(-4*s14*(s23-s24)-4*s23*s24+s14*s14+s23*s23+3*(s24*s24))+pow(s13,3)+pow(s14,3))+3*(s12*s12)*((-(s14*(s23-2*s24))+s24*(-2*s23+3*s24))*(s13*s13)+s23*(3*s23-2*s24)*(s14*s14)+s14*s24*(2*s23*s24+5*(s23*s23)+s24*s24)+s13*((-2*s23+s24)*(s14*s14)+s24*((s23-s24)*(s23-s24))+2*s14*(-3*s23*s24+s23*s23+s24*s24))+s24*pow(s13,3)-s23*pow(s14,3)+s24*pow(s23+s24,3))+3*s12*(s13*s14*s23*(s14*(s23-2*s24)+2*(s23-s24)*s24)+s24*(s14*(-2*s23+s24)+s24*(-s23+s24))*(s13*s13)+s24*(s14*s14)*(3*s23*s24+4*(s23*s23)+s24*s24)+s24*s24*pow(s13,3)+s23*s23*pow(s14,3)+2*s14*s24*pow(s23+s24,3)+s24*s24*pow(s23+s24,3))+s24*(-3*s14*s23*s24*(s13*s13)+3*s13*(s14*s14)*(s23*s23)+s24*s24*pow(s13,3)+(3*s23*s24+3*(s23*s23)+s24*s24)*pow(s14,3)+3*s14*s24*pow(s23+s24,3)+3*(s14*s14)*pow(s23+s24,3)+s24*s24*pow(s23+s24,3)))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*(s24*(s13+s14+s23+s24)+s12*(s13+s14+2*s24)+s12*s12)*(4*s12*(6*s13+5*s14+3*s23+2*s24)+21*(s12*s12)+2*(5*s23*s24+s13*(5*s14+8*s23+s24)+s14*(7*s23+6*s24)+5*(s13*s13)+3*(s14*s14)+5*(s23*s23)+3*(s24*s24)))*pow(s12+s14+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s12+s13+s14,-1)*pow(s23,-1)*(-24*s12+16*s13+16*s14-16*(s13+s14)-16*s23+8*(2*s12+s13+s14+s23+s24)+8*((s13+s14)*(s13+s14+s23+s24)+s12*(4*s13+4*s14+3*(s23+s24))+5*(s12*s12))*pow(s13+s14,-1)-8*(-(s12*(6*s13+2*s14-7*s23+s24))+s13*(2*s14+2*s23+s24)-s14*(s23+2*s24)+2*(s12*s12)+2*(s13*s13))*pow(s13+s14,-1)+24*(s13+s14)*(2*s12+s13+s14+s23+s24)*pow(s12+s13+s14+s23+s24,-1)+(8*(s12+s13+s23)*(-2*s13-2*s14+s23+s24)+8*(2*s12+s13+s14+s23+s24)*(8*s12+3*s23+s24))*pow(s12+s13+s14+s23+s24,-1)-8*(10*s12*(s13+s14)+s14*(-3*s14+5*s23+s24)+s13*(-7*s14+6*s23+2*s24)-4*(s13*s13))*pow(s12+s13+s14+s23+s24,-1)-24*((s13+s14)*(s13+s14))*pow(s12+s13+s14+s23+s24,-1)-8*(3*s14*s23+13*s14*s24+11*s23*s24+s13*(17*s14+17*s23+15*s24)+s12*(18*s13+11*s14+33*s23+26*s24)+32*(s12*s12)+18*(s13*s13)+11*(s14*s14)+5*(s23*s23)+6*(s24*s24))*pow(s12+s13+s14+s23+s24,-1)-8*((2*s12+s13+s14+s23+s24)*(2*s12+s13+s14+s23+s24))*pow(s12+s13+s14+s23+s24,-1)-8*(s12*s12*((3*s14-4*s24)*(s13*s13)+2*s13*(5*s14*(s23+s24)-2*s24*(s23+s24)+7*(s14*s14))+s14*(6*s23*s24+2*s14*(5*s23+7*s24)+11*(s14*s14)+5*(s23*s23)+s24*s24))+2*s12*(s13*s13*(s14*(s23+2*s24)+2*(s14*s14)-s24*s24)+s13*s14*(4*s23*s24+s14*(4*s23+6*s24)+4*(s14*s14)+s23*s23+s24*s24)+s14*s14*(4*s23*s24+s14*(3*s23+4*s24)+2*(s14*s14)+s23*s23+2*(s24*s24)))+s14*((s13+s14)*(s13+s14))*((s14+s24)*(s14+s24))-2*(-(s14*(5*s23+3*s24))+s13*(-4*s14+2*s23+4*s24)+s13*s13-5*(s14*s14)+(s23+s24)*(s23+s24))*pow(s12,3)-(4*s13-5*s14+4*(s23+s24))*pow(s12,4)-2*pow(s12,5))*pow(s14,-2)*pow(s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)+8*((s13+s14)*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*(s14*(5*s14+2*s23+s24)+s13*(7*s14+2*s23+s24)+s12*(6*s13+3*s14+7*s23+3*s24)+11*(s12*s12)+8*(s13*s13))*pow(s14,-1)*pow(s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(s23+s24)*(s12+s13+s14+s23+s24)*(4*s12+3*s13+s14+3*s23+s24)*pow(2*s12+s13+s14+s23+s24,-2)+((-32*s12*(s23-s24)*(s12+s23+s24)+16*(s13+s14)*(s12-3*s13-3*s14+s23-s24)*(2*s12+s13+s14+s23+s24))*pow(2*s12+s13+s14+s23+s24,-2))/2.+8*((s13+s14)*(s13+s14))*pow(2*s12+s13+s14+s23+s24,-1)+8*(-2*s12*(3*s13+s14-7*s23-4*s24)+3*(s12*s12)+2*(4*s23*s24+s14*(2*s23+5*s24)+s13*(s14+2*s23+5*s24)+s13*s13+s23*s23+3*(s24*s24)))*pow(2*s12+s13+s14+s23+s24,-1)+8*(3*(s13+s14)*(s23+s24)+s12*(2*s13+2*s14+7*(s23+s24))+2*(s12*s12))*(s12*(s13-s14)+s13*s23-s14*(s14+s24)+s13*s13)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)-16*(2*s12-s13-s14+s23)*(-2*s12*(s13*(s14+s24)*(2*s14+s23+s24)+s14*(s13*s13)+s14*(s14*(-s23+s24)-s23*(s23+s24)+s14*s14))-s14*((s14+2*s24)*(s13*s13)+2*s13*(2*s14*s24+s24*(s23+s24)+s14*s14)+s14*(2*s14*s24+s14*s14-s23*s23+s24*s24))+s12*s12*(2*s14*(2*s23+s24)-2*s13*(2*s14+s23+2*s24)+(s23+s24)*(s23+s24))+2*(-s13+s14+s23+s24)*pow(s12,3)+pow(s12,4))*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*pow(s12+s14+s24,-3)*(3*(s14*(3*s23+2*s24)-s13*(2*s14+2*s23+3*s24)+s13*s13+s14*s14+(s23+s24)*(s23+s24))*pow(s12,4)+3*(-s13+s14+s23+s24)*pow(s12,5)+pow(s12,6)+3*s12*(s14*(s14+2*s24)*pow(s13,3)+s14*s14*(2*s24*(s14*s14)+(s23+s24)*(s23*s23)+s14*(s23*s23+s24*s24)+pow(s14,3))+s13*s14*(-2*s23*s24*(s23+s24)+6*s24*(s14*s14)-s14*(2*s23*s24+s23*s23-3*(s24*s24))+3*pow(s14,3))+s13*s13*(2*s14*s24*(s23+2*s24)+6*s24*(s14*s14)+(s23+s24)*(s24*s24)+3*pow(s14,3)))+3*(s12*s12)*(s13*s13*(s24*(2*s23+3*s24)+s14*(s23+5*s24)+3*(s14*s14))+s14*pow(s13,3)+s14*(s14*s23*(3*s23+2*s24)+(s23+s24)*(s14*s14)+s23*((s23+s24)*(s23+s24))+pow(s14,3))+s13*(-2*(s23-s24)*(s14*s14)-2*s14*(3*s23*s24+s23*s23+s24*s24)-s24*((s23+s24)*(s23+s24))+3*pow(s14,3)))+s14*((3*s14*s24+s14*s14+3*(s24*s24))*pow(s13,3)+3*(s13*s13)*(3*s24*(s14*s14)+3*s14*(s24*s24)+(s23+s24)*(s24*s24)+pow(s14,3))+3*s13*s14*(3*s24*(s14*s14)-s24*(s23*s23)+3*s14*(s24*s24)+pow(s14,3)+pow(s24,3))+s14*s14*(3*s24*(s14*s14)+3*s14*(s24*s24)+pow(s14,3)+pow(s23,3)+pow(s24,3)))+pow(s12,3)*(-3*s13*(s23+s24)*(4*s14+s23+3*s24)+3*(2*s14+s23+3*s24)*(s13*s13)+3*(3*s23+s24)*(s14*s14)+3*s14*(4*s23*s24+3*(s23*s23)+s24*s24)+2*pow(s14,3)+pow(s23+s24,3)))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*(s14*(s13+s14+s23+s24)+s12*(2*s14+s23+s24)+s12*s12)*(4*s12*(3*s13+2*s14+6*s23+5*s24)+21*(s12*s12)+2*(5*s23*s24+s14*(s23+6*s24)+s13*(5*s14+8*s23+7*s24)+5*(s13*s13)+3*(s14*s14)+5*(s23*s23)+3*(s24*s24)))*pow(s12+s14+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s24,-1)*(-24-24*s14*pow(s13,-1)+8*(s12+s13+s14+s23+s24)*pow(s13,-1)+8*(2*s12+s13+s14+s23+s24)*pow(s13,-1)-8*(4*s12-s13+s14+4*s23+3*s24)*pow(s13,-1)-8*(s12+s13)*s14*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s13+s14,-2)+8*(s12+s13+s14)*(s12*(s13+2*s14)+s14*(s13+s14+s23+s24))*pow(s13,-1)*pow(s13+s14,-2)-8*(s13*(3*s14-s23-2*s24)+2*s14*(3*s14+2*s24)+s12*(2*s13+6*s14-3*s23+2*s24)+2*(s12*s12)+s13*s13)*pow(s13,-1)*pow(s13+s14,-1)-8*(s13+s14)*(2*s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s12+s13+s14+s23+s24,-1)+(-8*(s12+s13+s23)*(s12-s13+s23+s24)-8*(2*s12+2*s13+s14+s23)*(2*s12+s13+s14+s23+s24))*pow(s13,-1)*pow(s12+s13+s14+s23+s24,-1)+(8*s13*(s12-s13+s23+2*s24)+8*(s13+s14)*(6*s12+s13+s14+5*s23+3*s24))*pow(s13,-1)*pow(s12+s13+s14+s23+s24,-1)+16*((s13+s14)*(s13+s14))*pow(s13,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(8*s14*s23+7*s14*s24+11*s23*s24+6*s13*(s14+3*s23+s24)+s12*(16*s13+14*s14+24*s23+19*s24)+18*(s12*s12)+8*(s13*s13)+6*(s14*s14)+11*(s23*s23)+5*(s24*s24))*pow(s13,-1)*pow(s12+s13+s14+s23+s24,-1)+8*((s13+s14)*(s14+s24)*(s13*(s14-s24)+s14*(s14+2*s23+s24))+2*s12*(-(s24*(s13*s13))+s13*(s14*(s23+s24)-s24*(s23+s24)+2*(s14*s14))+s14*(s23*(s23+s24)+s14*(s23+2*s24)+2*(s14*s14)))-s12*s12*(-2*s14*(2*s23+s24)+s13*(-2*s14+2*s23+4*s24)+s13*s13-3*(s14*s14)+(s23+s24)*(s23+s24))-2*(s13-s14+s23+s24)*pow(s12,3)-pow(s12,4))*pow(s14,-2)*pow(s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(2*s12+2*s13+5*s23)*((s13+s14)*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s14,-1)*pow(s13+s14,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(s12+s13+s14+s23+s24)*(s12*(s14-3*s23)+s13*(s14-s23)-s23*(s14+s23+2*s24))*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-2)+((16*(s13+s14)*(2*s12+s13+s14+s23+s24)*(4*s12-s13+5*s23+2*s24)-16*s12*(s12+s23+s24)*(s12+2*(s13+s24)))*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-2))/2.+8*s12*pow(s13,-1)*(-((s14+s23+s24)*(s14*s14)*((s14+s24)*(s14+s24)))+(6*s13*s14+3*(s13*s13)-s14*s14)*pow(s12,3)+(6*s23*s24+2*s14*(6*s23+5*s24)+8*(s14*s14)+3*(s23*s23)+2*(s24*s24))*pow(s13,3)+s12*s12*(s13*s14*(9*s14+14*s23+10*s24)+(19*s14+7*s23+5*s24)*(s13*s13)-(3*s14+s23+3*s24)*(s14*s14)+7*pow(s13,3))+(5*s14+3*(s23+s24))*pow(s13,4)+s12*(-((s14+s24)*(3*s14+2*s23+3*s24)*(s14*s14))+2*s13*s14*(8*s23*s24+s14*(8*s23+3*s24)+s14*s14+5*(s23*s23)+2*(s24*s24))+s13*s13*(8*s23*s24+4*s14*(7*s23+5*s24)+18*(s14*s14)+5*(s23*s23)+2*(s24*s24))+2*(9*s14+5*s23+4*s24)*pow(s13,3)+5*pow(s13,4))+pow(s13,5)+s13*s14*((4*s23-2*s24)*(s14*s14)+s14*(8*s23*s24+6*(s23*s23)-s24*s24)+2*s23*(3*s23*s24+s23*s23+2*(s24*s24))-pow(s14,3))+s13*s13*(2*(7*s23+4*s24)*(s14*s14)+s23*(3*s23*s24+s23*s23+2*(s24*s24))+s14*(16*s23*s24+9*(s23*s23)+4*(s24*s24))+4*pow(s14,3)))*pow(s13+s14,-2)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-2)-8*(s13+s14)*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-1)+16*((s13+s14)*(s13+s14))*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*(3*s14*s23+6*s14*s24+9*s23*s24+s13*(3*s14+8*s23+2*s24)+s12*(7*s13+6*s14+13*s23+11*s24)+10*(s12*s12)+s13*s13+6*(s14*s14)+10*(s23*s23)+4*(s24*s24))*pow(s13,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*(3*(s13+s14)*(s23+s24)+s12*(3*s13+6*s14+7*s23+2*s24)+5*(s12*s12))*(s12*(s13-s14)+s13*s23-s14*(s14+s24)+s13*s13)*pow(s13,-1)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)-16*(2*s12+2*s23+s24)*(2*s12*(s13*(s14+s24)*(2*s14+s23+s24)+s14*(s13*s13)+s14*(s14*(-s23+s24)-s23*(s23+s24)+s14*s14))+s14*((s14+2*s24)*(s13*s13)+2*s13*(2*s14*s24+s24*(s23+s24)+s14*s14)+s14*(2*s14*s24+s14*s14-s23*s23+s24*s24))+s12*s12*(-2*s14*(2*s23+s24)+2*s13*(2*s14+s23+2*s24)-(s23+s24)*(s23+s24))+2*(s13-s14-s23-s24)*pow(s12,3)-pow(s12,4))*pow(s13,-1)*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*pow(s13,-1)*pow(s12+s14+s24,-3)*(3*(s14*(3*s23+2*s24)-s13*(2*s14+2*s23+3*s24)+s13*s13+s14*s14+(s23+s24)*(s23+s24))*pow(s12,4)+3*(-s13+s14+s23+s24)*pow(s12,5)+pow(s12,6)+3*s12*(s14*(s14+2*s24)*pow(s13,3)+s14*s14*(2*s24*(s14*s14)+(s23+s24)*(s23*s23)+s14*(s23*s23+s24*s24)+pow(s14,3))+s13*s14*(-2*s23*s24*(s23+s24)+6*s24*(s14*s14)-s14*(2*s23*s24+s23*s23-3*(s24*s24))+3*pow(s14,3))+s13*s13*(2*s14*s24*(s23+2*s24)+6*s24*(s14*s14)+(s23+s24)*(s24*s24)+3*pow(s14,3)))+3*(s12*s12)*(s13*s13*(s24*(2*s23+3*s24)+s14*(s23+5*s24)+3*(s14*s14))+s14*pow(s13,3)+s14*(s14*s23*(3*s23+2*s24)+(s23+s24)*(s14*s14)+s23*((s23+s24)*(s23+s24))+pow(s14,3))+s13*(-2*(s23-s24)*(s14*s14)-2*s14*(3*s23*s24+s23*s23+s24*s24)-s24*((s23+s24)*(s23+s24))+3*pow(s14,3)))+s14*((3*s14*s24+s14*s14+3*(s24*s24))*pow(s13,3)+3*(s13*s13)*(3*s24*(s14*s14)+3*s14*(s24*s24)+(s23+s24)*(s24*s24)+pow(s14,3))+3*s13*s14*(3*s24*(s14*s14)-s24*(s23*s23)+3*s14*(s24*s24)+pow(s14,3)+pow(s24,3))+s14*s14*(3*s24*(s14*s14)+3*s14*(s24*s24)+pow(s14,3)+pow(s23,3)+pow(s24,3)))+pow(s12,3)*(-3*s13*(s23+s24)*(4*s14+s23+3*s24)+3*(2*s14+s23+3*s24)*(s13*s13)+3*(3*s23+s24)*(s14*s14)+3*s14*(4*s23*s24+3*(s23*s23)+s24*s24)+2*pow(s14,3)+pow(s23+s24,3)))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*(s14*(s13+s14+s23+s24)+s12*(2*s14+s23+s24)+s12*s12)*(s12*(15*s13+4*(3*s14+6*s23+5*s24))+17*(s12*s12)+2*(7*s23*s24+3*s14*(s23+2*s24)+s13*(3*s14+7*s23+5*s24)+3*(s13*s13)+3*(s14*s14)+6*(s23*s23)+3*(s24*s24)))*pow(s13,-1)*pow(s12+s14+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*(8*(s23+s24)*pow(s12+s13+s14,-1)*pow(s23,-1)-8*(2*s12+s13+s14+s23+s24)*pow(s12+s13+s14,-1)*pow(s23,-1)+8*(s12+2*s24)*pow(s12+s13+s14,-1)*pow(s23,-1)-8*s24*(s12+s13+s14+s23+s24)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s23+s24,-1)+8*(2*s14*s23-s13*(s23-5*s24)+8*s14*s24+6*s23*s24+s12*(6*s13+6*s14+s23+10*s24)+6*(s12*s12)+6*(s24*s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s23+s24,-1)+8*(s23+s24)*(2*s12+s13+s14+s23+s24)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23+s24,-1)-2*(8*(s12+s13+s14)*s23+4*(2*s12+s13+s14-s23+s24)*(s23+s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(-4*s14*s23+9*s14*s24+s23*s24+s13*(3*s14+6*s23+7*s24)+s12*(9*s13+10*s14+3*s23+12*s24)+8*(s12*s12)+s13*s13+2*(s14*s14)+7*(s23*s23)+6*(s24*s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23+s24,-1)-8*((s23+s24)*(s23+s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(s12+s13+s14-2*s23+4*s24)*((s14+s24)*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s12+s13+s14,-1)*pow(s24,-1)*pow(s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(s12+s14+s24)*(s23+s24)*(s12+s13+s14+s23+s24)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(2*s12+s13+s14+s23+s24,-2)+((16*s12*(s12+s13+s14)*(s12+s13+s14+s23-s24)-16*(s12+s13+s14-s23+s24)*(s23+s24)*(2*s12+s13+s14+s23+s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(2*s12+s13+s14+s23+s24,-2))/2.-8*(5*s14*s23+10*s14*s24+6*s23*s24+s13*(4*s14+s23+6*s24)+s12*(6*s13+14*s14+7*s23+12*s24)+10*(s12*s12)+s13*s13+3*(s14*s14)+6*(s24*s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*((s23+s24)*(s23+s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*(-2*s12+s23+s24)*(s13*s23+s12*(s23-s24)-s14*s24+s23*s23-s24*s24)*pow(s23,-1)*pow(s23+s24,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-16*(s12+s13+s14-s23)*(s12*s12*(-4*s23*s24+s14*(-4*s23+2*s24)+2*s13*(s14-s23+2*s24)+s13*s13+s14*s14)+2*s12*(-(s13*(s23-s24)*(s14+s24))-s14*s24*(3*s23+s24)+s24*(s13*s13)-s23*(s14*s14)-s24*((s23+s24)*(s23+s24)))-s24*(2*s13*s14*s23-s24*(s13*s13)+(2*s23+s24)*(s14*s14)+2*s14*((s23+s24)*(s23+s24))+s24*((s23+s24)*(s23+s24)))+2*(s13+s14-s23+s24)*pow(s12,3)+pow(s12,4))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s14+s24,-2)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s14+s24,-3)*(3*(s14*(-3*s23+2*s24)+s13*(2*s14-2*s23+3*s24)+s13*s13+s14*s14+(s23-s24)*(s23-s24))*pow(s12,4)+3*(s13+s14-s23+s24)*pow(s12,5)+pow(s12,6)+pow(s12,3)*(3*(s14-s23+3*s24)*(s13*s13)+(-9*s23+3*s24)*(s14*s14)+2*s24*(3*(s23*s23)+s24*s24)+3*s14*(-4*s23*s24+3*(s23*s23)+s24*s24)+3*s13*(-4*s14*(s23-s24)-4*s23*s24+s14*s14+s23*s23+3*(s24*s24))+pow(s13,3)+pow(s14,3))+3*(s12*s12)*((-(s14*(s23-2*s24))+s24*(-2*s23+3*s24))*(s13*s13)+s23*(3*s23-2*s24)*(s14*s14)+s14*s24*(2*s23*s24+5*(s23*s23)+s24*s24)+s13*((-2*s23+s24)*(s14*s14)+s24*((s23-s24)*(s23-s24))+2*s14*(-3*s23*s24+s23*s23+s24*s24))+s24*pow(s13,3)-s23*pow(s14,3)+s24*pow(s23+s24,3))+3*s12*(s13*s14*s23*(s14*(s23-2*s24)+2*(s23-s24)*s24)+s24*(s14*(-2*s23+s24)+s24*(-s23+s24))*(s13*s13)+s24*(s14*s14)*(3*s23*s24+4*(s23*s23)+s24*s24)+s24*s24*pow(s13,3)+s23*s23*pow(s14,3)+2*s14*s24*pow(s23+s24,3)+s24*s24*pow(s23+s24,3))+s24*(-3*s14*s23*s24*(s13*s13)+3*s13*(s14*s14)*(s23*s23)+s24*s24*pow(s13,3)+(3*s23*s24+3*(s23*s23)+s24*s24)*pow(s14,3)+3*s14*s24*pow(s23+s24,3)+3*(s14*s14)*pow(s23+s24,3)+s24*s24*pow(s23+s24,3)))*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*(s24*(s13+s14+s23+s24)+s12*(s13+s14+2*s24)+s12*s12)*(12*s14*s24+5*s23*s24+s12*(10*s13+11*s14+6*s23+12*s24)+s13*(5*s14+6*(s23+s24))+10*(s12*s12)+5*(s13*s13)+6*(s14*s14)+5*(s23*s23)+6*(s24*s24))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s14+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*pow(s13,-1)*(-8*(s13+s14)*pow(s12+s23+s24,-1)+8*(2*s12+s13+s14+s23+s24)*pow(s12+s23+s24,-1)+8*(s12+2*(s14+s23+s24))*pow(s12+s23+s24,-1)+8*(s13+3*s14)*(s12+s13+s14+s23+s24)*pow(s13+s14,-1)*pow(s12+s23+s24,-1)-8*(s12*(7*s13+11*s14+3*(s23+s24))+2*(s13*(6*s14+4*s24)+s14*(6*s14+3*s23+7*s24))+3*(s12*s12))*pow(s13+s14,-1)*pow(s12+s23+s24,-1)+8*(s13+s14)*(2*s12+s13+s14+s23+s24)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-2*(8*s14*(s12+s23+s24)-4*(s13+s14)*(s13+3*s14+s23+s24))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-8*((s13+s14)*(s13+s14))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(7*s14*s23+2*s13*(s14+3*s23)+13*s14*s24+5*s23*s24+s12*(5*s13+10*s14+7*s23+10*s24)+6*(s12*s12)+4*(s13*s13)+10*(s14*s14)+s23*s23+4*(s24*s24))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-8*((s13+s14)*(s13+s23)+s12*(s13+s14+s23+s24)+s12*s12)*(3*s12*s13+s13*(8*s14+3*(s23+s24))+2*(s14*s14))*pow(s13,-1)*pow(s13+s14,-1)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(s13+s14)*(s12+s13+s14+s23+s24)*(4*s12+s13+3*s14+s23+3*s24)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)-((32*s12*(s13-s14)*(s12+s23+s24)+16*(s13+s14)*(2*s12+s13+s14+s23+s24)*(s12+s13+3*s14+s23+s24))*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2))/2.+8*(2*s12-3*(s13+s14))*(s12*(s13-s14)+s13*s23-s14*(s14+s24)+s13*s13)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*((s13+s14)*(s13+s14))*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*(4*s14*s23+12*s14*s24+s12*(12*s13+10*s14-3*s23+5*s24)+2*s13*(6*s14+s23+5*s24)+3*(s12*s12)+12*(s14*s14)-s23*s23+s24*s24)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-16*(s13+2*s14)*(s12*s12*(2*s14*(2*s23+s24)+s13*(4*s14-2*(s23+2*s24))-(s23+s24)*(s23+s24))-2*(s13-s14+s23+s24)*pow(s12,3)-pow(s12,4)+2*s12*(s14*s23*(s23+s24)+(2*s14+s23-s24)*(s13*s13)+s13*(-(s24*(s23+s24))+s14*(3*s23+s24)+s14*s14)+pow(s13,3))+s13*(2*s14*s23*(s14+s23+s24)+2*(s14+s23)*(s13*s13)+s13*(4*s14*s23+s14*s14+s23*s23-s24*s24)+pow(s13,3)))*pow(s12+s13+s23,-2)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*pow(s12+s13+s23,-3)*(3*(-(s14*(3*s23+2*s24))+s13*(-2*s14+2*s23+3*s24)+s13*s13+s14*s14+(s23+s24)*(s23+s24))*pow(s12,4)+3*(s13-s14+s23+s24)*pow(s12,5)+pow(s12,6)+3*s12*(2*s13*s14*s23*(-(s24*(s23+s24))+s14*(2*s23+s24)+s14*s14)+(s23+s24)*(s14*s14)*(s23*s23)+(6*s14*s23+3*(s14*s14)+s23*s23+s24*s24)*pow(s13,3)+(3*s14+2*s23)*pow(s13,4)+pow(s13,5)+s13*s13*(6*s23*(s14*s14)+s14*(-2*s23*s24+3*(s23*s23)-s24*s24)+(s23+s24)*(s24*s24)+pow(s14,3)))+3*(s12*s12)*(s13*s13*(2*s14*(s23-s24)+s24*(2*s23+3*s24)+3*(s14*s14))+s14*s23*(s14*(3*s23+2*s24)-(s23+s24)*(s23+s24))+(3*s14+s23+s24)*pow(s13,3)+pow(s13,4)+s13*((5*s23+s24)*(s14*s14)-2*s14*(3*s23*s24+s23*s23+s24*s24)+s24*((s23+s24)*(s23+s24))+pow(s14,3)))+s13*(3*(s14+s23+s24)*(s14*s14)*(s23*s23)+3*s13*s14*s23*(3*s14*s23+s14*s14+s23*s23-s24*s24)+3*(3*s14*s23+s14*s14+s23*s23)*pow(s13,3)+3*(s14+s23)*pow(s13,4)+pow(s13,5)+s13*s13*(9*s23*(s14*s14)+9*s14*(s23*s23)+pow(s14,3)+pow(s23,3)+pow(s24,3)))+pow(s12,3)*(3*(s23+3*s24)*(s13*s13)+3*(3*s23+s24)*(s14*s14)-3*s14*(4*s23*s24+3*(s23*s23)+s24*s24)+3*s13*(4*s23*s24-4*s14*(s23+s24)+2*(s14*s14)+s23*s23+3*(s24*s24))+2*pow(s13,3)+pow(s23+s24,3)))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*(s12*(2*s13+s23+s24)+s13*(s13+s14+s23+s24)+s12*s12)*(s12*(10*s13+14*s14+11*(s23+s24))+10*(s12*s12)+2*(s13*(5*s14+5*s23+2*s24)+s14*(4*s23+7*s24)+2*(s13*s13)+6*(s14*s14)+3*(s23*s24+s23*s23+s24*s24)))*pow(s12+s13+s23,-1)*pow(s12+s23+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1))+32*(8*(s13+s14)*pow(s13,-1)*pow(s12+s23+s24,-1)+8*(s12+2*s14)*pow(s13,-1)*pow(s12+s23+s24,-1)-8*(2*s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s12+s23+s24,-1)-8*s14*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s13+s14,-1)*pow(s12+s23+s24,-1)+8*(s13*(6*s14-s23+2*s24)+s14*(6*s14+5*s23+8*s24)+s12*(s13+10*s14+6*(s23+s24))+6*(s12*s12))*pow(s13,-1)*pow(s13+s14,-1)*pow(s12+s23+s24,-1)+8*(s13+s14)*(2*s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-2*(8*s13*(s12+s23+s24)+4*(s13+s14)*(2*s12-s13+s14+s23+s24))*pow(s13,-1)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-8*((s13+s14)*(s13+s14))*pow(s13,-1)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(7*s14*s23+s13*(s14+6*s23-4*s24)+9*s14*s24+3*s23*s24+s12*(3*s13+12*s14+9*s23+10*s24)+8*(s12*s12)+7*(s13*s13)+6*(s14*s14)+s23*s23+2*(s24*s24))*pow(s13,-1)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)-8*(s12-2*s13+4*s14+s23+s24)*((s13+s14)*(s14+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s14,-1)*pow(s13+s14,-1)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)+8*(s13+s14)*(s12+s14+s24)*(s12+s13+s14+s23+s24)*pow(s13,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2)+((16*s12*(s12+s23+s24)*(s12+s13-s14+s23+s24)-16*(s13+s14)*(s12-s13+s14+s23+s24)*(2*s12+s13+s14+s23+s24))*pow(s13,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-2))/2.+8*(-2*s12+s13+s14)*(s12*(s13-s14)+s13*s23-s14*(s14+s24)+s13*s13)*pow(s13,-1)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*((s13+s14)*(s13+s14))*pow(s13,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-8*(6*s14*s23+10*s14*s24+4*s23*s24+s13*(6*s14+s23+5*s24)+s12*(7*s13+12*s14+6*s23+14*s24)+10*(s12*s12)+6*(s14*s14)+s23*s23+3*(s24*s24))*pow(s13,-1)*pow(s12+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)-16*(-s12+s13-s23-s24)*(2*s12*(s13*(s14+s24)*(2*s14+s23+s24)+s14*(s13*s13)+s14*(s14*(-s23+s24)-s23*(s23+s24)+s14*s14))+s14*((s14+2*s24)*(s13*s13)+2*s13*(2*s14*s24+s24*(s23+s24)+s14*s14)+s14*(2*s14*s24+s14*s14-s23*s23+s24*s24))+s12*s12*(-2*s14*(2*s23+s24)+2*s13*(2*s14+s23+2*s24)-(s23+s24)*(s23+s24))+2*(s13-s14-s23-s24)*pow(s12,3)-pow(s12,4))*pow(s13,-1)*pow(s12+s14+s24,-2)*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*pow(s13,-1)*pow(s12+s14+s24,-3)*(3*(s14*(3*s23+2*s24)-s13*(2*s14+2*s23+3*s24)+s13*s13+s14*s14+(s23+s24)*(s23+s24))*pow(s12,4)+3*(-s13+s14+s23+s24)*pow(s12,5)+pow(s12,6)+3*s12*(s14*(s14+2*s24)*pow(s13,3)+s14*s14*(2*s24*(s14*s14)+(s23+s24)*(s23*s23)+s14*(s23*s23+s24*s24)+pow(s14,3))+s13*s14*(-2*s23*s24*(s23+s24)+6*s24*(s14*s14)-s14*(2*s23*s24+s23*s23-3*(s24*s24))+3*pow(s14,3))+s13*s13*(2*s14*s24*(s23+2*s24)+6*s24*(s14*s14)+(s23+s24)*(s24*s24)+3*pow(s14,3)))+3*(s12*s12)*(s13*s13*(s24*(2*s23+3*s24)+s14*(s23+5*s24)+3*(s14*s14))+s14*pow(s13,3)+s14*(s14*s23*(3*s23+2*s24)+(s23+s24)*(s14*s14)+s23*((s23+s24)*(s23+s24))+pow(s14,3))+s13*(-2*(s23-s24)*(s14*s14)-2*s14*(3*s23*s24+s23*s23+s24*s24)-s24*((s23+s24)*(s23+s24))+3*pow(s14,3)))+s14*((3*s14*s24+s14*s14+3*(s24*s24))*pow(s13,3)+3*(s13*s13)*(3*s24*(s14*s14)+3*s14*(s24*s24)+(s23+s24)*(s24*s24)+pow(s14,3))+3*s13*s14*(3*s24*(s14*s14)-s24*(s23*s23)+3*s14*(s24*s24)+pow(s14,3)+pow(s24,3))+s14*s14*(3*s24*(s14*s14)+3*s14*(s24*s24)+pow(s14,3)+pow(s23,3)+pow(s24,3)))+pow(s12,3)*(-3*s13*(s23+s24)*(4*s14+s23+3*s24)+3*(2*s14+s23+3*s24)*(s13*s13)+3*(3*s23+s24)*(s14*s14)+3*s14*(4*s23*s24+3*(s23*s23)+s24*s24)+2*pow(s14,3)+pow(s23+s24,3)))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1)*pow(2*s12+s13+s14+s23+s24,-1)+8*(s14*(s13+s14+s23+s24)+s12*(2*s14+s23+s24)+s12*s12)*(6*s14*s23+s13*(5*s14+6*s23)+12*s14*s24+5*s23*s24+s12*(6*s13+12*s14+10*s23+11*s24)+10*(s12*s12)+5*(s13*s13)+6*(s14*s14)+5*(s23*s23)+6*(s24*s24))*pow(s13,-1)*pow(s12+s14+s24,-1)*pow(s12+s23+s24,-1)*pow(3*s12*(s13+s14+s23+s24)+2*(s12*s12)+(s13+s14+s23+s24)*(s13+s14+s23+s24),-1)))/512.;
}

// Coefficient of master 8 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yyg4SC<8>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(-1,{
        qq2yyg4SC<8,-1>(s12,s13,s14,s23,s24),
        qq2yyg4SC<8,0>(s12,s13,s14,s23,s24),
        qq2yyg4SC<8,1>(s12,s13,s14,s23,s24)
    });
}

