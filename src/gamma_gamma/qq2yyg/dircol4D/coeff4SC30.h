/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 30: box(-s12-s13-s14-s23-s24,s12+s13+s23,s12)

// Coefficient order epsilon^0 of master 30
template<>
double qq2yyg4SC<30,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s24,-1)*((s13*(7*s23-3*s24)+s14*(6*s23-s24)+2*s23*s24+7*(s23*s23)-3*(s24*s24))*pow(s12,6)+(2*s23-s24)*pow(s12,7)+pow(s12,5)*(2*s14*s23*(11*s23+4*s24)+(8*s23-2*s24)*(s13*s13)+3*(2*s23+s24)*(s14*s14)+13*s24*(s23*s23)+s13*(s14*(14*s23-s24)+8*s23*s24+19*(s23*s23)-8*(s24*s24))-3*s23*(s24*s24)+9*pow(s23,3)-4*pow(s24,3))+pow(s12,4)*(s13*s13*(s14*(7*s23+2*s24)+3*(4*s23*s24+5*(s23*s23)-s24*s24))+8*(s23*s23)*(s24*s24)+s14*s23*(37*s23*s24+29*(s23*s23)+6*(s24*s24))+s14*s14*(17*s23*s24+24*(s23*s23)+9*(s24*s24))+(3*s23+s24)*pow(s13,3)+(2*s23+5*s24)*pow(s14,3)+18*s24*pow(s23,3)+5*pow(s23,4)+s13*(7*(s23+s24)*(s14*s14)+31*s24*(s23*s23)-6*s23*(s24*s24)+s14*(17*s23*s24+41*(s23*s23)+4*(s24*s24))+17*pow(s23,3)-6*pow(s24,3))-9*s23*pow(s24,3)-4*pow(s24,4))+(s14+s24)*(s24*(-(s14*s24*(6*s23+s24))+(4*s23-2*s24)*(s14*s14)+s24*(3*s23*s24-s23*s23+2*(s24*s24)))*pow(s13,3)+(-2*s14+s24)*(s24*s24)*pow(s13,4)+s13*s23*(-4*s14*s23*(3*s23+2*s24)*(s24*s24)+s24*(9*s23+2*s24)*pow(s14,3)+2*s24*pow(s14,4)+s14*s14*(6*s24*(s23*s23)+s23*(s24*s24)+2*pow(s23,3)-pow(s24,3))+s24*s24*(-3*s24*(s23*s23)+s23*(s24*s24)-3*pow(s23,3)+pow(s24,3)))+s14*(s23*s23)*(s14*s14*(3*s23*s24+s23*s23+2*(s24*s24))+2*s24*pow(s14,3)+s14*(4*s24*(s23*s23)+pow(s23,3)-pow(s24,3))-s24*(s24*(s23*s23)+3*s23*(s24*s24)-pow(s23,3)+pow(s24,3)))+s24*(s13*s13)*(9*(s14*s14)*(s23*s23)+6*s23*pow(s14,3)-5*s24*pow(s23,3)+4*s23*pow(s24,3)+s14*(-12*s24*(s23*s23)-4*s23*(s24*s24)-3*pow(s23,3)+pow(s24,3))+pow(s24,4)))+s12*(s24*(-2*s14*s24-2*(s14*s14)+3*(s24*s24))*pow(s13,4)+s24*pow(s13,3)*(-9*s24*(s14*s14)+s14*(-3*s23*s24-2*(s23*s23)+3*(s24*s24))+s24*(6*s23*s24+s23*s23+7*(s24*s24))-2*pow(s14,3))+s13*s13*(3*(5*s23-s24)*s24*pow(s14,3)+s14*s14*(7*s24*(s23*s23)+4*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+3*(s24*s24)*(-(s24*(s23*s23))+4*s23*(s24*s24)-pow(s23,3)+2*pow(s24,3))+s14*s24*(-5*s24*(s23*s23)+7*s23*(s24*s24)-8*pow(s23,3)+10*pow(s24,3)))+s13*(13*s23*s24*pow(s14,4)+pow(s14,3)*(31*s24*(s23*s23)+17*s23*(s24*s24)+5*pow(s23,3)-pow(s24,3))+s23*(s24*s24)*(-10*s24*(s23*s23)-7*s23*(s24*s24)+2*pow(s23,3)+pow(s24,3))+s14*s14*(19*(s23*s23)*(s24*s24)+17*s24*pow(s23,3)+9*pow(s23,4)-s23*pow(s24,3)-2*pow(s24,4))-s14*s24*(16*(s23*s23)*(s24*s24)+s24*pow(s23,3)-8*pow(s23,4)+4*s23*pow(s24,3)+pow(s24,4)))+s23*(s14+s24)*(2*(6*s23*s24+s23*s23+s24*s24)*pow(s14,3)+2*s24*pow(s14,4)+s14*s14*(17*s24*(s23*s23)+5*s23*(s24*s24)+8*pow(s23,3)-2*pow(s24,3))+s14*(-(s23*s23*(s24*s24))+12*s24*pow(s23,3)+3*pow(s23,4)-9*s23*pow(s24,3)-3*pow(s24,4))-s24*(6*(s23*s23)*(s24*s24)+2*s24*pow(s23,3)-pow(s23,4)+4*s23*pow(s24,3)+pow(s24,4))))+pow(s12,3)*((6*s23*s24+s14*(-s23+s24)+3*(s23*s23)+5*(s24*s24))*pow(s13,3)+s24*pow(s13,4)+2*(10*s23*s24+5*(s23*s23)+3*(s24*s24))*pow(s14,3)+2*s24*pow(s14,4)+14*(s24*s24)*pow(s23,3)+10*s24*pow(s23,4)+pow(s23,5)-8*(s23*s23)*pow(s24,3)+s14*s14*(43*s24*(s23*s23)+25*s23*(s24*s24)+33*pow(s23,3)+3*pow(s24,3))+s13*s13*((-s23+s24)*(s14*s14)+24*s24*(s23*s23)+4*s23*(s24*s24)+s14*(8*s23*s24+15*(s23*s23)+10*(s24*s24))+7*pow(s23,3)+4*pow(s24,3))+s13*(s14*s14*(28*s23*s24+25*(s23*s23)+16*(s24*s24))+5*s24*pow(s14,3)+s23*(26*s24*(s23*s23)+11*s23*(s24*s24)+5*pow(s23,3)-9*pow(s24,3))+s14*(49*s24*(s23*s23)+13*s23*(s24*s24)+39*pow(s23,3)+10*pow(s24,3)))+s14*(24*(s23*s23)*(s24*s24)+49*s24*pow(s23,3)+16*pow(s23,4)-6*s23*pow(s24,3)-4*pow(s24,4))-12*s23*pow(s24,4)-3*pow(s24,5))+s12*s12*((-6*s24*(s14*s14)-s14*(s23*s24+s23*s23-3*(s24*s24))+s24*(6*s23*s24+5*(s23*s23)+9*(s24*s24)))*pow(s13,3)+s24*(-s14+3*s24)*pow(s13,4)+s23*(s23+11*s24)*pow(s14,4)+pow(s14,3)*(29*s24*(s23*s23)+20*s23*(s24*s24)+15*pow(s23,3)-pow(s24,3))+s13*s13*(s24*(10*s23+s24)*(s14*s14)-3*s24*pow(s14,3)+s24*(6*s24*(s23*s23)+8*s23*(s24*s24)+9*pow(s23,3)+10*pow(s24,3))+s14*(3*s24*(s23*s23)+8*s23*(s24*s24)+8*pow(s23,3)+16*pow(s24,3)))+s14*s14*(29*(s23*s23)*(s24*s24)+47*s24*pow(s23,3)+18*pow(s23,4)+2*s23*pow(s24,3)-3*pow(s24,4))+s13*((30*s23*s24+3*(s23*s23)+4*(s24*s24))*pow(s14,3)+s14*s14*(40*s24*(s23*s23)+34*s23*(s24*s24)+27*pow(s23,3)+7*pow(s24,3))+s24*(-9*(s23*s23)*(s24*s24)+10*s24*pow(s23,3)+6*pow(s23,4)-2*s23*pow(s24,3)+pow(s24,4))+s14*(18*(s23*s23)*(s24*s24)+37*s24*pow(s23,3)+12*pow(s23,4)+5*s23*pow(s24,3)+4*pow(s24,4)))+s14*(27*(s24*s24)*pow(s23,3)+25*s24*pow(s23,4)+3*pow(s23,5)-12*(s23*s23)*pow(s24,3)-14*s23*pow(s24,4)-3*pow(s24,5))-s24*(5*(s24*s24)*pow(s23,3)-7*s24*pow(s23,4)-2*pow(s23,5)+14*(s23*s23)*pow(s24,3)+7*s23*pow(s24,4)+pow(s24,5))))*pow(s12+s14+s24,-2)*pow(s12+s23+s24,-1))/4.;
}

// Coefficient order epsilon^1 of master 30
template<>
double qq2yyg4SC<30,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s12,-1)*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s24,-1)*((53*s23*s24+s14*(53*s23+47*s24)+s13*(34*s14+40*(s23+s24))+12*(s13*s13)+20*(s14*s14)+25*(s23*s23)+28*(s24*s24))*pow(s12,7)+2*(4*s13+5*s14+6*(s23+s24))*pow(s12,8)+2*pow(s12,9)+pow(s12,6)*((42*s14+48*s23+51*s24)*(s13*s13)+(94*s23+72*s24)*(s14*s14)+83*s24*(s23*s23)+98*s23*(s24*s24)+2*s13*(77*s23*s24+s14*(72*s23+69*s24)+28*(s14*s14)+35*(s23*s23)+40*(s24*s24))+s14*(191*s23*s24+105*(s23*s23)+83*(s24*s24))+8*pow(s13,3)+20*pow(s14,3)+23*pow(s23,3)+34*pow(s24,3))-(s13+s23)*((s14+s24)*(s14+s24))*(-((s14+s23+s24)*(3*s23+2*s24)*(s14*s14)*(s23*s23))+s24*(3*s23*s24+3*(s23*s23)+s24*s24)*pow(s13,3)+s13*s14*s23*(-3*s24*(s23*s23)+s23*(s24*s24)+s14*(-2*s23*s24-6*(s23*s23)+s24*s24)-3*pow(s23,3)+pow(s24,3))+s13*s13*(s14*(3*s24*(s23*s23)+4*s23*(s24*s24)-3*pow(s23,3)+pow(s24,3))+s24*(6*s24*(s23*s23)+4*s23*(s24*s24)+3*pow(s23,3)+pow(s24,3))))+s12*(s14+s24)*(-((s23+s24)*(s14*(-3*s23+2*s24)+s24*(3*s23+2*s24))*pow(s13,4))+s14*(s23*s23)*(s14*s14*(35*s23*s24+23*(s23*s23)+7*(s24*s24))+4*s23*s24*((s23+s24)*(s23+s24))+3*(3*s23+s24)*pow(s14,3)+s14*(37*s24*(s23*s23)+30*s23*(s24*s24)+10*pow(s23,3)+4*pow(s24,3)))+pow(s13,3)*(s14*s14*(3*s23*s24+13*(s23*s23)-4*(s24*s24))+s14*(12*s24*(s23*s23)-17*s23*(s24*s24)+15*pow(s23,3)-9*pow(s24,3))-s24*(13*s24*(s23*s23)+14*s23*(s24*s24)+3*pow(s23,3)+5*pow(s24,3)))+s13*s23*(s24*(4*s23*s24+3*(s23*s23)-s24*s24)*((s23+s24)*(s23+s24))+s23*(44*s23+37*s24)*pow(s14,3)+(7*s23+s24)*pow(s14,4)+s14*s14*(91*s24*(s23*s23)+29*s23*(s24*s24)+45*pow(s23,3)-6*pow(s24,3))+s14*(39*(s23*s23)*(s24*s24)+43*s24*pow(s23,3)+9*pow(s23,4)+s23*pow(s24,3)-6*pow(s24,4)))+s13*s13*((3*s23*s24+17*(s23*s23)-2*(s24*s24))*pow(s14,3)+s14*s14*(47*s24*(s23*s23)-13*s23*(s24*s24)+49*pow(s23,3)-7*pow(s24,3))+s14*(8*(s23*s23)*(s24*s24)+52*s24*pow(s23,3)+21*pow(s23,4)-23*s23*pow(s24,3)-7*pow(s24,4))+s24*(-4*(s23*s23)*(s24*s24)+3*s24*pow(s23,3)+3*pow(s23,4)-7*s23*pow(s24,3)-2*pow(s24,4))))+pow(s12,5)*(124*(s23*s23)*(s24*s24)+s13*s13*(163*s23*s24+2*s14*(69*s23+74*s24)+54*(s14*s14)+68*(s23*s23)+84*(s24*s24))+s14*s14*(265*s23*s24+176*(s23*s23)+93*(s24*s24))+(22*s14+24*s23+30*s24)*pow(s13,3)+2*pow(s13,4)+6*(14*s23+9*s24)*pow(s14,3)+10*pow(s14,4)+57*s24*pow(s23,3)+9*pow(s23,4)+96*s23*pow(s24,3)+s14*(295*s24*(s23*s23)+272*s23*(s24*s24)+97*pow(s23,3)+73*pow(s24,3))+s13*((208*s23+177*s24)*(s14*s14)+213*s24*(s23*s23)+249*s23*(s24*s24)+s14*(462*s23*s24+236*(s23*s23)+209*(s24*s24))+44*pow(s14,3)+55*pow(s23,3)+81*pow(s24,3))+24*pow(s24,4))+pow(s12,4)*((71*s23*s24+s14*(55*s23+65*s24)+20*(s14*s14)+26*(s23*s23)+40*(s24*s24))*pow(s13,3)+(4*s14+4*s23+7*s24)*pow(s13,4)+(173*s23*s24+148*(s23*s23)+49*(s24*s24))*pow(s14,3)+(38*s23+20*s24)*pow(s14,4)+2*pow(s14,5)+70*(s24*s24)*pow(s23,3)+17*s24*pow(s23,4)+pow(s23,5)+96*(s23*s23)*pow(s24,3)+s14*s14*(398*s24*(s23*s23)+271*s23*(s24*s24)+162*pow(s23,3)+56*pow(s24,3))+s13*s13*(20*(8*s23+7*s24)*(s14*s14)+186*s24*(s23*s23)+214*s23*(s24*s24)+2*s14*(195*s23*s24+92*(s23*s23)+89*(s24*s24))+30*pow(s14,3)+41*pow(s23,3)+64*pow(s24,3))+52*s23*pow(s24,4)+s14*(337*(s23*s23)*(s24*s24)+213*s24*pow(s23,3)+41*pow(s23,4)+187*s23*pow(s24,3)+35*pow(s24,4))+s13*(284*(s23*s23)*(s24*s24)+11*(s14*s14)*(47*s23*s24+29*(s23*s23)+17*(s24*s24))+(150*s23+103*s24)*pow(s14,3)+16*pow(s14,4)+135*s24*pow(s23,3)+20*pow(s23,4)+207*s23*pow(s24,3)+s14*(591*s24*(s23*s23)+551*s23*(s24*s24)+184*pow(s23,3)+142*pow(s24,3))+43*pow(s24,4))+10*pow(s24,5))+pow(s12,3)*((9*s23*s24+8*s14*(s23+s24)+2*(s14*s14)+3*(s23*s23)+8*(s24*s24))*pow(s13,4)+(50*s23*s24+63*(s23*s23)+11*(s24*s24))*pow(s14,4)+(7*s23+3*s24)*pow(s14,5)+pow(s14,3)*(246*s24*(s23*s23)+112*s23*(s24*s24)+134*pow(s23,3)+17*pow(s24,3))+pow(s13,3)*((49*s23+34*s24)*(s14*s14)+57*s24*(s23*s23)+66*s23*(s24*s24)+s14*(123*s23*s24+58*(s23*s23)+56*(s24*s24))+6*pow(s14,3)+9*pow(s23,3)+19*pow(s24,3))+s14*s14*(318*(s23*s23)*(s24*s24)+295*s24*pow(s23,3)+72*pow(s23,4)+115*s23*pow(s24,3)+15*pow(s24,4))+s13*s13*(186*(s23*s23)*(s24*s24)+s14*s14*(317*s23*s24+201*(s23*s23)+96*(s24*s24))+(86*s23+48*s24)*pow(s14,3)+6*pow(s14,4)+88*s24*pow(s23,3)+9*pow(s23,4)+126*s23*pow(s24,3)+s14*(388*s24*(s23*s23)+350*s23*(s24*s24)+111*pow(s23,3)+71*pow(s24,3))+18*pow(s24,4))+s24*(39*(s24*s24)*pow(s23,3)+17*s24*pow(s23,4)+2*pow(s23,5)+35*(s23*s23)*pow(s24,3)+15*s23*pow(s24,4)+2*pow(s24,5))+s14*(193*(s24*s24)*pow(s23,3)+72*s24*pow(s23,4)+6*pow(s23,5)+169*(s23*s23)*pow(s24,3)+61*s23*pow(s24,4)+8*pow(s24,5))+s13*((253*s23*s24+217*(s23*s23)+67*(s24*s24))*pow(s14,3)+(52*s23+27*s24)*pow(s14,4)+2*pow(s14,5)+148*(s24*s24)*pow(s23,3)+42*s24*pow(s23,4)+3*pow(s23,5)+185*(s23*s23)*pow(s24,3)+s14*s14*(615*s24*(s23*s23)+392*s23*(s24*s24)+241*pow(s23,3)+70*pow(s24,3))+82*s23*pow(s24,4)+s14*(560*(s23*s23)*(s24*s24)+363*s24*pow(s23,3)+67*pow(s23,4)+271*s23*pow(s24,3)+39*pow(s24,4))+11*pow(s24,5)))+s12*s12*(((4*s23+s24)*(s14*s14)+2*s14*(5*s23*s24+3*(s23*s23)+s24*s24)+s24*(3*s23*s24+3*(s23*s23)+2*(s24*s24)))*pow(s13,4)+pow(s13,3)*(s14*s14*(58*s23*s24+49*(s23*s23)+4*(s24*s24))+(14*s23+3*s24)*pow(s14,3)+s24*(27*s24*(s23*s23)+10*s23*(s24*s24)+12*pow(s23,3)-3*pow(s24,3))+s14*(78*s24*(s23*s23)+51*s23*(s24*s24)+21*pow(s23,3)+2*pow(s24,3)))+s13*s13*((85*s23*s24+102*(s23*s23)+8*(s24*s24))*pow(s14,3)+(16*s23+5*s24)*pow(s14,4)+s14*s14*(288*s24*(s23*s23)+112*s23*(s24*s24)+113*pow(s23,3)-4*pow(s24,3))+s14*(251*(s23*s23)*(s24*s24)+161*s24*pow(s23,3)+24*pow(s23,4)+72*s23*pow(s24,3)-10*pow(s24,4))+s24*(68*(s23*s23)*(s24*s24)+56*s24*pow(s23,3)+15*pow(s23,4)+21*s23*pow(s24,3)-3*pow(s24,4)))+s23*((63*s23*s24+55*(s23*s23)+15*(s24*s24))*pow(s14,4)+(11*s23+4*s24)*pow(s14,5)+pow(s14,3)*(181*s24*(s23*s23)+115*s23*(s24*s24)+60*pow(s23,3)+22*pow(s24,3))+s24*s24*(7*(s23*s23)*(s24*s24)+5*s24*pow(s23,3)+pow(s23,4)+5*s23*pow(s24,3)+2*pow(s24,4))+s14*s24*(63*(s23*s23)*(s24*s24)+49*s24*pow(s23,3)+10*pow(s23,4)+30*s23*pow(s24,3)+8*pow(s24,4))+s14*s14*(182*(s23*s23)*(s24*s24)+104*s24*pow(s23,3)+12*pow(s23,4)+88*s23*pow(s24,3)+17*pow(s24,4)))+s13*((45*s23*s24+71*(s23*s23)+9*(s24*s24))*pow(s14,4)+3*(2*s23+s24)*pow(s14,5)+pow(s14,3)*(279*s24*(s23*s23)+89*s23*(s24*s24)+153*pow(s23,3)+9*pow(s24,3))+s14*s14*(337*(s23*s23)*(s24*s24)+350*s24*pow(s23,3)+83*pow(s23,4)+72*s23*pow(s24,3)+4*pow(s24,4))+s24*(70*(s24*s24)*pow(s23,3)+36*s24*pow(s23,4)+6*pow(s23,5)+46*(s23*s23)*pow(s24,3)+9*s23*pow(s24,4)+pow(s24,5))+s14*(266*(s24*s24)*pow(s23,3)+109*s24*pow(s23,4)+9*pow(s23,5)+179*(s23*s23)*pow(s24,3)+31*s23*pow(s24,4)+2*pow(s24,5)))))*pow(s12+s14+s24,-2)*pow(s12+s23+s24,-1))/4.;
}

// Coefficient order epsilon^2 of master 30
template<>
double qq2yyg4SC<30,2>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s12,-1)*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s24,-1)*((79*s23*s24+4*s13*(17*s14+26*s23+5*s24)+2*s14*(67*s23+14*s24)+24*(s13*s13)+40*(s14*s14)+80*(s23*s23)-16*(s24*s24))*pow(s12,7)+(16*s13+20*s14+32*s23+7*s24)*pow(s12,8)+4*pow(s12,9)+pow(s12,6)*(12*(7*s14+2*(5*s23+s24))*(s13*s13)+(227*s23+38*s24)*(s14*s14)+192*s24*(s23*s23)+s13*(229*s23*s24+s14*(358*s23+70*s24)+112*(s14*s14)+204*(s23*s23)-74*(s24*s24))+s14*(263*s23*s24+310*(s23*s23)-56*(s24*s24))+32*s23*(s24*s24)+16*pow(s13,3)+40*pow(s14,3)+88*pow(s23,3)-57*pow(s24,3))-4*(s13+s23)*((s14+s24)*(s14+s24))*(s24*(s23*s24+s23*s23+s24*s24)*pow(s13,3)-(s14+s23+s24)*(s14*s14)*pow(s23,3)-s13*s14*s23*(s24*(s23*s23)+s23*(s24*s24)+s14*(2*(s23*s23)+s24*s24)+pow(s23,3)+pow(s24,3))+s13*s13*(s14*(s24*(s23*s23)-pow(s23,3)+pow(s24,3))+s24*(2*s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3))))+s12*(s14+s24)*((2*s14*(2*s23*s24+2*(s23*s23)-5*(s24*s24))-s24*(4*s23*s24+4*(s23*s23)+19*(s24*s24)))*pow(s13,4)+s14*(s23*s23)*(s14*s14*(37*s23*s24+38*(s23*s23)-6*(s24*s24))+(17*s23-2*s24)*pow(s14,3)+s14*(57*s24*(s23*s23)+28*s23*(s24*s24)+20*pow(s23,3)-7*pow(s24,3))+s24*(23*s24*(s23*s23)+8*s23*(s24*s24)+12*pow(s23,3)-3*pow(s24,3)))+pow(s13,3)*(s14*s14*(4*s23*s24+20*(s23*s23)-22*(s24*s24))+2*s14*(11*s24*(s23*s23)-8*s23*(s24*s24)+10*pow(s23,3)-27*pow(s24,3))-s24*(11*s24*(s23*s23)+51*s23*(s24*s24)+4*pow(s23,3)+35*pow(s24,3)))+s13*s13*(2*(-(s23*s24)+14*(s23*s23)-6*(s24*s24))*pow(s14,3)+s14*s14*(53*s24*(s23*s23)-19*s23*(s24*s24)+74*pow(s23,3)-32*pow(s24,3))+s14*(31*(s23*s23)*(s24*s24)+77*s24*pow(s23,3)+28*pow(s23,4)-64*s23*pow(s24,3)-33*pow(s24,4))+s24*(-33*(s23*s23)*(s24*s24)+9*s24*pow(s23,3)+4*pow(s23,4)-53*s23*pow(s24,3)-13*pow(s24,4)))+s13*s23*(2*(10*s23*s24+35*(s23*s23)-7*(s24*s24))*pow(s14,3)+2*(6*s23-s24)*pow(s14,4)+s14*s14*(120*s24*(s23*s23)+20*s23*(s24*s24)+72*pow(s23,3)-27*pow(s24,3))+s14*(76*(s23*s23)*(s24*s24)+67*s24*pow(s23,3)+12*pow(s23,4)+s23*pow(s24,3)-24*pow(s24,4))+s24*(5*(s23*s23)*(s24*s24)+14*s24*pow(s23,3)+4*pow(s23,4)-14*s23*pow(s24,3)-9*pow(s24,4))))+pow(s12,5)*(s13*s13*(253*s23*s24+s14*(330*s23+74*s24)+108*(s14*s14)+172*(s23*s23)-116*(s24*s24))+s14*s14*(330*s23*s24+476*(s23*s23)-84*(s24*s24))+151*(s23*s23)*(s24*s24)+4*(11*s14+14*s23+4*s24)*pow(s13,3)+4*pow(s13,4)+(197*s23+16*s24)*pow(s14,3)+20*pow(s14,4)+191*s24*pow(s23,3)+44*pow(s23,4)+s13*((491*s23+72*s24)*(s14*s14)+463*s24*(s23*s23)+s14*(617*s23*s24+640*(s23*s23)-209*(s24*s24))+78*s23*(s24*s24)+88*pow(s14,3)+164*pow(s23,3)-198*pow(s24,3))+s14*(603*s24*(s23*s23)+63*s23*(s24*s24)+326*pow(s23,3)-145*pow(s24,3))-78*s23*pow(s24,3)-65*pow(s24,4))+s12*s12*(((8*s23-2*s24)*(s14*s14)+s24*(12*s23*s24+4*(s23*s23)-29*(s24*s24))+s14*(24*s23*s24+8*(s23*s23)-26*(s24*s24)))*pow(s13,4)+pow(s13,3)*(s14*s14*(80*s23*s24+82*(s23*s23)-99*(s24*s24))+(28*s23-6*s24)*pow(s14,3)+s14*(145*s24*(s23*s23)+24*s23*(s24*s24)+28*pow(s23,3)-195*pow(s24,3))+s24*(66*s24*(s23*s23)-55*s23*(s24*s24)+16*pow(s23,3)-113*pow(s24,3)))+s13*s13*(2*(39*s23*s24+93*(s23*s23)-52*(s24*s24))*pow(s14,3)+8*(4*s23-s24)*pow(s14,4)+s14*s14*(441*s24*(s23*s23)-29*s23*(s24*s24)+192*pow(s23,3)-254*pow(s24,3))+s14*(349*(s23*s23)*(s24*s24)+283*s24*pow(s23,3)+32*pow(s23,4)-211*s23*pow(s24,3)-241*pow(s24,4))+s24*(43*(s23*s23)*(s24*s24)+113*s24*pow(s23,3)+20*pow(s23,4)-158*s23*pow(s24,3)-83*pow(s24,4)))+s23*((76*s23*s24+113*(s23*s23)-28*(s24*s24))*pow(s14,4)+(26*s23-6*s24)*pow(s14,5)+pow(s14,3)*(299*s24*(s23*s23)+69*s23*(s24*s24)+134*pow(s23,3)-56*pow(s24,3))+s14*s14*(278*(s23*s23)*(s24*s24)+241*s24*pow(s23,3)+36*pow(s23,4)-s23*pow(s24,3)-59*pow(s24,4))+s14*s24*(93*(s23*s23)*(s24*s24)+134*s24*pow(s23,3)+40*pow(s23,4)-33*s23*pow(s24,3)-32*pow(s24,4))+s24*s24*(s23*s23*(s24*s24)+15*s24*pow(s23,3)+8*pow(s23,4)-13*s23*pow(s24,3)-7*pow(s24,4)))+s13*((14*s23*s24+137*(s23*s23)-32*(s24*s24))*pow(s14,4)+4*(3*s23-s24)*pow(s14,5)+pow(s14,3)*(367*s24*(s23*s23)-86*s23*(s24*s24)+290*pow(s23,3)-83*pow(s24,3))+s14*s14*(346*(s23*s23)*(s24*s24)+603*s24*pow(s23,3)+160*pow(s23,4)-235*s23*pow(s24,3)-102*pow(s24,4))+s14*(445*(s24*s24)*pow(s23,3)+214*s24*pow(s23,4)+12*pow(s23,5)+89*(s23*s23)*pow(s24,3)-227*s23*pow(s24,4)-63*pow(s24,5))+s24*(91*(s24*s24)*pow(s23,3)+73*s24*pow(s23,4)+8*pow(s23,5)-38*(s23*s23)*pow(s24,3)-80*s23*pow(s24,4)-16*pow(s24,5))))+pow(s12,3)*((20*s23*s24+s14*(16*s23+3*s24)+4*(s14*s14)+4*(s23*s23)-13*(s24*s24))*pow(s13,4)+(29*s23*s24+148*(s23*s23)-20*(s24*s24))*pow(s14,4)+(17*s23-4*s24)*pow(s14,5)+pow(s13,3)*((102*s23+5*s24)*(s14*s14)+s14*(189*s23*s24+106*(s23*s23)-127*(s24*s24))+12*pow(s14,3)+3*(39*s24*(s23*s23)+17*s23*(s24*s24)+4*pow(s23,3)-51*pow(s24,3)))+pow(s14,3)*(377*s24*(s23*s23)-48*s23*(s24*s24)+325*pow(s23,3)-43*pow(s24,3))+s13*s13*(s14*s14*(379*s23*s24+414*(s23*s23)-247*(s24*s24))+286*(s23*s23)*(s24*s24)+4*(45*s23-2*s24)*pow(s14,3)+12*pow(s14,4)+184*s24*pow(s23,3)+12*pow(s23,4)+2*s14*(348*s24*(s23*s23)+51*s23*(s24*s24)+107*pow(s23,3)-219*pow(s24,3))-160*s23*pow(s24,3)-219*pow(s24,4))+s14*s14*(297*(s23*s23)*(s24*s24)+627*s24*pow(s23,3)+214*pow(s23,4)-164*s23*pow(s24,3)-49*pow(s24,4))+s13*((233*s23*s24+470*(s23*s23)-153*(s24*s24))*pow(s14,3)+(111*s23-16*s24)*pow(s14,4)+4*pow(s14,5)+287*(s24*s24)*pow(s23,3)+103*s24*pow(s23,4)+4*pow(s23,5)+s14*s14*(991*s24*(s23*s23)-33*s23*(s24*s24)+550*pow(s23,3)-318*pow(s24,3))+84*(s23*s23)*pow(s24,3)+s14*(656*(s23*s23)*(s24*s24)+774*s24*pow(s23,3)+152*pow(s23,4)-349*s23*pow(s24,3)-271*pow(s24,4))-201*s23*pow(s24,4)-86*pow(s24,5))+s14*(374*(s24*s24)*pow(s23,3)+245*s24*pow(s23,4)+28*pow(s23,5)+30*(s23*s23)*pow(s24,3)-151*s23*pow(s24,4)-29*pow(s24,5))+s24*(51*(s24*s24)*pow(s23,3)+66*s24*pow(s23,4)+16*pow(s23,5)-37*(s23*s23)*pow(s24,3)-47*s23*pow(s24,4)-7*pow(s24,5)))+pow(s12,4)*((123*s23*s24+s14*(122*s23+35*s24)+40*(s14*s14)+52*(s23*s23)-71*(s24*s24))*pow(s13,3)+(8*s14+8*s23+5*s24)*pow(s13,4)+(181*s23*s24+368*(s23*s23)-64*(s24*s24))*pow(s14,3)+(89*s23-5*s24)*pow(s14,4)+4*pow(s14,5)+161*(s24*s24)*pow(s23,3)+87*s24*pow(s23,4)+8*pow(s23,5)+s13*s13*((358*s23+50*s24)*(s14*s14)+390*s24*(s23*s23)+s14*(534*s23*s24+428*(s23*s23)-253*(s24*s24))+82*s23*(s24*s24)+60*pow(s14,3)+88*pow(s23,3)-265*pow(s24,3))+s14*s14*(710*s24*(s23*s23)+11*s23*(s24*s24)+467*pow(s23,3)-131*pow(s24,3))+15*(s23*s23)*pow(s24,3)+s13*(s14*s14*(605*s23*s24+781*(s23*s23)-256*(s24*s24))+367*(s23*s23)*(s24*s24)+2*(168*s23+5*s24)*pow(s14,3)+32*pow(s14,4)+349*s24*pow(s23,3)+52*pow(s23,4)+s14*(1119*s24*(s23*s23)+104*s23*(s24*s24)+490*pow(s23,3)-419*pow(s24,3))-177*s23*pow(s24,3)-190*pow(s24,4))+s14*(371*(s23*s23)*(s24*s24)+573*s24*pow(s23,3)+158*pow(s23,4)-185*s23*pow(s24,3)-110*pow(s24,4))-103*s23*pow(s24,4)-34*pow(s24,5)))*pow(s12+s14+s24,-2)*pow(s12+s23+s24,-1))/4.;
}

// Coefficient of master 30 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yyg4SC<30>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(0,{
        qq2yyg4SC<30,0>(s12,s13,s14,s23,s24),
        qq2yyg4SC<30,1>(s12,s13,s14,s23,s24),
        qq2yyg4SC<30,2>(s12,s13,s14,s23,s24)
    });
}

