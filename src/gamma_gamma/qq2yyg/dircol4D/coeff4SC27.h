/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 27: box(-s12-s23-s24,s12+s14+s24,s14)

// Coefficient order epsilon^0 of master 27
template<>
double qq2yyg4SC<27,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (2*(s12+s24)*pow(s14,-1)*(s14*s24*(s23+s24)*(s13*s13)-s14*(s14+s24)*(s23+2*s24)*(s23*s23)-s13*s23*(s14*s23*s24+(s23+s24)*(s14*s14)+s23*(s24*s24))+2*s14*(s13+s14+s23+s24)*pow(s12,3)+s14*pow(s12,4)+s12*(s14*(s23+2*s24)*(s13*s13)+s13*(s14*s24*(3*s23+2*s24)+2*(s23+s24)*(s14*s14)-s24*(s23*s23))-s23*(s23*s24*(s23+s24)+s14*s23*(s23+2*s24)-s24*(s14*s14)-pow(s14,3)))+s12*s12*(s14*s24*(2*s23+s24)+s13*s14*(2*s14+3*s23+4*s24)+s14*(s13*s13)+(3*s23+2*s24)*(s14*s14)-s24*(s23*s23)+pow(s14,3)))*pow(s12+s13+s14,-1)*pow(s23,-3)-2*(s24*(s23+s24)*(s13*s13)+s13*s14*(s23*s23)+s14*s14*(s23*s23)+s12*s12*(2*s23*s24+2*s14*(2*s23+s24)+s13*(2*s14+3*s23+4*s24)+s13*s13+s14*s14-s23*s23+s24*s24)+s12*(2*s14*s23*(s14+s24)+(s23+2*s24)*(s13*s13)+s13*(3*s23*s24+s14*(3*s23+2*s24)-s23*s23+2*(s24*s24)))+2*(s13+s14+s23+s24)*pow(s12,3)+pow(s12,4))*pow(s13,-1)*pow(s23,-2)-2*(s14*s24*(s13*(s23+s24)-s23*(2*s23+3*s24))-s23*(s23+s24)*(s14*s14)+(s13*s24-2*s23*s24-2*(s23*s23))*(s24*s24)+s12*s12*(-2*s14*(s23-2*s24)-10*s23*s24+s13*(s23+5*s24)-7*(s23*s23)+4*(s24*s24))+s12*(s13*(s14*(-s23+s24)+s24*(s23+4*s24))+(-s23+s24)*(s14*s14)+s24*(-7*s23*s24-8*(s23*s23)+s24*s24)+s14*(-5*s23*s24-4*(s23*s23)+2*(s24*s24)))+(2*s13+2*s14-5*s23+5*s24)*pow(s12,3)+2*pow(s12,4))*pow(s12+s13+s14,-1)*pow(s23,-2)-pow(s13,-1)*pow(s14,-1)*(-4*(s13+s14)*(s14-s23-s24)*(s14+s24)+4*s12*(s14*(s14+s23+s24)+s13*(s14+s23+2*s24))+4*s13*(s12*s12)+2*(s12-s14+s24)*(2*s12*s13*s24*(s13+s14+s23+s24)+s12*s12*(2*s13*(s14+s23+2*s24)+s13*s13+(s14+s23+s24)*(s14+s23+s24))+(s14*s23-s13*s24)*(s14*s23-s13*s24)+2*(s13+s14+s23+s24)*pow(s12,3)+pow(s12,4))*pow(s23,-2)+2*(-(s14*s23)+s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*(-(s13*s14)+s14*s23+s14*s24+s23*s24+s12*(2*s14+s23+s24)-2*(s14*s14)+s24*s24)*pow(s23,-1))-4*s12*(s24*(s23+s24)*(s13*s13)+s12*(s23*(2*s14+s23)*(s14+s24)+s13*(2*s24*(s23+s24)+s14*(3*s23+2*s24))+(s23+2*s24)*(s13*s13))+s13*(2*s14+s24)*(s23*s23)+s14*(2*s14+s24)*(s23*s23)+s12*s12*(s23*s24+2*s13*(s14+s23+2*s24)+s14*(3*s23+2*s24)+s13*s13+s14*s14+s23*s23+s24*s24)+(2*s13+2*s14+s23+2*s24)*pow(s12,3)+pow(s12,4))*pow(s13,-1)*pow(s23,-2)*pow(s24,-1)+2*pow(s13,-1)*pow(s14,-1)*(-2*(s12*s12)*(s13*(2*s14+s24)+4*s14*(s14+s23+2*s24)+s13*s13)+2*(s14+s24)*(s14*s23*(s14-s23-s24)+s13*(s14*(s23-s24)+s24*(s23+s24))-s24*(s13*s13))-2*s12*(s14*(s23+s24)*(3*s14+s23+4*s24)+(s14+2*s24)*(s13*s13)+s13*(s14*(-s23+s24)-s24*(s23+s24)+s14*s14))-2*(s13+4*s14)*pow(s12,3)-(s12+s24)*(-(s14*s23)+s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*(3*s12*s14*s23*(s12+s13+s14+s23+s24)+(s12*s12-s14*s23+s13*s24+s12*(s13+s14+s23+s24))*(s12*s12-s14*s23+s13*s24+s12*(s13+s14+s23+s24)))*pow(s23,-3)+(s14*(2*s23-s24)+s24*(-s13+2*s23+s24)+s12*(-s13+2*s23+3*s24)+2*(s12*s12))*(2*s12*s13*s24*(s13+s14+s23+s24)+s12*s12*(2*s13*(s14+s23+2*s24)+s13*s13+(s14+s23+s24)*(s14+s23+s24))+(s14*s23-s13*s24)*(s14*s23-s13*s24)+2*(s13+s14+s23+s24)*pow(s12,3)+pow(s12,4))*pow(s23,-2)-(-(s14*s23)+s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*(-2*s14*s23*s24+s13*(-(s14*(s23-2*s24))+s24*(-s23+s24))+2*(s14+2*s23+4*s24)*(s12*s12)-3*s23*(s14*s14)+s14*(s23*s23)+s24*(s23*s23)-s14*(s24*s24)+s23*(s24*s24)+s12*(s14*s23+5*s23*s24+s13*(s14-s23+s24)-s14*s14+s23*s23+4*(s24*s24))+4*pow(s12,3))*pow(s23,-1))*pow(s24,-1)-2*(s12+s13+s14)*(-(s14*s23)+s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s13+s14+s23+s24,-1)+2*(s12+s24)*(-(s14*s23)+s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*(s24*(s13+s14+s23+s24)+s12*(2*s23+3*s24)+2*(s12*s12))*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23+s24,-1)+2*(s13+s14)*(s12*(s13+s24)+(s13+s14)*(s14+s24)+s12*s12)*(-(s14*s23)+s13*s24+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s14,-1)*pow(s24,-1)*pow(s12+s13+s14+s23+s24,-1))/8.;
}

// Coefficient order epsilon^1 of master 27
template<>
double qq2yyg4SC<27,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s12,-1)*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-3)*pow(s24,-1)*((36*s23*s24+s14*(37*s23+21*s24)+s13*(20*s14+34*s23+24*s24)+10*(s13*s13)+10*(s14*s14)+22*(s23*s23)+10*(s24*s24))*pow(s12,8)+(5*s13+5*s14+8*s23+5*s24)*pow(s12,9)+pow(s12,10)+pow(s12,7)*((30*s14+56*s23+46*s24)*(s13*s13)+34*(2*s23+s24)*(s14*s14)+82*s24*(s23*s23)+64*s23*(s24*s24)+s14*(136*s23*s24+89*(s23*s23)+34*(s24*s24))+s13*(145*s23*s24+2*s14*(62*s23+39*s24)+30*(s14*s14)+74*(s23*s23)+46*(s24*s24))+10*pow(s13,3)+10*pow(s14,3)+20*pow(s23,3)+10*pow(s24,3))-6*s14*(s14+s24)*(s23+s24)*(s23*s23)*((s14+s23+s24)*(s14*s14)*(s23*s23)+s13*s14*s23*(2*s14*(s23-s24)-s23*s24+s23*s23-2*(s24*s24))+s24*(-s23+s24)*pow(s13,3)+s13*s13*(-(s24*(s23*s23))+s14*(-3*s23*s24+s23*s23+s24*s24)+pow(s24,3)))+pow(s12,6)*(118*(s23*s23)*(s24*s24)+3*(s13*s13)*(75*s23*s24+s14*(50*s23+36*s24)+10*(s14*s14)+30*(s23*s23)+28*(s24*s24))+s14*s14*(193*s23*s24+142*(s23*s23)+42*(s24*s24))+4*(5*s14+11*(s23+s24))*pow(s13,3)+5*pow(s13,4)+(62*s23+26*s24)*pow(s14,3)+5*pow(s14,4)+52*s24*pow(s23,3)-3*pow(s23,4)+56*s23*pow(s24,3)+s14*(265*s24*(s23*s23)+190*s23*(s24*s24)+61*pow(s23,3)+26*pow(s24,3))+s13*(6*(28*s23+15*s24)*(s14*s14)+257*s24*(s23*s23)+243*s23*(s24*s24)+s14*(422*s23*s24+231*(s23*s23)+115*(s24*s24))+20*pow(s14,3)+46*pow(s23,3)+44*pow(s24,3))+5*pow(s24,4))+s12*((2*s23+s24)*pow(s13,5)*pow(s24,3)+s24*pow(s13,4)*(s14*s23*(-2*s23*s24-2*(s23*s23)+s24*s24)+s24*(2*s24*(s23*s23)+7*s23*(s24*s24)-2*pow(s23,3)+pow(s24,3)))-s14*s14*pow(s23,3)*(s14*s14*(71*s23*s24+44*(s23*s23)+25*(s24*s24))+3*(4*s23+3*s24)*pow(s14,3)+2*s24*(19*s24*(s23*s23)+12*s23*(s24*s24)+8*pow(s23,3)+pow(s24,3))+2*s14*(44*s24*(s23*s23)+42*s23*(s24*s24)+11*pow(s23,3)+9*pow(s24,3)))-s23*(s13*s13)*(pow(s14,3)*(19*s24*(s23*s23)+4*s23*(s24*s24)+28*pow(s23,3)-3*pow(s24,3))-2*s23*(4*s23*s24+s23*s23+3*(s24*s24))*pow(s24,3)+s14*s14*(15*(s23*s23)*(s24*s24)+30*s24*pow(s23,3)+26*pow(s23,4)+20*s23*pow(s24,3)-7*pow(s24,4))+2*s14*s24*(8*(s23*s23)*(s24*s24)+6*s24*pow(s23,3)+7*pow(s23,4)+3*s23*pow(s24,3)-2*pow(s24,4)))-pow(s13,3)*(-4*s23*(3*s23*s24+s23*s23+s24*s24)*pow(s24,3)+s14*s24*(13*(s23*s23)*(s24*s24)+12*s24*pow(s23,3)+2*pow(s23,4)-6*s23*pow(s24,3)+pow(s24,4))+s14*s14*(5*(s23*s23)*(s24*s24)+10*s24*pow(s23,3)+8*pow(s23,4)-2*s23*pow(s24,3)+pow(s24,4)))-s13*s14*(s23*s23)*(2*s24*(-2*s23*s24+5*(s23*s23)+s24*s24)*((s23+s24)*(s23+s24))+(20*s23*s24+32*(s23*s23)+s24*s24)*pow(s14,3)+s14*s14*(89*s24*(s23*s23)+14*s23*(s24*s24)+70*pow(s23,3)+5*pow(s24,3))+2*s14*(21*(s23*s23)*(s24*s24)+36*s24*pow(s23,3)+8*pow(s23,4)-2*s23*pow(s24,3)+3*pow(s24,4))))+pow(s12,5)*((165*s23*s24+s14*(76*s23+66*s24)+10*(s14*s14)+46*(s23*s23)+76*(s24*s24))*pow(s13,3)+(5*s14+16*s23+21*s24)*pow(s13,4)+pow(s13,5)+(123*s23*s24+112*(s23*s23)+22*(s24*s24))*pow(s14,3)+(28*s23+9*s24)*pow(s14,4)+pow(s14,5)+48*(s24*s24)*pow(s23,3)-19*s24*pow(s23,4)-12*pow(s23,5)+82*(s23*s23)*pow(s24,3)+s14*s14*(312*s24*(s23*s23)+195*s23*(s24*s24)+60*pow(s23,3)+22*pow(s24,3))+s13*s13*(6*(22*s23+13*s24)*(s14*s14)+290*s24*(s23*s23)+351*s23*(s24*s24)+s14*(463*s23*s24+201*(s23*s23)+143*(s24*s24))+10*pow(s14,3)+30*pow(s23,3)+76*pow(s24,3))+24*s23*pow(s24,4)+s14*(291*(s23*s23)*(s24*s24)+106*s24*pow(s23,3)-40*pow(s23,4)+124*s23*pow(s24,3)+9*pow(s24,4))+s13*(344*(s23*s23)*(s24*s24)+s14*s14*(425*s23*s24+267*(s23*s23)+93*(s24*s24))+2*(50*s23+21*s24)*pow(s14,3)+5*pow(s14,4)+113*s24*pow(s23,3)-19*pow(s23,4)+199*s23*pow(s24,3)+s14*(611*s24*(s23*s23)+540*s23*(s24*s24)+92*pow(s23,3)+77*pow(s24,3))+21*pow(s24,4))+pow(s24,5))+pow(s12,4)*((55*s23*s24+s14*(13*s23+15*s24)+8*(s23*s23)+34*(s24*s24))*pow(s13,4)+2*(s23+2*s24)*pow(s13,5)+(31*s23*s24+44*(s23*s23)+4*(s24*s24))*pow(s14,4)+(5*s23+s24)*pow(s14,5)+2*pow(s14,3)*(77*s24*(s23*s23)+38*s23*(s24*s24)+7*pow(s23,3)+3*pow(s24,3))+pow(s13,3)*((32*s23+22*s24)*(s14*s14)+133*s24*(s23*s23)+235*s23*(s24*s24)+s14*(204*s23*s24+65*(s23*s23)+77*(s24*s24))+2*pow(s23,3)+64*pow(s24,3))+s14*s14*(228*(s23*s23)*(s24*s24)+21*s24*pow(s23,3)-114*pow(s23,4)+83*s23*pow(s24,3)+4*pow(s24,4))+s13*s13*(354*(s23*s23)*(s24*s24)+2*(s14*s14)*(141*s23*s24+75*(s23*s23)+32*(s24*s24))+2*(19*s23+8*s24)*pow(s14,3)+73*s24*pow(s23,3)-26*pow(s23,4)+263*s23*pow(s24,3)+s14*(451*s24*(s23*s23)+521*s23*(s24*s24)+23*pow(s23,3)+81*pow(s24,3))+34*pow(s24,4))-4*s23*(6*(s24*s24)*pow(s23,3)+6*s24*pow(s23,4)+pow(s23,5)-5*(s23*s23)*pow(s24,3)-7*s23*pow(s24,4)-pow(s24,5))+s14*(47*(s24*s24)*pow(s23,3)-130*s24*pow(s23,4)-62*pow(s23,5)+147*(s23*s23)*pow(s24,3)+37*s23*pow(s24,4)+pow(s24,5))+s13*((164*s23*s24+137*(s23*s23)+25*(s24*s24))*pow(s14,3)+(22*s23+6*s24)*pow(s14,4)+103*(s24*s24)*pow(s23,3)-53*s24*pow(s23,4)-24*pow(s23,5)+223*(s23*s23)*pow(s24,3)+s14*s14*(477*s24*(s23*s23)+377*s23*(s24*s24)+36*pow(s23,3)+36*pow(s24,3))+79*s23*pow(s24,4)+s14*(576*(s23*s23)*(s24*s24)+118*s24*pow(s23,3)-115*pow(s23,4)+318*s23*pow(s24,3)+21*pow(s24,4))+4*pow(s24,5)))+s12*s12*(2*(3*s23+2*s24)*(s24*s24)*pow(s13,5)+pow(s13,4)*(s14*(4*s24*(s23*s23)+15*s23*(s24*s24)-2*pow(s23,3)+5*pow(s24,3))+s24*(12*s24*(s23*s23)+37*s23*(s24*s24)-4*pow(s23,3)+9*pow(s24,3)))-s14*(s23*s23)*((53*s23*s24+67*(s23*s23)+6*(s24*s24))*pow(s14,3)+3*(s23+s24)*pow(s14,4)+s14*s14*(216*s24*(s23*s23)+91*s23*(s24*s24)+108*pow(s23,3)-pow(s24,3))+2*s14*(81*(s23*s23)*(s24*s24)+73*s24*pow(s23,3)+15*pow(s23,4)+17*s23*pow(s24,3)-4*pow(s24,4))+2*s24*(13*(s23*s23)*(s24*s24)+19*s24*pow(s23,3)+7*pow(s23,4)-s23*pow(s24,3)-2*pow(s24,4)))+pow(s13,3)*(2*s23*(s14*s14)*(7*s23*s24-4*(s23*s23)+10*(s24*s24))+s14*(33*(s23*s23)*(s24*s24)-26*s24*pow(s23,3)-18*pow(s23,4)+64*s23*pow(s24,3)+3*pow(s24,4))+s24*(65*(s23*s23)*(s24*s24)+6*s24*pow(s23,3)-10*pow(s23,4)+45*s23*pow(s24,3)+4*pow(s24,4)))-s13*s23*(2*(s23*s24+5*(s23*s23)-2*(s24*s24))*pow(s14,4)+pow(s14,3)*(94*s24*(s23*s23)-9*s23*(s24*s24)+141*pow(s23,3)-16*pow(s24,3))+s14*s14*(89*(s23*s23)*(s24*s24)+261*s24*pow(s23,3)+128*pow(s23,4)-34*s23*pow(s24,3)-20*pow(s24,4))+2*s23*s24*(5*(s23*s23)*(s24*s24)+7*s24*pow(s23,3)+2*pow(s23,4)-5*s23*pow(s24,3)-5*pow(s24,4))+2*s14*(56*(s24*s24)*pow(s23,3)+49*s24*pow(s23,4)+7*pow(s23,5)+3*(s23*s23)*pow(s24,3)-17*s23*pow(s24,4)-4*pow(s24,5)))-s13*s13*(pow(s14,3)*(-11*s24*(s23*s23)-15*s23*(s24*s24)+13*pow(s23,3)+pow(s24,3))+4*s23*s24*(-9*(s23*s23)*(s24*s24)+3*s24*pow(s23,3)+3*pow(s23,4)-14*s23*pow(s24,3)-3*pow(s24,4))+s14*s14*(-42*(s23*s23)*(s24*s24)+65*s24*pow(s23,3)+92*pow(s23,4)-55*s23*pow(s24,3)+2*pow(s24,4))+s14*(30*(s24*s24)*pow(s23,3)+98*s24*pow(s23,4)+32*pow(s23,5)-84*(s23*s23)*pow(s24,3)-53*s23*pow(s24,4)+pow(s24,5))))+pow(s12,3)*(6*s24*(s23+s24)*pow(s13,5)+pow(s13,4)*(18*s24*(s23*s23)+69*s23*(s24*s24)+3*s14*(9*s23*s24+2*(s23*s23)+5*(s24*s24))-2*pow(s23,3)+26*pow(s24,3))+pow(s13,3)*(140*(s23*s23)*(s24*s24)+s14*s14*(50*s23*s24+25*(s23*s23)+13*(s24*s24))+4*s24*pow(s23,3)-10*pow(s23,4)+155*s23*pow(s24,3)+s14*(105*s24*(s23*s23)+186*s23*(s24*s24)-10*pow(s23,3)+35*pow(s24,3))+26*pow(s24,4))+s23*(-4*s23*s24*(s23*s24+s23*s23-s24*s24)*((s23+s24)*(s23+s24))+(22*s23*s24-8*(s23*s23)+7*(s24*s24))*pow(s14,4)+(7*s23+s24)*pow(s14,5)+pow(s14,3)*(-77*s24*(s23*s23)+49*s23*(s24*s24)-132*pow(s23,3)+15*pow(s24,3))+s14*s14*(-67*(s23*s23)*(s24*s24)-262*s24*pow(s23,3)-120*pow(s23,4)+66*s23*pow(s24,3)+13*pow(s24,4))-2*s14*(57*(s24*s24)*pow(s23,3)+50*s24*pow(s23,4)+9*pow(s23,5)-2*(s23*s23)*pow(s24,3)-18*s23*pow(s24,4)-2*pow(s24,5)))+s13*s13*((44*s23*s24+39*(s23*s23)+5*(s24*s24))*pow(s14,3)+71*(s24*s24)*pow(s23,3)-40*s24*pow(s23,4)-12*pow(s23,5)+204*(s23*s23)*pow(s24,3)+2*(s14*s14)*(94*s24*(s23*s23)+99*s23*(s24*s24)-10*pow(s23,3)+7*pow(s24,3))+93*s23*pow(s24,4)+s14*(334*(s23*s23)*(s24*s24)-7*s24*pow(s23,3)-90*pow(s23,4)+257*s23*pow(s24,3)+15*pow(s24,4))+6*pow(s24,5))+s13*((16*s23*s24+27*(s23*s23)+s24*s24)*pow(s14,4)+pow(s14,3)*(121*s24*(s23*s23)+84*s23*(s24*s24)-20*pow(s23,3)+3*pow(s24,3))+s14*s14*(252*(s23*s23)*(s24*s24)-69*s24*pow(s23,3)-205*pow(s23,4)+140*s23*pow(s24,3)+3*pow(s24,4))+s14*(26*(s24*s24)*pow(s23,3)-225*s24*pow(s23,4)-94*pow(s23,5)+232*(s23*s23)*pow(s24,3)+84*s23*pow(s24,4)+pow(s24,5))+2*s23*(-22*(s24*s24)*pow(s23,3)-19*s24*pow(s23,4)-2*pow(s23,5)+23*(s23*s23)*pow(s24,3)+36*s23*pow(s24,4)+6*pow(s24,5)))))*pow(s12+s13+s14+s23+s24,-1))/8.;
}

// Coefficient order epsilon^2 of master 27
template<>
double qq2yyg4SC<27,2>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return -(pow(s12,-1)*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-3)*pow(s24,-1)*((8*s23*s24+s14*(13*s23+21*s24)+s13*(20*s14+9*s23+24*s24)+10*(s13*s13)+10*(s14*s14)+3*(s23*s23)+10*(s24*s24))*pow(s12,8)+(5*s13+5*s14+2*s23+5*s24)*pow(s12,9)+pow(s12,10)+pow(s12,7)*(2*(15*s14+8*s23+23*s24)*(s13*s13)+s13*(32*s23*s24+s14*(48*s23+79*s24)+30*(s14*s14)+13*(s23*s23)+46*(s24*s24))+10*pow(s13,3)+2*((16*s23+17*s24)*(s14*s14)+7*s24*(s23*s23)+6*s23*(s24*s24)+s14*(23*s23*s24+14*(s23*s23)+17*(s24*s24))+5*pow(s14,3)+6*pow(s23,3)+5*pow(s24,3)))+s14*(s14+s24)*(s23*s23)*((s14+s23+s24)*(7*s23+4*s24)*(s14*s14)*(s23*s23)+s24*(3*s23*s24-7*(s23*s23)+7*(s24*s24))*pow(s13,3)+s13*s14*s23*(-3*s24*(s23*s23)+s14*(-6*s23*s24+14*(s23*s23)-11*(s24*s24))-21*s23*(s24*s24)+7*pow(s23,3)-11*pow(s24,3))+s13*s13*(s24*(-4*s24*(s23*s23)+10*s23*(s24*s24)-7*pow(s23,3)+7*pow(s24,3))+s14*(-17*s24*(s23*s23)-8*s23*(s24*s24)+7*pow(s23,3)+7*pow(s24,3))))+pow(s12,6)*(28*(s23*s23)*(s24*s24)+3*(s13*s13)*(17*s23*s24+s14*(22*s23+37*s24)+10*(s14*s14)+7*(s23*s23)+28*(s24*s24))+s14*s14*(95*s23*s24+81*(s23*s23)+42*(s24*s24))+2*(10*s14+7*s23+22*s24)*pow(s13,3)+5*pow(s13,4)+(38*s23+26*s24)*pow(s14,3)+5*pow(s14,4)+51*s24*pow(s23,3)+24*pow(s23,4)+8*s23*pow(s24,3)+2*s14*(51*s24*(s23*s23)+30*s23*(s24*s24)+39*pow(s23,3)+13*pow(s24,3))+s13*((90*s23+93*s24)*(s14*s14)+41*s24*(s23*s23)+39*s23*(s24*s24)+s14*(146*s23*s24+94*(s23*s23)+119*(s24*s24))+20*pow(s14,3)+42*pow(s23,3)+44*pow(s24,3))+5*pow(s24,4))+s12*(s23*pow(s13,3)*(s23*(s14*s14)*(30*s23*s24+12*(s23*s23)+23*(s24*s24))+s14*s24*(64*s24*(s23*s23)+36*s23*(s24*s24)+25*pow(s23,3)-4*pow(s24,3))+s24*s24*(16*s24*(s23*s23)+s23*(s24*s24)+14*pow(s23,3)-3*pow(s24,3)))+(s23+s24)*pow(s13,5)*pow(s24,3)+s24*pow(s13,4)*(s24*(-2*s24*(s23*s23)-s23*(s24*s24)+3*pow(s23,3)+pow(s24,3))+s14*(3*s24*(s23*s23)+s23*(s24*s24)+5*pow(s23,3)+pow(s24,3)))+s14*s14*pow(s23,3)*(s14*s14*(83*s23*s24+52*(s23*s23)+30*(s24*s24))+2*(11*s23+6*s24)*pow(s14,3)+s24*(47*s24*(s23*s23)+33*s23*(s24*s24)+22*pow(s23,3)+8*pow(s24,3))+s14*(100*s24*(s23*s23)+93*s23*(s24*s24)+27*pow(s23,3)+26*pow(s24,3)))+s23*(s13*s13)*(s23*(39*s23*s24+46*(s23*s23)+19*(s24*s24))*pow(s14,3)+2*s23*(s24*s24)*(13*s24*(s23*s23)+9*s23*(s24*s24)+6*pow(s23,3)+2*pow(s24,3))+s14*s24*(105*(s23*s23)*(s24*s24)+92*s24*pow(s23,3)+37*pow(s23,4)+47*s23*pow(s24,3)-pow(s24,4))+s14*s14*(113*(s23*s23)*(s24*s24)+91*s24*pow(s23,3)+33*pow(s23,4)+66*s23*pow(s24,3)-pow(s24,4)))+s13*s14*(s23*s23)*((26*s23*s24+56*(s23*s23)-s24*s24)*pow(s14,3)+s14*s14*(130*s24*(s23*s23)+44*s23*(s24*s24)+85*pow(s23,3)+8*pow(s24,3))+s24*(19*(s23*s23)*(s24*s24)+28*s24*pow(s23,3)+15*pow(s23,4)+11*s23*pow(s24,3)+5*pow(s24,4))+s14*(88*(s23*s23)*(s24*s24)+99*s24*pow(s23,3)+20*pow(s23,4)+33*s23*pow(s24,3)+14*pow(s24,4))))+pow(s12,5)*((41*s23*s24+s14*(40*s23+69*s24)+10*(s14*s14)+15*(s23*s23)+76*(s24*s24))*pow(s13,3)+(5*s14+6*s23+21*s24)*pow(s13,4)+pow(s13,5)+(89*s23*s24+105*(s23*s23)+22*(s24*s24))*pow(s14,3)+(22*s23+9*s24)*pow(s14,4)+pow(s14,5)+84*(s24*s24)*pow(s23,3)+77*s24*pow(s23,4)+20*pow(s23,5)+30*(s23*s23)*pow(s24,3)+s14*s14*(232*s24*(s23*s23)+99*s23*(s24*s24)+188*pow(s23,3)+22*pow(s24,3))+s13*s13*(84*(s23+s24)*(s14*s14)+49*s24*(s23*s23)+51*s23*(s24*s24)+s14*(173*s23*s24+111*(s23*s23)+154*(s24*s24))+10*pow(s14,3)+51*pow(s23,3)+76*pow(s24,3))+2*s23*pow(s24,4)+s14*(147*(s23*s23)*(s24*s24)+253*s24*pow(s23,3)+124*pow(s23,4)+34*s23*pow(s24,3)+9*pow(s24,4))+s13*(s14*s14*(218*s23*s24+201*(s23*s23)+102*(s24*s24))+9*(8*s23+5*s24)*pow(s14,3)+5*pow(s14,4)+s14*(265*s24*(s23*s23)+151*s23*(s24*s24)+213*pow(s23,3)+83*pow(s24,3))+3*(18*(s23*s23)*(s24*s24)+45*s24*pow(s23,3)+21*pow(s23,4)+5*s23*pow(s24,3)+7*pow(s24,4)))+pow(s24,5))+pow(s12,4)*((17*s23*s24+s14*(9*s23+16*s24)+4*(s23*s23)+34*(s24*s24))*pow(s13,4)+(s23+4*s24)*pow(s13,5)+(37*s23*s24+64*(s23*s23)+4*(s24*s24))*pow(s14,4)+(5*s23+s24)*pow(s14,5)+pow(s14,3)*(226*s24*(s23*s23)+66*s23*(s24*s24)+216*pow(s23,3)+6*pow(s24,3))+pow(s13,3)*((26*s23+25*s24)*(s14*s14)+s14*(92*s23*s24+52*(s23*s23)+87*(s24*s24))+4*(7*s24*(s23*s23)+9*s23*(s24*s24)+6*pow(s23,3)+16*pow(s24,3)))+s14*s14*(243*(s23*s23)*(s24*s24)+460*s24*pow(s23,3)+250*pow(s23,4)+41*s23*pow(s24,3)+4*pow(s24,4))+s23*s23*(85*(s23*s23)*(s24*s24)+45*s24*pow(s23,3)+6*pow(s23,4)+63*s23*pow(s24,3)+17*pow(s24,4))+s13*s13*(38*(s23*s23)*(s24*s24)+4*(s14*s14)*(41*s23*s24+39*(s23*s23)+20*(s24*s24))+(34*s23+19*s24)*pow(s14,3)+138*s24*pow(s23,3)+52*pow(s23,4)+7*s23*pow(s24,3)+s14*(261*s24*(s23*s23)+140*s23*(s24*s24)+191*pow(s23,3)+96*pow(s24,3))+34*pow(s24,4))+s14*(305*(s24*s24)*pow(s23,3)+307*s24*pow(s23,4)+91*pow(s23,5)+104*(s23*s23)*pow(s24,3)+7*s23*pow(s24,4)+pow(s24,5))+s13*((126*s23*s24+172*(s23*s23)+31*(s24*s24))*pow(s14,3)+7*(3*s23+s24)*pow(s14,4)+176*(s24*s24)*pow(s23,3)+163*s24*pow(s23,4)+36*pow(s23,5)+45*(s23*s23)*pow(s24,3)+3*(s14*s14)*(148*s24*(s23*s23)+56*s23*(s24*s24)+126*pow(s23,3)+15*pow(s24,3))-4*s23*pow(s24,4)+s14*(288*(s23*s23)*(s24*s24)+538*s24*pow(s23,3)+257*pow(s23,4)+55*s23*pow(s24,3)+25*pow(s24,4))+4*pow(s24,5)))+s12*s12*((3*s23+4*s24)*(s24*s24)*pow(s13,5)+pow(s13,4)*(6*s24*pow(s23,3)+3*s23*pow(s24,3)+s14*(10*s24*(s23*s23)+11*s23*(s24*s24)+5*pow(s23,3)+8*pow(s24,3))+9*pow(s24,4))+pow(s13,3)*(s14*s14*(46*s24*(s23*s23)+15*s23*(s24*s24)+36*pow(s23,3)+5*pow(s24,3))+s24*(49*s24*pow(s23,3)+27*pow(s23,4)-10*s23*pow(s24,3)+4*pow(s24,4))+s14*(82*(s23*s23)*(s24*s24)+110*s24*pow(s23,3)+27*pow(s23,4)+4*s23*pow(s24,3)+9*pow(s24,4)))+s14*(s23*s23)*((131*s23*s24+118*(s23*s23)+34*(s24*s24))*pow(s14,3)+2*(13*s23+6*s24)*pow(s14,4)+s14*s14*(307*s24*(s23*s23)+196*s23*(s24*s24)+134*pow(s23,3)+36*pow(s24,3))+s24*(61*(s23*s23)*(s24*s24)+62*s24*pow(s23,3)+23*pow(s23,4)+26*s23*pow(s24,3)+4*pow(s24,4))+s14*(248*(s23*s23)*(s24*s24)+191*s24*pow(s23,3)+39*pow(s23,4)+119*s23*pow(s24,3)+18*pow(s24,4)))+s13*s23*((40*s23*s24+78*(s23*s23)+3*(s24*s24))*pow(s14,4)+pow(s14,3)*(308*s24*(s23*s23)+107*s23*(s24*s24)+243*pow(s23,3)+5*pow(s24,3))+s14*s14*(373*(s23*s23)*(s24*s24)+456*s24*pow(s23,3)+164*pow(s23,4)+112*s23*pow(s24,3)+pow(s24,4))+2*s23*s24*(23*(s23*s23)*(s24*s24)+16*s24*pow(s23,3)+4*pow(s23,4)+15*s23*pow(s24,3)+4*pow(s24,4))+s14*(262*(s24*s24)*pow(s23,3)+156*s24*pow(s23,4)+19*pow(s23,5)+175*(s23*s23)*pow(s24,3)+48*s23*pow(s24,4)-pow(s24,5)))+s13*s13*(pow(s14,3)*(64*s24*(s23*s23)+10*s23*(s24*s24)+83*pow(s23,3)+pow(s24,3))+s23*s24*(83*(s23*s23)*(s24*s24)+100*s24*pow(s23,3)+30*pow(s23,4)+11*s23*pow(s24,3)-6*pow(s24,4))+s14*s14*(176*(s23*s23)*(s24*s24)+303*s24*pow(s23,3)+152*pow(s23,4)+7*s23*pow(s24,3)+2*pow(s24,4))+s14*(327*(s24*s24)*pow(s23,3)+240*s24*pow(s23,4)+42*pow(s23,5)+127*(s23*s23)*pow(s24,3)-10*s23*pow(s24,4)+pow(s24,5))))+pow(s12,3)*(3*s24*(s23+2*s24)*pow(s13,5)+pow(s13,4)*(6*s24*(s23*s23)+15*s23*(s24*s24)+s14*(19*s23*s24+7*(s23*s23)+18*(s24*s24))+3*pow(s23,3)+26*pow(s24,3))+pow(s13,3)*(12*(s23*s23)*(s24*s24)+s14*s14*(41*s23*s24+36*(s23*s23)+20*(s24*s24))+57*s24*pow(s23,3)+13*pow(s23,4)+2*s23*pow(s24,3)+s14*(105*s24*(s23*s23)+60*s23*(s24*s24)+61*pow(s23,3)+47*pow(s24,3))+26*pow(s24,4))+s23*(2*s23*s24*(5*s23*s24+4*(s23*s23)+2*(s24*s24))*((s23+s24)*(s23+s24))+(94*s23*s24+120*(s23*s23)+15*(s24*s24))*pow(s14,4)+5*(3*s23+s24)*pow(s14,5)+pow(s14,3)*(377*s24*(s23*s23)+158*s23*(s24*s24)+246*pow(s23,3)+15*pow(s24,3))+s14*s14*(387*(s23*s23)*(s24*s24)+458*s24*pow(s23,3)+160*pow(s23,4)+110*s23*pow(s24,3)+5*pow(s24,4))+s14*s23*(248*(s23*s23)*(s24*s24)+154*s24*pow(s23,3)+25*pow(s23,4)+156*s23*pow(s24,3)+35*pow(s24,4)))+s13*s13*(2*(21*s23*s24+33*(s23*s23)+5*(s24*s24))*pow(s14,3)+152*(s24*s24)*pow(s23,3)+124*s24*pow(s23,4)+16*pow(s23,5)+17*(s23*s23)*pow(s24,3)+s14*s14*(275*s24*(s23*s23)+88*s23*(s24*s24)+223*pow(s23,3)+28*pow(s24,3))-15*s23*pow(s24,4)+s14*(237*(s23*s23)*(s24*s24)+408*s24*pow(s23,3)+158*pow(s23,4)+24*s23*pow(s24,3)+24*pow(s24,4))+6*pow(s24,5))+s13*(2*(11*s23*s24+26*(s23*s23)+s24*s24)*pow(s14,4)+pow(s14,3)*(260*s24*(s23*s23)+59*s23*(s24*s24)+285*pow(s23,3)+6*pow(s24,3))+s14*s14*(342*(s23*s23)*(s24*s24)+685*s24*pow(s23,3)+381*pow(s23,4)+41*s23*pow(s24,3)+6*pow(s24,4))+s23*(147*(s24*s24)*pow(s23,3)+68*s24*pow(s23,4)+6*pow(s23,5)+113*(s23*s23)*pow(s24,3)+27*s23*pow(s24,4)-3*pow(s24,5))+s14*(493*(s24*s24)*pow(s23,3)+483*s24*pow(s23,4)+129*pow(s23,5)+160*(s23*s23)*pow(s24,3)+s23*pow(s24,4)+2*pow(s24,5)))))*pow(s12+s13+s14+s23+s24,-1))/4.;
}

// Coefficient of master 27 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yyg4SC<27>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(0,{
        qq2yyg4SC<27,0>(s12,s13,s14,s23,s24),
        qq2yyg4SC<27,1>(s12,s13,s14,s23,s24),
        qq2yyg4SC<27,2>(s12,s13,s14,s23,s24)
    });
}

