/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 15: box(s24,-s12-s23-s24,s13)

// Coefficient order epsilon^0 of master 15
template<>
double qq2yyg4LC<15,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-3)*(-((38*s23*s24+2*s14*(9*s23+2*s24)+s13*(6*s14+46*s23+24*s24)+11*(s13*s13)-s14*s14+42*(s23*s23)+5*(s24*s24))*pow(s12,6))-(6*s13+s14+11*s23+4*s24)*pow(s12,7)-pow(s12,8)+(13*s23*s24+12*(s23*s23)+3*(s24*s24))*pow(s13,6)-s14*(2*s23*(s14*s14)+3*s14*(3*s23*s24+s23*s23+2*(s24*s24))+4*(s23+2*s24)*((s23+s24)*(s23+s24)))*pow(s23,4)+pow(s13,5)*(53*s24*(s23*s23)+10*s23*(s24*s24)+3*s14*(9*s23*s24+9*(s23*s23)+2*(s24*s24))+44*pow(s23,3)-pow(s24,3))-pow(s12,5)*((2*s14+45*s23+46*s24)*(s13*s13)+(5*s23-2*s24)*(s14*s14)+126*s24*(s23*s23)+39*s23*(s24*s24)+s14*(54*s23*s24+73*(s23*s23)+3*(s24*s24))+s13*(172*s23*s24+s14*(59*s23+23*s24)-s14*s14+128*(s23*s23)+31*(s24*s24))+4*pow(s13,3)-pow(s14,3)+82*pow(s23,3)+2*pow(s24,3))+pow(s12,4)*(s13*s13*(s14*(s23-21*s24)-237*s23*s24+11*(s14*s14)-40*(s23*s23)-63*(s24*s24))+s14*s14*(-8*s23*s24-33*(s23*s23)+2*(s24*s24))-2*s14*s23*(93*s23*s24+68*(s23*s23)+19*(s24*s24))+4*(5*s14+11*s23-7*s24)*pow(s13,3)+9*pow(s13,4)+2*(s23+s24)*pow(s14,3)-s23*(206*s24*(s23*s23)+107*s23*(s24*s24)+93*pow(s23,3)+12*pow(s24,3))-s13*(17*s23*(s14*s14)+446*s24*(s23*s23)+188*s23*(s24*s24)+s14*(198*s23*s24+164*(s23*s23)+23*(s24*s24))+184*pow(s23,3)+15*pow(s24,3)))-s13*pow(s23,3)*(s14*s14*(17*s23*s24+2*(s23*s23)+20*(s24*s24))+4*(3*s23*s24+s23*s23+s24*s24)*((s23+s24)*(s23+s24))+(5*s23+3*s24)*pow(s14,3)+pow(s14,4)+s14*(57*s24*(s23*s23)+77*s23*(s24*s24)+10*pow(s23,3)+30*pow(s24,3)))+s23*pow(s13,3)*(-64*(s23*s23)*(s24*s24)+s14*s14*(54*s23*s24+44*(s23*s23)+7*(s24*s24))+2*(3*s23+s24)*pow(s14,3)-5*s24*pow(s23,3)+24*pow(s23,4)+s14*(90*s24*(s23*s23)-2*s23*(s24*s24)+83*pow(s23,3)-9*pow(s24,3))-40*s23*pow(s24,3)-6*pow(s24,4))+pow(s13,4)*(-7*(s23*s23)*(s24*s24)+s14*s14*(16*s23*s24+20*(s23*s23)+3*(s24*s24))+61*s24*pow(s23,3)+56*pow(s23,4)+s14*(98*s24*(s23*s23)+16*s23*(s24*s24)+83*pow(s23,3)-pow(s24,3))-15*s23*pow(s24,3)-2*pow(s24,4))+pow(s12,3)*((-58*s23*s24+3*s14*(47*s23+9*s24)+23*(s14*s14)+216*(s23*s23)-50*(s24*s24))*pow(s13,3)+(27*s14+107*s23+12*s24)*pow(s13,4)+10*pow(s13,5)+s13*s13*(2*(20*s23+7*s24)*(s14*s14)-439*s24*(s23*s23)+s14*(-137*s23*s24+66*(s23*s23)-33*(s24*s24))-294*s23*(s24*s24)+5*pow(s14,3)+24*pow(s23,3)-34*pow(s24,3))-s23*(s14*s14*(45*s23*s24+62*(s23*s23)-2*(s24*s24))+2*(s23-3*s24)*pow(s14,3)+s14*(290*s24*(s23*s23)+118*s23*(s24*s24)+139*pow(s23,3)+6*pow(s24,3))+s23*(182*s24*(s23*s23)+137*s23*(s24*s24)+63*pow(s23,3)+26*pow(s24,3)))-s13*(401*(s23*s23)*(s24*s24)+s14*s14*(41*s23*s24+59*(s23*s23)+s24*s24)+(5*s23-s24)*pow(s14,3)+pow(s14,4)+572*s24*pow(s23,3)+158*pow(s23,4)+69*s23*pow(s24,3)+s14*(488*s24*(s23*s23)+162*s23*(s24*s24)+208*pow(s23,3)+7*pow(s24,3))+2*pow(s24,4)))+s13*s13*(s23*s23)*(s14*s14*(30*s23*s24+25*(s23*s23)+2*(s24*s24))+(3*s23+7*s24)*pow(s14,3)+pow(s14,4)+s14*(-22*s24*(s23*s23)-69*s23*(s24*s24)+21*pow(s23,3)-22*pow(s24,3))-2*(41*(s23*s23)*(s24*s24)+23*s24*pow(s23,3)+2*pow(s23,4)+23*s23*pow(s24,3)+3*pow(s24,4)))+s12*s12*((110*s23*s24+s14*(133*s23+45*s24)+12*(s14*s14)+262*(s23*s23)-7*(s24*s24))*pow(s13,4)+2*(5*s14+33*s23+10*s24)*pow(s13,5)+3*pow(s13,6)+pow(s13,3)*((83*s23+30*s24)*(s14*s14)-3*s24*(s23*s23)+s14*(115*s23*s24+323*(s23*s23)-3*(s24*s24))-170*s23*(s24*s24)+6*pow(s14,3)+300*pow(s23,3)-32*pow(s24,3))-s23*s23*(s14*s14*(67*s23*s24+53*(s23*s23)+8*(s24*s24))+(8*s23-6*s24)*pow(s14,3)+12*s23*(7*s24*(s23*s23)+7*s23*(s24*s24)+2*pow(s23,3)+2*pow(s24,3))+2*s14*(117*s24*(s23*s23)+77*s23*(s24*s24)+41*pow(s23,3)+10*pow(s24,3)))+s13*s13*(-460*(s23*s23)*(s24*s24)+s14*s14*(27*s23*s24+72*(s23*s23)+s24*s24)+(13*s23+5*s24)*pow(s14,3)+pow(s14,4)-403*s24*pow(s23,3)+39*pow(s23,4)+s14*(-201*s24*(s23*s23)-164*s23*(s24*s24)+142*pow(s23,3)-15*pow(s24,3))-117*s23*pow(s24,3)-6*pow(s24,4))-s13*s23*(394*(s23*s23)*(s24*s24)+s14*s14*(99*s23*s24+65*(s23*s23)+19*(s24*s24))+(15*s23+s24)*pow(s14,3)+3*pow(s14,4)+394*s24*pow(s23,3)+86*pow(s23,4)+110*s23*pow(s24,3)+s14*(531*s24*(s23*s23)+331*s23*(s24*s24)+140*pow(s23,3)+39*pow(s24,3))+6*pow(s24,4)))+s12*((78*s23*s24+2*s14*(17*s23+8*s24)+104*(s23*s23)+9*(s24*s24))*pow(s13,5)+(13*s23+6*s24)*pow(s13,6)+pow(s13,4)*((31*s23+14*s24)*(s14*s14)+169*s24*(s23*s23)-15*s23*(s24*s24)+s14*(135*s23*s24+193*(s23*s23)+16*(s24*s24))+218*pow(s23,3)-12*pow(s24,3))-pow(s23,3)*(s14*s14*(41*s23*s24+21*(s23*s23)+14*(s24*s24))+4*s23*(s23+2*s24)*((s23+s24)*(s23+s24))+(7*s23-2*s24)*pow(s14,3)+s14*(96*s24*(s23*s23)+91*s23*(s24*s24)+27*pow(s23,3)+22*pow(s24,3)))+s23*(s13*s13)*(s14*s14*(43*s23*s24+68*(s23*s23)-2*(s24*s24))-311*(s23*s23)*(s24*s24)+(11*s23+12*s24)*pow(s14,3)+2*pow(s14,4)-201*s24*pow(s23,3)+5*pow(s23,4)+s14*(-107*s24*(s23*s23)-197*s23*(s24*s24)+100*pow(s23,3)-42*pow(s24,3))-124*s23*pow(s24,3)-12*pow(s24,4))+pow(s13,3)*(-173*(s23*s23)*(s24*s24)+s14*s14*(70*s23*s24+104*(s23*s23)+7*(s24*s24))+4*(3*s23+s24)*pow(s14,3)+20*s24*pow(s23,3)+156*pow(s23,4)+s14*(191*s24*(s23*s23)-24*s23*(s24*s24)+285*pow(s23,3)-9*pow(s24,3))-75*s23*pow(s24,3)-6*pow(s24,4))-s13*(s23*s23)*(s14*s14*(75*s23*s24+26*(s23*s23)+38*(s24*s24))+5*(3*s23+s24)*pow(s14,3)+3*pow(s14,4)+s14*(275*s24*(s23*s23)+269*s23*(s24*s24)+53*pow(s23,3)+60*pow(s24,3))+2*(91*(s23*s23)*(s24*s24)+70*s24*pow(s23,3)+14*pow(s23,4)+38*s23*pow(s24,3)+3*pow(s24,4)))))*pow(s12+s13+s14+s23+s24,-1))/8.;
}

// Coefficient order epsilon^1 of master 15
template<>
double qq2yyg4LC<15,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-3)*((57*s23*s24+s14*(41*s23+7*s24)+s13*(11*s14+113*s23+35*s24)+23*(s13*s13)-2*(s14*s14)+89*(s23*s23)+s24*s24)*pow(s12,6)+(12*s13+2*s14+23*s23+5*s24)*pow(s12,7)+2*pow(s12,8)-(9*s23*s24+8*(s23*s23)+4*(s24*s24))*pow(s13,6)+pow(s12,5)*((6*s14+183*s23+74*s24)*(s13*s13)+(17*s23+3*s24)*(s14*s14)+200*s24*(s23*s23)+40*s23*(s24*s24)+s14*(105*s23*s24+172*(s23*s23)+5*(s24*s24))+s13*(299*s23*s24+s14*(165*s23+47*s24)-7*(s14*s14)+358*(s23*s23)+28*(s24*s24))+12*pow(s13,3)-2*pow(s14,3)+174*pow(s23,3)-5*pow(s24,3))-pow(s13,5)*(25*s24*(s23*s23)+5*s23*(s24*s24)+s14*(13*s23*s24+15*(s23*s23)+7*(s24*s24))+24*pow(s23,3)-3*pow(s24,3))+pow(s12,4)*(154*(s23*s23)*(s24*s24)+s14*s14*(58*s23*s24+99*(s23*s23)+4*(s24*s24))+s14*s23*(369*s23*s24+326*(s23*s23)+80*(s24*s24))+s13*s13*(506*s23*s24+s14*(168*s23+67*s24)-25*(s14*s14)+456*(s23*s23)+81*(s24*s24))+(-28*s14+90*s23+53*s24)*pow(s13,3)-12*pow(s13,4)+s13*((48*s23+19*s24)*(s14*s14)+s14*(458*s23*s24+552*(s23*s23)+60*(s24*s24))+s23*(839*s23*s24+566*(s23*s23)+277*(s24*s24))-7*pow(s14,3))+(-s23+s24)*pow(s14,3)+334*s24*pow(s23,3)+196*pow(s23,4)+11*s23*pow(s24,3)-3*pow(s24,4))+pow(s13,4)*(59*(s23*s23)*(s24*s24)-s14*s14*(7*s23*s24+15*(s23*s23)+3*(s24*s24))+15*s24*pow(s23,3)-16*pow(s23,4)+41*s23*pow(s24,3)+s14*(-13*s24*(s23*s23)+8*s23*(s24*s24)-27*pow(s23,3)+12*pow(s24,3))+4*pow(s24,4))+s14*pow(s23,3)*(s23*(7*s23+11*s24)*(s14*s14)+38*(s23*s23)*(s24*s24)+26*s24*pow(s23,3)+8*pow(s23,4)+26*s23*pow(s24,3)+s14*(31*s24*(s23*s23)+26*s23*(s24*s24)+11*pow(s23,3)+6*pow(s24,3))+6*pow(s24,4))+pow(s12,3)*((-22*s14*s23-37*(s14*s14)+9*(34*s23*s24+16*(s23*s23)+9*(s24*s24)))*pow(s13,3)-(40*s14+43*s23+10*s24)*pow(s13,4)-16*pow(s13,5)+s13*s13*((-18*s23+7*s24)*(s14*s14)+1115*s24*(s23*s23)+528*s23*(s24*s24)+s14*(557*s23*s24+477*(s23*s23)+123*(s24*s24))-14*pow(s14,3)+548*pow(s23,3)+33*pow(s24,3))+s13*(738*(s23*s23)*(s24*s24)+s14*s14*(199*s23*s24+224*(s23*s23)+35*(s24*s24))+(-11*s23+3*s24)*pow(s14,3)-pow(s14,4)+1121*s24*pow(s23,3)+508*pow(s23,4)+133*s23*pow(s24,3)+s14*(1208*s24*(s23*s23)+427*s23*(s24*s24)+818*pow(s23,3)+31*pow(s24,3))-5*pow(s24,4))+s23*(232*(s23*s23)*(s24*s24)+s14*s14*(187*s23*s24+186*(s23*s23)+29*(s24*s24))+2*(8*s23+7*s24)*pow(s14,3)+297*s24*pow(s23,3)+131*pow(s23,4)+69*s23*pow(s24,3)+s14*(573*s24*(s23*s23)+255*s23*(s24*s24)+334*pow(s23,3)+31*pow(s24,3))+11*pow(s24,4)))+pow(s13,3)*(-(s23*(10*s23+3*s24)*pow(s14,3))+s14*s14*(4*s24*(s23*s23)+8*s23*(s24*s24)-14*pow(s23,3)+6*pow(s24,3))+s14*(143*(s23*s23)*(s24*s24)+105*s24*pow(s23,3)+17*pow(s23,4)+86*s23*pow(s24,3)+6*pow(s24,4))+s23*(187*(s23*s23)*(s24*s24)+105*s24*pow(s23,3)+16*pow(s23,4)+133*s23*pow(s24,3)+31*pow(s24,4)))+s13*(s23*s23)*((23*s23*s24+10*(s23*s23)+6*(s24*s24))*pow(s14,3)-s23*pow(s14,4)+70*(s24*s24)*pow(s23,3)+36*s24*pow(s23,4)+8*pow(s23,5)+66*(s23*s23)*pow(s24,3)+s14*s14*(98*s24*(s23*s23)+84*s23*(s24*s24)+38*pow(s23,3)+36*pow(s24,3))+30*s23*pow(s24,4)+2*s14*(100*(s23*s23)*(s24*s24)+72*s24*pow(s23,3)+21*pow(s23,4)+67*s23*pow(s24,3)+18*pow(s24,4))+6*pow(s24,5))+s23*(s13*s13)*((5*s23*s24-7*(s23*s23)+6*(s24*s24))*pow(s14,3)-2*s23*pow(s14,4)+197*(s24*s24)*pow(s23,3)+110*s24*pow(s23,4)+24*pow(s23,5)+161*(s23*s23)*pow(s24,3)+s14*s14*(78*s24*(s23*s23)+63*s23*(s24*s24)+28*pow(s23,3)+36*pow(s24,3))+56*s23*pow(s24,4)+s14*(290*(s23*s23)*(s24*s24)+223*s24*pow(s23,3)+63*pow(s23,4)+178*s23*pow(s24,3)+36*pow(s24,4))+6*pow(s24,5))+s12*s12*(-((4*s23*s24+s14*(93*s23+48*s24)+17*(s14*s14)+101*(s23*s23)-22*(s24*s24))*pow(s13,4))-(15*s14+51*s23+28*s24)*pow(s13,5)-5*pow(s13,6)+pow(s13,3)*(-2*(40*s23+13*s24)*(s14*s14)+509*s24*(s23*s23)+380*s23*(s24*s24)+s14*(169*s23*s24+25*(s23*s23)+79*(s24*s24))-9*pow(s14,3)+98*pow(s23,3)+49*pow(s24,3))+s13*s13*(1008*(s23*s23)*(s24*s24)+s14*s14*(135*s23*s24+67*(s23*s23)+48*(s24*s24))-(35*s23+4*s24)*pow(s14,3)-2*pow(s14,4)+1130*s24*pow(s23,3)+369*pow(s23,4)+274*s23*pow(s24,3)+s14*(1101*s24*(s23*s23)+572*s23*(s24*s24)+537*pow(s23,3)+74*pow(s24,3))+3*pow(s24,4))+s13*((29*s23*s24+9*(s23*s23)+6*(s24*s24))*pow(s14,3)-3*s23*pow(s14,4)+s14*s14*(439*s24*(s23*s23)+137*s23*(s24*s24)+314*pow(s23,3)+12*pow(s24,3))+s14*(888*(s23*s23)*(s24*s24)+1374*s24*pow(s23,3)+627*pow(s23,4)+200*s23*pow(s24,3)+6*pow(s24,4))+s23*(827*(s23*s23)*(s24*s24)+782*s24*pow(s23,3)+265*pow(s23,4)+343*s23*pow(s24,3)+53*pow(s24,4)))+s23*(2*s23*(17*s23+18*s24)*pow(s14,3)+157*(s24*s24)*pow(s23,3)+137*s24*pow(s23,4)+49*pow(s23,5)+85*(s23*s23)*pow(s24,3)+s14*s14*(243*s24*(s23*s23)+72*s23*(s24*s24)+164*pow(s23,3)+6*pow(s24,3))+30*s23*pow(s24,4)+s14*(328*(s23*s23)*(s24*s24)+450*s24*pow(s23,3)+193*pow(s23,4)+87*s23*pow(s24,3)+12*pow(s24,4))+6*pow(s24,5)))+s12*(-((55*s23*s24+3*s14*(9*s23+7*s24)+66*(s23*s23)+9*(s24*s24))*pow(s13,5))-(11*s23+9*s24)*pow(s13,6)+pow(s13,4)*(-((31*s23+17*s24)*(s14*s14))+8*s24*(s23*s23)+84*s23*(s24*s24)+s14*(-48*s23*s24-87*(s23*s23)+4*(s24*s24))-82*pow(s23,3)+24*pow(s24,3))+pow(s13,3)*(483*(s23*s23)*(s24*s24)+s14*s14*(-8*s23*s24-57*(s23*s23)+14*(s24*s24))-(19*s23+5*s24)*pow(s14,3)+365*s24*pow(s23,3)+48*pow(s23,4)+193*s23*pow(s24,3)+s14*(260*s24*(s23*s23)+233*s23*(s24*s24)+36*pow(s23,3)+55*pow(s24,3))+9*pow(s24,4))+s13*s13*((s23*s24-28*(s23*s23)+6*(s24*s24))*pow(s14,3)-4*s23*pow(s14,4)+2*(s14*s14)*(103*s24*(s23*s23)+53*s23*(s24*s24)+44*pow(s23,3)+9*pow(s24,3))+s14*(746*(s23*s23)*(s24*s24)+834*s24*pow(s23,3)+285*pow(s23,4)+255*s23*pow(s24,3)+12*pow(s24,4))+s23*(758*(s23*s23)*(s24*s24)+557*s24*pow(s23,3)+141*pow(s23,4)+407*s23*pow(s24,3)+73*pow(s24,4)))+s23*s23*(2*s23*(13*s23+17*s24)*pow(s14,3)+40*(s24*s24)*pow(s23,3)+26*s24*pow(s23,4)+8*pow(s23,5)+32*(s23*s23)*pow(s24,3)+s14*s14*(142*s24*(s23*s23)+73*s23*(s24*s24)+69*pow(s23,3)+12*pow(s24,3))+16*s23*pow(s24,4)+2*s14*(93*(s23*s23)*(s24*s24)+87*s24*pow(s23,3)+30*pow(s23,4)+41*s23*pow(s24,3)+9*pow(s24,4))+6*pow(s24,5))+s13*s23*((49*s23*s24+23*(s23*s23)+12*(s24*s24))*pow(s14,3)-3*s23*pow(s14,4)+408*(s24*s24)*pow(s23,3)+272*s24*pow(s23,4)+74*pow(s23,5)+276*(s23*s23)*pow(s24,3)+3*(s14*s14)*(119*s24*(s23*s23)+62*s23*(s24*s24)+61*pow(s23,3)+16*pow(s24,3))+86*s23*pow(s24,4)+s14*(721*(s23*s23)*(s24*s24)+721*s24*pow(s23,3)+249*pow(s23,4)+301*s23*pow(s24,3)+48*pow(s24,4))+12*pow(s24,5))))*pow(s12+s13+s14+s23+s24,-1))/8.;
}

// Coefficient order epsilon^2 of master 15
template<>
double qq2yyg4LC<15,2>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return -(pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-3)*((99*s23*s24+5*s14*(13*s23+8*s24)+s13*(39*s14+121*s23+86*s24)+44*(s13*s13)+8*(s14*s14)+74*(s23*s23)+42*(s24*s24))*pow(s12,6)+(20*s13+10*s14+26*s23+19*s24)*pow(s12,7)+4*pow(s12,8)+(7*s23*s24+4*(s23*s23)+5*(s24*s24))*pow(s13,6)+pow(s13,5)*(34*s24*(s23*s23)+39*s23*(s24*s24)+s14*(20*s23*s24+19*(s23*s23)+7*(s24*s24))+20*pow(s23,3)+8*pow(s24,3))+pow(s12,5)*((68*s14+245*s23+167*s24)*(s13*s13)+(54*s23+25*s24)*(s14*s14)+218*s24*(s23*s23)+168*s23*(s24*s24)+s14*(208*s23*s24+181*(s23*s23)+71*(s24*s24))+s13*(401*s23*s24+s14*(241*s23+132*s24)+23*(s14*s14)+315*(s23*s23)+172*(s24*s24))+56*pow(s13,3)+2*pow(s14,3)+122*pow(s23,3)+49*pow(s24,3))+s14*pow(s23,3)*(22*(s23*s23)*(s24*s24)+s14*s14*(10*s23*s24+7*(s23*s23)+6*(s24*s24))+16*s24*pow(s23,3)+6*pow(s23,4)+s14*(30*s24*(s23*s23)+29*s23*(s24*s24)+11*pow(s23,3)-2*pow(s24,3))+4*s23*pow(s24,3)-8*pow(s24,4))+pow(s13,4)*(106*(s23*s23)*(s24*s24)+s14*s14*(16*s23*s24+19*(s23*s23)+2*(s24*s24))+66*s24*pow(s23,3)+40*pow(s23,4)+s14*(104*s24*(s23*s23)+60*s23*(s24*s24)+82*pow(s23,3)-pow(s24,3))+49*s23*pow(s24,3)+12*pow(s24,4))+pow(s12,4)*(266*(s23*s23)*(s24*s24)+s14*s14*(129*s23*s24+147*(s23*s23)+35*(s24*s24))+s13*s13*(695*s23*s24+s14*(395*s23+183*s24)+31*(s14*s14)+564*(s23*s23)+287*(s24*s24))+2*(35*s14+137*s23+92*s24)*pow(s13,3)+44*pow(s13,4)+(15*s23+4*s24)*pow(s14,3)+264*s24*pow(s23,3)+128*pow(s23,4)+133*s23*pow(s24,3)+s14*(454*s24*(s23*s23)+275*s23*(s24*s24)+280*pow(s23,3)+59*pow(s24,3))+s13*(6*(25*s23+8*s24)*(s14*s14)+769*s24*(s23*s23)+588*s23*(s24*s24)+s14*(612*s23*s24+615*(s23*s23)+199*(s24*s24))+5*pow(s14,3)+462*pow(s23,3)+184*pow(s24,3))+28*pow(s24,4))+s13*(s23*s23)*(2*(6*s23*s24+8*(s23*s23)-s24*s24)*pow(s14,3)+s23*pow(s14,4)+s14*s14*(85*s24*(s23*s23)+26*s23*(s24*s24)+53*pow(s23,3)-54*pow(s24,3))+s14*(78*(s23*s23)*(s24*s24)+94*s24*pow(s23,3)+43*pow(s23,4)-57*s23*pow(s24,3)-60*pow(s24,4))+2*(10*(s24*s24)*pow(s23,3)+3*s24*pow(s23,4)+2*pow(s23,5)+7*(s23*s23)*pow(s24,3)-6*s23*pow(s24,4)-4*pow(s24,5)))-s23*(s13*s13)*((3*s23*s24-12*(s23*s23)+8*(s24*s24))*pow(s14,3)+s23*pow(s14,4)-83*(s24*s24)*pow(s23,3)-31*s24*pow(s23,4)-20*pow(s23,5)-62*(s23*s23)*pow(s24,3)+s14*s14*(-99*s24*(s23*s23)+6*s23*(s24*s24)-92*pow(s23,3)+60*pow(s24,3))+s14*(-139*(s23*s23)*(s24*s24)-204*s24*pow(s23,3)-112*pow(s23,4)+94*s23*pow(s24,3)+54*pow(s24,4))+2*pow(s24,5))+pow(s13,3)*(3*s23*(s23+s24)*pow(s14,3)+135*(s24*s24)*pow(s23,3)+64*s24*pow(s23,4)+40*pow(s23,5)+s14*s14*(60*s24*(s23*s23)+11*s23*(s24*s24)+69*pow(s23,3)-8*pow(s24,3))+89*(s23*s23)*pow(s24,3)+2*s14*(68*(s23*s23)*(s24*s24)+105*s24*pow(s23,3)+69*pow(s23,4)-13*s23*pow(s24,3)-pow(s24,4))+26*s23*pow(s24,4)+6*pow(s24,5))+pow(s12,3)*((664*s23*s24+s14*(353*s23+149*s24)+25*(s14*s14)+522*(s23*s23)+254*(s24*s24))*pow(s13,3)+(42*s14+172*s23+125*s24)*pow(s13,4)+20*pow(s13,5)+(22*s23*s24+40*(s23*s23)+6*(s24*s24))*pow(s14,3)+210*(s24*s24)*pow(s23,3)+189*s24*pow(s23,4)+86*pow(s23,5)+113*(s23*s23)*pow(s24,3)+s14*s14*(267*s24*(s23*s23)+128*s23*(s24*s24)+208*pow(s23,3)+18*pow(s24,3))+s13*s13*((185*s23+34*s24)*(s14*s14)+1123*s24*(s23*s23)+831*s23*(s24*s24)+s14*(776*s23*s24+883*(s23*s23)+204*(s24*s24))+4*pow(s14,3)+694*pow(s23,3)+266*pow(s24,3))+36*s23*pow(s24,4)+s14*(429*(s23*s23)*(s24*s24)+530*s24*pow(s23,3)+260*pow(s23,4)+141*s23*pow(s24,3)+18*pow(s24,4))+s13*(778*(s23*s23)*(s24*s24)+s14*s14*(227*s23*s24+365*(s23*s23)+44*(s24*s24))+31*s23*pow(s14,3)+pow(s14,4)+773*s24*pow(s23,3)+410*pow(s23,4)+410*s23*pow(s24,3)+s14*(1145*s24*(s23*s23)+603*s23*(s24*s24)+832*pow(s23,3)+140*pow(s24,3))+96*pow(s24,4))+6*pow(s24,5))+s12*((95*s23*s24+s14*(26*s23+19*s24)+51*(s23*s23)+38*(s24*s24))*pow(s13,5)+(5*s23+9*s24)*pow(s13,6)+pow(s13,4)*((27*s23+11*s24)*(s14*s14)+295*s24*(s23*s23)+237*s23*(s24*s24)+s14*(200*s23*s24+198*(s23*s23)+33*(s24*s24))+160*pow(s23,3)+61*pow(s24,3))+pow(s13,3)*(2*(s14*s14)*(43*s23*s24+80*(s23*s23)-6*(s24*s24))+488*(s23*s23)*(s24*s24)+(4*s23+s24)*pow(s14,3)+419*s24*pow(s23,3)+230*pow(s23,4)+242*s23*pow(s24,3)+s14*(608*s24*(s23*s23)+235*s23*(s24*s24)+483*pow(s23,3)+20*pow(s24,3))+64*pow(s24,4))+s23*s23*(2*(17*s23*s24+15*(s23*s23)+9*(s24*s24))*pow(s14,3)+2*(s14*s14)*(72*s24*(s23*s23)+58*s23*(s24*s24)+33*pow(s23,3)+7*pow(s24,3))+s14*(136*(s23*s23)*(s24*s24)+118*s24*pow(s23,3)+45*pow(s23,4)+31*s23*pow(s24,3)-12*pow(s24,4))+2*(7*(s24*s24)*pow(s23,3)+7*s24*pow(s23,4)+3*pow(s23,5)-3*(s23*s23)*pow(s24,3)-10*s23*pow(s24,4)-4*pow(s24,5)))+s13*s23*((24*s23*s24+53*(s23*s23)-4*(s24*s24))*pow(s14,3)+3*s23*pow(s14,4)+158*(s24*s24)*pow(s23,3)+106*s24*pow(s23,4)+55*pow(s23,5)+s14*s14*(301*s24*(s23*s23)+85*s23*(s24*s24)+240*pow(s23,3)-40*pow(s24,3))+79*(s23*s23)*pow(s24,3)+s14*(372*(s23*s23)*(s24*s24)+505*s24*pow(s23,3)+255*pow(s23,4)-41*s23*pow(s24,3)-40*pow(s24,4))-12*s23*pow(s24,4)-4*pow(s24,5))+s13*s13*(4*(-2*s23*s24+7*(s23*s23)-2*(s24*s24))*pow(s14,3)-2*s23*pow(s14,4)+433*(s24*s24)*pow(s23,3)+302*s24*pow(s23,4)+165*pow(s23,5)+s14*s14*(235*s24*(s23*s23)-10*s23*(s24*s24)+307*pow(s23,3)-12*pow(s24,3))+267*(s23*s23)*pow(s24,3)+88*s23*pow(s24,4)+s14*(441*(s23*s23)*(s24*s24)+814*s24*pow(s23,3)+521*pow(s23,4)-9*s23*pow(s24,3)+14*pow(s24,4))+18*pow(s24,5)))+s12*s12*((359*s23*s24+s14*(160*s23+77*s24)+9*(s14*s14)+246*(s23*s23)+130*(s24*s24))*pow(s13,4)+(11*s14+53*s23+50*s24)*pow(s13,5)+4*pow(s13,6)+pow(s13,3)*(2*(58*s23+11*s24)*(s14*s14)+833*s24*(s23*s23)+609*s23*(s24*s24)+2*s14*(276*s23*s24+314*(s23*s23)+51*(s24*s24))+pow(s14,3)+494*pow(s23,3)+184*pow(s24,3))+s13*s13*(s14*s14*(170*s23*s24+369*(s23*s23)-5*(s24*s24))+894*(s23*s23)*(s24*s24)+5*(4*s23-s24)*pow(s14,3)-pow(s14,4)+866*s24*pow(s23,3)+476*pow(s23,4)+470*s23*pow(s24,3)+s14*(1203*s24*(s23*s23)+503*s23*(s24*s24)+965*pow(s23,3)+102*pow(s24,3))+120*pow(s24,4))+s23*(2*(21*s23*s24+25*(s23*s23)+9*(s24*s24))*pow(s14,3)+84*(s24*s24)*pow(s23,3)+77*s24*pow(s23,4)+34*pow(s23,5)+23*(s23*s23)*pow(s24,3)+s14*s14*(277*s24*(s23*s23)+180*s23*(s24*s24)+162*pow(s23,3)+34*pow(s24,3))-12*s23*pow(s24,4)+s14*(339*(s23*s23)*(s24*s24)+346*s24*pow(s23,3)+145*pow(s23,4)+109*s23*pow(s24,3)+14*pow(s24,4))-2*pow(s24,5))+s13*((12*s23*s24+63*(s23*s23)-2*(s24*s24))*pow(s14,3)+3*s23*pow(s14,4)+500*(s24*s24)*pow(s23,3)+419*s24*pow(s23,4)+213*pow(s23,5)+291*(s23*s23)*pow(s24,3)+s14*s14*(395*s24*(s23*s23)+103*s23*(s24*s24)+425*pow(s23,3)+14*pow(s24,3))+98*s23*pow(s24,4)+s14*(698*(s23*s23)*(s24*s24)+1076*s24*pow(s23,3)+631*pow(s23,4)+158*s23*pow(s24,3)+34*pow(s24,4))+18*pow(s24,5))))*pow(s12+s13+s14+s23+s24,-1))/8.;
}

// Coefficient of master 15 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yyg4LC<15>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(0,{
        qq2yyg4LC<15,0>(s12,s13,s14,s23,s24),
        qq2yyg4LC<15,1>(s12,s13,s14,s23,s24),
        qq2yyg4LC<15,2>(s12,s13,s14,s23,s24)
    });
}

