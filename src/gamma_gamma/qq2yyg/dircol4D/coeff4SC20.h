/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 20: box(s14,s12+s13+s23,s23)

// Coefficient order epsilon^0 of master 20
template<>
double qq2yyg4SC<20,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (s14*pow(s13,-1)*pow(s12+s13+s14,-3)*pow(s23,-1)*pow(s24,-1)*(2*s13*(4*s13+3*s14+3*s23+2*s24)*pow(s12,6)+2*s13*pow(s12,7)+pow(s12,5)*((18*s14+19*s23+16*s24)*(s13*s13)+s24*(s14*s14+s24*s24)+s13*(10*s23*s24+6*s14*(3*s23+2*s24)+6*(s14*s14)+7*(s23*s23)+3*(s24*s24))+12*pow(s13,3))+s24*(s24*(s23+s24)+s14*(2*s23+s24))*pow(s13,5)+s13*s23*(s14*s14)*((3*s23-s24)*s24*(s14*s14)+s14*(s23+s24)*(s23*s23)+s24*(s23+s24)*(s23*s23)+s24*pow(s14,3))+s14*(s13*s13)*(s23*(s14*s14)*(4*s23*s24+s23*s23-3*(s24*s24))-2*(s23+s24)*(s23*s23)*(s24*s24)-s14*s23*s24*((s23+s24)*(s23+s24))+(3*s23-s24)*s24*pow(s14,3))+s24*(s23*s23)*pow(s14,5)+s24*pow(s13,4)*(s14*s24*(2*s23+3*s24)+(5*s23+s24)*(s14*s14)-s24*(s23*s23)+pow(s24,3))+pow(s13,3)*((5*s23-s24)*s24*pow(s14,3)+s23*(s23+s24)*pow(s24,3)+s14*s24*(pow(s23,3)+pow(s24,3))+s14*s14*(2*s24*(s23*s23)-s23*(s24*s24)+pow(s23,3)+2*pow(s24,3)))+pow(s12,4)*(s13*s13*(32*s23*s24+s14*(43*s23+36*s24)+12*(s14*s14)+15*(s23*s23)+12*(s24*s24))+2*(9*s14+11*s23+12*s24)*pow(s13,3)+8*pow(s13,4)+s24*((2*s23+s24)*(s14*s14)+s14*(s24*s24)+(2*s23+s24)*(s24*s24)+3*pow(s14,3))+s13*(3*(6*s23+5*s24)*(s14*s14)+9*s24*(s23*s23)+4*s23*(s24*s24)+s14*(28*s23*s24+21*(s23*s23)+8*(s24*s24))+2*pow(s14,3)+4*pow(s23,3)+5*pow(s24,3)))+s12*((2*s24*(s14*s14)+s24*(6*s23*s24+5*(s23*s23)+5*(s24*s24))+s14*(14*s23*s24+3*(s23*s23)+10*(s24*s24)))*pow(s13,4)+s24*(s14+3*(s23+s24))*pow(s13,5)+s23*s24*(2*s14+3*s23+s24)*pow(s14,4)+s13*s14*(s24*(s23*s23)*(s23*s24+2*(s23*s23)-s24*s24)+s23*(s14*s14)*(11*s23*s24+4*(s23*s23)+2*(s24*s24))+8*s23*s24*pow(s14,3)+s24*pow(s14,4)+s14*s23*(6*s24*(s23*s23)+2*s23*(s24*s24)+3*pow(s23,3)+pow(s24,3)))+s13*s13*(s23*(4*s23+15*s24)*pow(s14,3)+2*s24*pow(s14,4)+3*s23*(s23+s24)*pow(s24,3)+s14*s24*(-(s24*(s23*s23))+2*s23*(s24*s24)+3*pow(s23,3)+2*pow(s24,3))+2*(s14*s14)*(7*s24*(s23*s23)+2*s23*(s24*s24)+3*pow(s23,3)+2*pow(s24,3)))+pow(s13,3)*(s14*s14*(20*s23*s24+7*(s23*s23)+7*(s24*s24))+2*s24*pow(s14,3)+s24*(-2*s24*(s23*s23)+3*s23*(s24*s24)+pow(s23,3)+4*pow(s24,3))+s14*(13*s24*(s23*s23)+13*s23*(s24*s24)+2*pow(s23,3)+11*pow(s24,3))))+pow(s12,3)*((37*s23*s24+s14*(34*s23+37*s24)+6*(s14*s14)+11*(s23*s23)+18*(s24*s24))*pow(s13,3)+(6*s14+11*s23+16*s24)*pow(s13,4)+2*pow(s13,5)+s24*(s23*(s23+s24)*(s14*s14)+2*s14*s23*(s24*s24)+s23*(s23+s24)*(s24*s24)+2*(3*s23+s24)*pow(s14,3)+3*pow(s14,4))+s13*s13*((29*s23+27*s24)*(s14*s14)+21*s24*(s23*s23)+12*s23*(s24*s24)+s14*(62*s23*s24+34*(s23*s23)+24*(s24*s24))+2*pow(s14,3)+4*pow(s23,3)+10*pow(s24,3))+s13*(s14*s14*(32*s23*s24+21*(s23*s23)+9*(s24*s24))+(6*s23+11*s24)*pow(s14,3)+4*s24*pow(s23,3)+pow(s23,4)+7*s23*pow(s24,3)+s14*(23*s24*(s23*s23)+11*s23*(s24*s24)+12*pow(s23,3)+7*pow(s24,3))+4*pow(s24,4)))+s12*s12*((s14*(9*s23+14*s24)+3*(6*s23*s24+s23*s23+4*(s24*s24)))*pow(s13,4)+2*(s23+2*s24)*pow(s13,5)+s14*s24*(s23*(3*s23+2*s24)*(s14*s14)+s23*s23*(s24*s24)+(6*s23+s24)*pow(s14,3)+pow(s14,4))+pow(s13,3)*(3*(4*s23+5*s24)*(s14*s14)+17*s24*(s23*s23)+13*s23*(s24*s24)+s14*(46*s23*s24+18*(s23*s23)+25*(s24*s24))+pow(s23,3)+10*pow(s24,3))+s13*s13*(s14*s14*(42*s23*s24+23*(s23*s23)+14*(s24*s24))+(5*s23+9*s24)*pow(s14,3)+s24*(-(s24*(s23*s23))+8*s23*(s24*s24)+4*pow(s23,3)+6*pow(s24,3))+s14*(31*s24*(s23*s23)+22*s23*(s24*s24)+9*pow(s23,3)+14*pow(s24,3)))+s13*((21*s23*s24+7*(s23*s23)+4*(s24*s24))*pow(s14,3)+5*s24*pow(s14,4)+2*(s14*s14)*(11*s24*(s23*s23)+5*s23*(s24*s24)+6*pow(s23,3)+pow(s24,3))+s23*s24*(3*s23*(s24*s24)+pow(s23,3)+3*pow(s24,3))+s14*(2*(s23*s23)*(s24*s24)+9*s24*pow(s23,3)+3*pow(s23,4)+4*s23*pow(s24,3)+pow(s24,4)))))*pow(s12+s14+s24,-1)*pow(s12+s23+s24,-1))/4.;
}

// Coefficient order epsilon^1 of master 20
template<>
double qq2yyg4SC<20,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s12,-1)*pow(s13,-1)*pow(s12+s13+s14,-3)*pow(s23,-1)*pow(s24,-1)*((2*s14*(9*s23+13*s24)+s13*(15*s14+39*s23+58*s24)+26*(s13*s13)-12*(s14*s14)+3*(11*s23*s24+4*(s23*s23)+6*(s24*s24)))*pow(s12,8)+2*(7*s13+3*s14+5*s23+6*s24)*pow(s12,9)+3*pow(s12,10)+2*s14*s23*(s13+s23)*(2*s23-s24)*(s14+s24)*(-(s14*s23)+s13*s24)*pow(s13+s14,3)+pow(s12,7)*((3*s14+59*s23+112*s24)*(s13*s13)-2*(25*s23+4*s24)*(s14*s14)+31*s24*(s23*s23)+39*s23*(s24*s24)+s14*(71*s23*s24+18*(s23*s23)+46*(s24*s24))+s13*(133*s23*s24+s14*(29*s23+91*s24)-73*(s14*s14)+37*(s23*s23)+90*(s24*s24))+24*pow(s13,3)-48*pow(s14,3)+6*pow(s23,3)+12*pow(s24,3))+pow(s12,6)*(26*(s23*s23)*(s24*s24)+s14*s14*(-25*s23*s24-78*(s23*s23)+36*(s24*s24))+s13*s13*(s14*(-25*s23+111*s24)-148*(s14*s14)+3*(69*s23*s24+14*(s23*s23)+60*(s24*s24)))+(-21*s14+43*s23+108*s24)*pow(s13,3)+11*pow(s13,4)-2*(90*s23+31*s24)*pow(s14,3)-57*pow(s14,4)+11*s24*pow(s23,3)+pow(s23,4)+19*s23*pow(s24,3)+s14*(63*s24*(s23*s23)+104*s23*(s24*s24)+6*pow(s23,3)+34*pow(s24,3))+s13*(-((257*s23+68*s24)*(s14*s14))+97*s24*(s23*s23)+161*s23*(s24*s24)+s14*(166*s23*s24+3*(s23*s23)+181*(s24*s24))-175*pow(s14,3)+13*pow(s23,3)+62*pow(s24,3))+3*pow(s24,4))+pow(s12,5)*(s23*s24*(s23+3*s24)*((s23+s24)*(s23+s24))+(s14*(-75*s23+49*s24)-129*(s14*s14)+3*(51*s23*s24+7*(s23*s23)+60*(s24*s24)))*pow(s13,3)+(-21*s14+15*s23+52*s24)*pow(s13,4)+2*pow(s13,5)+(-173*s23*s24-252*(s23*s23)+4*(s24*s24))*pow(s14,3)-2*(105*s23+29*s24)*pow(s14,4)-30*pow(s14,5)+s14*s24*(70*s24*(s23*s23)+55*s23*(s24*s24)+17*pow(s23,3)+8*pow(s24,3))+s14*s14*(-39*s24*(s23*s23)+89*s23*(s24*s24)-54*pow(s23,3)+32*pow(s24,3))+s13*s13*(-((443*s23+148*s24)*(s14*s14))+109*s24*(s23*s23)+255*s23*(s24*s24)+s14*(74*s23*s24-71*(s23*s23)+269*(s24*s24))-223*pow(s14,3)+9*pow(s23,3)+128*pow(s24,3))+s13*(81*(s23*s23)*(s24*s24)+s14*s14*(-261*s23*s24-343*(s23*s23)+113*(s24*s24))-(571*s23+195*s24)*pow(s14,3)-147*pow(s14,4)+23*s24*pow(s23,3)+pow(s23,4)+79*s23*pow(s24,3)+s14*(58*s24*(s23*s23)+279*s23*(s24*s24)-21*pow(s23,3)+135*pow(s24,3))+16*pow(s24,4)))-pow(s12,3)*(2*(5*s14*s23-3*s24*(s23+3*s24)+2*(s14*s14))*pow(s13,5)+pow(s13,4)*((98*s23+36*s24)*(s14*s14)+s14*(65*s23*s24+36*(s23*s23)-55*(s24*s24))-2*s24*(31*s23*s24+4*(s23*s23)+34*(s24*s24))+18*pow(s14,3))+pow(s13,3)*(s14*s14*(344*s23*s24+283*(s23*s23)-83*(s24*s24))+(276*s23+70*s24)*pow(s14,3)+30*pow(s14,4)+s14*(153*s24*(s23*s23)-21*s23*(s24*s24)+38*pow(s23,3)-139*pow(s24,3))-s24*(37*s24*(s23*s23)+91*s23*(s24*s24)+2*pow(s23,3)+36*pow(s24,3)))+s13*s13*(-(s23*(s24*s24)*(21*s23*s24+5*(s23*s23)+18*(s24*s24)))+(449*s23*s24+635*(s23*s23)-84*(s24*s24))*pow(s14,3)+54*(6*s23+s24)*pow(s14,4)+22*pow(s14,5)+s14*s14*(542*s24*(s23*s23)+65*s23*(s24*s24)+227*pow(s23,3)-108*pow(s24,3))+s14*(38*(s23*s23)*(s24*s24)+85*s24*pow(s23,3)+12*pow(s23,4)-114*s23*pow(s24,3)-42*pow(s24,4)))+s13*s14*((238*s23*s24+540*(s23*s23)-22*(s24*s24))*pow(s14,3)+2*(79*s23+11*s24)*pow(s14,4)+6*pow(s14,5)+s14*s14*(514*s24*(s23*s23)+8*s23*(s24*s24)+369*pow(s23,3)-26*pow(s24,3))+s23*s24*(4*s24*(s23*s23)-25*s23*(s24*s24)+11*pow(s23,3)-24*pow(s24,3))+s14*(57*(s23*s23)*(s24*s24)+209*s24*pow(s23,3)+48*pow(s23,4)-66*s23*pow(s24,3)-8*pow(s24,4)))+s14*s14*(2*(23*s23*s24+75*(s23*s23)+s24*s24)*pow(s14,3)+2*(11*s23+s24)*pow(s14,4)+s23*s24*(-7*s24*(s23*s23)-20*s23*(s24*s24)+13*pow(s23,3)-4*pow(s24,3))+2*(s14*s14)*(75*s24*(s23*s23)-s23*(s24*s24)+87*pow(s23,3)+pow(s24,3))+s14*(-20*(s23*s23)*(s24*s24)+95*s24*pow(s23,3)+36*pow(s23,4)-14*s23*pow(s24,3)+2*pow(s24,4))))+s12*(2*s14*(s24*s24)*pow(s13,6)-2*(s23*s23)*(s23*(8*s23-s24)*s24+(9*s23-s24)*(s14*s14)+s14*(7*s23*s24+10*(s23*s23)-3*(s24*s24)))*pow(s14,4)+pow(s13,5)*(s14*s14*(-4*s23*s24-4*(s23*s23)+6*(s24*s24))+2*s14*pow(s24,3)+2*(s23+2*s24)*pow(s24,3))-s13*s23*pow(s14,3)*(6*(s14*s14)*(-(s23*s24)+13*(s23*s23)-2*(s24*s24))+14*s23*pow(s14,3)+s14*(72*s24*(s23*s23)+2*s23*(s24*s24)+49*pow(s23,3)-2*pow(s24,3))+s24*(8*s24*(s23*s23)+30*s23*(s24*s24)+37*pow(s23,3)+2*pow(s24,3)))-s14*pow(s13,3)*(2*(-6*s23*s24+25*(s23*s23)-11*(s24*s24))*pow(s14,3)+s23*s24*(6*s24*(s23*s23)+21*s23*(s24*s24)+4*pow(s23,3)-8*pow(s24,3))+2*(s14*s14)*(15*s24*(s23*s23)+8*s23*(s24*s24)+33*pow(s23,3)-5*pow(s24,3))+s14*s23*(46*s24*(s23*s23)+17*s23*(s24*s24)+8*pow(s23,3)+42*pow(s24,3)))-pow(s13,4)*(8*(3*(s23*s23)-2*(s24*s24))*pow(s14,3)+s14*s24*(6*s24*(s23*s23)+21*s23*(s24*s24)+4*pow(s23,3)-6*pow(s24,3))+2*(s14*s14)*(8*s24*(s23*s23)+7*s23*(s24*s24)+6*pow(s23,3)-4*pow(s24,3))-3*s23*pow(s24,4))-s13*s13*(s14*s14)*(2*(-4*s23*s24+22*(s23*s23)-5*(s24*s24))*pow(s14,3)+s23*s24*(13*s24*(s23*s23)+48*s23*(s24*s24)+24*pow(s23,3)-4*pow(s24,3))+2*(s14*s14)*(5*s24*(s23*s23)-5*s23*(s24*s24)+57*pow(s23,3)-2*pow(s24,3))+s14*(16*(s23*s23)*(s24*s24)+97*s24*pow(s23,3)+36*pow(s23,4)+16*s23*pow(s24,3)+2*pow(s24,4))))+s12*s12*(-2*(4*s23*(s14*s14)+s14*(5*s23*s24+2*(s23*s23)-4*(s24*s24))-(3*s23+7*s24)*(s24*s24))*pow(s13,5)+2*s14*s24*pow(s13,6)-pow(s13,4)*(s14*s14*(78*s23*s24+64*(s23*s23)-30*(s24*s24))-s24*s24*(28*s23*s24+4*(s23*s23)+19*(s24*s24))+(38*s23+4*s24)*pow(s14,3)+s14*(46*s24*(s23*s23)+25*s23*(s24*s24)+8*pow(s23,3)-39*pow(s24,3)))-pow(s13,3)*(4*(29*s23*s24+56*(s23*s23)-17*(s24*s24))*pow(s14,3)+2*(34*s23+s24)*pow(s14,4)+s14*s14*(242*s24*(s23*s23)+86*s23*(s24*s24)+94*pow(s23,3)-50*pow(s24,3))-s23*(7*s23+12*s24)*pow(s24,3)+s14*(70*(s23*s23)*(s24*s24)+46*s24*pow(s23,3)+4*pow(s23,4)-2*s23*pow(s24,3)-26*pow(s24,4)))-s14*(s13*s13)*((68*s23*s24+306*(s23*s23)-54*(s24*s24))*pow(s14,3)+2*(27*s23+s24)*pow(s14,4)+s14*s14*(341*s24*(s23*s23)+30*s23*(s24*s24)+265*pow(s23,3)-28*pow(s24,3))+s23*s24*(26*s24*(s23*s23)+15*s23*(s24*s24)+12*pow(s23,3)-24*pow(s24,3))+2*s14*(71*(s23*s23)*(s24*s24)+101*s24*pow(s23,3)+18*pow(s23,4)+11*s23*pow(s24,3)-2*pow(s24,4)))-s23*pow(s14,3)*(s14*s14*(36*s23*s24+90*(s23*s23)-2*(s24*s24))+2*(15*s23+s24)*pow(s14,3)+23*s24*pow(s23,3)-6*s23*pow(s24,3)+s14*(70*s24*(s23*s23)-10*s23*(s24*s24)+39*pow(s23,3)+2*pow(s24,3))+2*pow(s24,4))-s13*(s14*s14)*(2*(11*s23*s24+86*(s23*s23)-4*(s24*s24))*pow(s14,3)+2*(8*s23+s24)*pow(s14,4)+s23*s24*(32*s24*(s23*s23)+22*s23*(s24*s24)+37*pow(s23,3)-8*pow(s24,3))+2*(s14*s14)*(92*s24*(s23*s23)-12*s23*(s24*s24)+135*pow(s23,3)-pow(s24,3))+s14*(70*(s23*s23)*(s24*s24)+236*s24*pow(s23,3)+74*pow(s23,4)+4*s23*pow(s24,3)+4*pow(s24,4))))+pow(s12,4)*((52*s23*s24+s14*(-49*s23+s24)-46*(s14*s14)+4*(s23*s23)+90*(s24*s24))*pow(s13,4)+2*(-3*s14+s23+5*s24)*pow(s13,5)+pow(s13,3)*(-2*(163*s23+62*s24)*(s14*s14)+51*s24*(s23*s23)+189*s23*(s24*s24)+s14*(-76*s23*s24-88*(s23*s23)+183*(s24*s24))-114*pow(s14,3)+2*pow(s23,3)+132*pow(s24,3))+s13*s13*(-2*(s14*s14)*(253*s23*s24+243*(s23*s23)-68*(s24*s24))-(629*s23+199*s24)*pow(s14,3)-120*pow(s14,4)+s24*(88*s24*(s23*s23)+125*s23*(s24*s24)+14*pow(s23,3)+34*pow(s24,3))+s14*(-112*s24*(s23*s23)+221*s23*(s24*s24)-55*pow(s23,3)+203*pow(s24,3)))-s14*(2*(77*s23*s24+144*(s23*s23)+3*(s24*s24))*pow(s14,3)+10*(11*s23+2*s24)*pow(s14,4)+6*pow(s14,5)+s23*s24*(-12*s24*(s23*s23)-21*s23*(s24*s24)+pow(s23,3)-8*pow(s24,3))+s14*s14*(183*s24*(s23*s23)-24*s23*(s24*s24)+156*pow(s23,3)-8*pow(s24,3))+s14*(-60*(s23*s23)*(s24*s24)+35*s24*pow(s23,3)+14*pow(s23,4)-52*s23*pow(s24,3)-4*pow(s24,4)))+s13*((-510*s23*s24-691*(s23*s23)+36*(s24*s24))*pow(s14,3)-2*(233*s23+57*s24)*pow(s14,4)-52*pow(s14,5)+s23*s24*(10*s24*(s23*s23)+21*s23*(s24*s24)+pow(s23,3)+12*pow(s24,3))+s14*s14*(-365*s24*(s23*s23)+98*s23*(s24*s24)-207*pow(s23,3)+98*pow(s24,3))+s14*(92*(s23*s23)*(s24*s24)-28*s24*pow(s23,3)-10*pow(s23,4)+148*s23*pow(s24,3)+30*pow(s24,4)))))*pow(s12+s14+s24,-1)*pow(s12+s23+s24,-1))/8.;
}

// Coefficient order epsilon^2 of master 20
template<>
double qq2yyg4SC<20,2>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s12,-1)*pow(s13,-1)*pow(s12+s13+s14,-3)*pow(s23,-1)*pow(s24,-1)*((20*s23*s24+2*s14*(s23+10*s24)+s13*(3*s14+23*s23+37*s24)+16*(s13*s13)-13*(s14*s14)+6*(s23*s23)+12*(s24*s24))*pow(s12,8)+(9*s13+3*s14+6*s23+8*s24)*pow(s12,9)+2*pow(s12,10)+s14*(s13+s23)*(s14+s24)*((s13+s14)*(s13+s14))*(s24*(s13*s13)*(-3*s23*s24+7*(s23*s23)-3*(s24*s24))+s13*s14*s23*(10*s23*s24-7*(s23*s23)+3*(s24*s24))-7*(s14*s14)*pow(s23,3))+pow(s12,7)*((-15*s14+34*(s23+2*s24))*(s13*s13)+(-74*s23+3*s24)*(s14*s14)+s14*(41*s23*s24-12*(s23*s23)+37*(s24*s24))+s13*(79*s23*s24+s14*(-24*s23+53*s24)-82*(s14*s14)+19*(s23*s23)+57*(s24*s24))+14*pow(s13,3)-42*pow(s14,3)+2*(8*s24*(s23*s23)+12*s23*(s24*s24)+pow(s23,3)+4*pow(s24,3)))+pow(s12,6)*(s14*s14*(-37*s23*s24-144*(s23*s23)+42*(s24*s24))+s13*s13*(s14*(-87*s23+25*s24)-175*(s14*s14)+2*(60*s23*s24+11*(s23*s23)+54*(s24*s24)))+(-33*s14+24*s23+62*s24)*pow(s13,3)+6*pow(s13,4)-2*(98*s23+15*s24)*pow(s14,3)-48*pow(s14,4)+2*s24*(7*s24*(s23*s23)+6*s23*(s24*s24)+2*pow(s23,3)+pow(s24,3))+s14*(21*s24*(s23*s23)+74*s23*(s24*s24)-18*pow(s23,3)+27*pow(s24,3))+s13*(-((345*s23+82*s24)*(s14*s14))+51*s24*(s23*s23)+97*s23*(s24*s24)+s14*(63*s23*s24-74*(s23*s23)+112*(s24*s24))-181*pow(s14,3)+5*pow(s23,3)+39*pow(s24,3)))-pow(s12,4)*((s14*(47*s23+52*s24)+70*(s14*s14)-2*(14*s23*s24+s23*s23+24*(s24*s24)))*pow(s13,4)+(6*s14-s23-5*s24)*pow(s13,5)+pow(s13,3)*((422*s23+279*s24)*(s14*s14)-27*s24*(s23*s23)+s14*(135*s23*s24+97*(s23*s23)-3*(s24*s24))-108*s23*(s24*s24)+170*pow(s14,3)-pow(s23,3)-74*pow(s24,3))+s13*s13*(s14*s14*(661*s23*s24+655*(s23*s23)+113*(s24*s24))+69*(12*s23+5*s24)*pow(s14,3)+159*pow(s14,4)+s14*(105*s24*(s23*s23)-62*s23*(s24*s24)+75*pow(s23,3)-74*pow(s24,3))-2*s24*(24*s24*(s23*s23)+38*s23*(s24*s24)+3*pow(s23,3)+10*pow(s24,3)))+s13*(-4*s23*(s24*s24)*(3*s23*s24+s23*s23+2*(s24*s24))+(621*s23*s24+935*(s23*s23)+35*(s24*s24))*pow(s14,3)+(561*s23+124*s24)*pow(s14,4)+58*pow(s14,5)+s14*s14*(425*s24*(s23*s23)+23*s23*(s24*s24)+325*pow(s23,3)-42*pow(s24,3))+s14*(-62*(s23*s23)*(s24*s24)+21*s24*pow(s23,3)+17*pow(s23,4)-94*s23*pow(s24,3)-19*pow(s24,4)))+s14*((133*s23*s24+354*(s23*s23)-10*(s24*s24))*pow(s14,3)+2*(55*s23+3*s24)*pow(s14,4)+5*pow(s14,5)+s14*s14*(244*s24*(s23*s23)-25*s23*(s24*s24)+252*pow(s23,3)-18*pow(s24,3))+s23*s24*(-8*s24*(s23*s23)-16*s23*(s24*s24)+pow(s23,3)-7*pow(s24,3))+s14*(-34*(s23*s23)*(s24*s24)+63*s24*pow(s23,3)+35*pow(s23,4)-51*s23*pow(s24,3)-6*pow(s24,4))))-pow(s12,3)*((-3*s24*(s23+3*s24)+s14*(7*s23+17*s24)+10*(s14*s14))*pow(s13,5)+pow(s13,4)*((139*s23+118*s24)*(s14*s14)-2*s24*(17*s23*s24+2*(s23*s23)+18*(s24*s24))+s14*(73*s23*s24+25*(s23*s23)+38*(s24*s24))+37*pow(s14,3))+pow(s13,3)*(s14*s14*(456*s23*s24+359*(s23*s23)+175*(s24*s24))+3*(139*s23+73*s24)*pow(s14,3)+51*pow(s14,4)+s14*(85*s24*(s23*s23)+76*s23*(s24*s24)+30*pow(s23,3)-6*pow(s24,3))-s24*(20*s24*(s23*s23)+54*s23*(s24*s24)+pow(s23,3)+20*pow(s24,3)))+s13*s13*(-2*s23*(s24*s24)*(6*s23*s24+s23*s23+6*(s24*s24))+(687*s23*s24+890*(s23*s23)+142*(s24*s24))*pow(s14,3)+(461*s23+141*s24)*pow(s14,4)+31*pow(s14,5)+s14*s14*(517*s24*(s23*s23)+257*s23*(s24*s24)+304*pow(s23,3)+39*pow(s24,3))+s14*(14*(s23*s23)*(s24*s24)+22*s24*pow(s23,3)+12*pow(s23,4)-37*s23*pow(s24,3)-12*pow(s24,4)))+s14*s14*((34*s23*s24+180*(s23*s23)-3*(s24*s24))*pow(s14,3)+(22*s23-s24)*pow(s14,4)+s23*s24*(-3*s24*(s23*s23)-18*s23*(s24*s24)+10*pow(s23,3)-6*pow(s24,3))+s14*s14*(204*s24*(s23*s23)-7*s23*(s24*s24)+258*pow(s23,3)-4*pow(s24,3))+s14*(9*(s23*s23)*(s24*s24)+143*s24*pow(s23,3)+70*pow(s23,4)-26*s23*pow(s24,3)-2*pow(s24,4)))+s13*s14*((343*s23*s24+734*(s23*s23)+15*(s24*s24))*pow(s14,3)+22*(9*s23+s24)*pow(s14,4)+7*pow(s14,5)+s14*s14*(637*s24*(s23*s23)+128*s23*(s24*s24)+548*pow(s23,3)+4*pow(s24,3))-s23*s24*(9*s24*(s23*s23)+18*s23*(s24*s24)+pow(s23,3)+13*pow(s24,3))+s14*(59*(s23*s23)*(s24*s24)+179*s24*pow(s23,3)+72*pow(s23,4)-23*s23*pow(s24,3)-pow(s24,4))))+pow(s12,5)*(2*s23*(s24*s24)*((s23+s24)*(s23+s24))+(86*s23*s24-s14*(101*s23+44*s24)-166*(s14*s14)+11*(s23*s23)+102*(s24*s24))*pow(s13,3)+(-24*s14+8*s23+28*s24)*pow(s13,4)+pow(s13,5)+(-155*s23*s24-336*(s23*s23)+24*(s24*s24))*pow(s14,3)-2*(107*s23+14*s24)*pow(s14,4)-25*pow(s14,5)+s14*s14*(-93*s24*(s23*s23)+73*s23*(s24*s24)-118*pow(s23,3)+33*pow(s24,3))+s13*s13*(-((571*s23+261*s24)*(s14*s14))+58*s24*(s23*s23)+150*s23*(s24*s24)+s14*(-50*s23*s24-135*(s23*s23)+102*(s24*s24))-272*pow(s14,3)+4*pow(s23,3)+76*pow(s24,3))+s13*(s14*s14*(-347*s23*s24-516*(s23*s23)+36*(s24*s24))-(682*s23+199*s24)*pow(s14,3)-156*pow(s14,4)+s24*(44*s24*(s23*s23)+49*s23*(s24*s24)+9*pow(s23,3)+10*pow(s24,3))+s14*(-12*s24*(s23*s23)+163*s23*(s24*s24)-64*pow(s23,3)+81*pow(s24,3)))+s14*(45*(s23*s23)*(s24*s24)-s24*pow(s23,3)-7*pow(s23,4)+43*s23*pow(s24,3)+7*pow(s24,4)))-s12*s12*(((17*s23+15*s24)*(s14*s14)-(3*s23+7*s24)*(s24*s24)+s14*(10*s23*s24+s23*s23+15*(s24*s24)))*pow(s13,5)+s14*s24*pow(s13,6)+s23*pow(s14,3)*(s14*s14*(57*s23*s24+130*(s23*s23)-5*(s24*s24))+(36*s23-2*s24)*pow(s14,3)+s14*(121*s24*(s23*s23)+10*s23*(s24*s24)+70*pow(s23,3)-6*pow(s24,3))-2*s24*(-5*s24*(s23*s23)+4*s23*(s24*s24)-12*pow(s23,3)+pow(s24,3)))+pow(s13,4)*(-2*(s24*s24)*(8*s23*s24+s23*s23+5*(s24*s24))+7*(s14*s14)*(16*s23*s24+12*(s23*s23)+11*(s24*s24))+(75*s23+43*s24)*pow(s14,3)+s14*(7*s24*(s23*s23)+56*s23*(s24*s24)+2*pow(s23,3)+21*pow(s24,3)))+s13*(s14*s14)*((52*s23*s24+243*(s23*s23)-s24*s24)*pow(s14,3)+(21*s23-s24)*pow(s14,4)+s14*s14*(302*s24*(s23*s23)+36*s23*(s24*s24)+409*pow(s23,3)+4*pow(s24,3))+s23*s24*(7*s24*(s23*s23)+13*s23*(s24*s24)+19*pow(s23,3)+5*pow(s24,3))+s14*(86*(s23*s23)*(s24*s24)+256*s24*pow(s23,3)+114*pow(s23,4)+18*s23*pow(s24,3)+5*pow(s24,4)))+pow(s13,3)*((247*s23*s24+341*(s23*s23)+100*(s24*s24))*pow(s14,3)+4*(30*s23+11*s24)*pow(s14,4)-4*s23*(s23+2*s24)*pow(s24,3)+s14*s14*(184*s24*(s23*s23)+199*s23*(s24*s24)+111*pow(s23,3)+75*pow(s24,3))+s14*(29*(s23*s23)*(s24*s24)-10*s24*pow(s23,3)+pow(s23,4)+39*s23*pow(s24,3)+8*pow(s24,4)))+s14*(s13*s13)*((199*s23*s24+465*(s23*s23)+37*(s24*s24))*pow(s14,3)+(83*s23+14*s24)*pow(s14,4)-2*s23*s24*(3*s24*(s23*s23)-7*s23*(s24*s24)+3*pow(s23,3)+pow(s24,3))+s14*s14*(421*s24*(s23*s23)+179*s23*(s24*s24)+388*pow(s23,3)+50*pow(s24,3))+s14*(106*(s23*s23)*(s24*s24)+125*s24*pow(s23,3)+45*pow(s23,4)+77*s23*pow(s24,3)+22*pow(s24,4))))-s12*(s14*(s24*s24)*pow(s13,6)+s23*s23*((26*s23-s24)*(s14*s14)+s24*(7*s23*s24+22*(s23*s23)-2*(s24*s24))+s14*(36*s23*s24+35*(s23*s23)-2*(s24*s24)))*pow(s14,4)+pow(s13,5)*(s14*s24*(7*s23*s24-6*(s23*s23)+7*(s24*s24))+s14*s14*(7*s23*s24+7*(s23*s23)+9*(s24*s24))-(s23+2*s24)*pow(s24,3))+s13*s23*pow(s14,3)*(s14*s14*(27*s23*s24+124*(s23*s23)-3*(s24*s24))+(21*s23-s24)*pow(s14,3)+s14*(104*s24*(s23*s23)+6*s23*(s24*s24)+80*pow(s23,3)+3*pow(s24,3))+s24*(2*s24*(s23*s23)+9*s23*(s24*s24)+41*pow(s23,3)+7*pow(s24,3)))+pow(s13,4)*((19*s23*s24+45*(s23*s23)+17*(s24*s24))*pow(s14,3)+s14*s24*(-9*s24*(s23*s23)+28*s23*(s24*s24)-11*pow(s23,3)+11*pow(s24,3))+s14*s14*(-5*s24*(s23*s23)+41*s23*(s24*s24)+15*pow(s23,3)+30*pow(s24,3))-2*s23*pow(s24,4))+s13*s13*(s14*s14)*((3*s23*s24+73*(s23*s23)+2*(s24*s24))*pow(s14,3)+s14*s14*(57*s24*(s23*s23)+10*s23*(s24*s24)+184*pow(s23,3)+11*pow(s24,3))+s23*s24*(-14*s24*(s23*s23)+33*s23*(s24*s24)+15*pow(s23,3)+17*pow(s24,3))+s14*(11*(s23*s23)*(s24*s24)+91*s24*pow(s23,3)+54*pow(s23,4)+30*s23*pow(s24,3)+10*pow(s24,4)))+s14*pow(s13,3)*((16*s23*s24+90*(s23*s23)+11*(s24*s24))*pow(s14,3)+s23*s24*(-12*s24*(s23*s23)+19*s23*(s24*s24)-5*pow(s23,3)+7*pow(s24,3))+s14*s14*(30*s24*(s23*s23)+47*s23*(s24*s24)+101*pow(s23,3)+34*pow(s24,3))+s14*(-9*(s23*s23)*(s24*s24)+9*s24*pow(s23,3)+8*pow(s23,4)+55*s23*pow(s24,3)+23*pow(s24,4)))))*pow(s12+s14+s24,-1)*pow(s12+s23+s24,-1))/4.;
}

// Coefficient of master 20 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yyg4SC<20>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(0,{
        qq2yyg4SC<20,0>(s12,s13,s14,s23,s24),
        qq2yyg4SC<20,1>(s12,s13,s14,s23,s24),
        qq2yyg4SC<20,2>(s12,s13,s14,s23,s24)
    });
}

