/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 7: bubble(-s12-s13-s14-s23-s24)

// Coefficient order epsilon^-1 of master 7
template<>
double qq2yyg6LC<7,-1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (s12*((-(s14*(s23-2*s24))+s13*(-2*s23+s24))*(s12*s12)+s24*(-2*s23+s24)*(s13*s13)-s23*(s23-2*s24)*(s14*s14)+4*s13*s14*(-(s23*s23)+s24*s24)+s12*(-(s14*(s23-2*s24)*(s14+s23+s24))+(-2*s23+s24)*(s13*s13)+s13*(-3*s14*(s23-s24)-s23*s24-2*(s23*s23)+s24*s24)))*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s24,-1)*pow(s12+s23+s24,-1))/4.;
}

// Coefficient order epsilon^0 of master 7
template<>
double qq2yyg6LC<7,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s13,-2)*pow(s14,-2)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-2)*pow(s24,-2)*pow(s23+s24,-1)*(2*s24*pow(s12,5)*(-3*s23*(s14+s23+s24)*(s14*s14)*(s23*s23-s24*s24)+3*s24*(s23*(s23+s24)+s14*s14)*pow(s13,3)+s24*(s13*s13)*(s14*s23*(s23+s24)+3*(s23+s24)*(s14*s14)+3*s23*((s23+s24)*(s23+s24))+6*pow(s14,3))+s13*(s14*s14)*(3*s14*s24*(s14+s24)+3*s23*s24*(s14+s24)+2*s24*(s23*s23)-pow(s23,3)))+2*s24*pow(s12,6)*(s23*s24*(s23+s24)*(s13*s13)+s13*s24*pow(s14,3)+s14*s14*(s24*(s13*s13)+s23*(s24*s24)-pow(s23,3)))+(s23+s24)*(-(s13*s24*(-8*s23*s24+s14*(-3*s23+s24)+s14*s14)*pow(s14,4)*pow(s23,3))-2*s24*pow(s14,5)*pow(s23,5)+s14*s23*pow(s13,6)*pow(s24,3)+s13*s13*(s23*s23)*pow(s14,3)*(s14*s14*(-5*s23*s24-2*(s23*s23)+2*(s24*s24))+2*s14*s24*(-7*s23*s24+s23*s23+4*(s24*s24))-6*s23*pow(s24,3))+s24*s24*pow(s13,5)*(s14*s23*(s23-3*s24)*s24+s14*s14*(5*s23*s24-2*(s23*s23)+2*(s24*s24))+2*s23*pow(s24,3))+s14*s24*pow(s13,4)*(-2*s14*s23*s24*(-7*s23*s24+4*(s23*s23)+s24*s24)-8*(s23*s23)*pow(s24,3)+s14*s14*(-2*s24*(s23*s23)+s23*(s24*s24)+3*pow(s23,3)+2*pow(s24,3)))-s23*(s14*s14)*pow(s13,3)*(s14*s24*(21*s24*(s23*s23)-21*s23*(s24*s24)+pow(s23,3)-pow(s24,3))-6*(s23*s23)*pow(s24,3)+s14*s14*(s24*(s23*s23)-2*s23*(s24*s24)+2*pow(s23,3)+3*pow(s24,3))))+s12*(s14*s23*(s23+s24)*(s24*s24)*pow(s13,6)+s13*s24*(s23+s24)*(s23*s23)*((8*s23-7*s24)*(s14*s14)+8*s14*(2*s23*s24+s23*s23-s24*s24)-2*s24*(-4*s23*s24-5*(s23*s23)+s24*s24)-pow(s14,3))*pow(s14,3)-2*s24*(s14+s23+s24)*(2*s23*s24+3*(s23*s23)-s24*s24)*pow(s14,4)*pow(s23,3)+s24*pow(s13,5)*(s14*s23*s24*(-(s23*s24)+7*(s23*s23)-8*(s24*s24))+6*s23*(s23+s24)*pow(s24,3)+s14*s14*(5*s24*(s23*s23)+8*s23*(s24*s24)+pow(s23,3)+6*pow(s24,3)))+pow(s13,4)*(2*s14*s23*(s24*s24)*(-4*s24*(s23*s23)-11*s23*(s24*s24)+3*pow(s23,3)-4*pow(s24,3))+6*s23*((s23+s24)*(s23+s24))*pow(s24,4)+s24*(s14*s14)*(-7*(s23*s23)*(s24*s24)+25*s24*pow(s23,3)+13*pow(s23,4)-13*s23*pow(s24,3)+6*pow(s24,4))+pow(s14,3)*(4*(s23*s23)*(s24*s24)-4*s24*pow(s23,3)-4*pow(s23,4)+10*s23*pow(s24,3)+12*pow(s24,4)))-s23*(s13*s13)*(s14*s14)*(-4*s23*(s23-s24)*(s24*s24)*((s23+s24)*(s23+s24))+pow(s14,3)*(8*s24*(s23*s23)+5*s23*(s24*s24)+4*pow(s23,3)+3*pow(s24,3))+2*s14*s24*(3*(s23*s23)*(s24*s24)-16*s24*pow(s23,3)-11*pow(s23,4)+14*s23*pow(s24,3)+6*pow(s24,4))+s14*s14*(-7*(s23*s23)*(s24*s24)-15*s24*pow(s23,3)+4*pow(s23,4)+27*s23*pow(s24,3)+15*pow(s24,4)))-2*s14*pow(s13,3)*(5*(s23*s23)*((s23+s24)*(s23+s24))*pow(s24,3)+pow(s14,3)*(2*(s23*s23)*(s24*s24)+6*s24*pow(s23,3)+4*pow(s23,4)-3*pow(s24,4))+s14*s23*s24*(-2*(s23*s23)*(s24*s24)-13*s24*pow(s23,3)-6*pow(s23,4)+16*s23*pow(s24,3)+11*pow(s24,4))+s14*s14*(-12*(s24*s24)*pow(s23,3)-10*s24*pow(s23,4)+2*pow(s23,5)+13*(s23*s23)*pow(s24,3)+10*s23*pow(s24,4)-3*pow(s24,5))))+pow(s12,4)*(-2*s23*s24*(s23+s24)*(s14*s14)*(3*(s23-s24)*(s14*s14)+s14*(-2*s23*s24+9*(s23*s23)-6*(s24*s24))+3*(s23-s24)*((s23+s24)*(s23+s24)))+6*(s23*(s23+s24)+s14*s14)*(s24*s24)*pow(s13,4)+pow(s13,3)*(s14*s23*s24*(2*s23*s24+5*(s23*s23)-3*(s24*s24))+6*s23*(s24*s24)*(5*s23*s24+2*(s23*s23)+3*(s24*s24))+18*(s24*s24)*pow(s14,3)-2*(s14*s14)*(s24*(s23*s23)-7*s23*(s24*s24)+pow(s23,3)-9*pow(s24,3)))+s13*s24*(s14*s14)*(2*s24*(7*s23+6*s24)*(s14*s14)-2*s23*(2*s23-7*s24)*((s23+s24)*(s23+s24))+6*s24*pow(s14,3)+s14*(16*s24*(s23*s23)+19*s23*(s24*s24)+3*pow(s23,3)+6*pow(s24,3)))+2*(s13*s13)*(s14*s23*(s24*s24)*(3*s23*s24+s23*s23+2*(s24*s24))+9*(s24*s24)*pow(s14,4)-pow(s14,3)*(s24*(s23*s23)-14*s23*(s24*s24)+pow(s23,3)-15*pow(s24,3))+3*s24*(s14*s14)*(2*s24*(s23*s23)+s23*(s24*s24)+2*pow(s23,3)+pow(s24,3))+3*s23*(s24*s24)*pow(s23+s24,3)))+s12*s12*(-2*s24*(s23+s24)*(s23*s23)*((3*s23-2*s24)*(s14*s14)+s14*(s23*s24+9*(s23*s23)-4*(s24*s24))+(3*s23-2*s24)*((s23+s24)*(s23+s24)))*pow(s14,3)+pow(s13,5)*(5*s14*s23*s24*(s23*s23-s24*s24)-2*(s14*s14)*(s24*(s23*s23)-s23*(s24*s24)+pow(s23,3)-3*pow(s24,3))+6*s23*(s23+s24)*pow(s24,3))+pow(s13,4)*(s14*s23*s24*(11*s24*(s23*s23)-18*s23*(s24*s24)+10*pow(s23,3)-19*pow(s24,3))+6*s23*(5*s23*s24+2*(s23*s23)+3*(s24*s24))*pow(s24,3)+pow(s14,3)*(-6*s24*(s23*s23)+8*s23*(s24*s24)-6*pow(s23,3)+18*pow(s24,3))+2*(s14*s14)*(s23*s23*(s24*s24)+6*s24*pow(s23,3)-2*pow(s23,4)+s23*pow(s24,3)+9*pow(s24,4)))+s14*(s13*s13)*(-2*pow(s14,4)*(s24*(s23*s23)-4*s23*(s24*s24)+pow(s23,3)-3*pow(s24,3))+4*s14*s23*s24*(s23*s23*(s24*s24)+7*s24*pow(s23,3)+3*pow(s23,4)-5*s23*pow(s24,3)-2*pow(s24,4))+pow(s14,3)*(6*(s23*s23)*(s24*s24)+6*s24*pow(s23,3)-8*pow(s23,4)+2*s23*pow(s24,3)+12*pow(s24,4))+s14*s14*(55*(s24*s24)*pow(s23,3)+50*s24*pow(s23,4)-2*pow(s23,5)-26*(s23*s23)*pow(s24,3)-23*s23*pow(s24,4)+6*pow(s24,5))-2*(s23*s23)*(s24*s24)*pow(s23+s24,3))+pow(s13,3)*(-6*pow(s14,4)*(s24*(s23*s23)-2*s23*(s24*s24)+pow(s23,3)-3*pow(s24,3))+s14*s23*s24*(-20*(s23*s23)*(s24*s24)+4*s24*pow(s23,3)+5*pow(s23,4)-22*s23*pow(s24,3)-3*pow(s24,4))+pow(s14,3)*(4*(s23*s23)*(s24*s24)+8*s24*pow(s23,3)-12*pow(s23,4)+10*s23*pow(s24,3)+30*pow(s24,4))+s14*s14*(42*(s24*s24)*pow(s23,3)+37*s24*pow(s23,4)-2*pow(s23,5)-43*(s23*s23)*pow(s24,3)-40*s23*pow(s24,4)+6*pow(s24,5))+6*s23*pow(s24,3)*pow(s23+s24,3))+s13*s23*s24*(s14*s14)*((4*s23*s24+5*(s23*s23)-s24*s24)*pow(s14,3)+2*s24*pow(s14,4)+s14*s14*(28*s24*(s23*s23)+3*s23*(s24*s24)+19*pow(s23,3)-6*pow(s24,3))+s14*(38*(s23*s23)*(s24*s24)+30*s24*pow(s23,3)+3*pow(s23,4)+10*s23*pow(s24,3)-pow(s24,4))+2*s24*pow(s23+s24,4)))+pow(s12,3)*(2*(s23*(s23+s24)+s14*s14)*(s24*s24)*pow(s13,5)+pow(s13,4)*(s14*s23*s24*(-(s23*s24)+10*(s23*s23)-11*(s24*s24))+6*s23*(s24*s24)*(4*s23*s24+s23*s23+3*(s24*s24))+8*(s24*s24)*pow(s14,3)-2*(s14*s14)*(2*s24*(s23*s23)-5*s23*(s24*s24)+2*pow(s23,3)-9*pow(s24,3)))+pow(s13,3)*(6*s23*(s23+3*s24)*(s24*s24)*((s23+s24)*(s23+s24))+12*(s24*s24)*pow(s14,4)+2*s14*s23*s24*(3*s24*(s23*s23)-5*s23*(s24*s24)+5*pow(s23,3)-3*pow(s24,3))+pow(s14,3)*(-8*s24*(s23*s23)+30*s23*(s24*s24)-8*pow(s23,3)+42*pow(s24,3))+s14*s14*(5*(s23*s23)*(s24*s24)+23*s24*pow(s23,3)-4*pow(s23,4)-4*s23*pow(s24,3)+18*pow(s24,4)))+s13*s24*(s14*s14)*(2*s24*(5*s23+3*s24)*pow(s14,3)+2*s24*pow(s14,4)+s14*s14*(17*s24*(s23*s23)+12*s23*(s24*s24)+11*pow(s23,3)+6*pow(s24,3))+2*s14*(18*(s23*s23)*(s24*s24)+16*s24*pow(s23,3)+3*pow(s23,4)+6*s23*pow(s24,3)+pow(s24,4))-2*s23*(s23-5*s24)*pow(s23+s24,3))-2*s23*s24*(s23+s24)*(s14*s14)*(s14*s14*(-4*s23*s24+9*(s23*s23)-3*(s24*s24))+(s23-s24)*pow(s14,3)+s14*(5*s24*(s23*s23)-7*s23*(s24*s24)+9*pow(s23,3)-3*pow(s24,3))+(s23-s24)*pow(s23+s24,3))+s13*s13*(-2*s14*s23*(s23-s24)*(s24*s24)*((s23+s24)*(s23+s24))+8*(s24*s24)*pow(s14,5)+pow(s14,4)*(-4*s24*(s23*s23)+30*s23*(s24*s24)-4*pow(s23,3)+30*pow(s24,3))+2*s24*(s14*s14)*(-(s23*s23*(s24*s24))+16*s24*pow(s23,3)+12*pow(s23,4)-4*s23*pow(s24,3)+pow(s24,4))+pow(s14,3)*(25*(s23*s23)*(s24*s24)+26*s24*pow(s23,3)-4*pow(s23,4)+19*s23*pow(s24,3)+24*pow(s24,4))+2*s23*(s24*s24)*pow(s23+s24,4))))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1))/4.;
}

// Coefficient order epsilon^1 of master 7
template<>
double qq2yyg6LC<7,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s13,-2)*pow(s14,-2)*pow(s13+s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-2)*pow(s24,-2)*pow(s23+s24,-1)*((s23*s24*(s14*s14)*(s23*s24+4*(s23*s23)-3*(s24*s24))+s13*s13*(s14*s14*(2*s23*s24+s23*s23-3*(s24*s24))-3*s23*(s23+s24)*(s24*s24))+s13*s14*(s14*s14*(2*s23*s24+s23*s23-3*(s24*s24))+2*s23*(s23+s24)*(s24*s24)))*pow(s12,6)+s24*(5*s23*s24+4*(s23*s23)+s24*s24)*pow(s14,5)*pow(s23,4)+pow(s12,5)*(3*s23*s24*(s14+s23+s24)*(s14*s14)*(s23*s24+4*(s23*s23)-3*(s24*s24))+3*(s14*s14*(2*s23*s24+s23*s23-3*(s24*s24))-3*s23*(s23+s24)*(s24*s24))*pow(s13,3)+s13*s14*(s14*s23*s24*(-(s23*s24)+6*(s23*s23)-7*(s24*s24))+6*s23*(s24*s24)*((s23+s24)*(s23+s24))+3*(2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,3)+s14*s14*(7*s24*(s23*s23)-7*s23*(s24*s24)+3*pow(s23,3)-9*pow(s24,3)))+s13*s13*(s14*s23*(s23+s24)*(s24*s24)-9*s23*(s24*s24)*((s23+s24)*(s23+s24))+6*(2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,3)+s14*s14*(7*s24*(s23*s23)-7*s23*(s24*s24)+3*pow(s23,3)-9*pow(s24,3))))-3*s14*s23*(s23+s24)*pow(s13,6)*pow(s24,3)-s24*s24*pow(s13,5)*(s14*s23*s24*(2*s23*s24+3*(s23*s23)-s24*s24)+3*s23*(s23+s24)*pow(s24,3)+s14*s14*(20*s24*(s23*s23)+23*s23*(s24*s24)+2*pow(s23,3)+3*pow(s24,3)))+s13*pow(s14,4)*pow(s23,3)*(s23*(s23+3*s24)*(s14*s14)-5*s14*s24*((s23+s24)*(s23+s24))-s24*(12*s24*(s23*s23)+19*s23*(s24*s24)-2*pow(s23,3)+5*pow(s24,3)))-s14*s24*pow(s13,4)*(s23*(-7*s23*s24-9*(s23*s23)+2*(s24*s24))*pow(s24,3)+2*s14*s23*s24*(17*s24*(s23*s23)+22*s23*(s24*s24)+2*pow(s23,3)+7*pow(s24,3))+s14*s14*(14*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)-pow(s23,4)+26*s23*pow(s24,3)+3*pow(s24,4)))+s23*(s14*s14)*pow(s13,3)*(s14*s24*(20*(s23*s23)*(s24*s24)+34*s24*pow(s23,3)+7*pow(s23,4)-22*s23*pow(s24,3)-15*pow(s24,4))+2*(s14*s14)*(9*(s23*s23)*(s24*s24)+8*s24*pow(s23,3)+2*pow(s23,4)+6*s23*pow(s24,3)-3*pow(s24,4))-s24*s24*(13*(s23*s23)*(s24*s24)+11*s24*pow(s23,3)+2*pow(s23,4)+9*s23*pow(s24,3)+5*pow(s24,4)))+s13*s13*(s23*s23)*pow(s14,3)*(s14*s14*(18*s24*(s23*s23)+14*s23*(s24*s24)+5*pow(s23,3)+9*pow(s24,3))+2*s14*s24*(14*s24*(s23*s23)+23*s23*(s24*s24)+pow(s23,3)+10*pow(s24,3))+s24*(17*(s23*s23)*(s24*s24)+3*s24*pow(s23,3)+2*pow(s23,4)+25*s23*pow(s24,3)+9*pow(s24,4)))-s12*(3*s14*s23*(s23+s24)*(s24*s24)*pow(s13,6)-s24*(s14+s23+s24)*(11*s23*s24+12*(s23*s23)-s24*s24)*pow(s14,4)*pow(s23,3)+s24*pow(s13,5)*(s14*s23*s24*(7*s23*s24+8*(s23*s23)-s24*s24)+9*s23*(s23+s24)*pow(s24,3)+s14*s14*(20*s24*(s23*s23)+26*s23*(s24*s24)+pow(s23,3)+9*pow(s24,3)))+s13*(s23*s23)*pow(s14,3)*(2*s24*(9*s23*s24-2*(s23*s23)+3*(s24*s24))*((s23+s24)*(s23+s24))+(-5*s23*s24-3*(s23*s23)+2*(s24*s24))*pow(s14,3)+s14*s14*(6*s24*(s23*s23)+26*s23*(s24*s24)-3*pow(s23,3)+13*pow(s24,3))+s14*s24*(56*s24*(s23*s23)+68*s23*(s24*s24)+5*pow(s23,3)+17*pow(s24,3)))+s23*(s13*s13)*(s14*s14)*(pow(s14,3)*(-24*s24*(s23*s23)+9*s23*(s24*s24)-14*pow(s23,3)+5*pow(s24,3))+s24*((s23+s24)*(s23+s24))*(9*s24*(s23*s23)+10*s23*(s24*s24)-2*pow(s23,3)+7*pow(s24,3))+2*s14*s24*(39*(s23*s23)*(s24*s24)+25*s24*pow(s23,3)+6*pow(s23,4)+29*s23*pow(s24,3)+9*pow(s24,4))+s14*s14*(41*(s23*s23)*(s24*s24)-7*s24*pow(s23,3)-11*pow(s23,4)+41*s23*pow(s24,3)+16*pow(s24,4)))+pow(s13,4)*(s14*(s23*s23)*(-9*s23*s24+5*(s23*s23)-14*(s24*s24))*(s24*s24)+9*s23*((s23+s24)*(s23+s24))*pow(s24,4)+s24*(s14*s14)*(71*(s23*s23)*(s24*s24)+41*s24*pow(s23,3)+6*pow(s23,4)+49*s23*pow(s24,3)+9*pow(s24,4))+pow(s14,3)*(36*(s23*s23)*(s24*s24)-12*s24*pow(s23,3)-8*pow(s23,4)+48*s23*pow(s24,3)+18*pow(s24,4)))+s14*pow(s13,3)*(-2*s23*(6*s23-s24)*((s23+s24)*(s23+s24))*pow(s24,3)+pow(s14,3)*(26*(s23*s23)*(s24*s24)-32*s24*pow(s23,3)-19*pow(s23,4)+30*s23*pow(s24,3)+9*pow(s24,4))+s14*s23*s24*(62*(s23*s23)*(s24*s24)+24*s24*pow(s23,3)+3*pow(s23,4)+62*s23*pow(s24,3)+21*pow(s24,4))+s14*s14*(48*(s24*s24)*pow(s23,3)-7*s24*pow(s23,4)-8*pow(s23,5)+92*(s23*s23)*pow(s24,3)+66*s23*pow(s24,4)+9*pow(s24,5))))+pow(s12,4)*(s23*s24*(s23+s24)*(s14*s14)*(3*(4*s23-3*s24)*(s14*s14)+s14*(s23*s24+36*(s23*s23)-18*(s24*s24))+3*(4*s23-3*s24)*((s23+s24)*(s23+s24)))+3*(s14*s14*(2*s23*s24+s23*s23-3*(s24*s24))-3*s23*(s23+s24)*(s24*s24))*pow(s13,4)+pow(s13,3)*(-9*s23*(s24*s24)*(5*s23*s24+2*(s23*s23)+3*(s24*s24))+9*(2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,3)+s14*s14*(19*s24*(s23*s23)-18*s23*(s24*s24)+10*pow(s23,3)-27*pow(s24,3))+s14*(-2*s24*pow(s23,3)+2*s23*pow(s24,3)))+s13*s13*(s14*s23*(s24*s24)*(9*s23*s24+5*(s23*s23)+4*(s24*s24))+9*(2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,4)+pow(s14,3)*(37*s24*(s23*s23)-37*s23*(s24*s24)+19*pow(s23,3)-45*pow(s24,3))+s14*s14*(-28*(s23*s23)*(s24*s24)+3*pow(s23,4)-32*s23*pow(s24,3)-9*pow(s24,4))-9*s23*(s24*s24)*pow(s23+s24,3))+s13*s14*(3*(2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,4)+s14*s23*s24*(10*s24*(s23*s23)-23*s23*(s24*s24)+14*pow(s23,3)-19*pow(s24,3))+pow(s14,3)*(18*s24*(s23*s23)-19*s23*(s24*s24)+9*pow(s23,3)-18*pow(s24,3))+s14*s14*(-32*(s23*s23)*(s24*s24)+10*s24*pow(s23,3)+3*pow(s23,4)-46*s23*pow(s24,3)-9*pow(s24,4))+6*s23*(s24*s24)*pow(s23+s24,3)))+s12*s12*(s24*(s23+s24)*(s23*s23)*((12*s23-5*s24)*(s14*s14)+s14*(13*s23*s24+36*(s23*s23)-10*(s24*s24))+(12*s23-5*s24)*((s23+s24)*(s23+s24)))*pow(s14,3)+pow(s13,5)*(-2*s14*s24*(s23+s24)*(s23*s23)+s14*s14*(5*s24*(s23*s23)-4*s23*(s24*s24)+4*pow(s23,3)-9*pow(s24,3))-9*s23*(s23+s24)*pow(s24,3))+pow(s13,4)*(pow(s14,3)*(19*s24*(s23*s23)-17*s23*(s24*s24)+15*pow(s23,3)-27*pow(s24,3))-9*s23*(5*s23*s24+2*(s23*s23)+3*(s24*s24))*pow(s24,3)+s14*s23*s24*(-(s24*(s23*s23))+11*s23*(s24*s24)-4*pow(s23,3)+8*pow(s24,3))+s14*s14*(-33*(s23*s23)*(s24*s24)+6*s24*pow(s23,3)+8*pow(s23,4)-58*s23*pow(s24,3)-27*pow(s24,4)))+s13*s23*(s14*s14)*((4*s23*s24+3*(s23*s23)-5*(s24*s24))*pow(s14,4)+pow(s14,3)*(8*s24*(s23*s23)-27*s23*(s24*s24)+9*pow(s23,3)-16*pow(s24,3))+s14*s14*(-90*(s23*s23)*(s24*s24)-12*s24*pow(s23,3)+3*pow(s23,4)-95*s23*pow(s24,3)-22*pow(s24,4))-2*s14*s24*(57*(s23*s23)*(s24*s24)+21*s24*pow(s23,3)-5*pow(s23,4)+39*s23*pow(s24,3)+8*pow(s24,4))+s24*(-2*s23*s24+2*(s23*s23)-5*(s24*s24))*pow(s23+s24,3))+s14*(s13*s13)*(pow(s14,4)*(17*s24*(s23*s23)-19*s23*(s24*s24)+13*pow(s23,3)-9*pow(s24,3))+pow(s14,3)*(-75*(s23*s23)*(s24*s24)+36*s24*pow(s23,3)+31*pow(s23,4)-78*s23*pow(s24,3)-18*pow(s24,4))-s14*s23*s24*(79*(s23*s23)*(s24*s24)+37*s24*pow(s23,3)+4*pow(s23,4)+71*s23*pow(s24,3)+25*pow(s24,4))+s14*s14*(-144*(s24*s24)*pow(s23,3)-27*s24*pow(s23,4)+7*pow(s23,5)-182*(s23*s23)*pow(s24,3)-85*s23*pow(s24,4)-9*pow(s24,5))+s23*(3*s23+2*s24)*(s24*s24)*pow(s23+s24,3))+pow(s13,3)*(3*pow(s14,4)*(9*s24*(s23*s23)-9*s23*(s24*s24)+7*pow(s23,3)-9*pow(s24,3))+pow(s14,3)*(-79*(s23*s23)*(s24*s24)+36*s24*pow(s23,3)+30*pow(s23,4)-120*s23*pow(s24,3)-45*pow(s24,4))-2*s14*s23*s24*(-15*(s23*s23)*(s24*s24)-3*s24*pow(s23,3)+pow(s23,4)-10*s23*pow(s24,3)+pow(s24,4))+s14*s14*(-62*(s24*s24)*pow(s23,3)-11*s24*pow(s23,4)+4*pow(s23,5)-88*(s23*s23)*pow(s24,3)-52*s23*pow(s24,4)-9*pow(s24,5))-9*s23*pow(s24,3)*pow(s23+s24,3)))+pow(s12,3)*((s14*s14*(2*s23*s24+s23*s23-3*(s24*s24))-3*s23*(s23+s24)*(s24*s24))*pow(s13,5)+pow(s13,4)*(2*s14*s23*s24*(s23*s24-2*(s23*s23)+3*(s24*s24))-9*s23*(s24*s24)*(4*s23*s24+s23*s23+3*(s24*s24))+4*(2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,3)+s14*s14*(17*s24*(s23*s23)-15*s23*(s24*s24)+11*pow(s23,3)-27*pow(s24,3)))+pow(s13,3)*(-9*s23*(s23+3*s24)*(s24*s24)*((s23+s24)*(s23+s24))+6*(2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,4)+pow(s14,3)*(49*s24*(s23*s23)-47*s23*(s24*s24)+31*pow(s23,3)-63*pow(s24,3))+2*s14*s23*s24*(3*s24*(s23*s23)+6*s23*(s24*s24)-2*pow(s23,3)+pow(s24,3))+s14*s14*(-39*(s23*s23)*(s24*s24)+5*s24*pow(s23,3)+11*pow(s23,4)-60*s23*pow(s24,3)-27*pow(s24,4)))+s23*s24*(s23+s24)*(s14*s14)*(s14*s14*(-7*s23*s24+36*(s23*s23)-9*(s24*s24))+(4*s23-3*s24)*pow(s14,3)+s14*(29*s24*(s23*s23)-16*s23*(s24*s24)+36*pow(s23,3)-9*pow(s24,3))+(4*s23-3*s24)*pow(s23+s24,3))+s13*s13*(s14*s23*(7*s23+5*s24)*(s24*s24)*((s23+s24)*(s23+s24))+4*(2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,5)+pow(s14,4)*(47*s24*(s23*s23)-49*s23*(s24*s24)+29*pow(s23,3)-45*pow(s24,3))+pow(s14,3)*(-99*(s23*s23)*(s24*s24)+12*s24*pow(s23,3)+20*pow(s23,4)-119*s23*pow(s24,3)-36*pow(s24,4))+s14*s14*(-56*(s24*s24)*pow(s23,3)-11*s24*pow(s23,4)+pow(s23,5)-82*(s23*s23)*pow(s24,3)-41*s23*pow(s24,4)-3*pow(s24,5))-3*s23*(s24*s24)*pow(s23+s24,4))+s13*s14*(s14*s23*s24*(-5*s23*s24+10*(s23*s23)-17*(s24*s24))*((s23+s24)*(s23+s24))+(2*s23*s24+s23*s23-3*(s24*s24))*pow(s14,5)+pow(s14,4)*(15*s24*(s23*s23)-17*s23*(s24*s24)+9*pow(s23,3)-9*pow(s24,3))+pow(s14,3)*(-54*(s23*s23)*(s24*s24)+7*s24*pow(s23,3)+9*pow(s23,4)-53*s23*pow(s24,3)-9*pow(s24,4))+s14*s14*(-60*(s24*s24)*pow(s23,3)+11*s24*pow(s23,4)+pow(s23,5)-120*(s23*s23)*pow(s24,3)-53*s23*pow(s24,4)-3*pow(s24,5))+2*s23*(s24*s24)*pow(s23+s24,4))))*pow(s12+s23+s24,-1)*pow(s12+s13+s14+s23+s24,-1))/4.;
}

// Coefficient of master 7 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yyg6LC<7>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(-1,{
        qq2yyg6LC<7,-1>(s12,s13,s14,s23,s24),
        qq2yyg6LC<7,0>(s12,s13,s14,s23,s24),
        qq2yyg6LC<7,1>(s12,s13,s14,s23,s24)
    });
}

