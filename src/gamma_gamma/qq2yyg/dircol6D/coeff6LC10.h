/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 10: box6(s14,-s12-s13-s14,s23)

// Coefficient order epsilon^-1 of master 10
template<>
double qq2yyg6LC<10,-1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (-17*s23*(s12*s12)+(3*s13+s23)*(s23*s23)-s12*(3*s13*s14+4*(s23*s23)))*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-3)-s12*(5*s12+s14)*(3*s12*s23+2*(s12*s12)+2*(s23*s23))*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-3)-((s13*s23*(6*s14+7*s23)+6*(2*s13+s14-s23)*(s12*s12)+s12*(s23*(9*s14+2*s23)+s13*(3*s14+11*s23)-4*(s13*s13))+4*(s14+s23)*(s13*s13)+2*(2*s14+s23)*(s23*s23)+31*pow(s12,3)-2*pow(s13,3))*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-3))/2.+((2*s12+s13+s14+2*s23)*(s12*s12)*(3*s12*s23+3*(s12*s12)+s23*s23)*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-3))/2.+(13*(s12*s12)*(s13*s13)+s12*s13*(15*s13*s23+9*(s13*s13)+4*(s23*s23))-3*(3*s13+7*s23)*pow(s12,3)-20*pow(s12,4)+(s13-2*s14+2*s23)*pow(s13,3))*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s12+s13+s23,-3)-s12*((5*s13-s14-2*s23)*(s12*s12)+3*s12*(s13*s13)+(s13+s14+2*s23)*(s13*s13)+5*pow(s12,3))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-3)+((-3*s12+s13+2*s23)*pow(s12,4)*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-3))/2.-((3*s13*s14*(s12*s12)+s12*(s13+s14)*(s13*s13)+3*s14*pow(s12,3)+(s13+s14+2*s23)*pow(s13,3))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-3))/2.+((2*s12+s13+s14+2*s23)*pow(s12,5)*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-3))/2.-2*pow(s12,6)*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-3)+((2*s12+s13+s14+2*s23)*(3*pow(s12,4)-3*s12*pow(s13,3)-pow(s13,4))*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-3))/2.+s12*(s13*(-3*s13+s14+2*s23)*(s12*s12)+s12*(s13-s14-2*s23)*(s13*s13)-6*s13*pow(s12,3)-7*pow(s12,4)+pow(s13,4))*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s13+s23,-3)-2*(s12*s12)*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*(6*s23*(s12*s12)+4*s12*(s23*s23)+4*pow(s12,3)+pow(s23,3))*pow(s12+s13+s23,-3)+(pow(s13,-1)*pow(s12+s13+s14,-1)*(s23*(3*s13+3*s14+8*s23)*(s12*s12)+s12*(s13+s14-3*s23)*(s23*s23)+3*(s13+s14+4*s23)*pow(s12,3)+6*pow(s12,4)-s14*pow(s23,3))*pow(s12+s13+s23,-3))/2.-(pow(s14,-1)*pow(s12+s13+s14,-1)*(s13*(s13+s14-s23)*s23*(3*s13+s23)+s12*s12*(3*s13*(s14+3*s23)+s23*(-3*s14+11*s23)+21*(s13*s13))+(s13-5*s14-16*s23)*pow(s12,3)-10*pow(s12,4)+s12*(s13*s23*(3*s14+8*s23)+9*(s14+3*s23)*(s13*s13)+9*pow(s13,3)+pow(s23,3)))*pow(s12+s13+s23,-3))/2.+(s24*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*(-((s13+s14+s23)*(2*s13+3*s23)*pow(s12,3))-(3*s13+s14+3*s23)*pow(s12,4)-pow(s12,5)+s12*s12*(-3*s13*s23*(s14+s23)+3*s23*(s13*s13)-(3*s14+s23)*(s23*s23)+2*pow(s13,3))+s12*(3*s23*(s14+s23)*(s13*s13)+(2*s14+9*s23)*pow(s13,3)+3*pow(s13,4)-s14*pow(s23,3))+s13*(3*s23*(s14+s23)*(s13*s13)+s13*(3*s14+s23)*(s23*s23)+(s14+4*s23)*pow(s13,3)+pow(s13,4)+s14*pow(s23,3)))*pow(s12+s13+s23,-3))/2.-(pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*((34*s14*s23+s13*(32*s14+62*s23)+31*(s13*s13)+7*(s14*s14)+31*(s23*s23))*pow(s12,7)+6*(2*s13+s14+2*s23)*pow(s12,8)+2*pow(s12,9)+pow(s12,6)*(9*(8*s14+15*s23)*(s13*s13)+37*s23*(s14*s14)+82*s14*(s23*s23)+s13*(154*s14*s23+33*(s14*s14)+135*(s23*s23))+45*pow(s13,3)+4*pow(s14,3)+45*pow(s23,3))+s14*(s23*s23)*((15*s14*s23+6*(s14*s14)+8*(s23*s23))*pow(s13,4)+6*(s14+s23)*pow(s13,5)+2*pow(s13,6)+s14*(s14*s14+s23*s23)*pow(s23,3)+s13*(s23*s23)*(3*s23*(s14*s14)+4*s14*(s23*s23)+3*pow(s14,3)+2*pow(s23,3))+2*pow(s13,3)*(6*s23*(s14*s14)+7*s14*(s23*s23)+pow(s14,3)+4*pow(s23,3))+s23*(s13*s13)*(9*s23*(s14*s14)+8*s14*(s23*s23)+3*pow(s14,3)+6*pow(s23,3)))+pow(s12,5)*(81*(s14*s14)*(s23*s23)+3*(s13*s13)*(96*s14*s23+21*(s14*s14)+80*(s23*s23))+2*(44*s14+81*s23)*pow(s13,3)+40*pow(s13,4)+20*s23*pow(s14,3)+pow(s14,4)+110*s14*pow(s23,3)+s13*(147*s23*(s14*s14)+306*s14*(s23*s23)+16*pow(s14,3)+162*pow(s23,3))+40*pow(s23,4))+s12*s23*((39*s14*s23+15*(s14*s14)+14*(s23*s23))*pow(s13,5)+(9*s14+8*s23)*pow(s13,6)+2*pow(s13,7)+s14*pow(s23,3)*(4*s23*(s14*s14)+7*s14*(s23*s23)+5*pow(s14,3)+2*pow(s23,3))+pow(s13,4)*(63*s23*(s14*s14)+64*s14*(s23*s23)+11*pow(s14,3)+16*pow(s23,3))+s13*(s23*s23)*(30*(s14*s14)*(s23*s23)+28*s23*pow(s14,3)+12*pow(s14,4)+19*s14*pow(s23,3)+2*pow(s23,4))+s23*(s13*s13)*(64*(s14*s14)*(s23*s23)+51*s23*pow(s14,3)+9*pow(s14,4)+45*s14*pow(s23,3)+8*pow(s23,4))+pow(s13,3)*(89*(s14*s14)*(s23*s23)+41*s23*pow(s14,3)+3*pow(s14,4)+62*s14*pow(s23,3)+14*pow(s23,4)))+pow(s12,3)*((169*s14*s23+30*(s14*s14)+129*(s23*s23))*pow(s13,4)+6*(4*s14+9*s23)*pow(s13,5)+7*pow(s13,6)+pow(s13,3)*(184*s23*(s14*s14)+357*s14*(s23*s23)+16*pow(s14,3)+164*pow(s23,3))+s23*s23*(65*(s14*s14)*(s23*s23)+40*s23*pow(s14,3)+10*pow(s14,4)+46*s14*pow(s23,3)+7*pow(s23,4))+3*(s13*s13)*(107*(s14*s14)*(s23*s23)+27*s23*pow(s14,3)+pow(s14,4)+123*s14*pow(s23,3)+43*pow(s23,4))+s13*s23*(235*(s14*s14)*(s23*s23)+108*s23*pow(s14,3)+12*pow(s14,4)+207*s14*pow(s23,3)+54*pow(s23,4)))+s12*s12*((57*s14*s23+6*(s14*s14)+45*(s23*s23))*pow(s13,5)+(4*s14+15*s23)*pow(s13,6)+pow(s13,7)+pow(s13,4)*(78*s23*(s14*s14)+162*s14*(s23*s23)+4*pow(s14,3)+67*pow(s23,3))+pow(s23,3)*(27*(s14*s14)*(s23*s23)+20*s23*pow(s14,3)+10*pow(s14,4)+14*s14*pow(s23,3)+pow(s23,4))+s13*(s23*s23)*(114*(s14*s14)*(s23*s23)+82*s23*pow(s14,3)+18*pow(s14,4)+81*s14*pow(s23,3)+15*pow(s23,4))+s23*(s13*s13)*(209*(s14*s14)*(s23*s23)+99*s23*pow(s14,3)+9*pow(s14,4)+168*s14*pow(s23,3)+45*pow(s23,4))+pow(s13,3)*(198*(s14*s14)*(s23*s23)+45*s23*pow(s14,3)+pow(s14,4)+210*s14*pow(s23,3)+67*pow(s23,4)))+pow(s12,4)*((289*s14*s23+61*(s14*s14)+228*(s23*s23))*pow(s13,3)+2*(31*s14+59*s23)*pow(s13,4)+22*pow(s13,5)+3*(s13*s13)*(77*s23*(s14*s14)+152*s14*(s23*s23)+8*pow(s14,3)+76*pow(s23,3))+s23*(95*(s14*s14)*(s23*s23)+40*s23*pow(s14,3)+5*pow(s14,4)+90*s14*pow(s23,3)+22*pow(s23,4))+s13*(261*(s14*s14)*(s23*s23)+67*s23*pow(s14,3)+3*pow(s14,4)+327*s14*pow(s23,3)+118*pow(s23,4))))*pow(s12+s23,-1)*pow(s12+s13+s23,-3)*pow(s12+s13+s14+s23,-1)*pow(s24,-1))/2.+(pow(s14,-1)*pow(s12+s13+s14,-1)*((2*s13*s14+2*(s13*s13)+s14*s14+2*(s23*s23))*pow(s12,4)+pow(s12,3)*((9*s14+4*s23)*(s13*s13)+3*s13*(2*s14*s23+s14*s14+2*(s23*s23))+s23*(s14*s23+3*(s14*s14)+6*(s23*s23))+6*pow(s13,3))+s12*s12*(3*(s23*s23)*(s14*s23+s14*s14+2*(s23*s23))+3*(s13*s13)*(5*s14*s23+2*(s14*s14)+3*(s23*s23))+s13*s23*(8*s14*s23+6*(s14*s14)+13*(s23*s23))+3*(4*s14+3*s23)*pow(s13,3)+6*pow(s13,4))+s12*(s13*(s23*s23)*(6*s14*s23+3*(s14*s14)+8*(s23*s23))+(12*s14*s23+4*(s14*s14)+5*(s23*s23))*pow(s13,3)+(5*s14+6*s23)*pow(s13,4)+2*pow(s13,5)+(3*s14*s23+s14*s14+2*(s23*s23))*pow(s23,3)+s13*s13*(6*s23*(s14*s14)+7*s14*(s23*s23)+pow(s14,3)+9*pow(s23,3)))+s23*((3*(s14*s14)+s23*s23)*pow(s13,3)+3*s14*pow(s13,4)+pow(s13,5)+s13*(2*s14+s23)*pow(s23,3)+s13*s13*(s14*(s23*s23)+pow(s14,3)+2*pow(s23,3))+s14*pow(s23,4)))*pow(s12+s23,-1)*pow(s12+s13+s23,-3)*pow(s12+s23+s24,-1))/2.+((s12*s13+(s13+s14)*(s13+s23))*(2*s12*(s13+s14)+s12*s12+2*((s13+s14)*(s13+s14)))*pow(s13,-1)*pow(s14,-1)*pow(s23,-1)*pow(s12+s13+s14+s23,-1)*pow(s12+s13+s14+s23+s24,-1))/2.;
}

// Coefficient of master 10 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yyg6LC<10>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(-1,{
        qq2yyg6LC<10,-1>(s12,s13,s14,s23,s24)
    });
}

