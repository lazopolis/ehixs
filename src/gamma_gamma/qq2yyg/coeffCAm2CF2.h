/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 2: bubble(s13)

// Coefficient order epsilon^-1 of master 2
template<>
double qq2yygCAm2CF<2,-1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (2*s23*(s12+s13+s23)*pow(s13,-1)*pow(s12+s23,-2)-2*(s12+s13+s23)*pow(s13,-1)*pow(s12+s23,-1)-2*(s12+s13+s23)*(s12+s14+s24)*pow(s13-s24,-3)+(s14*s23+(s13+2*s23)*s24+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13-s24,-3)+2*s12*(s12*(s13-s24)+s13*(s14-s24)-s23*s24+s13*s13)*pow(s23,-1)*pow(s13-s24,-3)-(s12+s13+s23)*(s12+s13+s14+s24)*pow(s13,-1)*pow(s13-s24,-2)+(-s14+s24)*pow(s13,-1)*pow(s24,-1)-s12*(s12+s23-s24)*pow(s12+s23,-2)*pow(s24,-1)+s12*pow(s12+s23,-1)*pow(s24,-1)+(s12*(s13+s23)+s23*(2*s13+s23))*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)+(s14*s23-s13*(2*s23+s24)+s12*(-s13+s14+2*s23+s24)+2*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)-s12*(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s12+s23,-1)*pow(s24,-1)+s13*(s12+s14+s24)*pow(s13-s24,-2)*pow(s24,-1)-(s23*s24+2*s12*(s13+s24)+s13*(s14+2*s24))*pow(s13,-1)*pow(s13-s24,-1)*pow(s24,-1)-(s14*s23+s13*(s14+s23)+s12*(2*s13+s14+s23)-s14*s24+s12*s12-s24*s24)*pow(s13,-1)*pow(s13-s24,-1)*pow(s24,-1)+(s12+s14+s24)*(s12*s24+s13*(s23+s24))*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s13-s24,-1)*pow(s24,-1)+(-(s12*pow(s13,-1))+(s12+s13+s23-s24)*pow(s13,-1)+(s12+s14+s24)*pow(s13,-1)+(s12+s14+s24)*(s12+s13+s23+s24)*pow(s13-s24,-2)-(s12+s13+s23)*(s24*s24)*pow(s13,-1)*pow(s13-s24,-2)-(-(s13*s23)+s14*s23+s14*s24+s23*s24+s12*(s14+s23+2*s24)+s12*s12-s13*s13)*pow(s13,-1)*pow(s13-s24,-1)-s24*(s12*s24+s13*(s23+s24))*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s13-s24,-1))*pow(s24,-1)+pow(s12+s13+s14,-1)*(-(s13*(s12+s13+s14)*(s12+s13+s23)*(s12+s14+s24)*pow(s23,-1)*pow(s13-s24,-3))+(s12+s13+s14-s24)*s24*((s12+s13+s23)*(s12+s13+s23))*pow(s23,-1)*pow(s13-s24,-3)+s13*s13*((s12+s14+s24)*(s12+s14+s24))*pow(s23,-1)*pow(s13-s24,-3)+(s12+s13+s23)*(s12*(2*s13+2*s14+s23-3*s24)+s14*(s23-s24)-(2*s13+s23)*s24+2*(s12*s12))*pow(s23,-1)*pow(s13-s24,-2)+(s12+s14)*(s12+s14+s24)*pow(s13,-1)*pow(s24,-1)+s12*(s12+s14)*(s12+s13+s14-s23-s24)*pow(s13,-1)*pow(s23,-1)*pow(s24,-1)-(s12+s14)*(s12*(s13+s14+s23-s24)+s23*(2*s14+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s24,-1)+s13*(s12+s14+s24)*(-(s12*(s13+s14-s23))+s14*s23+(2*s13+s23)*s24-s12*s12)*pow(s23,-1)*pow(s13-s24,-2)*pow(s24,-1)-(s12+s14)*(s12+s13+s14-s24)*(s13*(s23+s24)*(2*s14*s23*s24+s13*(s14-s24)*(-s23+s24)+2*s24*(s13*s13))+s12*s13*(-2*s23*(s13*s13)-s13*(2*s14*s23-6*s23*s24+s23*s23-5*(s24*s24))+2*s24*(s14*(2*s23+s24)+s23*s23-s24*s24))+s12*s12*(4*s13*s24*(s23+s24)-2*s23*(s13*s13)+(s14-s24)*(s24*s24))+s24*s24*pow(s12,3))*pow(s13,-1)*pow(s12+s13+s14,-2)*pow(s23,-1)*pow(s13-s24,-2)*pow(s24,-1)-(s12+s14)*(s12*s24+s13*(s23+s24))*(s14*s23+s12*(s13+s23-3*s24)-s14*s24-s23*s24-s13*(s14+2*s24)+s12*s12-s14*s14)*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13-s24,-1)*pow(s24,-1)+(s12*((4*s13+3*s23)*s24+3*s14*(s23+s24))+s14*(2*(s13+s23)*s24+s14*(2*s23+s24))-(s13+s14-s23-3*s24)*(s12*s12)-pow(s12,3))*pow(s23,-1)*pow(s24,-1)*pow(-s13+s24,-1))-pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s23,-2)*pow(s13-s24,-3)*(s13*(s13-s24)*pow(s12,8)+pow(s12,7)*(s13*s24*(-7*s23+2*s24)+(s14+6*s23-3*s24)*(s13*s13)+3*pow(s13,3)-2*pow(s24,3))+pow(s12,6)*(s13*s13*(-21*s23*s24+s14*(5*s23+2*s24)+s14*s14+15*(s23*s23)-7*(s24*s24))+s13*s24*(-2*s14*(s23-s24)+12*s23*s24+s14*s14-20*(s23*s23)+9*(s24*s24))+(18*s23+s24)*pow(s13,3)+3*pow(s13,4)-(s14+6*(2*s23+s24))*pow(s24,3))+pow(s12,5)*((s14*(s23+s24)-s14*s14+45*(s23*s23)-15*(s24*s24))*pow(s13,3)+(-s14+17*s23+7*s24)*pow(s13,4)+pow(s13,5)-(s14*(5*s23+2*s24)+6*(5*s23*s24+5*(s23*s23)+s24*s24))*pow(s24,3)+s13*s24*((5*s23+3*s24)*(s14*s14)+34*s24*(s23*s23)+43*s23*(s24*s24)+s14*(3*s23*s24-10*(s23*s23)+4*(s24*s24))-30*pow(s23,3)+4*pow(s24,3))+s13*s13*(s14*s23*(10*s23+9*s24)+(4*s23+3*s24)*(s14*s14)-62*s24*(s23*s23)-32*s23*(s24*s24)+pow(s14,3)+20*pow(s23,3)+9*pow(s24,3)))+pow(s12,4)*((-(s14*(7*s23+s24))+s23*(37*s23+27*s24))*pow(s13,4)+(5*s23+4*s24)*pow(s13,5)-pow(s13,3)*((3*s23+s24)*(s14*s14)+5*s24*(s23*s23)+60*s23*(s24*s24)+s14*(-12*s23*s24-3*(s23*s23)+2*(s24*s24))-60*pow(s23,3)+18*pow(s24,3))-pow(s24,3)*(-(s23*(s14*s14))+s14*(8*s23*s24+10*(s23*s23)+s24*s24)+pow(s14,3)+2*(30*s24*(s23*s23)+12*s23*(s24*s24)+20*pow(s23,3)+pow(s24,3)))+s13*s24*(89*(s23*s23)*(s24*s24)+s14*s14*(9*s23*s24+10*(s23*s23)+4*(s24*s24))+3*s24*pow(s14,3)+56*s24*pow(s23,3)-25*pow(s23,4)+14*s23*pow(s24,3)+s14*(-8*s24*(s23*s23)+9*s23*(s24*s24)-20*pow(s23,3)+pow(s24,3))-7*pow(s24,4))+s13*s13*(s23*(5*s23+12*s24)*(s14*s14)-68*(s23*s23)*(s24*s24)+5*s23*pow(s14,3)-98*s24*pow(s23,3)+15*pow(s23,4)+40*s23*pow(s24,3)+s14*(16*s24*(s23*s23)-2*s23*(s24*s24)+10*pow(s23,3)+pow(s24,3))+23*pow(s24,4)))+s23*((-s14+s23+s24)*(s14*s14)*pow(s23,3)*pow(s24,3)+s24*pow(s13,5)*(4*s24*(s23*s23)+3*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+s13*s14*s23*(s24*s24)*(s23*(3*s23+s24)*(s14*s14)+s14*s23*(-5*s23*s24-3*(s23*s23)+s24*s24)+s24*(3*s24*(s23*s23)+2*s23*(s24*s24)+2*pow(s23,3)+pow(s24,3)))+s13*s13*(pow(s14,3)*pow(s23,4)-s14*s23*(s24*s24)*(10*s24*(s23*s23)+4*s23*(s24*s24)+6*pow(s23,3)+3*pow(s24,3))-(4*s24*(s23*s23)+3*s23*(s24*s24)+2*pow(s23,3)+pow(s24,3))*pow(s24,4)-s23*(s14*s14)*(-6*(s23*s23)*(s24*s24)+pow(s23,4)+2*s23*pow(s24,3)+pow(s24,4)))+pow(s13,3)*((s23-2*s24)*(s14*s14)*pow(s23,3)+pow(s24,3)*(13*s24*(s23*s23)+9*s23*(s24*s24)+6*pow(s23,3)+3*pow(s24,3))+s14*s23*(12*(s23*s23)*(s24*s24)+4*s24*pow(s23,3)-pow(s23,4)+3*s23*pow(s24,3)+2*pow(s24,4)))-pow(s13,4)*(s14*s23*(5*s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)+pow(s24,3))+s24*(12*(s23*s23)*(s24*s24)+3*s24*pow(s23,3)-pow(s23,4)+9*s23*pow(s24,3)+3*pow(s24,4))))+pow(s12,3)*((13*s23*s24+4*(s23*s23)+6*(s24*s24))*pow(s13,5)+pow(s13,4)*(51*s24*(s23*s23)-5*s23*(s24*s24)+s14*(-5*s23*s24-16*(s23*s23)+s24*s24)+39*pow(s23,3)-12*pow(s24,3))-s23*pow(s24,3)*(-((4*s23+s24)*(s14*s14))+s14*(12*s23*s24+10*(s23*s23)+3*(s24*s24))+4*pow(s14,3)+6*(10*s24*(s23*s23)+6*s23*(s24*s24)+5*pow(s23,3)+pow(s24,3)))+pow(s13,3)*(-(s23*(2*s23+5*s24)*(s14*s14))-92*(s23*s23)*(s24*s24)-5*s24*pow(s23,3)+45*pow(s23,4)+s14*(34*s24*(s23*s23)-4*s23*(s24*s24)+2*pow(s23,3)-7*pow(s24,3))-42*s23*pow(s24,3)+pow(s24,4))+s13*s24*(s24*(12*s23+s24)*pow(s14,3)+99*(s24*s24)*pow(s23,3)+54*s24*pow(s23,4)-11*pow(s23,5)+24*(s23*s23)*pow(s24,3)+s14*s14*(6*s24*(s23*s23)+7*s23*(s24*s24)+10*pow(s23,3)+2*pow(s24,3))-19*s23*pow(s24,4)-s14*(-5*(s23*s23)*(s24*s24)+22*s24*pow(s23,3)+20*pow(s23,4)+2*pow(s24,4))-6*pow(s24,5))+s13*s13*(-3*s24*(s14*s14)*(-2*s23*s24-6*(s23*s23)+s24*s24)+10*(s23*s23)*pow(s14,3)-82*(s24*s24)*pow(s23,3)-87*s24*pow(s23,4)+6*pow(s23,5)+56*(s23*s23)*pow(s24,3)+62*s23*pow(s24,4)+s14*(-12*(s23*s23)*(s24*s24)+14*s24*pow(s23,3)+5*pow(s23,4)+6*s23*pow(s24,3)+5*pow(s24,4))+11*pow(s24,5)))-s12*s12*(pow(s13,5)*(-9*s24*(s23*s23)-12*s23*(s24*s24)+3*pow(s23,3)-4*pow(s24,3))+s23*s23*(-3*(2*s23+s24)*(s14*s14)+s14*(8*s23*s24+5*(s23*s23)+3*(s24*s24))+6*(2*s23+s24)*((s23+s24)*(s23+s24))+6*pow(s14,3))*pow(s24,3)+pow(s13,4)*(-3*(s23*s23)*(s24*s24)-50*s24*pow(s23,3)-20*pow(s23,4)+s14*(12*s24*(s23*s23)-2*s23*(s24*s24)+16*pow(s23,3)-pow(s24,3))+26*s23*pow(s24,3)+11*pow(s24,4))+pow(s13,3)*((-2*s23+9*s24)*(s14*s14)*(s23*s23)+64*(s24*s24)*pow(s23,3)-18*pow(s23,5)+36*(s23*s23)*pow(s24,3)-9*s23*pow(s24,4)+s14*(-10*(s23*s23)*(s24*s24)-40*s24*pow(s23,3)+2*pow(s23,4)+17*s23*pow(s24,3)+4*pow(s24,4))-9*pow(s24,5))-s13*s13*(10*pow(s14,3)*pow(s23,3)-53*(s24*s24)*pow(s23,4)-41*s24*pow(s23,5)+pow(s23,6)+28*pow(s23,3)*pow(s24,3)+53*(s23*s23)*pow(s24,4)-s14*s14*(-18*(s23*s23)*(s24*s24)-12*s24*pow(s23,3)+5*pow(s23,4)+8*s23*pow(s24,3)+pow(s24,4))+16*s23*pow(s24,5)+s14*(-24*(s24*s24)*pow(s23,3)+6*s24*pow(s23,4)+pow(s23,5)-s23*s23*pow(s24,3)+12*s23*pow(s24,4)+3*pow(s24,5))-pow(s24,6))+s13*s24*(-3*s23*s24*(6*s23+s24)*pow(s14,3)-58*(s24*s24)*pow(s23,4)-28*s24*pow(s23,5)+2*pow(s23,6)+s23*(s14*s14)*(6*s24*(s23*s23)+3*s23*(s24*s24)-5*pow(s23,3)-5*pow(s24,3))-22*pow(s23,3)*pow(s24,3)+15*(s23*s23)*pow(s24,4)+10*s23*pow(s24,5)+s14*(-(s24*s24*pow(s23,3))+18*s24*pow(s23,4)+10*pow(s23,5)+4*s23*pow(s24,4)+pow(s24,5))+pow(s24,6)))-s12*(-(s13*s23*s24*(3*s23*s24*(4*s23+s24)*pow(s14,3)-s24*((s23+s24)*(s23+s24))*(-2*s24*(s23*s23)+2*s23*(s24*s24)-6*pow(s23,3)+pow(s24,3))+s14*(s23*s23)*(-5*s24*(s23*s23)+3*s23*(s24*s24)-2*pow(s23,3)+4*pow(s24,3))+s23*(s14*s14)*(-9*s24*(s23*s23)-11*s23*(s24*s24)+pow(s23,3)+4*pow(s24,3))))+pow(s13,5)*(-8*(s23*s23)*(s24*s24)-s24*pow(s23,3)+3*pow(s23,4)-5*s23*pow(s24,3)-pow(s24,4))+pow(s13,4)*(s14*(s23*s23)*(13*s23*s24+7*(s23*s23)+s24*s24)-5*(s24*s24)*pow(s23,3)-20*s24*pow(s23,4)-4*pow(s23,5)+20*(s23*s23)*pow(s24,3)+14*s23*pow(s24,4)+3*pow(s24,5))-pow(s13,3)*((3*s23-7*s24)*(s14*s14)*pow(s23,3)-17*(s24*s24)*pow(s23,4)+s24*pow(s23,5)+3*pow(s23,6)-6*pow(s23,3)*pow(s24,3)+s14*s23*(24*(s23*s23)*(s24*s24)+21*s24*pow(s23,3)-3*pow(s23,4)-7*s23*pow(s24,3)-2*pow(s24,4))+15*(s23*s23)*pow(s24,4)+12*s23*pow(s24,5)+3*pow(s24,6))+s13*s13*(-5*pow(s14,3)*pow(s23,4)-s14*s24*(s23*s23)*(-20*s24*(s23*s23)-16*s23*(s24*s24)+pow(s23,3)+3*pow(s24,3))+s23*(s14*s14)*(-18*(s23*s23)*(s24*s24)-3*s24*pow(s23,3)+4*pow(s23,4)+7*s23*pow(s24,3)+2*pow(s24,4))+s24*(-3*(s24*s24)*pow(s23,4)+14*s24*pow(s23,5)+8*pow(s23,6)-12*pow(s23,3)*pow(s24,3)-3*(s23*s23)*pow(s24,4)+2*s23*pow(s24,5)+pow(s24,6)))+pow(s23,3)*pow(s24,3)*(-((4*s23+3*s24)*(s14*s14))+s14*((s23+s24)*(s23+s24))+4*pow(s14,3)+2*pow(s23+s24,3))))*pow(s12+s23+s24,-3)+(-s13-s14+s23+s24)*pow(s13,-1)*pow(s12+s23+s24,-1)+s12*(2*s12+2*s23+s24)*pow(s12+s23,-2)*pow(s12+s23+s24,-1)-s12*pow(s12+s23,-1)*pow(s12+s23+s24,-1)-(s12*(s13+s23)+s23*(2*s13+s23))*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s23+s24,-1)+(s14*s23+s13*(2*s23-s24)+s12*(s13+s14+s24))*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s23+s24,-1)-s12*(s13*(s23+s24)+s23*(s14+s23+s24)+s12*(s13+s14+2*s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s12+s23,-1)*pow(s12+s23+s24,-1)-((s13+s14)*s23+s12*(s14+s23+s24)+s12*s12)*pow(s12+s23,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1)+(s12+s13+s23)*((s13+s14)*s23+s12*(s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1)+2*pow(s12+s23+s24,-1)*(1+s23*pow(s13,-1)-s12*pow(s12+s23,-1)+(s12+s13+s23)*s24*(s12+s14+s24)*pow(s13-s24,-3)+(s12+s23-s24)*(s12+s14+s24)*pow(s13-s24,-2)+(s13+s23)*(s12+s13+s23)*s24*pow(s13,-1)*pow(s13-s24,-2)+(s13+s23)*(s12+s23-s24)*pow(s13,-1)*pow(s13-s24,-1)-s24*((s13+s14)*s23+s12*(s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1))+pow(s12+s23+s24,-1)*(-(s12*pow(s13,-1))+(s12+s23)*pow(s13,-1)+s12*pow(s12+s23,-1)-(s12*(s13+s23)+s23*(2*s13+s23))*pow(s13,-1)*pow(s12+s23,-1)-(s12+s23)*(s12+s14+s24)*pow(s13-s24,-2)-s24*((s12+s13+s23)*(s12+s13+s23))*pow(s13,-1)*pow(s13-s24,-2)+(s13*(s23+s24)*(2*s14*s23*s24+s13*(s14-s24)*(-s23+s24)+2*s24*(s13*s13))+s12*s13*(-2*s23*(s13*s13)-s13*(2*s14*s23-6*s23*s24+s23*s23-5*(s24*s24))+2*s24*(s14*(2*s23+s24)+s23*s23-s24*s24))+s12*s12*(4*s13*s24*(s23+s24)-2*s23*(s13*s13)+(s14-s24)*(s24*s24))+s24*s24*pow(s12,3))*pow(s13,-1)*pow(s12+s13+s14,-2)*pow(s13-s24,-2)+(-(s12*(s13+s23-s24))+s13*(-2*s23+s24)+s23*(-s23+s24))*pow(s13,-1)*pow(s13-s24,-1)+(s12+s23-s24)*(s12*s24+s13*(s23+s24))*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s13-s24,-1)+s24*((s13+s14)*s23+s12*(s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1))+pow(s13,-1)*pow(s24,-1)*(-((s12+s14+s24)*(s13*s13)*pow(s13-s24,-2))-s12*(s12-2*s13-s24)*pow(s12+s23+s24,-1)+(-(s23*(s13+s24))-s12*(2*s13+s24)+s12*s12)*pow(s12+s23+s24,-1)-(s13+s24)*((s12+s13+s23)*(s12+s13+s23))*(s24*s24)*pow(s13-s24,-3)*pow(s12+s23+s24,-1)-(s12+s13+s23)*s24*(s14*s23+s23*s24-s13*(s14-s23+s24)+s12*(s13+s14+s23+2*s24)+s12*s12-s24*s24)*pow(s13-s24,-2)*pow(s12+s23+s24,-1)+(s12+s14-s24)*(s13*(s23+s24)*(2*s14*s23*s24+s13*(s14-s24)*(-s23+s24)+2*s24*(s13*s13))+s12*s13*(-2*s23*(s13*s13)-s13*(2*s14*s23-6*s23*s24+s23*s23-5*(s24*s24))+2*s24*(s14*(2*s23+s24)+s23*s23-s24*s24))+s12*s12*(4*s13*s24*(s23+s24)-2*s23*(s13*s13)+(s14-s24)*(s24*s24))+s24*s24*pow(s12,3))*pow(s12+s13+s14,-2)*pow(s13-s24,-2)*pow(s12+s23+s24,-1)+(s13*s23*(s14+s24)+s23*s24*(s14+s24)+s13*(s12*s12)+s12*(s24*(s14+s24)+s13*(s14+s23+2*s24)-s13*s13)-(s23+s24)*(s13*s13))*pow(s13-s24,-1)*pow(s12+s23+s24,-1)+(s12*s24+s13*(s23+s24))*(s12*(s13+s14-2*s24)+s13*(s14+s24)+s24*(-s23+s24)+s12*s12)*pow(s12+s13+s14,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1))-pow(s12+s13+s14,-2)*pow(s23,-1)*(-(s12*(2*s12+s14)*(s12+s13+s14)*pow(s13,-1))+(s12+s13)*(s12+s13+s14)*(s12+s14+s24)*pow(s13,-1)+(s12+s13+s14)*(-(s14*(2*s13+s23))+s12*(-s13+s14+s23)+3*(s12*s12))*pow(s13,-1)-2*s13*(s12+s13+s14)*(s12*s12)*pow(s12+s23,-2)-s12*(s12+s13+s14)*(3*s12-s13+2*s14+s23)*pow(s12+s23,-1)+s12*(s12+s13)*(s12+s13+s14)*(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s12+s23,-1)-2*s13*(s12+s13+s14)*(s12+s13+s23)*s24*(s12+s14+s24)*pow(s13-s24,-3)+2*(s12+s13+s14)*(s13*s13)*((s12+s14+s24)*(s12+s14+s24))*pow(s13-s24,-3)+(s12+s13+s14)*(s12-3*s13-s23)*(s12+s13+s23)*s24*pow(s13-s24,-2)+2*s13*(-3*s12+s13-s14)*(s12+s13+s14)*(s12+s14+s24)*pow(s13-s24,-2)+(s13*(s23+s24)*(2*s14*s23*s24+s13*(s14-s24)*(-s23+s24)+2*s24*(s13*s13))+s12*s13*(-2*s23*(s13*s13)-s13*(2*s14*s23-6*s23*s24+s23*s23-5*(s24*s24))+2*s24*(s14*(2*s23+s24)+s23*s23-s24*s24))+s12*s12*(4*s13*s24*(s23+s24)-2*s23*(s13*s13)+(s14-s24)*(s24*s24))+s24*s24*pow(s12,3))*pow(s13,-1)*pow(s13-s24,-2)+(s12+s13+s14)*(s12*(-7*s13+s14-s23)-s14*(3*s13+s23)+3*(s12*s12))*pow(s13-s24,-1)+(s12*s24+s13*(s23+s24))*(s14*(2*s13+s14+s23)+s12*(4*s13+3*s14+s23)+2*(s12*s12))*pow(s13,-1)*pow(s13-s24,-1)+2*s12*(s12+s13+s14)*(-((s13+s14)*(s14*s23*s24-s13*(s14*(2*s23+s24)+s24*(s23+2*s24))+s24*(s13*s13))*(s23*s23))+(2*s23*(s13*s13)-s24*(4*s23*s24+2*s14*(3*s23+s24)+s14*s14+3*(s23*s23)+s24*s24)+2*s13*(5*s23*s24+3*s14*(2*s23+s24)+s14*s14+3*(s23*s23)+2*(s24*s24)))*pow(s12,3)+(-(s24*(2*s14+3*s23+2*s24))+s13*(4*s14+6*s23+5*s24))*pow(s12,4)+(2*s13-s24)*pow(s12,5)+s12*s12*(2*s23*(s14+2*s23+3*s24)*(s13*s13)-s23*s24*(s14*(6*s23+4*s24)+3*(s14*s14)+(s23+s24)*(s23+s24))+s13*((6*s23+s24)*(s14*s14)+2*s14*(6*s23*s24+6*(s23*s23)+s24*s24)+(2*s23+s24)*((s23+s24)*(s23+s24)))-2*s23*pow(s13,3))+s12*s23*(-(s14*s23*s24*(3*s14+2*(s23+s24)))+2*s13*s14*(3*s23*s24+s14*(3*s23+s24)+2*(s23*s23)+2*(s24*s24))+s13*s13*(4*s14*s23+7*s23*s24+2*(s23*s23)+4*(s24*s24))-2*(s23+s24)*pow(s13,3)))*pow(s12+s23,-2)*pow(s13-s24,-2)*pow(s12+s23+s24,-2)-2*s12*(2*s12-s13+s14)*(s12+s13+s14)*((s13+s14)*s23+s12*(s14+s23+s24)+s12*s12)*pow(s12+s23,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1))-pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s23,-2)*pow(s24,-3)*((17*s23*s24+3*s14*(7*s23+3*s24)+s13*(12*s14+30*s23+11*s24)+10*(s13*s13)+3*(s14*s14)+21*(s23*s23)+4*(s24*s24))*pow(s12,8)+(5*s13+3*s14+7*s23+3*s24)*pow(s12,9)+pow(s12,10)+pow(s12,7)*(2*(9*s14+25*s23+7*s24)*(s13*s13)+3*(7*s23+3*s24)*(s14*s14)+39*s24*(s23*s23)+18*s23*(s24*s24)+s14*(52*s23*s24+63*(s23*s23)+10*(s24*s24))+s13*(52*s23*s24+s14*(72*s23+25*s24)+9*(s14*s14)+75*(s23*s23)+10*(s24*s24))+10*pow(s13,3)+pow(s14,3)+35*pow(s23,3)+2*pow(s24,3))-s12*s23*(s24*(s14*s23*(s23-4*s24)+s24*(3*s23*s24+s23*s23-2*(s24*s24)))*pow(s13,4)+s23*s23*((s23+s24)*(s23+s24))*(s14*s24*(s23*s24+2*(s23*s23)-s24*s24)+3*(s14*s14)*(s23*s24-s23*s23+s24*s24)-(7*s23+4*s24)*pow(s14,3)+2*(s23+s24)*pow(s24,3))+pow(s13,3)*((-3*s23+7*s24)*(s14*s14)*(s23*s23)+s23*(s24*s24)*(13*s23*s24+3*(s23*s23)+3*(s24*s24))-s14*s24*(12*s24*(s23*s23)+7*s23*(s24*s24)-5*pow(s23,3)+4*pow(s24,3)))+s13*s23*(s23+s24)*(-3*(s23*s24+4*(s23*s23)-s24*s24)*pow(s14,3)+s24*s24*(10*s24*(s23*s23)+9*s23*(s24*s24)+pow(s23,3)+2*pow(s24,3))+s14*s14*(12*s24*(s23*s23)+18*s23*(s24*s24)-9*pow(s23,3)+4*pow(s24,3))-s14*s24*(s24*(s23*s23)+10*s23*(s24*s24)-7*pow(s23,3)+5*pow(s24,3)))+s13*s13*(-5*pow(s14,3)*pow(s23,3)+s14*s23*s24*(-7*s24*(s23*s23)-20*s23*(s24*s24)+9*pow(s23,3)-11*pow(s24,3))+s23*(s24*s24)*(19*s24*(s23*s23)+19*s23*(s24*s24)+3*pow(s23,3)+5*pow(s24,3))+s14*s14*(21*(s23*s23)*(s24*s24)+13*s24*pow(s23,3)-9*pow(s23,4)+7*s23*pow(s24,3)-2*pow(s24,4))))+pow(s12,6)*(30*(s23*s23)*(s24*s24)+s13*s13*(54*s23*s24+3*s14*(30*s23+7*s24)+9*(s14*s14)+100*(s23*s23)+6*(s24*s24))+s14*s14*(53*s23*s24+63*(s23*s23)+9*(s24*s24))+2*(6*s14+20*s23+3*s24)*pow(s13,3)+5*pow(s13,4)+(7*s23+3*s24)*pow(s14,3)+45*s24*pow(s23,3)+35*pow(s23,4)+s13*((54*s23+17*s24)*(s14*s14)+95*s24*(s23*s23)+37*s23*(s24*s24)+s14*(118*s23*s24+180*(s23*s23)+15*(s24*s24))+2*pow(s14,3)+100*pow(s23,3)-3*pow(s24,3))+4*s23*pow(s24,3)+3*s14*(41*s24*(s23*s23)+15*s23*(s24*s24)+35*pow(s23,3)+2*pow(s24,3))-3*pow(s24,4))+pow(s12,5)*((20*s23*s24+3*s14*(16*s23+s24)+3*(s14*s14)+60*(s23*s23)-2*(s24*s24))*pow(s13,3)+(3*s14+15*s23-s24)*pow(s13,4)+pow(s13,5)+3*(6*s23*s24+7*(s23*s23)+s24*s24)*pow(s14,3)+20*(s24*s24)*pow(s23,3)+25*s24*pow(s23,4)+21*pow(s23,5)+s13*s13*(15*s14*s23*(12*s23+5*s24)+(45*s23+7*s24)*(s14*s14)+76*s24*(s23*s23)+19*s23*(s24*s24)+pow(s14,3)+100*pow(s23,3)-19*pow(s24,3))-6*(s23*s23)*pow(s24,3)+3*(s14*s14)*(43*s24*(s23*s23)+14*s23*(s24*s24)+35*pow(s23,3)+pow(s24,3))+s13*(47*(s23*s23)*(s24*s24)+3*(s14*s14)*(27*s23*s24+45*(s23*s23)+2*(s24*s24))+3*(4*s23+s24)*pow(s14,3)+80*s24*pow(s23,3)+75*pow(s23,4)-25*s23*pow(s24,3)+s14*(215*s24*(s23*s23)+50*s23*(s24*s24)+240*pow(s23,3)+pow(s24,3))-19*pow(s24,4))-19*s23*pow(s24,4)+3*s14*(25*(s23*s23)*(s24*s24)+50*s24*pow(s23,3)+35*pow(s23,4)+7*s23*pow(s24,3)+pow(s24,4))-5*pow(s24,5))+s12*s12*(s24*(-2*s23*s24+s23*s23-2*(s24*s24))*pow(s13,5)+pow(s13,4)*(s14*s23*(-4*s23*s24+3*(s23*s23)+3*(s24*s24))-s24*(4*s24*(s23*s23)+20*s23*(s24*s24)-3*pow(s23,3)+5*pow(s24,3)))-(s23+s24)*(s23*s23)*(-3*(8*s23*s24+7*(s23*s23)+2*(s24*s24))*pow(s14,3)-3*(s14*s14)*(6*s24*(s23*s23)-s23*(s24*s24)+7*pow(s23,3)-pow(s24,3))-3*s14*(-3*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)+pow(s23,4)+s23*pow(s24,3)+pow(s24,4))+s24*(11*(s23*s23)*(s24*s24)+s24*pow(s23,3)+pow(s23,4)+17*s23*pow(s24,3)+6*pow(s24,4)))+pow(s13,3)*(3*(4*s23-3*s24)*(s14*s14)*(s23*s23)+2*s14*(5*(s23*s23)*(s24*s24)-6*s24*pow(s23,3)+6*pow(s23,4)+s23*pow(s24,3)+pow(s24,4))-s24*(55*(s23*s23)*(s24*s24)+5*s24*pow(s23,3)-2*pow(s23,4)+33*s23*pow(s24,3)+6*pow(s24,4)))+s13*s13*(10*pow(s14,3)*pow(s23,3)+s14*s14*(-27*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)+45*pow(s23,4)-8*s23*pow(s24,3)+pow(s24,4))+s14*s23*(3*(s23*s23)*(s24*s24)-15*s24*pow(s23,3)+18*pow(s23,4)+17*s23*pow(s24,3)+7*pow(s24,4))-2*s24*(37*(s24*s24)*pow(s23,3)+4*s24*pow(s23,4)+pow(s23,5)+38*(s23*s23)*pow(s24,3)+12*s23*pow(s24,4)+pow(s24,5)))+s13*s23*(pow(s14,3)*(30*s24*(s23*s23)+30*pow(s23,3)-3*pow(s24,3))+s14*s14*(-30*(s23*s23)*(s24*s24)+45*s24*pow(s23,3)+54*pow(s23,4)-30*s23*pow(s24,3)-5*pow(s24,4))+s14*(-19*(s24*s24)*pow(s23,3)-10*s24*pow(s23,4)+12*pow(s23,5)+16*(s23*s23)*pow(s24,3)+21*s23*pow(s24,4)+5*pow(s24,5))-s24*(49*(s24*s24)*pow(s23,3)+7*s24*pow(s23,4)+3*pow(s23,5)+75*(s23*s23)*pow(s24,3)+38*s23*pow(s24,4)+6*pow(s24,5))))+pow(s12,3)*(s23*s23*pow(s13,5)+pow(s13,4)*(s14*s23*(9*s23-5*s24)+5*s24*(s23*s23)-5*s23*(s24*s24)+5*pow(s23,3)-11*pow(s24,3))+pow(s13,3)*(s23*(18*s23-5*s24)*(s14*s14)-3*(s23*s23)*(s24*s24)+12*s24*pow(s23,3)+10*pow(s23,4)+s14*(-6*s24*(s23*s23)-4*s23*(s24*s24)+48*pow(s23,3)-3*pow(s24,3))-65*s23*pow(s24,3)-23*pow(s24,4))+s13*s13*(10*(s23*s23)*pow(s14,3)+6*s24*pow(s23,4)+10*pow(s23,5)+s14*s14*(22*s24*(s23*s23)-15*s23*(s24*s24)+90*pow(s23,3)-3*pow(s24,3))-110*(s23*s23)*pow(s24,3)+s14*(-3*(s23*s23)*(s24*s24)+30*s24*pow(s23,3)+90*pow(s23,4)-6*s23*pow(s24,3)-pow(s24,4))-91*s23*pow(s24,4)-17*pow(s24,5))+s23*(-6*(s24*s24)*pow(s23,4)-3*s24*pow(s23,5)+pow(s23,6)-26*pow(s23,3)*pow(s24,3)+pow(s14,3)*(60*s24*(s23*s23)+30*s23*(s24*s24)+35*pow(s23,3)+4*pow(s24,3))+s14*s14*(60*(s23*s23)*(s24*s24)+115*s24*pow(s23,3)+63*pow(s23,4)+6*s23*pow(s24,3)-pow(s24,4))-51*(s23*s23)*pow(s24,4)-33*s23*pow(s24,5)+3*s14*(8*s24*pow(s23,4)+7*pow(s23,5)+2*(s23*s23)*pow(s24,3)+4*s23*pow(s24,4)+pow(s24,5))-6*pow(s24,6))+s13*(-8*(s24*s24)*pow(s23,4)-4*s24*pow(s23,5)+5*pow(s23,6)+pow(s14,3)*(30*s24*(s23*s23)+40*pow(s23,3)-pow(s24,3))-84*pow(s23,3)*pow(s24,3)+s14*s14*(130*s24*pow(s23,3)+135*pow(s23,4)-18*s23*pow(s24,3)-2*pow(s24,4))-112*(s23*s23)*pow(s24,4)-43*s23*pow(s24,5)+s14*(4*(s24*s24)*pow(s23,3)+55*s24*pow(s23,4)+72*pow(s23,5)+12*(s23*s23)*pow(s24,3)+9*s23*pow(s24,4)+pow(s24,5))-4*pow(s24,6)))+pow(s12,4)*((s14*(9*s23-2*s24)+s23*s24+15*(s23*s23)-2*(s24*s24))*pow(s13,4)+(2*s23-s24)*pow(s13,5)+3*s24*pow(s23,5)+7*pow(s23,6)+pow(s13,3)*((12*s23-s24)*(s14*s14)+24*s24*(s23*s23)+s14*(4*s23*s24+72*(s23*s23)-5*(s24*s24))-3*s23*(s24*s24)+40*pow(s23,3)-23*pow(s24,3))-24*pow(s23,3)*pow(s24,3)+pow(s14,3)*(45*s24*(s23*s23)+15*s23*(s24*s24)+35*pow(s23,3)+pow(s24,3))+3*s23*(s14*s14)*(55*s24*(s23*s23)+25*s23*(s24*s24)+35*pow(s23,3)+3*pow(s24,3))+s13*s13*(s14*s14*(23*s23*s24+90*(s23*s23)-3*(s24*s24))+18*(s23*s23)*(s24*s24)+5*s23*pow(s14,3)+44*s24*pow(s23,3)+50*pow(s23,4)+2*s14*(45*s24*(s23*s23)-s23*(s24*s24)+90*pow(s23,3)-4*pow(s24,3))-74*s23*pow(s24,3)-34*pow(s24,4))-45*(s23*s23)*pow(s24,4)+s13*(15*s23*(2*s23+s24)*pow(s14,3)+18*(s24*s24)*pow(s23,3)+25*s24*pow(s23,4)+30*pow(s23,5)+s14*s14*(150*s24*(s23*s23)+15*s23*(s24*s24)+180*pow(s23,3)-4*pow(s24,3))-68*(s23*s23)*pow(s24,3)+s14*s23*(180*s24*(s23*s23)+51*s23*(s24*s24)+180*pow(s23,3)+5*pow(s24,3))-75*s23*pow(s24,4)-16*pow(s24,5))-21*s23*pow(s24,5)+s14*(50*(s24*s24)*pow(s23,3)+95*s24*pow(s23,4)+63*pow(s23,5)+24*(s23*s23)*pow(s24,3)+10*s23*pow(s24,4)+pow(s24,5))-2*pow(s24,6))+s23*s23*(s13*s14*s23*(-(s14*s24*(4*s23+s24))+(2*s23-s24)*(s14*s14)+(s23+s24)*(s24*s24))*((s23+s24)*(s23+s24))+s24*pow(s13,3)*(-2*(s14*s14)*(s23*s23)+s14*s24*(2*s23*s24+3*(s23*s23)+2*(s24*s24))+s23*pow(s24,3))+s14*(s13*s13)*(s23*(s24*s24)*(5*s23*s24+3*(s23*s23)+3*(s24*s24))+s14*s14*pow(s23,3)+s14*s24*(-6*s24*(s23*s23)-2*s23*(s24*s24)-5*pow(s23,3)+pow(s24,3)))+pow(s13,4)*(s14*s23*(s24*s24)+pow(s24,4))+(s14-s24)*(s14*s14)*(s23*s23)*pow(s23+s24,3)))*pow(s12+s13+s23+s24,-3)+(s12+s13+s23)*(s12+s14+s23+s24)*pow(s13,-1)*pow(s12+s13+s23+s24,-2)+s13*(s12+s13+s14+s23+s24)*pow(s12+s23+s24,-1)*pow(s12+s13+s23+s24,-2)-(s14*s23+s12*(s13+s14+s23+s24)+s12*s12)*pow(s12+s23,-1)*pow(s24,-1)*pow(s12+s13+s23+s24,-1)+(s12+s13+s23)*(s14*s23+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)*pow(s12+s13+s23+s24,-1)-(s23*(s23+s24)+s12*(s13+3*s23+2*s24)+s13*(s14+2*(s23+s24))+2*(s12*s12)+s13*s13)*pow(s13,-1)*pow(s12+s23+s24,-1)*pow(s12+s13+s23+s24,-1)-(2*s14*s23+s14*s24+2*s23*s24+s13*(s14+s23+s24)+s12*(s13+2*s14+3*(s23+s24))+2*(s12*s12)+s13*s13+s23*s23+s24*s24)*pow(s13,-1)*pow(s12+s23+s24,-1)*pow(s12+s13+s23+s24,-1)+(s12+s13+s14+s23+s24)*(s13*s24+s12*(s13+s23+s24)+s12*s12)*pow(s13,-1)*pow(s14,-1)*pow(s12+s23+s24,-1)*pow(s12+s13+s23+s24,-1)+2*pow(s24,-1)*(-1-s23*pow(s13,-1)+s12*pow(s12+s23,-1)-(s12+s13+s23)*(s12+s23+s24)*(s12+s13+s14+s23+s24)*pow(s12+s13+s23+s24,-3)+(s12+s13+s14+s23+s24)*(2*s12+2*s23+s24)*pow(s12+s13+s23+s24,-2)+(s13+s23)*(s12+s13+s23)*(s12+s23+s24)*pow(s13,-1)*pow(s12+s13+s23+s24,-2)-(s13+s23)*(2*s12+2*s23+s24)*pow(s13,-1)*pow(s12+s13+s23+s24,-1)-(s12+s23+s24)*(s14*s23+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s24,-1)*pow(s12+s13+s23+s24,-1))-pow(s24,-1)*(-(s12*pow(s13,-1))+(s12+s23)*pow(s13,-1)+s12*pow(s12+s23,-1)-(s12*(s13+s23)+s23*(2*s13+s23))*pow(s13,-1)*pow(s12+s23,-1)+(s12+s23)*(s12+s13+s14+s23+s24)*pow(s12+s13+s23+s24,-2)+(s12+s23+s24)*((s12+s13+s23)*(s12+s13+s23))*pow(s13,-1)*pow(s12+s13+s23+s24,-2)+pow(s13,-1)*(s13*s24*(-2*s14*s23*(s23+s24)+s13*(s24*(s23+s24)-s14*(2*s23+s24))+s24*(s13*s13))+s12*s13*s24*(s13*(-2*s14+4*s23+5*s24)+2*(s13*s13)+2*(-(s14*(2*s23+s24))+(s23+s24)*(s23+s24)))+(s13*(-2*s14+6*s23+8*s24)+(s23+s24)*(-2*s14+3*(s23+s24))+3*(s13*s13))*pow(s12,3)+(3*s13-s14+3*(s23+s24))*pow(s12,4)+pow(s12,5)+s12*s12*((-s14+3*s23+7*s24)*(s13*s13)+s13*(10*s23*s24-2*s14*(s23+2*s24)+3*(s23*s23)+7*(s24*s24))-(s14-s23-s24)*((s23+s24)*(s23+s24))+pow(s13,3)))*pow(s14,-2)*pow(s12+s13+s23+s24,-2)-(s23*(2*s23+s24)+s13*(3*s23+s24)+s12*(2*s13+3*s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s13+s23+s24,-1)+(2*s12+2*s23+s24)*(s13*s24+s12*(s13+s23+s24)+s12*s12)*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s23+s24,-1)-(s12+s23+s24)*(s14*s23+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s24,-1)*pow(s12+s13+s23+s24,-1))+2*pow(s12+s13+s14,-1)*pow(s23,-1)*(s12*(2*s12+s23)*pow(s13,-1)-s12*s12*pow(s13,-1)-s13*(s12*s12)*pow(s12+s23,-2)-s12*(2*s12+s23)*pow(s12+s23,-1)+2*s13*(s12+s13+s23)*(s12+s23+s24)*(s12+s13+s14+s23+s24)*pow(s12+s13+s23+s24,-3)-(s12+s13+s23)*(s12+s13+s23)*((s12+s23+s24)*(s12+s23+s24))*pow(s12+s13+s23+s24,-3)-s13*s13*((s12+s13+s14+s23+s24)*(s12+s13+s14+s23+s24))*pow(s12+s13+s23+s24,-3)+(s12+s13+s23)*(4*s12-s13-s14+s23)*(s12+s23+s24)*pow(s12+s13+s23+s24,-2)+s13*(-4*s12+s13+s14-s23)*(s12+s13+s14+s23+s24)*pow(s12+s13+s23+s24,-2)+s12*pow(s13,-1)*(s13*s24*(-2*s14*s23*(s23+s24)+s13*(s24*(s23+s24)-s14*(2*s23+s24))+s24*(s13*s13))+s12*s13*s24*(s13*(-2*s14+4*s23+5*s24)+2*(s13*s13)+2*(-(s14*(2*s23+s24))+(s23+s24)*(s23+s24)))+(s13*(-2*s14+6*s23+8*s24)+(s23+s24)*(-2*s14+3*(s23+s24))+3*(s13*s13))*pow(s12,3)+(3*s13-s14+3*(s23+s24))*pow(s12,4)+pow(s12,5)+s12*s12*((-s14+3*s23+7*s24)*(s13*s13)+s13*(10*s23*s24-2*s14*(s23+2*s24)+3*(s23*s23)+7*(s24*s24))-(s14-s23-s24)*((s23+s24)*(s23+s24))+pow(s13,3)))*pow(s14,-2)*pow(s12+s13+s23+s24,-2)-s12*pow(s12+s23,-2)*pow(s24,-2)*(s14*(s14*s23*(s23+s24)+s13*(s14*(s23-s24)-2*s24*(s23+s24))-2*s24*(s13*s13))*(s23*s23)+s12*s14*s23*(2*(s23-2*s24)*(s13*s13)+s13*(s14*(3*s23-2*s24)-2*s23*s24+4*(s23*s23)-4*(s24*s24))+s23*(s14*(4*s23+3*s24)+2*((s23+s24)*(s23+s24))))+(4*s14*(2*s23+s24)+s13*(4*s14+9*s23+5*s24)+3*(s13*s13)+s14*s14+3*(3*s23*s24+2*(s23*s23)+s24*s24))*pow(s12,4)+(3*s13+2*s14+4*s23+3*s24)*pow(s12,5)+pow(s12,6)+pow(s12,3)*((2*s14+6*s23+s24)*(s13*s13)+(4*s23+s24)*(s14*s14)+2*s14*(6*s23*s24+6*(s23*s23)+s24*s24)+s13*(10*s23*s24+2*s14*(6*s23+s24)+s14*s14+9*(s23*s23)+s24*s24)+(4*s23+s24)*((s23+s24)*(s23+s24))+pow(s13,3))+s12*s12*(s13*s13*(s14*(4*s23-2*s24)+s23*s24+3*(s23*s23)-2*(s24*s24))+s13*(3*s23-s24)*(2*s14*(2*s23+s24)+s14*s14+(s23+s24)*(s23+s24))+(s23-s24)*pow(s13,3)+s23*(3*(2*s23+s24)*(s14*s14)+4*s14*(3*s23*s24+2*(s23*s23)+s24*s24)+pow(s23+s24,3))))*pow(s12+s13+s23+s24,-2)+(s12*(3*s13+3*s14-2*s23)+(s13+s14)*s23-4*(s12*s12))*pow(s12+s13+s23+s24,-1)+s12*(2*s12-s13-s14+s23)*(s13*s24+s12*(s13+s23+s24)+s12*s12)*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s23+s24,-1)+s12*(2*s12-s13-s14+s23)*(s14*s23+s12*(s13+s14+s23+s24)+s12*s12)*pow(s12+s23,-1)*pow(s24,-1)*pow(s12+s13+s23+s24,-1)))/2.;
}

// Coefficient order epsilon^0 of master 2
template<>
double qq2yygCAm2CF<2,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (-16*pow(s13,-1)*(-(s13*s24*(s24*(9*s23+s24)+s14*(9*s23+2*s24)))+(3*s14*(s23-2*s24)+2*(s23-4*s24)*s24)*(s13*s13)+2*(s14+s24)*(s23+s24)*(s24*s24)+s12*s12*(-9*s13*s24+3*(s13*s13)+2*(s24*s24))+(2*s14+s23+2*s24)*pow(s13,3)+s12*(-(s13*s24*(9*s14+9*s23+10*s24))+3*(s14+s23-2*s24)*(s13*s13)+2*(s14+s23+2*s24)*(s24*s24)+4*pow(s13,3))+pow(s13,4))*pow(s13-s24,-3)*pow(s24,-1)-16*pow(s13,-1)*(s14*s24*(4*s14*(s23+2*s24)+s24*(5*s23+2*s24))+s12*s12*(-(s13*(4*s14+2*s23+5*s24))+s24*(8*s14+4*s23+9*s24)+2*(s13*s13))+s13*s13*(2*s14*(2*s23-9*s24)-s24*(14*s23+s24)+6*(s14*s14))+s13*(s14*s24*(-7*s23+10*s24)-2*(s23+5*s24)*(s14*s14)+(8*s23+5*s24)*(s24*s24))-2*(s13-2*s24)*pow(s12,3)+2*(6*s14+3*s23-4*s24)*pow(s13,3)+s12*((8*s14+4*s23-17*s24)*(s13*s13)-s13*((7*s23-8*s24)*s24+s14*(4*s23+15*s24)+2*(s14*s14))+s24*(5*s24*(s23+s24)+s14*(8*s23+17*s24)+4*(s14*s14))+10*pow(s13,3))+6*pow(s13,4))*pow(s12+s13+s14,-1)*pow(s13-s24,-2)*pow(s24,-1)+8*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13-s24,-3)*pow(s24,-1)*(s13*(s24*s24)*(-4*s23*(s14*s14)+s14*(5*s23*s24+3*(s23*s23)-2*(s24*s24))+2*(s23+s24)*(s24*s24))-s24*(s13*s13)*(-5*s23*(s14*s14)+s14*(s23*s24+s23*s23-4*(s24*s24))+(3*s23+5*s24)*(s24*s24))+(s14*(5*s23-s24)*s24-s23*(s14*s14)+5*(s23+s24)*(s24*s24))*pow(s13,3)-(s14*(s23-s24)+s24*s24)*pow(s13,4)+s24*pow(s13,5)+2*pow(s12,3)*(-7*s24*(s13*s13)+7*s13*(s24*s24)+2*pow(s13,3)-pow(s24,3))+2*s14*s23*(s14-s23-s24)*pow(s24,3)+s12*s12*(-((23*s14+s23-31*s24)*s24*(s13*s13))+s13*(14*s14+13*s23-5*s24)*(s24*s24)+(9*s14-2*s23-27*s24)*pow(s13,3)+7*pow(s13,4)-4*s23*pow(s24,3))+s12*(s24*(s13*s13)*(17*s23*s24+2*s14*(2*s23+9*s24)-9*(s14*s14)-s23*s23+2*(s24*s24))-s13*(s24*s24)*(4*s23*s24+s14*(-9*s23+s24)-3*(s23*s23)+5*(s24*s24))+(2*s24*(-s23+8*s24)-s14*(3*s23+23*s24)+5*(s14*s14))*pow(s13,3)+(8*s14-s23-12*s24)*pow(s13,4)+3*pow(s13,5)+2*(-(s14*s23)+s14*s14-s23*s23+s24*s24)*pow(s24,3)))-8*pow(s13,-1)*pow(s12+s13+s14,-3)*pow(s23,-1)*pow(s13-s24,-3)*pow(s24,-1)*(s13*(s14*s14)*(s24*s24)*(-30*s23*(s14*s14)+2*(s23-s24)*(s24*s24)+s14*(15*s23*s24+3*(s23*s23)+4*(s24*s24)))+s13*(-5*s13*s24+2*(s13*s13)+5*(s24*s24))*pow(s12,5)-((31*s23+15*s24)*(s14*s14)+s14*(-70*s23*s24+s23*s23-41*(s24*s24))+2*(15*s23+8*s24)*(s24*s24))*pow(s13,5)+(5*s24*(5*s23+2*s24)-s14*(19*s23+9*s24))*pow(s13,6)-(6*s23+s24)*pow(s13,7)+s14*s24*(s13*s13)*(-2*s24*(34*s23+7*s24)*(s14*s14)+2*s23*(4*s23+5*s24)*(s24*s24)+s14*s24*(13*s23*s24+4*(s23*s23)+13*(s24*s24))+33*s23*pow(s14,3))+pow(s13,4)*(s24*s24*(15*s23*s24-2*(s23*s23)+13*(s24*s24))-2*s14*s24*(24*s23*s24-4*(s23*s23)+17*(s24*s24))+s14*s14*(98*s23*s24-2*(s23*s23)+52*(s24*s24))-(29*s23+7*s24)*pow(s14,3))+2*s23*(4*s14+s24)*pow(s14,3)*pow(s24,3)+pow(s12,4)*(s24*(-2*s14+15*s23+26*s24)*(s13*s13)-s13*(3*s14+4*s23+6*s24)*(s24*s24)+(3*s14-7*s23-19*s24)*pow(s13,3)+7*pow(s13,4)+2*(4*s14+s24)*pow(s24,3))+s12*s12*(-((s14*(73*s23+23*s24)+9*(s14*s14)+2*(-44*s23*s24+s23*s23-28*(s24*s24)))*pow(s13,4))+(3*s14-29*s23-20*s24)*pow(s13,5)+5*pow(s13,6)+s13*(s24*s24)*((-102*s23+20*s24)*(s14*s14)+6*s23*(s24*s24)+s14*(7*s23*s24+9*(s23*s23)+16*(s24*s24))-49*pow(s14,3))+pow(s13,3)*((-54*s23+37*s24)*(s14*s14)-3*s14*(-64*s23*s24+s23*s23-30*(s24*s24))+2*s24*(-24*s23*s24+s23*s23-15*(s24*s24))-7*pow(s14,3))+s24*(s13*s13)*(-2*s14*s24*(49*s23+22*s24)+16*(9*s23-2*s24)*(s14*s14)+s24*(s23*s24+4*(s23*s23)+9*(s24*s24))+34*pow(s14,3))+6*s14*(s14+s23)*(4*s14+s24)*pow(s24,3))+s12*(-((-75*s23*s24+12*s14*(5*s23+2*s24)+6*(s14*s14)+s23*s23-35*(s24*s24))*pow(s13,5))-(20*s23+7*s24)*pow(s13,6)+pow(s13,7)+s13*s14*(s24*s24)*((-94*s23+13*s24)*(s14*s14)+8*s23*(s24*s24)+s14*(26*s23*s24+9*(s23*s23)+19*(s24*s24))-18*pow(s14,3))-pow(s13,4)*(2*(40*s23+s24)*(s14*s14)+s14*(-186*s23*s24+4*(s23*s23)-105*(s24*s24))+s24*(67*s23*s24-8*(s23*s23)+36*(s24*s24))+8*pow(s14,3))+pow(s13,3)*(s14*s24*(-116*s23*s24+4*(s23*s23)-71*(s24*s24))+s24*s24*(20*s23*s24-13*(s23*s23)+23*(s24*s24))+s14*s14*(225*s23*s24-3*(s23*s23)+59*(s24*s24))+(-40*s23+28*s24)*pow(s14,3)-3*pow(s14,4))+s24*(s13*s13)*(-(s24*(151*s23+42*s24)*(s14*s14))+2*(s23*s24+4*(s23*s23)-3*(s24*s24))*(s24*s24)+2*s14*s24*(7*s23*s24+4*(s23*s23)+10*(s24*s24))+(114*s23-29*s24)*pow(s14,3)+13*pow(s14,4))+2*(s14*s14)*((3*s23-s24)*s24+s14*(12*s23+s24)+4*(s14*s14))*pow(s24,3))+pow(s12,3)*(s24*(s13*s13)*(-(s24*(15*s23+16*s24))+s14*(78*s23+23*s24)+24*(s14*s14))+s13*(s24*s24)*(-4*s23*s24+s14*(-42*s23+s24)-39*(s14*s14)+3*(s23*s23)+s24*s24)-(-53*s23*s24+2*s14*(16*s23+5*s24)+3*(s14*s14)+s23*s23-52*(s24*s24))*pow(s13,3)+(6*s14-22*s23-28*s24)*pow(s13,4)+9*pow(s13,5)+2*(s24*(s23+s24)+s14*(4*s23+3*s24)+12*(s14*s14))*pow(s24,3))-pow(s13,3)*(s14*(3*s23*s24+13*(s23*s23)-10*(s24*s24))*(s24*s24)+2*s24*(s14*s14)*(34*s23*s24-s23*s23+19*(s24*s24))+(-86*s23*s24+s23*s23-21*(s24*s24))*pow(s14,3)+11*s23*pow(s14,4)+2*(s23*s24-s23*s23+2*(s24*s24))*pow(s24,3)))+8*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s23,-2)*pow(s13-s24,-3)*((-7*s13*s24+8*(s13*s13)+s24*s24)*pow(s12,8)+pow(s12,7)*(s13*s24*(-3*s14-47*s23+5*s24)+(10*s14+50*s23-7*s24)*(s13*s13)-(s14-7*s23+7*s24)*(s24*s24)+21*pow(s13,3))+pow(s12,6)*(2*(s13*s13)*(s14*(31*s23-s24)+s14*s14+3*(-9*s23*s24+22*(s23*s23)-6*(s24*s24)))-s24*s24*(40*s23*s24+s14*(5*s23+16*s24)+3*(s14*s14)-22*(s23*s23)+29*(s24*s24))+s13*s24*(30*s23*s24+s14*(-27*s23+25*s24)+7*(s14*s14)-134*(s23*s23)+47*(s24*s24))+(21*s14+120*s23+32*s24)*pow(s13,3)+16*pow(s13,4))+pow(s12,5)*((120*s23*s24+s14*(100*s23+33*s24)+6*(s14*s14)+295*(s23*s23)-34*(s24*s24))*pow(s13,3)+9*(s14+5*(2*s23+s24))*pow(s13,4)+3*pow(s13,5)+s13*s13*(4*(3*s23-2*s24)*(s14*s14)-187*s24*(s23*s23)+2*s14*(12*s23*s24+81*(s23*s23)-5*(s24*s24))-159*s23*(s24*s24)+190*pow(s23,3)+26*pow(s24,3))+s13*s24*(35*(s23+s24)*(s14*s14)+88*s24*(s23*s23)+216*s23*(s24*s24)+s14*(78*s23*s24-94*(s23*s23)+49*(s24*s24))+3*pow(s14,3)-210*pow(s23,3)+35*pow(s24,3))-s24*s24*((17*s23+13*s24)*(s14*s14)+92*s24*(s23*s23)+139*s23*(s24*s24)+s14*(74*s23*s24+8*(s23*s23)+29*(s24*s24))+pow(s14,3)-40*pow(s23,3)+35*pow(s24,3)))+pow(s12,4)*((185*s23*s24+s14*(37*s23+24*s24)+198*(s23*s23)+27*(s24*s24))*pow(s13,4)+(18*s23+13*s24)*pow(s13,5)+pow(s13,3)*((28*s23+13*s24)*(s14*s14)+s14*(129*s23*s24+197*(s23*s23)-5*(s24*s24))+4*(49*s24*(s23*s23)-44*s23*(s24*s24)+100*pow(s23,3)-18*pow(s24,3)))+s13*s24*(422*(s23*s23)*(s24*s24)+2*(s14*s14)*(70*s23*s24+35*(s23*s23)+19*(s24*s24))+(15*s23+17*s24)*pow(s14,3)+152*s24*pow(s23,3)-195*pow(s23,4)+110*s23*pow(s24,3)+s14*(46*s24*(s23*s23)+123*s23*(s24*s24)-170*pow(s23,3)+9*pow(s24,3))-22*pow(s24,4))-s24*s24*(263*(s23*s23)*(s24*s24)+2*(s14*s14)*(29*s23*s24+20*(s23*s23)+6*(s24*s24))+s14*s24*(105*s23*s24+128*(s23*s23)+14*(s24*s24))+(5*s23+6*s24)*pow(s14,3)+108*s24*pow(s23,3)-45*pow(s23,4)+134*s23*pow(s24,3)+16*pow(s24,4))+s13*s13*(s14*s14*(-22*s23*s24+30*(s23*s23)-15*(s24*s24))-339*(s23*s23)*(s24*s24)-7*s24*pow(s14,3)-348*s24*pow(s23,3)+160*pow(s23,4)+149*s23*pow(s24,3)+s14*(117*s24*(s23*s23)+28*s23*(s24*s24)+230*pow(s23,3)+34*pow(s24,3))+100*pow(s24,4)))+pow(s12,3)*((58*s23*s24+32*(s23*s23)+21*(s24*s24))*pow(s13,5)+pow(s13,4)*(300*s24*(s23*s23)+42*s23*(s24*s24)+s14*(82*s23*s24+60*(s23*s23)+21*(s24*s24))+222*pow(s23,3)-29*pow(s24,3))+pow(s13,3)*(-306*(s23*s23)*(s24*s24)+s14*s14*(31*s23*s24+52*(s23*s23)+9*(s24*s24))+170*s24*pow(s23,3)+315*pow(s23,4)+s14*(221*s24*(s23*s23)-12*s23*(s24*s24)+208*pow(s23,3)-25*pow(s24,3))-180*s23*pow(s24,3)-7*pow(s24,4))+s13*s24*((68*s23*s24+30*(s23*s23)+4*(s24*s24))*pow(s14,3)+434*(s24*s24)*pow(s23,3)+153*s24*pow(s23,4)-107*pow(s23,5)+133*(s23*s23)*pow(s24,3)+5*(s14*s14)*(42*s24*(s23*s23)+21*s23*(s24*s24)+14*pow(s23,3)+2*pow(s24,3))-81*s23*pow(s24,4)-s14*(-55*(s23*s23)*(s24*s24)+96*s24*pow(s23,3)+175*pow(s23,4)+10*s23*pow(s24,3)+14*pow(s24,4))-28*pow(s24,5))-s24*s24*(2*s23*(5*s23+12*s24)*pow(s14,3)+245*(s24*s24)*pow(s23,3)+67*s24*pow(s23,4)-31*pow(s23,5)+191*(s23*s23)*pow(s24,3)+2*(s14*s14)*(51*s24*(s23*s23)+21*s23*(s24*s24)+25*pow(s23,3)+pow(s24,3))+s14*s23*(92*s24*(s23*s23)+129*s23*(s24*s24)-15*pow(s23,3)+34*pow(s24,3))+46*s23*pow(s24,4)+2*pow(s24,5))+s13*s13*(-2*s24*(14*s23+s24)*pow(s14,3)-407*(s24*s24)*pow(s23,3)-357*s24*pow(s23,4)+78*pow(s23,5)+s14*s14*(-8*s24*(s23*s23)-4*s23*(s24*s24)+40*pow(s23,3)-5*pow(s24,3))+252*(s23*s23)*pow(s24,3)+305*s23*pow(s24,4)+s14*(127*(s23*s23)*(s24*s24)+188*s24*pow(s23,3)+190*pow(s23,4)+142*s23*pow(s24,3)+40*pow(s24,4))+57*pow(s24,5)))+s12*s12*(pow(s13,5)*(89*s24*(s23*s23)+66*s23*(s24*s24)+30*pow(s23,3)+15*pow(s24,3))+pow(s13,4)*(-15*(s23*s23)*(s24*s24)+230*s24*pow(s23,3)+138*pow(s23,4)-123*s23*pow(s24,3)+s14*(81*s24*(s23*s23)+49*s23*(s24*s24)+48*pow(s23,3)+6*pow(s24,3))-39*pow(s24,4))+s23*(s24*s24)*(-2*s23*(5*s23+18*s24)*pow(s14,3)+4*((s23+s24)*(s23+s24))*(-11*s24*(s23*s23)-9*s23*(s24*s24)+3*pow(s23,3)-pow(s24,3))-s14*s14*(88*s24*(s23*s23)+54*s23*(s24*s24)+35*pow(s23,3)+6*pow(s24,3))+s14*(-47*(s23*s23)*(s24*s24)-8*s24*pow(s23,3)+19*pow(s23,4)-18*s23*pow(s24,3)+2*pow(s24,4)))+pow(s13,3)*(-253*(s24*s24)*pow(s23,3)+54*s24*pow(s23,4)+136*pow(s23,5)-125*(s23*s23)*pow(s24,3)+s14*s14*(15*s24*(s23*s23)+23*s23*(s24*s24)+48*pow(s23,3)+2*pow(s24,3))+s14*(71*(s23*s23)*(s24*s24)+219*s24*pow(s23,3)+127*pow(s23,4)-33*s23*pow(s24,3)-8*pow(s24,4))+60*s23*pow(s24,4)+32*pow(s24,5))+s13*s13*(-6*s23*s24*(7*s23+s24)*pow(s14,3)+s23*(s14*s14)*(28*s24*(s23*s23)+78*s23*(s24*s24)+30*pow(s23,3)-7*pow(s24,3))+s14*(113*(s24*s24)*pow(s23,3)+132*s24*pow(s23,4)+90*pow(s23,5)+131*(s23*s23)*pow(s24,3)+68*s23*pow(s24,4)+8*pow(s24,5))+s23*(-237*(s24*s24)*pow(s23,3)-190*s24*pow(s23,4)+20*pow(s23,5)+205*(s23*s23)*pow(s24,3)+320*s23*pow(s24,4)+93*pow(s24,5)))+s13*s24*(6*s23*(17*s23*s24+5*(s23*s23)+2*(s24*s24))*pow(s14,3)+225*(s24*s24)*pow(s23,4)+82*s24*pow(s23,5)-32*pow(s23,6)+56*pow(s23,3)*pow(s24,3)+s23*(s14*s14)*(140*s24*(s23*s23)+87*s23*(s24*s24)+35*pow(s23,3)+26*pow(s24,3))-109*(s23*s23)*pow(s24,4)-60*s23*pow(s24,5)-s14*(83*(s24*s24)*pow(s23,3)+159*s24*pow(s23,4)+103*pow(s23,5)+49*(s23*s23)*pow(s24,3)+24*s23*pow(s24,4)+2*pow(s24,5))-6*pow(s24,6)))+s12*(pow(s13,5)*(74*(s23*s23)*(s24*s24)+65*s24*pow(s23,3)+21*pow(s23,4)+30*s23*pow(s24,3)+4*pow(s24,4))+s13*s23*s24*(s23*(68*s23*s24+15*(s23*s23)+12*(s24*s24))*pow(s14,3)+s23*(s14*s14)*(35*s24*(s23*s23)+11*s23*(s24*s24)+7*pow(s23,3)+22*pow(s24,3))-2*((s23+s24)*(s23+s24))*(5*(s23*s23)*(s24*s24)-13*s24*pow(s23,3)+2*pow(s23,4)+14*s23*pow(s24,3)+4*pow(s24,4))-2*s14*(42*(s24*s24)*pow(s23,3)+43*s24*pow(s23,4)+16*pow(s23,5)+16*(s23*s23)*pow(s24,3)-s23*pow(s24,4)-2*pow(s24,5)))+pow(s13,4)*(-64*(s24*s24)*pow(s23,3)+75*s24*pow(s23,4)+48*pow(s23,5)-166*(s23*s23)*pow(s24,3)+s14*s23*(12*s24*(s23*s23)+27*s23*(s24*s24)+19*pow(s23,3)+4*pow(s24,3))-82*s23*pow(s24,4)-12*pow(s24,5))+pow(s13,3)*(-122*(s24*s24)*pow(s23,4)-26*s24*pow(s23,5)+25*pow(s23,6)-4*pow(s23,3)*pow(s24,3)+s23*(s14*s14)*(-11*s24*(s23*s23)+19*s23*(s24*s24)+22*pow(s23,3)+4*pow(s24,3))+132*(s23*s23)*pow(s24,4)+s14*s23*(158*(s23*s23)*(s24*s24)+126*s24*pow(s23,3)+44*pow(s23,4)+33*s23*pow(s24,3)+8*pow(s24,4))+76*s23*pow(s24,5)+12*pow(s24,6))+s13*s13*(-2*s24*(14*s23+3*s24)*(s23*s23)*pow(s14,3)-30*(s24*s24)*pow(s23,5)-41*s24*pow(s23,6)+2*pow(s23,7)+120*pow(s23,4)*pow(s24,3)+s14*s14*(s23*s23)*(32*s24*(s23*s23)+108*s23*(s24*s24)+12*pow(s23,3)+pow(s24,3))+149*pow(s23,3)*pow(s24,4)+s14*s23*(7*(s24*s24)*pow(s23,3)+36*s24*pow(s23,4)+22*pow(s23,5)-28*(s23*s23)*pow(s24,3)-8*s23*pow(s24,4)-8*pow(s24,5))+34*(s23*s23)*pow(s24,5)-12*s23*pow(s24,6)-4*pow(s24,7))+s23*s23*(s24*s24)*(2*s14*(s23*s24+5*(s23*s23)+2*(s24*s24))*((s23+s24)*(s23+s24))-s23*(5*s23+24*s24)*pow(s14,3)-s14*s14*(37*s24*(s23*s23)+30*s23*(s24*s24)+13*pow(s23,3)+6*pow(s24,3))+2*(-4*s23*s24+s23*s23-s24*s24)*pow(s23+s24,3)))+s23*(pow(s13,5)*(31*(s23*s23)*(s24*s24)+21*s24*pow(s23,3)+8*pow(s23,4)+17*s23*pow(s24,3)+4*pow(s24,4))+s13*s13*(-(s24*(7*s23+2*s24)*(s23*s23)*pow(s14,3))+2*(s24*s24)*((s23+s24)*(s23+s24))*(6*s24*(s23*s23)-3*s23*(s24*s24)+8*pow(s23,3)-2*pow(s24,3))+s14*s14*(s23*s23)*(10*s24*(s23*s23)+41*s23*(s24*s24)+2*pow(s23,3)+3*pow(s24,3))+s14*s23*(-17*(s24*s24)*pow(s23,3)+s24*pow(s23,4)+2*pow(s23,5)-51*(s23*s23)*pow(s24,3)-36*s23*pow(s24,4)-16*pow(s24,5)))+pow(s13,4)*(-34*(s24*s24)*pow(s23,3)+5*s24*pow(s23,4)+8*pow(s23,5)+s14*s23*(-11*s24*(s23*s23)-s23*(s24*s24)+3*pow(s23,3)-2*pow(s24,3))-78*(s23*s23)*pow(s24,3)-49*s23*pow(s24,4)-12*pow(s24,5))+pow(s13,3)*(s23*(s14*s14)*(-8*s24*(s23*s23)+5*s23*(s24*s24)+4*pow(s23,3)+2*pow(s24,3))+s14*s23*(80*(s23*s23)*(s24*s24)+32*s24*pow(s23,3)+7*pow(s23,4)+41*s23*pow(s24,3)+16*pow(s24,4))+s24*(13*(s24*s24)*pow(s23,3)-33*s24*pow(s23,4)-18*pow(s23,5)+71*(s23*s23)*pow(s24,3)+50*s23*pow(s24,4)+12*pow(s24,5)))-s13*s23*s24*(3*s23*(3*s23-2*s24)*(s14*s14)*(s24*s24)-s23*(17*s23*s24+3*(s23*s23)+4*(s24*s24))*pow(s14,3)+2*s14*((s23+s24)*(s23+s24))*(4*s24*(s23*s23)+2*pow(s23,3)-3*pow(s24,3))+2*(3*s23+s24)*(s24*s24)*pow(s23+s24,3))-s14*(s23*s23)*(s24*s24)*(s23*(s23+6*s24)*(s14*s14)+2*s14*pow(s23+s24,3)-2*pow(s23+s24,4))))*pow(s12+s23+s24,-3)+8*pow(s13,-1)*(s13*s13*(s14*s23*(s23-s24)+s24*(-4*s23*s24+6*(s23*s23)-7*(s24*s24)))-s13*s24*(s14*s23*(6*s23+7*s24)+s24*(15*s23*s24+18*(s23*s23)-2*(s24*s24)))+s23*(4*s24*(s23+s24)+s14*(s23+2*s24))*(s24*s24)+(-6*s13*s24+s13*s13+s24*s24)*pow(s12,3)+(2*s14*s23+(s23-s24)*s24)*pow(s13,3)+s12*s12*(-6*s13*s24*(s14+2*(s23+s24))+(s14+2*s23-6*s24)*(s13*s13)+(s14+2*s23+3*s24)*(s24*s24)+3*pow(s13,3))+2*(s23+s24)*pow(s13,4)+s12*(s13*s13*(s14*(2*s23-s24)+s23*s23-14*(s24*s24))+s24*s24*(7*s23*s24+2*s14*(s23+s24)+s23*s23+2*(s24*s24))-s13*s24*(30*s23*s24+s14*(12*s23+7*s24)+6*(s23*s23)+4*(s24*s24))+(2*s14+3*s23+2*s24)*pow(s13,3)+2*pow(s13,4)))*pow(s13-s24,-3)*pow(s24,-1)*pow(s12+s23+s24,-1)+16*pow(s13,-1)*pow(s12+s23,-1)*pow(s13-s24,-2)*pow(s24,-1)*(-(s23*s24*(s23+s24)*(s14*(s23-2*s24)+2*(s24*s24)))+s12*s12*((s14+8*(s23+s24))*(s13*s13)+s13*(9*s14*s23+8*s23*s24+9*(s23*s23)-5*(s24*s24))+s24*(s14*(-3*s23+s24)-3*(s23*s23)+3*(s24*s24)))+s13*s13*(s14*s23*(s23+4*s24)+s24*(12*s23*s24+7*(s23*s23)+8*(s24*s24)))+(-((s14+3*s23)*s24)+s13*(3*s14+9*s23+2*s24)+4*(s13*s13))*pow(s12,3)+(3*s13-s24)*pow(s12,4)-(6*s23*s24+5*(s23*s23)+4*(s24*s24))*pow(s13,3)+s13*(3*s14*(-2*s23*(s24*s24)+pow(s23,3))-2*s24*(-3*s24*(s23*s23)+s23*(s24*s24)-2*pow(s23,3)+2*pow(s24,3)))+s12*(s13*s13*(15*s23*s24+2*s14*(s23+2*s24)+4*(s23*s23)+12*(s24*s24))-(5*s23+4*s24)*pow(s13,3)+s13*(10*s24*(s23*s23)+s14*(9*(s23*s23)-6*(s24*s24))+s23*(s24*s24)+3*pow(s23,3)-8*pow(s24,3))+s24*(s23*(s24*s24)+s14*(2*s23*s24-3*(s23*s23)+2*(s24*s24))-pow(s23,3)+2*pow(s24,3))))*pow(s12+s23+s24,-1)-16*pow(s13,-1)*pow(s12+s13+s14,-2)*pow(s13-s24,-3)*pow(s24,-1)*(s14*s14*(s24*s24)*(s23*s24*(2*s23+5*s24)+s14*(6*s23*s24+3*(s23*s23)+2*(s24*s24)))+s13*s14*s24*(2*s14*s24*(-3*s23*s24-2*(s23*s23)+s24*s24)+s24*s24*(14*s23*s24+5*(s23*s23)+3*(s24*s24))-s14*s14*(11*s23*s24+4*(s23*s23)+6*(s24*s24)))+(-4*s13*s24+s13*s13+3*(s24*s24))*pow(s12,5)+pow(s12,4)*(-(s13*s24*(12*s14+8*s23+s24))+(3*s14+2*(s23-5*s24))*(s13*s13)+3*(3*s14+2*(s23+s24))*(s24*s24)+3*pow(s13,3))-((s23+s24)*(s14*s14)+s14*(-11*s23*s24+s23*s23-5*(s24*s24))+s24*(11*s23*s24+3*(s23*s23)+9*(s24*s24)))*pow(s13,4)+pow(s12,3)*(s13*s13*(2*s14*(3*s23-7*s24)-8*s23*s24+3*(s14*s14)+s23*s23-24*(s24*s24))-s13*s24*(5*s23*s24+s14*(24*s23+13*s24)+12*(s14*s14)+4*(s23*s23)-13*(s24*s24))+s24*s24*(8*s23*s24+18*s14*(s23+s24)+9*(s14*s14)+3*(s23*s23)+3*(s24*s24))+(5*s14+s23-s24)*pow(s13,3)+pow(s13,4))+(-3*s14*s23+4*s24*(2*s23+s24))*pow(s13,5)-(3*s23+s24)*pow(s13,6)-pow(s13,3)*(s14*s14*(-5*s23*s24+2*(s23*s23)-5*(s24*s24))-s24*s24*(-(s23*s24)+s23*s23+4*(s24*s24))+s14*s24*(9*s23*s24-2*(s23*s23)+12*(s24*s24))+(s23+2*s24)*pow(s14,3))+s12*s12*((2*s23*s24+s14*(s23+17*s24)+s14*s14-2*(s23*s23)-29*(s24*s24))*pow(s13,3)+(-3*s14-2*s23+11*s24)*pow(s13,4)-3*pow(s13,5)+s13*s13*(2*(3*s23+s24)*(s14*s14)+s14*(-10*s23*s24+3*(s23*s23)-50*(s24*s24))-s24*(27*s23*s24-2*(s23*s23)+s24*s24)+pow(s14,3))+s24*s24*(2*s23*s24*(s23+s24)+18*(s23+s24)*(s14*s14)+s14*(22*s23*s24+9*(s23*s23)+10*(s24*s24))+3*pow(s14,3))-s13*s24*((24*s23+23*s24)*(s14*s14)+s14*(21*s23*s24+12*(s23*s23)-14*(s24*s24))+s24*(-13*s23*s24+4*(s23*s23)-10*(s24*s24))+4*pow(s14,3)))+s12*(s14*(s24*s24)*(6*(s23+s24)*(s14*s14)+s24*(7*s23*s24+4*(s23*s23)+3*(s24*s24))+s14*(20*s23*s24+9*(s23*s23)+9*(s24*s24)))-(s14*(3*s23-19*s24)-10*s23*s24+4*(s14*s14)+s23*s23+5*(s24*s24))*pow(s13,4)+(-5*s14-4*s23+5*s24)*pow(s13,5)-2*pow(s13,6)-pow(s13,3)*((s23-16*s24)*(s14*s14)+s24*(27*s23*s24-2*(s23*s23)+17*(s24*s24))+s14*(-7*s23*s24+4*(s23*s23)+23*(s24*s24))+pow(s14,3))+s13*s13*(s14*s14*(4*s23*s24+3*(s23*s23)-20*(s24*s24))-2*s14*s24*(17*s23*s24-2*(s23*s23)+8*(s24*s24))+s24*s24*(4*s23*s24-10*(s23*s23)+11*(s24*s24))+2*(s23+3*s24)*pow(s14,3))+s13*s24*(5*s23*(s23+s24)*(s24*s24)-s14*s14*(27*s23*s24+12*(s23*s23)+5*(s24*s24))+s14*s24*(7*s23*s24-8*(s23*s23)+10*(s24*s24))-(8*s23+11*s24)*pow(s14,3)))+s13*s13*(s24*(s14*s14)*(-7*s23*s24+2*(s23*s23)-8*(s24*s24))-s14*s23*(10*s23+21*s24)*(s24*s24)+(6*s23*s24+s23*s23+6*(s24*s24))*pow(s14,3)+3*s23*pow(s24,4)))*pow(s12+s23+s24,-1)+pow(s12+s23+s24,-1)*(16+32*s23*pow(s13,-1)+16*(s12*(6*s23-s24)+4*(s12*s12)+2*(s23*s23))*pow(s12+s23,-2)-16*s23*(s12+s13+s23)*s24*pow(s13,-1)*pow(s12+s23,-2)+16*(s13*(-6*s23+2*s24)+s12*(-5*s13+2*s14-3*s23+2*s24)+s23*(2*s14-5*s23+4*s24)+2*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)+16*(-(s23*s24*(3*s14+5*s24))+s13*(s14*(s23-2*s24)+(4*s23-3*s24)*s24)+s12*(s13*(s14+s23)-s24*(3*s14+3*s23+4*s24))+(s13-3*s24)*(s12*s12)+(-s23+s24)*(s13*s13))*pow(s13-s24,-3)+(-32*(s12+s23-s24)*(-s13+s24)-16*(2*s12+2*s23-5*s24)*(s12+s14+s24))*pow(s13-s24,-2)+(32*(s12+s23)*(s13+s23)*(s13-s24)-16*(s12+s13+s23)*s24*(s12+3*s13+s14+4*s23+s24))*pow(s13,-1)*pow(s13-s24,-2)-16*(s14*s23+s14*s24-6*s23*s24+s12*(6*s13+s14+9*s23+2*s24)-s13*(s14-7*s23+8*s24)+s12*s12+8*(s23*s23)+s24*s24)*pow(s13,-1)*pow(s13-s24,-1)+112*s24*((s13+s14)*s23+s12*(s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1))+2*pow(s12+s13+s14,-2)*pow(s23,-1)*(8*s13*(s12+s13+s14)-8*(s12+s13+s14)*(s12+s23)+8*(s12+s13+s14)*(5*s12-s13+2*s14+s23)+8*(s12+s13)*(s12+s13+s14)*(s12-s13+s14+2*s24)*pow(s13,-1)-8*(s12+s13+s14)*(s14*s23+s12*(s13+2*(s14+s23))+4*(s12*s12))*pow(s13,-1)+8*(s12+s13+s14)*(-(s14*s23)-2*s13*(2*s14+s23+s24)-s12*(2*s13+s14-6*s23+2*s24)+6*(s12*s12)+3*(s13*s13))*pow(s13,-1)-8*s12*s13*(s12+s13+s14)*(3*s12+s23)*pow(s12+s23,-2)-8*(s12+s13+s14)*(-3*s13*(s23+s24)-s12*(9*s13+s14+6*s23+3*s24)-s23*(7*s14+2*s23+6*s24)+2*(s12*s12))*pow(s12+s23,-1)+24*(s12+s13+s14)*(-(s13*s23)+s12*(s13+s23)+s12*s12)*(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s12+s23,-1)+s13*(s12+s13+s14)*(16*(3*s12-s13+s14)*(s13-s24)-8*(3*s12-3*s13+2*s14+s23)*(s12+s14+s24))*pow(s13-s24,-2)+8*s13*(s12+s13+s14)*(s13*(-s23+s24)+s12*(s14+s23+2*s24)+s23*(s14+3*s24)+s12*s12)*pow(s13-s24,-2)+8*(s12+s13+s14)*(-2*s12+s13-2*s14-3*s24)*(s13*s13)*pow(s13-s24,-2)-8*(s12+s13+s14)*(-(s13*s23*(s23-6*s24))+s12*s13*(-3*s13+4*s24)+(s13-2*s24)*(s12*s12)+(-3*s23+2*s24)*(s13*s13)+2*s24*(s23*s23))*pow(s13-s24,-2)+8*pow(s13,-1)*(s13*(s23+s24)*(4*s14*s23*s24+s13*(2*(s23-s24)*s24+s14*(-3*s23+s24))-(s23-3*s24)*(s13*s13))+s12*s12*(s13*s24*(-2*s14+4*s23+9*s24)-4*(s23+s24)*(s13*s13)+(3*s14+2*s23-2*s24)*(s24*s24))+s24*(-2*s13+3*s24)*pow(s12,3)+s12*(2*s13*s24*(s23*s24+2*s14*(s23+s24)+2*(s23*s23)-2*(s24*s24))+2*s14*s23*(s24*s24)+s13*s13*(6*s23*s24-2*s14*(2*s23+s24)-3*(s23*s23)+9*(s24*s24))-2*(2*s23+s24)*pow(s13,3)))*pow(s13-s24,-2)+8*(s12+s13+s14)*(3*s14*s23+3*s14*s24+4*s23*s24+s13*(-12*s14+2*s23+3*s24)+s12*(-16*s13+5*s14+5*s23+3*s24)+12*(s12*s12)-s13*s13+s23*s23)*pow(s13-s24,-1)+8*(s12*s24+s13*(s23+s24))*(s13*(3*s14-s23-3*s24)+s14*(2*s23-3*s24)+s12*(8*s13+2*s14+2*s23-3*s24)+2*(s12*s12)+s13*s13)*pow(s13,-1)*pow(s13-s24,-1)+8*(s12+s13+s14)*pow(s12+s23,-2)*pow(s13-s24,-2)*(-(((4*s14+6*s23+8*s24)*(s13*s13)+s24*(10*s23*s24+2*s14*(8*s23+3*s24)+3*(s14*s14)+6*(s23*s23)+3*(s24*s24))-s13*(21*s23*s24+2*s14*(10*s23+7*s24)+4*(s14*s14)+6*(s23*s23)+14*(s24*s24)))*pow(s12,4))+(-2*s24*(3*s14+4*s23+3*s24)+s13*(8*s14+10*s23+13*s24)-4*(s13*s13))*pow(s12,5)+(4*s13-3*s24)*pow(s12,6)-s12*(s23*s23)*(-2*s14*s23*s24*(s23+s24)+s13*s14*(6*s23*s24+s14*(2*s23+s24)+4*(s23*s23)-2*(s24*s24))+2*(s13*s13)*(2*s23*s24+s14*(s23+2*s24)+s23*s23-s24*s24)+3*s24*pow(s13,3))+(s13+s14)*(s14*s23*s24-s13*(s14*(2*s23+s24)+s24*(s23+2*s24))+s24*(s13*s13))*pow(s23,3)+s23*(s12*s12)*(s13*s13*(3*s23*s24-2*s14*(s23+4*s24)-2*(s23*s23)+4*(s24*s24))+s23*s24*(-2*s14*s24-6*(s14*s14)+(s23+s24)*(s23+s24))-6*(s23+s24)*pow(s13,3)+s13*((6*s23+s24)*(s14*s14)-5*s24*(s23*s23)+s14*(2*s23*s24-4*(s23*s23)+10*(s24*s24))-2*pow(s23,3)+3*pow(s24,3)))-pow(s12,3)*(2*s23*s24*(s24*(s23+s24)+s14*(6*s23+5*s24)+4*(s14*s14))+2*(s13*s13)*(s23*s24+s14*(3*s23+2*s24)+s23*s23+2*(s24*s24))+6*s23*pow(s13,3)-s13*((10*s23+s24)*(s14*s14)+3*s24*(s23*s23)+14*s23*(s24*s24)+2*s14*(11*s23*s24+6*(s23*s23)+3*(s24*s24))-2*pow(s23,3)+5*pow(s24,3))))*pow(s12+s23+s24,-2)-8*(s12+s13+s14)*((s13+s14)*s23+s12*(s14+s23+s24)+s12*s12)*(s12*(-5*s13+5*s14+2*s23-2*s24)+s23*(-s14+3*s23-2*s24)+2*s13*(s23-s24)+11*(s12*s12))*pow(s12+s23,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1))+16*(pow(s13,-1)-(4*s12+2*s13+s14+2*s23+5*s24)*pow(s13,-1)*pow(s24,-1)-(2*s12+s23)*pow(s12+s23,-1)*pow(s24,-1)+(-(s12*(s13-2*s24))+2*s23*s24+s13*(-s23+s24))*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)+(s23*(-s14+2*s23)+s12*(2*s13-s14-s23-3*s24)+s13*(6*s23+s24)-3*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)+(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)+(2*s13*(s14-s23)+4*s12*(s13+s24)+s24*(-2*s14+2*s23+s24)+s13*s13)*pow(s13,-1)*pow(s13-s24,-1)*pow(s24,-1)-(s12-2*s13+s14+2*s24)*(s12*s24+s13*(s23+s24))*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s13-s24,-1)*pow(s24,-1)-(s12+2*s13+s23-2*s24)*((s13+s14)*s23+s12*(s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1))+16*pow(s12+s23+s24,-1)*((2*s12+s23)*pow(s13,-1)-(s12+s13+s23)*pow(s13,-1)+(2*s12+2*s13+3*s14-3*s23+s24)*pow(s13,-1)-(2*s12+s23)*pow(s12+s23,-1)+(s12+s13+s23)*s24*pow(s13,-1)*pow(s12+s23,-1)+(s12*(3*s13-3*s14+s23-3*s24)+s23*(-3*s14+3*s23-2*s24)+s13*(6*s23+s24)-2*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)+3*s12*(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s12+s23,-1)+(s12+s23)*(s12-s13+s14+2*s24)*pow(s13-s24,-2)-(s12+s13+s23)*(s12*(s13-2*s24)+s13*(s23-s24)-2*s23*s24)*pow(s13,-1)*pow(s13-s24,-2)+pow(s13,-1)*(s13*(s23+s24)*(-4*s14*s23*s24+s13*(s14*(3*s23-s24)+2*s24*(-s23+s24))+(s23-3*s24)*(s13*s13))+s12*s12*(s13*(2*s14-4*s23-9*s24)*s24+4*(s23+s24)*(s13*s13)+(-3*s14-2*s23+2*s24)*(s24*s24))+(2*s13-3*s24)*s24*pow(s12,3)+s12*(s13*s13*(2*s14*(2*s23+s24)+3*(-2*s23*s24+s23*s23-3*(s24*s24)))-2*s13*s24*(s23*s24+2*s14*(s23+s24)+2*(s23*s23)-2*(s24*s24))-2*s14*s23*(s24*s24)+2*(2*s23+s24)*pow(s13,3)))*pow(s12+s13+s14,-2)*pow(s13-s24,-2)-(-2*s14*s24+3*s23*s24+s13*(s14-6*s23+2*s24)+s12*(-2*s13-4*s23+3*s24)+s13*s13-4*(s23*s23))*pow(s13,-1)*pow(s13-s24,-1)-(2*s12-s14+4*s23-3*s24)*(s12*s24+s13*(s23+s24))*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s13-s24,-1)+(s12*(s13-5*s24)+s13*(s23+s24)-s24*(5*s23+2*s24))*((s13+s14)*s23+s12*(s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1))+8*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s23,-2)*pow(s24,-3)*((98*s23*s24+5*s14*(21*s23+10*s24)+2*s13*(30*s14+75*s23+34*s24)+50*(s13*s13)+15*(s14*s14)+105*(s23*s23)+26*(s24*s24))*pow(s12,8)+(25*s13+15*s14+35*s23+17*s24)*pow(s12,9)+5*pow(s12,10)+pow(s12,7)*(2*(45*s14+125*s23+51*s24)*(s13*s13)+7*(15*s23+7*s24)*(s14*s14)+231*s24*(s23*s23)+124*s23*(s24*s24)+s14*(292*s23*s24+315*(s23*s23)+58*(s24*s24))+s13*(329*s23*s24+9*s14*(40*s23+17*s24)+45*(s14*s14)+375*(s23*s23)+82*(s24*s24))+50*pow(s13,3)+5*pow(s14,3)+175*pow(s23,3)+14*pow(s24,3))+pow(s12,6)*(232*(s23*s23)*(s24*s24)+s14*s14*(290*s23*s24+315*(s23*s23)+49*(s24*s24))+s13*s13*(404*s23*s24+3*s14*(150*s23+53*s24)+45*(s14*s14)+500*(s23*s23)+88*(s24*s24))+4*(15*s14+50*s23+17*s24)*pow(s13,3)+25*pow(s13,4)+(35*s23+16*s24)*pow(s14,3)+280*s24*pow(s23,3)+175*pow(s23,4)+40*s23*pow(s24,3)+s13*(2*(135*s23+52*s24)*(s14*s14)+625*s24*(s23*s23)+328*s23*(s24*s24)+s14*(739*s23*s24+900*(s23*s23)+109*(s24*s24))+10*pow(s14,3)+500*pow(s23,3)+19*pow(s24,3))+s14*(702*s24*(s23*s23)+266*s23*(s24*s24)+525*pow(s23,3)+24*pow(s24,3))-19*pow(s24,4))+s23*(s14*(s23*s23)*(s23*(5*s23+6*s24)*(s14*s14)+2*(s24*s24)*(3*s23*s24+s23*s23+2*(s24*s24))-2*s14*s24*(5*s23*s24+2*(s23*s23)+2*(s24*s24)))*((s23+s24)*(s23+s24))+(s23+2*s24)*pow(s13,5)*pow(s24,3)+s24*s24*pow(s13,4)*(s14*s23*(s23+6*s24)-4*s24*(s23*s23)+4*s23*(s24*s24)+6*pow(s24,3))-s13*s23*(s23+s24)*(s23*s24*(s14*s14)*(39*s23*s24+15*(s23*s23)+16*(s24*s24))+s23*(-9*s23*s24-10*(s23*s23)+4*(s24*s24))*pow(s14,3)+2*(3*s23+2*s24)*((s23+s24)*(s23+s24))*pow(s24,3)-s14*(s24*s24)*(33*s24*(s23*s23)+26*s23*(s24*s24)+10*pow(s23,3)+2*pow(s24,3)))+s24*pow(s13,3)*(s23*(s14*s14)*(-11*s23*s24-7*(s23*s23)+2*(s24*s24))+2*s14*s23*s24*(12*s23*s24+4*(s23*s23)+5*(s24*s24))+s24*s24*(-21*s24*(s23*s23)+s23*(s24*s24)-17*pow(s23,3)+6*pow(s24,3)))+s13*s13*(-(s24*(s14*s14)*(s23*s23)*(47*s23*s24+18*(s23*s23)+25*(s24*s24)))+s23*s23*(3*s23*s24+5*(s23*s23)-2*(s24*s24))*pow(s14,3)+s14*s23*(s24*s24)*(51*s24*(s23*s23)+45*s23*(s24*s24)+15*pow(s23,3)+8*pow(s24,3))+pow(s24,3)*(-35*(s23*s23)*(s24*s24)-45*s24*pow(s23,3)-18*pow(s23,4)-6*s23*pow(s24,3)+2*pow(s24,4))))+pow(s12,5)*((218*s23*s24+s14*(240*s23+59*s24)+15*(s14*s14)+300*(s23*s23)+32*(s24*s24))*pow(s13,3)+(15*s14+75*s23+17*s24)*pow(s13,4)+5*pow(s13,5)+(96*s23*s24+105*(s23*s23)+17*(s24*s24))*pow(s14,3)+210*(s24*s24)*pow(s23,3)+175*s24*pow(s23,4)+105*pow(s23,5)+s13*s13*((225*s23+61*s24)*(s14*s14)+596*s24*(s23*s23)+297*s23*(s24*s24)+s14*(606*s23*s24+900*(s23*s23)+29*(s24*s24))+5*pow(s14,3)+500*pow(s23,3)-18*pow(s24,3))+16*(s23*s23)*pow(s24,3)+s14*s14*(711*s24*(s23*s23)+227*s23*(s24*s24)+525*pow(s23,3)+7*pow(s24,3))+s13*(500*(s23*s23)*(s24*s24)+s14*s14*(505*s23*s24+675*(s23*s23)+43*(s24*s24))+(60*s23+19*s24)*pow(s14,3)+570*s24*pow(s23,3)+375*pow(s23,4)+13*s23*pow(s24,3)+2*s14*(700*s24*(s23*s23)+187*s23*(s24*s24)+600*pow(s23,3)+pow(s24,3))-71*pow(s24,4))+s14*(462*(s23*s23)*(s24*s24)+880*s24*pow(s23,3)+525*pow(s23,4)+76*s23*pow(s24,3)-pow(s24,4))-109*s23*pow(s24,4)-35*pow(s24,5))+s12*(s24*s24*(4*s23*s24+s23*s23+2*(s24*s24))*pow(s13,5)+s24*pow(s13,4)*(s14*s23*(-5*s23*s24-2*(s23*s23)+16*(s24*s24))+s24*(-(s24*(s23*s23))+16*s23*(s24*s24)+5*pow(s23,3)+6*pow(s24,3)))+pow(s13,3)*(-2*s14*s23*s24*(5*s24*(s23*s23)-31*s23*(s24*s24)+7*pow(s23,3)-16*pow(s24,3))+s23*(s14*s14)*(-15*s24*(s23*s23)-37*s23*(s24*s24)+15*pow(s23,3)+4*pow(s24,3))+s24*s24*(-36*(s23*s23)*(s24*s24)-49*s24*pow(s23,3)+11*pow(s23,4)+14*s23*pow(s24,3)+6*pow(s24,4)))+s13*s13*(s23*s23*(12*s23*s24+25*(s23*s23)-6*(s24*s24))*pow(s14,3)+s14*s14*(s23*s23)*(-11*s24*(s23*s23)-162*s23*(s24*s24)+45*pow(s23,3)-83*pow(s24,3))+s14*s23*s24*(132*(s23*s23)*(s24*s24)-13*s24*pow(s23,3)-30*pow(s23,4)+135*s23*pow(s24,3)+28*pow(s24,4))+s24*s24*(-167*(s24*s24)*pow(s23,3)-81*s24*pow(s23,4)+13*pow(s23,5)-88*(s23*s23)*pow(s24,3)-4*s23*pow(s24,4)+2*pow(s24,5)))+(s23+s24)*(s23*s23)*(s23*(61*s23*s24+35*(s23*s23)+24*(s24*s24))*pow(s14,3)+s14*s14*(-51*(s23*s23)*(s24*s24)+10*s24*pow(s23,3)+15*pow(s23,4)-54*s23*pow(s24,3)-12*pow(s24,4))-2*(s24*s24)*(9*(s23*s23)*(s24*s24)+3*s24*pow(s23,3)-pow(s23,4)+7*s23*pow(s24,3)+2*pow(s24,4))+s14*(-6*(s24*s24)*pow(s23,3)-8*s24*pow(s23,4)+26*(s23*s23)*pow(s24,3)+32*s23*pow(s24,4)+8*pow(s24,5)))+s13*s23*(s23*pow(s14,3)*(95*s24*(s23*s23)+20*s23*(s24*s24)+60*pow(s23,3)-12*pow(s24,3))+s23*(s14*s14)*(-173*(s23*s23)*(s24*s24)+29*s24*pow(s23,3)+45*pow(s23,4)-201*s23*pow(s24,3)-52*pow(s24,4))-s24*s24*(140*(s24*s24)*pow(s23,3)+41*s24*pow(s23,4)-8*pow(s23,5)+143*(s23*s23)*pow(s24,3)+58*s23*pow(s24,4)+6*pow(s24,5))+s14*s24*(117*(s24*s24)*pow(s23,3)-22*s24*pow(s23,4)-26*pow(s23,5)+188*(s23*s23)*pow(s24,3)+82*s23*pow(s24,4)+8*pow(s24,5))))+pow(s12,4)*((50*s23*s24+3*s14*(15*s23+s24)+75*(s23*s23)-2*(s24*s24))*pow(s13,4)+10*s23*pow(s13,5)+90*(s24*s24)*pow(s23,4)+42*s24*pow(s23,5)+35*pow(s23,6)+pow(s13,3)*(6*(10*s23+s24)*(s14*s14)+246*s24*(s23*s23)+s14*(163*s23*s24+360*(s23*s23)-37*(s24*s24))+103*s23*(s24*s24)+200*pow(s23,3)-36*pow(s24,3))-56*pow(s23,3)*pow(s24,3)+pow(s14,3)*(240*s24*(s23*s23)+85*s23*(s24*s24)+175*pow(s23,3)+6*pow(s24,3))+s13*s13*(s14*s14*(226*s23*s24+450*(s23*s23)-21*(s24*s24))+376*(s23*s23)*(s24*s24)+(25*s23+3*s24)*pow(s14,3)+384*s24*pow(s23,3)+250*pow(s23,4)+s14*(834*s24*(s23*s23)+29*s23*(s24*s24)+900*pow(s23,3)-42*pow(s24,3))-101*s23*pow(s24,3)-83*pow(s24,4))+s14*s14*(400*(s23*s23)*(s24*s24)+920*s24*pow(s23,3)+525*pow(s23,4)-12*pow(s24,4))-237*(s23*s23)*pow(s24,4)+s13*(5*(19*s23*s24+30*(s23*s23)+s24*s24)*pow(s14,3)+360*(s24*s24)*pow(s23,3)+230*s24*pow(s23,4)+150*pow(s23,5)+s14*s14*(965*s24*(s23*s23)+118*s23*(s24*s24)+900*pow(s23,3)-36*pow(s24,3))-98*(s23*s23)*pow(s24,3)+2*s14*(208*(s23*s23)*(s24*s24)+635*s24*pow(s23,3)+450*pow(s23,4)-3*s23*pow(s24,3)-pow(s24,4))-300*s23*pow(s24,4)-75*pow(s24,5))+s14*(350*(s24*s24)*pow(s23,3)+590*s24*pow(s23,4)+315*pow(s23,5)+74*(s23*s23)*pow(s24,3)+s23*pow(s24,4)-2*pow(s24,5))-138*s23*pow(s24,5)-20*pow(s24,6))+s12*s12*(s24*(-3*s23*s24+5*(s23*s23)+s24*s24)*pow(s13,5)+pow(s13,4)*(s24*(14*s24*(s23*s23)-15*s23*(s24*s24)+16*pow(s23,3)+6*pow(s24,3))+s14*(-(s24*(s23*s23))-21*s23*(s24*s24)+15*pow(s23,3)+10*pow(s24,3)))+pow(s13,3)*(s14*s14*(-3*s24*(s23*s23)-41*s23*(s24*s24)+60*pow(s23,3)+2*pow(s24,3))+s24*(-89*(s23*s23)*(s24*s24)+61*s24*pow(s23,3)+14*pow(s23,4)-48*s23*pow(s24,3)+7*pow(s24,4))+s14*(-81*(s23*s23)*(s24*s24)+17*s24*pow(s23,3)+60*pow(s23,4)+28*s23*pow(s24,3)+22*pow(s24,4)))+s13*s13*(2*s23*(9*s23*s24+25*(s23*s23)-3*(s24*s24))*pow(s14,3)+s23*(s14*s14)*(136*s24*(s23*s23)-204*s23*(s24*s24)+225*pow(s23,3)-91*pow(s24,3))-s23*s24*(173*(s23*s23)*(s24*s24)-72*s24*pow(s23,3)+4*pow(s23,4)+292*s23*pow(s24,3)+94*pow(s24,4))+s14*(-100*(s24*s24)*pow(s23,3)+39*s24*pow(s23,4)+90*pow(s23,5)+69*(s23*s23)*pow(s24,3)+111*s23*pow(s24,4)+20*pow(s24,5)))+s23*(s23*pow(s14,3)*(240*s24*(s23*s23)+170*s23*(s24*s24)+105*pow(s23,3)+36*pow(s24,3))+s14*s14*(65*(s24*s24)*pow(s23,3)+234*s24*pow(s23,4)+105*pow(s23,5)-140*(s23*s23)*pow(s24,3)-90*s23*pow(s24,4)-12*pow(s24,5))-4*s24*(8*(s24*s24)*pow(s23,4)-s24*pow(s23,5)+pow(s23,6)+31*pow(s23,3)*pow(s24,3)+33*(s23*s23)*pow(s24,4)+14*s23*pow(s24,5)+2*pow(s24,6))+s14*(-42*(s24*s24)*pow(s23,4)+2*s24*pow(s23,5)+15*pow(s23,6)+4*pow(s23,3)*pow(s24,3)+65*(s23*s23)*pow(s24,4)+36*s23*pow(s24,5)+4*pow(s24,6)))+s13*(2*s23*pow(s14,3)*(95*s24*(s23*s23)+15*s23*(s24*s24)+75*pow(s23,3)-6*pow(s24,3))+s23*(s14*s14)*(-152*(s23*s23)*(s24*s24)+370*s24*pow(s23,3)+270*pow(s23,4)-273*s23*pow(s24,3)-56*pow(s24,4))-s24*(131*(s24*s24)*pow(s23,4)-32*s24*pow(s23,5)+11*pow(s23,6)+372*pow(s23,3)*pow(s24,3)+274*(s23*s23)*pow(s24,4)+66*s23*pow(s24,5)+2*pow(s24,6))+s14*(-79*(s24*s24)*pow(s23,4)+23*s24*pow(s23,5)+60*pow(s23,6)+95*pow(s23,3)*pow(s24,3)+197*(s23*s23)*pow(s24,4)+72*s23*pow(s24,5)+6*pow(s24,6))))+pow(s12,3)*((5*s23*s24+5*(s23*s23)-2*(s24*s24))*pow(s13,5)+16*(s24*s24)*pow(s23,5)-7*s24*pow(s23,6)+5*pow(s23,7)+pow(s13,4)*(49*s24*(s23*s23)+s14*(4*s23*s24+45*(s23*s23)-15*(s24*s24))+7*s23*(s24*s24)+25*pow(s23,3)-12*pow(s24,3))-74*pow(s23,4)*pow(s24,3)+s23*pow(s14,3)*(320*s24*(s23*s23)+170*s23*(s24*s24)+175*pow(s23,3)+24*pow(s24,3))+pow(s13,3)*(s14*s14*(11*s23*s24+90*(s23*s23)-15*(s24*s24))+121*(s23*s23)*(s24*s24)+110*s24*pow(s23,3)+50*pow(s23,4)+5*s14*(27*s24*(s23*s23)-20*s23*(s24*s24)+48*pow(s23,3)-2*pow(s24,3))-93*s23*pow(s24,3)-27*pow(s24,4))-247*pow(s23,3)*pow(s24,4)+s13*s13*(2*(6*s23*s24+25*(s23*s23)-s24*s24)*pow(s14,3)+226*(s24*s24)*pow(s23,3)+86*s24*pow(s23,4)+50*pow(s23,5)+s14*s14*(294*s24*(s23*s23)-110*s23*(s24*s24)+450*pow(s23,3)-33*pow(s24,3))-193*(s23*s23)*pow(s24,3)-253*s23*pow(s24,4)+3*s14*(-24*(s23*s23)*(s24*s24)+152*s24*pow(s23,3)+150*pow(s23,4)-18*s23*pow(s24,3)+7*pow(s24,4))-39*pow(s24,5))+s14*s14*(310*(s24*s24)*pow(s23,3)+655*s24*pow(s23,4)+315*pow(s23,5)-70*(s23*s23)*pow(s24,3)-54*s23*pow(s24,4)-4*pow(s24,5))-203*(s23*s23)*pow(s24,5)+s14*s23*(70*(s24*s24)*pow(s23,3)+180*s24*pow(s23,4)+105*pow(s23,5)+16*(s23*s23)*pow(s24,3)+27*s23*pow(s24,4)+8*pow(s24,5))+s13*(130*(s24*s24)*pow(s23,4)+13*s24*pow(s23,5)+25*pow(s23,6)+2*pow(s14,3)*(95*s24*(s23*s23)+10*s23*(s24*s24)+100*pow(s23,3)-2*pow(s24,3))-188*pow(s23,3)*pow(s24,3)+s14*s14*(42*(s23*s23)*(s24*s24)+890*s24*pow(s23,3)+675*pow(s23,4)-163*s23*pow(s24,3)-20*pow(s24,4))-483*(s23*s23)*pow(s24,4)-236*s23*pow(s24,5)+s14*(104*(s24*s24)*pow(s23,3)+505*s24*pow(s23,4)+360*pow(s23,5)+13*(s23*s23)*pow(s24,3)+66*s23*pow(s24,4)+18*pow(s24,5))-26*pow(s24,6))-58*s23*pow(s24,6)-4*pow(s24,7)))*pow(s12+s13+s23+s24,-3)+16*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)*(s13*s13*(s14*s23*(3*s23+4*s24)+s24*(-6*s23*s24+5*(s23*s23)-8*(s24*s24)))+s23*s24*(s23+s24)*(s14*(3*s23+2*s24)-2*((s23+s24)*(s23+s24)))+(s24*(3*s14+7*s23+8*s24)+s13*(3*s14+9*s23+11*s24)+6*(s13*s13))*pow(s12,3)+3*(s13+s24)*pow(s12,4)+2*(s23-2*s24)*s24*pow(s13,3)+s12*s12*((3*s14+12*s23+8*s24)*(s13*s13)+s13*(23*s23*s24+3*s14*(3*s23+4*s24)+9*(s23*s23)+6*(s24*s24))+s24*(10*s23*s24+s14*(9*s23+5*s24)+3*(s23*s23)+7*(s24*s24))+3*pow(s13,3))+s12*(s13*s13*(13*s23*s24+s14*(6*s23+4*s24)+6*(s23*s23)-6*(s24*s24))+s24*(s14*(10*s23*s24+9*(s23*s23)+2*(s24*s24))-(3*s23-2*s24)*((s23+s24)*(s23+s24)))+3*s23*pow(s13,3)+s13*(13*s24*(s23*s23)-s23*(s24*s24)+3*s14*(8*s23*s24+3*(s23*s23)+2*(s24*s24))+3*pow(s23,3)-6*pow(s24,3)))+s13*(3*s14*s23*(4*s23*s24+s23*s23+2*(s24*s24))+s24*(-7*s24*(s23*s23)-12*s23*(s24*s24)+pow(s23,3)-4*pow(s24,3))))*pow(s12+s23+s24,-1)*pow(s12+s13+s23+s24,-2)-16*pow(s13,-1)*pow(s14,-1)*pow(s12+s23,-1)*pow(s24,-1)*(3*(-s14+s23)*(s13*s13)*(s24*s24)+s14*s23*(s23+s24)*(s14*(3*s23+s24)+2*(s24*s24))+s13*(s23*(2*s23+s24)*(s14*s14)+2*s23*(s23+s24)*(s24*s24)-s14*s24*(2*s23*s24+2*(s23*s23)+3*(s24*s24)))+s12*s12*((2*s14+3*s24)*(s13*s13)+(9*s23+4*s24)*(s14*s14)+s13*(5*s14*(2*s23+s24)+s24*(10*s23+7*s24)+2*(s14*s14))+2*s24*(4*s23*s24+3*(s23*s23)+s24*s24)+s14*(6*s23*s24+9*(s23*s23)+7*(s24*s24)))+(5*s13*(s14+s24)+3*s14*(3*s23+s24)+2*s24*(3*s23+2*s24)+3*(s14*s14))*pow(s12,3)+(3*s14+2*s24)*pow(s12,4)+s12*((s14*(2*s23-3*s24)+3*s24*(s23+s24))*(s13*s13)+s14*s14*(8*s23*s24+9*(s23*s23)+s24*s24)+s13*(s14*s23*(5*s23+3*s24)+(4*s23+s24)*(s14*s14)+s24*(9*s23*s24+5*(s23*s23)+2*(s24*s24)))+2*s23*s24*((s23+s24)*(s23+s24))+s14*(3*s24*(s23*s23)+9*s23*(s24*s24)+3*pow(s23,3)+7*pow(s24,3))))*pow(s12+s23+s24,-1)*pow(s12+s13+s23+s24,-1)+pow(s24,-1)*(-16-32*s23*pow(s13,-1)-16*(s12*(7*s23+s24)+5*(s12*s12)+2*(s23*s23))*pow(s12+s23,-2)-16*s23*(s12+s13+s23)*(s12+s23+s24)*pow(s13,-1)*pow(s12+s23,-2)+16*(2*s13*(5*s23+s24)+s12*(9*s13+2*s14+11*s23+2*s24)+s23*(2*s14+9*s23+4*s24)+2*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)+16*(s23*(s23+s24)*(3*s14+5*(s23+s24))+(8*s13+3*s14+13*s23+8*s24)*(s12*s12)+(5*s23+3*s24)*(s13*s13)+s13*(13*s23*s24+s14*(3*s23+2*s24)+10*(s23*s23)+3*(s24*s24))+s12*(3*s14*(2*s23+s24)+s13*(3*s14+18*s23+11*s24)+4*(s13*s13)+2*(9*s23*s24+7*(s23*s23)+2*(s24*s24)))+4*pow(s12,3))*pow(s12+s13+s23+s24,-3)+(-48*(s12+s23+s24)*(s12+s13+s14+s23+s24)-32*(2*s12+2*s23+s24)*(2*s12+2*s13+s14+2*s23+2*s24))*pow(s12+s13+s23+s24,-2)+(16*(s12+s13+s23)*(s12-2*s13+s14-3*s23+s24)*(s12+s23+s24)-32*(s12+s23)*(s13+s23)*(s12+s13+s23+s24))*pow(s13,-1)*pow(s12+s13+s23+s24,-2)+16*(s14*s24+8*s23*s24+s12*(15*s13+15*s23+s24)+s13*(s14+15*s23+9*s24)+s13*s13+15*(s23*s23)+s24*s24)*pow(s13,-1)*pow(s12+s13+s23+s24,-1)+112*(s12+s23+s24)*(s14*s23+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s24,-1)*pow(s12+s13+s23+s24,-1))+2*pow(s12+s13+s14,-1)*pow(s23,-1)*(-48*s12-8*s13-16*s23+8*(s12+s23)+8*s12*(3*s12-s14+2*s23)*pow(s13,-1)+8*(s12+s13)*(s12+s13+s14+s23+s24)*pow(s13,-1)-8*(-(s12*(s13+5*s14-5*s23))+s14*s23+s13*(2*s14+5*s23)+8*(s12*s12)+2*(s13*s13))*pow(s13,-1)+8*s12*s13*(3*s12+s23)*pow(s12+s23,-2)+8*(s12*(-6*s13-8*s14+s23-2*s24)-2*s13*(2*s23+s24)-s23*(6*s14+s23+4*s24)+5*(s12*s12))*pow(s12+s23,-1)+8*(s12*(s13-2*s23)+2*s13*s23+s12*s12)*(s13*(s23+s24)+s23*(s14+s23+s24)+s12*(s13+s14+2*s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s12+s23,-1)+s13*(16*(4*s12-s13-s14+s23)*(s12+s13+s23+s24)+8*(s12+s13+s14+s23+s24)*(4*s12-3*s13-2*s14+2*s23+s24))*pow(s12+s13+s23+s24,-2)+(-16*(s12+s23)*(4*s12-s13-s14+s23)*(s12+s13+s23+s24)-8*(s12+s13+s23)*(s12+s23+s24)*(5*s12-2*s13-s14+3*s23+s24))*pow(s12+s13+s23+s24,-2)-16*s13*(s13*(3*s23+s24)+s12*(2*s13+s14+5*s23+2*s24)+s23*(s14+3*(s23+s24))+2*(s12*s12))*pow(s12+s13+s23+s24,-2)+8*(s12+s23)*(3*s23*(s23+s24)+3*s12*(s13+2*s23+s24)+s13*(3*s23+2*s24)+3*(s12*s12))*pow(s12+s13+s23+s24,-2)+8*(3*s12+3*s13+2*s14+3*s23+3*s24)*(s13*s13)*pow(s12+s13+s23+s24,-2)-8*pow(s13,-1)*(s13*(s13+s14)*s24*(-2*s14*s23*(s23+s24)+s13*(s24*(s23+s24)-s14*(2*s23+s24))+s24*(s13*s13))+(-(s14*(13*s23+9*s24))+s13*(-10*s14+27*s23+35*s24)+15*(s13*s13)-s14*s14+12*((s23+s24)*(s23+s24)))*pow(s12,4)+(13*s13-5*s14+12*(s23+s24))*pow(s12,5)+4*pow(s12,6)+s12*s13*s24*((4*s23+9*s24)*(s13*s13)-2*s14*(2*s23*s24+s14*(2*s23+s24)+3*(s23*s23)-s24*s24)+s13*(s14*(-8*s23+s24)-2*(s14*s14)+2*(4*s23*s24+s23*s23+3*(s24*s24)))+2*pow(s13,3))+pow(s12,3)*((-5*s14+18*(s23+2*s24))*(s13*s13)+s13*(46*s23*s24-2*s14*(8*s23+7*s24)-2*(s14*s14)+15*(s23*s23)+31*(s24*s24))+(s23+s24)*(-(s14*(11*s23+3*s24))-2*(s14*s14)+4*((s23+s24)*(s23+s24)))+7*pow(s13,3))+s12*s12*(-(s13*s13*(-26*s23*s24+s14*(3*s23+5*s24)+s14*s14-3*(s23*s23)-27*(s24*s24)))-s14*(s14+3*s23-s24)*((s23+s24)*(s23+s24))+s13*(-2*(s23+2*s24)*(s14*s14)-2*s14*(8*s23*s24+3*(s23*s23)+s24*s24)+(s23+9*s24)*((s23+s24)*(s23+s24)))+3*(s23+5*s24)*pow(s13,3)+pow(s13,4)))*pow(s14,-2)*pow(s12+s13+s23+s24,-2)+8*pow(s12+s23,-2)*pow(s24,-2)*(-(s12*s14*(s23*s23)*(2*(s23+s24)*(s13*s13)+s13*(4*s23*s24+s24*(-s14+2*s24)+4*(s23*s23))+s23*(s14*s23+2*((s23+s24)*(s23+s24)))))+(24*s23*s24+2*s14*(11*s23+6*s24)+s13*(12*s14+24*s23+13*s24)+9*(s13*s13)+3*(s14*s14)+14*(s23*s23)+9*(s24*s24))*pow(s12,5)+(9*s13+6*s14+11*s23+9*s24)*pow(s12,6)+3*pow(s12,7)+pow(s12,3)*(s13*s13*(2*s14*(5*s23-3*s24)-10*s23*s24+3*(s23*s23)-10*(s24*s24))+s23*(2*(7*s23+4*s24)*(s14*s14)+2*s14*(12*s23*s24+6*(s23*s23)+5*(s24*s24))-(s23-2*s24)*((s23+s24)*(s23+s24)))+s13*((8*s23-s24)*(s14*s14)+s14*(4*s23*s24+24*(s23*s23)-6*(s24*s24))-5*s24*((s23+s24)*(s23+s24)))+(2*s23-5*s24)*pow(s13,3))+s14*(-(s14*s23*(s23+s24))+s13*(s14*(-s23+s24)+2*s24*(s23+s24))+2*s24*(s13*s13))*pow(s23,3)+pow(s12,4)*((6*s14+15*s23-s24)*(s13*s13)+(11*s23+3*s24)*(s14*s14)+s13*(17*s23*s24+s14*(32*s23+6*s24)+3*(s14*s14)+18*(s23*s23)-s24*s24)+s14*(32*s23*s24+28*(s23*s23)+6*(s24*s24))+3*pow(s13,3)+3*(6*s24*(s23*s23)+5*s23*(s24*s24)+2*pow(s23,3)+pow(s24,3)))-s23*(s12*s12)*(s13*s13*(-2*s14*(s23-5*s24)+3*(3*s23*s24+s23*s23+2*(s24*s24)))+s23*(s23+s24)*(2*s14*(s23-s24)-6*(s14*s14)+(s23+s24)*(s23+s24))+(s23+3*s24)*pow(s13,3)+s13*(2*s14*s24*(4*s23+5*s24)+(-6*s23+s24)*(s14*s14)+3*pow(s23+s24,3))))*pow(s12+s13+s23+s24,-2)+8*(2*s14*(-4*s23+s24)+s13*(-6*s23+2*s24)+s12*(-17*s13-17*s14+11*s23+2*s24)+21*(s12*s12))*pow(s12+s13+s23+s24,-1)-8*(s13*s24+s12*(s13+s23+s24)+s12*s12)*(s12*(s13+7*s23+s24)+(s13+s14)*(4*s13+3*s14+3*s23+2*s24)+13*(s12*s12))*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s23+s24,-1)-8*(s14*s23+s12*(s13+s14+s23+s24)+s12*s12)*(s12*(-4*s13-5*s14+10*s23)+s23*(3*s13+s14+4*s23+s24)+12*(s12*s12))*pow(s12+s23,-1)*pow(s24,-1)*pow(s12+s13+s23+s24,-1))+16*pow(s24,-1)*(-((2*s12+s23)*pow(s13,-1))+(s12+s13+s23)*pow(s13,-1)+(2*s12+s13+3*s14+4*s23+s24)*pow(s13,-1)+(2*s12+s23)*pow(s12+s23,-1)+(s12+s13+s23)*(s12+s23+s24)*pow(s13,-1)*pow(s12+s23,-1)-(s13*(8*s23-s24)+s23*(3*s14+5*s23+2*s24)+s12*(5*s13+3*(s14+3*s23+s24))+4*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)+3*s12*(s13*(s23+s24)+s23*(s14+s23+s24)+s12*(s13+s14+2*s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s12+s23,-1)+(s12+s23)*(2*s12+2*s13+s14+2*s23+2*s24)*pow(s12+s13+s23+s24,-2)+(s12+s13+s23)*(2*s23*(s23+s24)+s13*(2*s23+s24)+2*s12*(s13+2*s23+s24)+2*(s12*s12))*pow(s13,-1)*pow(s12+s13+s23+s24,-2)+pow(s13,-1)*(s13*s24*(-4*s14*s23*(s23+s24)+s13*(2*s24*(s23+s24)-s14*(4*s23+s24))+2*s24*(s13*s13))+2*(-(s14*(4*s23+3*s24))+s13*(-3*s14+6*s23+8*s24)+3*(s13*s13)+3*((s23+s24)*(s23+s24)))*pow(s12,3)+(6*s13-3*s14+6*(s23+s24))*pow(s12,4)+2*pow(s12,5)+s12*s12*(-2*s13*(5*s14-3*s23-7*s24)*(s23+s24)+(-3*s14+6*s23+14*s24)*(s13*s13)+(s23+s24)*(-(s14*(7*s23+3*s24))+2*((s23+s24)*(s23+s24)))+2*pow(s13,3))+2*s12*((-(s14*(s23+2*s24))+s24*(4*s23+5*s24))*(s13*s13)-s14*s23*((s23+s24)*(s23+s24))-2*s13*(s14*(3*s23*s24+s23*s23+s24*s24)-s24*((s23+s24)*(s23+s24)))+2*s24*pow(s13,3)))*pow(s14,-2)*pow(s12+s13+s23+s24,-2)-(2*s14*s23+2*s14*s24+3*s23*s24+s13*(s14+10*s23+4*s24)+s12*(7*s13+2*s14+12*s23+5*s24)+5*(s12*s12)+7*(s23*s23))*pow(s13,-1)*pow(s12+s13+s23+s24,-1)+(6*s12+s13+s14+7*s23+3*s24)*(s13*s24+s12*(s13+s23+s24)+s12*s12)*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s23+s24,-1)-(s14*s23+s12*(s13+s14+s23+s24)+s12*s12)*(s23*s24+s12*(6*s23+s24)-s24*(s13+2*s24)+3*(s12*s12)+3*(s23*s23))*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)*pow(s12+s13+s23+s24,-1)))/32.;
}

// Coefficient order epsilon^1 of master 2
template<>
double qq2yygCAm2CF<2,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (8*pow(s13,-1)*(-(s13*s24*(2*s14*(7*s23+4*s24)+s24*(17*s23+4*s24)))+(s14*(7*s23-4*s24)+(8*s23-13*s24)*s24)*(s13*s13)+(6*s24*(s23+s24)+s14*(5*s23+6*s24))*(s24*s24)+s12*s12*(-14*s13*s24+7*(s13*s13)+5*(s24*s24))+(4*s14+s23+8*s24)*pow(s13,3)+s12*(-2*s13*s24*(7*s14+7*s23+10*s24)+(7*s14+7*s23-3*s24)*(s13*s13)+(5*s14+5*s23+11*s24)*(s24*s24)+8*pow(s13,3))+pow(s13,4))*pow(s13-s24,-3)*pow(s24,-1)+8*pow(s13,-1)*(s14*s24*(8*s24*(s23+s24)+s14*(5*s23+14*s24))+s12*s12*(-2*s13*(4*s14+2*s23+5*s24)+s24*(10*s14+5*s23+13*s24)-2*(s13*s13))+s13*s13*(2*s14*(s23-14*s24)-s24*(14*s23+5*s24)+10*(s14*s14))+s13*(s14*s24*(-11*s23+7*s24)-2*(2*s23+11*s24)*(s14*s14)+8*(s23+s24)*(s24*s24))+(-4*s13+5*s24)*pow(s12,3)+2*(7*s14+2*s23-4*s24)*pow(s13,3)+s12*((8*s14+2*s23-23*s24)*(s13*s13)-s13*((11*s23-8*s24)*s24+8*s14*(s23+4*s24)+4*(s14*s14))+s24*(8*s24*(s23+s24)+s14*(10*s23+27*s24)+5*(s14*s14))+6*pow(s13,3))+4*pow(s13,4))*pow(s12+s13+s14,-1)*pow(s13-s24,-2)*pow(s24,-1)+4*pow(s13,-1)*(2*s13*s24*(s14*s14)*(10*s23*(s14*s14)+s14*(-5*s23*s24-3*(s23*s23)+s24*s24)+s24*(s23*s24-2*(s23*s23)+4*(s24*s24)))+6*((s13-s24)*(s13-s24))*pow(s12,5)+pow(s12,4)*(-2*s13*s24*(12*s14+5*(s23+s24))+14*(s14-s24)*(s13*s13)+2*(6*s14+4*s23+7*s24)*(s24*s24)+15*pow(s13,3))-((52*s23+23*s24)*(s14*s14)+s14*(-98*s23*s24+4*(s23*s23)-68*(s24*s24))+2*s24*(20*s23*s24-s23*s23+15*(s24*s24)))*pow(s13,4)+pow(s12,3)*(2*(s13*s13)*(5*s23*s24+s14*(-6*s23+8*s24)+3*(s14*s14)+s23*s23-18*(s24*s24))-2*s13*s24*(6*s23*s24+s14*(5*s23+24*s24)+3*(s23*s23)-8*(s24*s24))+2*(s24*s24)*(5*s23*s24+s14*(9*s23+19*s24)+s23*s23+4*(s24*s24))+(15*s14-15*s23+23*s24)*pow(s13,3)+9*pow(s13,4))+(2*s24*(25*s23+16*s24)-s14*(47*s23+22*s24))*pow(s13,5)-(18*s23+7*s24)*pow(s13,6)+2*s23*(-3*s14+s23)*(s24*s24)*pow(s14,3)-2*s14*(s13*s13)*((s23*s24+8*(s23*s23)-6*(s24*s24))*(s24*s24)-s14*s14*(24*s23*s24+s23*s23+4*(s24*s24))+s14*s24*(11*s23*s24-s23*s23+9*(s24*s24))+6*s23*pow(s14,3))+pow(s13,3)*(2*(s24*s24)*(4*s23*s24-2*(s23*s23)+5*(s24*s24))-2*s14*s24*(23*s23*s24-8*(s23*s23)+22*(s24*s24))+s14*s14*(76*s23*s24-2*(s23*s23)+44*(s24*s24))-(35*s23+8*s24)*pow(s14,3))+s12*s12*(2*s14*(s24*s24)*(10*s23*s24+s14*(3*s23+17*s24)-6*(s14*s14)+3*(s23*s23)+8*(s24*s24))+(98*s23*s24+s14*(-65*s23+82*s24)-15*(s14*s14)-2*(s23*s23)+14*(s24*s24))*pow(s13,3)-3*(4*s14+16*s23-11*s24)*pow(s13,4)-3*pow(s13,5)+s13*s13*((-36*s23+74*s24)*(s14*s14)+s14*(68*s23*s24+6*(s23*s23)-62*(s24*s24))+2*s24*(-41*s23*s24+s23*s23-20*(s24*s24))-6*pow(s14,3))+2*s13*s24*(3*(5*s23-11*s24)*(s14*s14)+s14*(-17*s23*s24-9*(s23*s23)+13*(s24*s24))+s24*(12*s23*s24-2*(s23*s23)+13*(s24*s24))+12*pow(s14,3)))+s12*(2*(s14*s14)*(s24*s24)*(-5*s14*(s23-s24)+5*s23*s24-3*(s14*s14)+3*(s23*s23)+4*(s24*s24))+(-20*s14*(5*s23-s24)+128*s23*s24-21*(s14*s14)-4*(s23*s23)+66*(s24*s24))*pow(s13,4)+(-13*s14-51*s23+s24)*pow(s13,5)-3*pow(s13,6)+pow(s13,3)*((-85*s23+51*s24)*(s14*s14)-2*s24*(51*s23*s24-8*(s23*s23)+36*(s24*s24))+s14*(174*s23*s24-4*(s23*s23)+66*(s24*s24))-15*pow(s14,3))+2*s13*s14*s24*((25*s23-14*s24)*(s14*s14)+s14*(-16*s23*s24-9*(s23*s23)+6*(s24*s24))+s24*(13*s23*s24-4*(s23*s23)+14*(s24*s24))+6*pow(s14,3))-2*(s13*s13)*((-11*s23*s24+8*(s23*s23)-14*(s24*s24))*(s24*s24)+s14*s14*(-53*s23*s24-3*(s23*s23)+9*(s24*s24))+2*s14*s24*(26*s23*s24-s23*s23+14*(s24*s24))+2*(9*s23-11*s24)*pow(s14,3)+2*pow(s14,4))))*pow(s12+s13+s14,-3)*pow(s23,-1)*pow(s13-s24,-2)*pow(s24,-1)-4*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s13-s24,-3)*pow(s24,-1)*(s24*(s13*s13)*(12*s23*(s14*s14)-(6*s23+7*s24)*(s24*s24)+s14*(8*s23*s24-s23*s23+9*(s24*s24)))+(-5*s23*(s14*s14)+(17*s23+6*s24)*(s24*s24)+s14*(7*s23*s24-s23*s23+2*(s24*s24)))*pow(s13,3)-((5*s23-3*s24)*s24+s14*(8*s23+3*s24))*pow(s13,4)-2*(s23+s24)*pow(s13,5)+pow(s12,3)*(-7*s24*(s13*s13)+12*s13*(s24*s24)+pow(s13,3)-4*pow(s24,3))+2*s14*s23*(s14-2*s23-3*s24)*pow(s24,3)+s13*(s24*s24)*(-7*s23*(s14*s14)+s14*(5*s23*s24+6*(s23*s23)-6*(s24*s24))+2*pow(s24,3))+s12*s12*(s24*(-5*s14+2*s23+39*s24)*(s13*s13)+s13*(9*s14+14*s23-11*s24)*(s24*s24)+(2*s14-6*s23-23*s24)*pow(s13,3)+3*pow(s13,4)-2*(s14+4*s23+s24)*pow(s24,3))+s12*(s13*(7*s14*s23-9*s23*s24-3*(s14*s14)+6*(s23*s23)-9*(s24*s24))*(s24*s24)-s24*(s13*s13)*(-25*s23*s24-7*s14*(2*s23+3*s24)-2*(s14*s14)+s23*s23+s24*s24)+(s23*s24-s14*(11*s23+14*s24)+s14*s14-s23*s23+30*(s24*s24))*pow(s13,3)+3*(s14-3*(s23+2*s24))*pow(s13,4)+2*pow(s13,5)+2*(-(s23*s24)-s14*(3*s23+2*s24)+s14*s14-2*(s23*s23)+s24*s24)*pow(s24,3)))+4*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s23,-2)*pow(s13-s24,-2)*((s13*(7*s14+3*s23-6*s24)+2*s24*(-2*s14+s23+4*s24)+5*(s13*s13))*pow(s12,7)+s13*pow(s12,8)+pow(s12,6)*(2*(6*s14+14*s23+3*s24)*(s13*s13)+2*s24*(25*s23*s24-2*s14*(5*s23+2*s24)-3*(s14*s14)+6*(s23*s23)+13*(s24*s24))+s13*(s14*(35*s23+9*s24)+9*(s14*s14)-2*(24*s23*s24+s23*s23+9*(s24*s24)))+6*pow(s13,3))+pow(s12,5)*(s13*s13*(5*s23*s24+s14*(78*s23+50*s24)+5*(s14*s14)+56*(s23*s23)-10*(s24*s24))+4*(s14+10*s23+4*s24)*pow(s13,3)+2*pow(s13,4)-2*s24*(2*(8*s23+5*s24)*(s14*s14)-65*s24*(s23*s23)+s14*(9*s23*s24+19*(s23*s23)-8*(s24*s24))-64*s23*(s24*s24)+pow(s14,3)-15*pow(s23,3)-15*pow(s24,3))+s13*((47*s23+24*s24)*(s14*s14)+s14*(-4*s23*s24+68*(s23*s23)-45*(s24*s24))+3*pow(s14,3)-2*(70*s24*(s23*s23)+51*s23*(s24*s24)+10*pow(s23,3)+4*pow(s24,3))))+pow(s12,4)*((96*s23*s24+s14*(38*s23+26*s24)+95*(s23*s23)+16*(s24*s24))*pow(s13,3)+2*(7*s23+2*s24)*pow(s13,4)+s13*s13*((30*s23+22*s24)*(s14*s14)-57*s24*(s23*s23)-121*s23*(s24*s24)+2*s14*(115*s23*s24+98*(s23*s23)+17*(s24*s24))+44*pow(s23,3)-18*pow(s24,3))+2*s24*(126*(s23*s23)*(s24*s24)-s14*s14*(44*s23*s24+35*(s23*s23)+6*(s24*s24))-(5*s23+3*s24)*pow(s14,3)+90*s24*pow(s23,3)+20*pow(s23,4)+61*s23*pow(s24,3)+s14*(12*s24*(s23*s23)+59*s23*(s24*s24)-15*pow(s23,3)+20*pow(s24,3))+7*pow(s24,4))+s13*(-212*(s23*s23)*(s24*s24)+s14*s14*(96*s23*s24+100*(s23*s23)+s24*s24)+3*(5*s23+3*s24)*pow(s14,3)-200*s24*pow(s23,3)-35*pow(s23,4)+s14*(-130*s24*(s23*s23)-295*s23*(s24*s24)+60*pow(s23,3)-73*pow(s24,3))-24*s23*pow(s24,3)+9*pow(s24,4)))+s12*s12*(4*pow(s13,4)*(12*s24*(s23*s23)+3*s23*(s24*s24)+4*pow(s23,3)-pow(s24,3))+pow(s13,3)*(143*(s23*s23)*(s24*s24)+182*s24*pow(s23,3)+19*pow(s23,4)+40*s23*pow(s24,3)+s14*(355*s24*(s23*s23)+176*s23*(s24*s24)+151*pow(s23,3)+18*pow(s24,3))+10*pow(s24,4))+2*s23*s24*(-2*s23*(5*s23+9*s24)*pow(s14,3)-s14*s14*(64*s24*(s23*s23)+24*s23*(s24*s24)+25*pow(s23,3)-3*pow(s24,3))+(s23+s24)*(s23+s24)*(17*s24*(s23*s23)+21*s23*(s24*s24)+6*pow(s23,3)+4*pow(s24,3))+s14*(185*(s23*s23)*(s24*s24)+72*s24*pow(s23,3)+8*pow(s23,4)+146*s23*pow(s24,3)+31*pow(s24,4)))+s13*(6*s23*(9*s23*s24+5*(s23*s23)+s24*s24)*pow(s14,3)+s23*(s14*s14)*(96*s24*(s23*s23)-75*s23*(s24*s24)+65*pow(s23,3)-40*pow(s24,3))-s14*(759*(s24*s24)*pow(s23,3)+295*s24*pow(s23,4)+13*pow(s23,5)+409*(s23*s23)*pow(s24,3)-12*s23*pow(s24,4)-16*pow(s24,5))-4*s23*(27*(s24*s24)*pow(s23,3)+14*s24*pow(s23,4)+3*pow(s23,5)-7*(s23*s23)*pow(s24,3)-29*s23*pow(s24,4)-9*pow(s24,5)))+s13*s13*(-371*(s24*s24)*pow(s23,3)-79*s24*pow(s23,4)-16*pow(s23,5)-329*(s23*s23)*pow(s24,3)+s14*s14*(183*s24*(s23*s23)+57*s23*(s24*s24)+80*pow(s23,3)+2*pow(s24,3))+2*s14*(-79*(s23*s23)*(s24*s24)+139*s24*pow(s23,3)+78*pow(s23,4)-105*s23*pow(s24,3)-15*pow(s24,4))-73*s23*pow(s24,4)-4*pow(s24,5)))+pow(s12,3)*(s23*(27*s23+28*s24)*pow(s13,4)+pow(s13,3)*(204*s24*(s23*s23)+82*s23*(s24*s24)+s14*(166*s23*s24+113*(s23*s23)+40*(s24*s24))+93*pow(s23,3)+12*pow(s24,3))+s13*s13*(-344*(s23*s23)*(s24*s24)+s14*s14*(105*s23*s24+70*(s23*s23)+19*(s24*s24))-127*s24*pow(s23,3)+pow(s23,4)+s14*(386*s24*(s23*s23)+26*s23*(s24*s24)+244*pow(s23,3)-34*pow(s24,3))-157*s23*pow(s24,3)-9*pow(s24,4))+2*s24*(-2*s23*(5*s23+6*s24)*pow(s14,3)+124*(s24*s24)*pow(s23,3)+70*s24*pow(s23,4)+15*pow(s23,5)+93*(s23*s23)*pow(s24,3)+s14*s14*(-76*s24*(s23*s23)-20*s23*(s24*s24)-40*pow(s23,3)+pow(s24,3))+s14*s24*(153*s24*(s23*s23)+89*s23*(s24*s24)+58*pow(s23,3)+10*pow(s24,3))+25*s23*pow(s24,4)+pow(s24,5))+s13*(2*(18*s23*s24+15*(s23*s23)+s24*s24)*pow(s14,3)-210*(s24*s24)*pow(s23,3)-150*s24*pow(s23,4)-29*pow(s23,5)+s14*s14*(144*s24*(s23*s23)-23*s23*(s24*s24)+110*pow(s23,3)-14*pow(s24,3))-6*(s23*s23)*pow(s24,3)+s14*(-693*(s23*s23)*(s24*s24)-300*s24*pow(s23,3)+15*pow(s23,4)-288*s23*pow(s24,3)-10*pow(s24,4))+57*s23*pow(s24,4)+6*pow(s24,5)))+s23*(2*s14*s24*(s23*s23)*(-(s23*(s23+3*s24)*(s14*s14))+(6*s23*s24+s23*s23+11*(s24*s24))*((s23+s24)*(s23+s24))-s14*(4*s24*(s23*s23)+2*s23*(s24*s24)+pow(s23,3)-pow(s24,3)))+pow(s13,4)*(13*(s23*s23)*(s24*s24)+9*s24*pow(s23,3)-4*pow(s23,4)+2*s23*pow(s24,3)-2*pow(s24,4))+s13*s23*(6*(s24*s24)*(2*s23*s24-s23*s23+s24*s24)*((s23+s24)*(s23+s24))+s23*(9*s23*s24+3*(s23*s23)+2*(s24*s24))*pow(s14,3)+2*s23*(s14*s14)*(-13*s23*(s24*s24)+pow(s23,3)-6*pow(s24,3))-2*s14*(39*(s24*s24)*pow(s23,3)+12*s24*pow(s23,4)+pow(s23,5)+26*(s23*s23)*pow(s24,3)-16*s23*pow(s24,4)-14*pow(s24,5)))+pow(s13,3)*(12*(s24*s24)*pow(s23,3)-2*s24*pow(s23,4)-12*pow(s23,5)+6*(s23*s23)*pow(s24,3)+s14*s23*(101*s24*(s23*s23)+96*s23*(s24*s24)+23*pow(s23,3)+30*pow(s24,3))+4*s23*pow(s24,4)+4*pow(s24,5))+s13*s13*(s23*(s14*s14)*(39*s24*(s23*s23)+19*s23*(s24*s24)+10*pow(s23,3)+2*pow(s24,3))+2*s14*s23*(-54*(s23*s23)*(s24*s24)-2*s24*pow(s23,3)+2*pow(s23,4)-71*s23*pow(s24,3)-27*pow(s24,4))-2*s24*(27*(s24*s24)*pow(s23,3)+3*s24*pow(s23,4)-7*pow(s23,5)+21*(s23*s23)*pow(s24,3)+5*s23*pow(s24,4)+pow(s24,5))))+s12*(pow(s13,4)*(23*(s23*s23)*(s24*s24)+33*s24*pow(s23,3)-3*pow(s23,4)-4*s23*pow(s24,3)-2*pow(s24,4))+pow(s13,3)*(89*(s24*s24)*pow(s23,3)+56*s24*pow(s23,4)-25*pow(s23,5)+38*(s23*s23)*pow(s24,3)+s14*s23*(316*s24*(s23*s23)+232*s23*(s24*s24)+95*pow(s23,3)+48*pow(s24,3))+18*s23*pow(s24,4)+4*pow(s24,5))+s13*s23*(3*s23*(12*s23*s24+5*(s23*s23)+2*(s24*s24))*pow(s14,3)-32*(s24*s24)*pow(s23,4)-8*s24*pow(s23,5)-2*pow(s23,6)+s23*(s14*s14)*(24*s24*(s23*s23)-77*s23*(s24*s24)+19*pow(s23,3)-38*pow(s24,3))+18*pow(s23,3)*pow(s24,3)+92*(s23*s23)*pow(s24,4)-2*s14*(197*(s24*s24)*pow(s23,3)+68*s24*pow(s23,4)+5*pow(s23,5)+123*(s23*s23)*pow(s24,3)-27*s23*pow(s24,4)-22*pow(s24,5))+54*s23*pow(s24,5)+6*pow(s24,6))+s13*s13*(s23*(s14*s14)*(139*s24*(s23*s23)+57*s23*(s24*s24)+45*pow(s23,3)+4*pow(s24,3))+2*s14*s23*(-129*(s23*s23)*(s24*s24)+34*s24*pow(s23,3)+23*pow(s23,4)-159*s23*pow(s24,3)-42*pow(s24,4))-2*(72*(s24*s24)*pow(s23,4)-3*s24*pow(s23,5)+3*pow(s23,6)+122*pow(s23,3)*pow(s24,3)+54*(s23*s23)*pow(s24,4)+8*s23*pow(s24,5)+pow(s24,6)))+2*s24*(s23*s23)*(-(s23*(5*s23+12*s24)*pow(s14,3))-s14*s14*(26*s24*(s23*s23)+12*s23*(s24*s24)+8*pow(s23,3)-3*pow(s24,3))+s14*(107*(s23*s23)*(s24*s24)+39*s24*pow(s23,3)+5*pow(s23,4)+105*s23*pow(s24,3)+32*pow(s24,4))+(2*s23*s24+s23*s23+3*(s24*s24))*pow(s23+s24,3))))*pow(s12+s23+s24,-3)-8*pow(s13,-1)*pow(s12+s23,-1)*pow(s13-s24,-2)*((s24*(s14+7*s23+8*s24)-s13*(6*s23+13*s24)+10*(s13*s13))*pow(s12,3)+s24*pow(s12,4)+s24*(6*s23+5*s24)*pow(s13,3)+s12*s12*((12*s14+18*s23+17*s24)*(s13*s13)-2*s13*(13*s23*s24+s24*(8*s14+17*s24)+9*(s23*s23))+s24*(16*s23*s24+s14*(3*s23+7*s24)+15*(s23*s23)+20*(s24*s24))+4*pow(s13,3))+s13*s13*(s14*s23*(12*s23+13*s24)-2*(-12*s24*(s23*s23)-4*s23*(s24*s24)+pow(s23,3)+5*pow(s24,3)))+s23*s24*(s14*(7*s23*s24+s23*s23+13*(s24*s24))+2*(7*s23*(s24*s24)+2*pow(s23,3)+9*pow(s24,3)))+s12*(s13*s13*(41*s23*s24+s14*(24*s23+13*s24)+6*(s23*s23)-3*(s24*s24))+(4*s23+9*s24)*pow(s13,3)-s13*(s23*s24*(32*s14+69*s24)+13*s24*(s23*s23)+8*(3*s14+2*s24)*(s24*s24)+18*pow(s23,3))+s24*(8*s24*(s23*s23)+34*s23*(s24*s24)+s14*(14*s23*s24+3*(s23*s23)+13*(s24*s24))+13*pow(s23,3)+13*pow(s24,3)))-s13*(s24*(16*s14+35*s24)*(s23*s23)+s23*(24*s14+29*s24)*(s24*s24)+6*pow(s23,4)-5*pow(s24,4)))*pow(s12+s23+s24,-2)-4*pow(s13,-1)*(s24*s24*(4*s24*(3*s23*s24+2*(s23*s23)+s24*s24)+s14*(9*s23*s24+3*(s23*s23)+4*(s24*s24)))-s13*s24*(s24*(23*s23*s24+24*(s23*s23)+s24*s24)+2*s14*(9*s23*s24+4*(s23*s23)+4*(s24*s24)))+s13*s13*(-2*s24*(3*s23*s24-6*(s23*s23)+5*(s24*s24))+s14*(5*s23*s24+3*(s23*s23)+6*(s24*s24)))+(-8*s13*s24+3*(s13*s13)+3*(s24*s24))*pow(s12,3)+(2*s14*(s23-s24)+s24*(11*s23+3*s24))*pow(s13,3)+s12*s12*(-(s13*s24*(8*s14+16*s23+23*s24))+3*(s14+2*s23)*(s13*s13)+3*(s14+2*s23+4*s24)*(s24*s24)+5*pow(s13,3))+2*s24*pow(s13,4)+s12*(s13*s13*(12*s23*s24+s14*(6*s23+5*s24)+3*(s23*s23)-13*(s24*s24))+s24*s24*(20*s23*s24+s14*(6*s23+9*s24)+3*(s23*s23)+13*(s24*s24))-s13*s24*(47*s23*s24+2*s14*(8*s23+9*s24)+8*(s23*s23)+16*(s24*s24))+(2*s14+5*s23+8*s24)*pow(s13,3)+2*pow(s13,4)))*pow(s13-s24,-3)*pow(s24,-1)*pow(s12+s23+s24,-1)-8*pow(s13,-1)*pow(s12+s13+s14,-2)*pow(s13-s24,-2)*pow(s24,-1)*(s24*(s14*s14)*(s24*(11*s23*s24+5*(s23*s23)+2*(s24*s24))+s14*(11*s23*s24+3*(s23*s23)+6*(s24*s24)))+s13*s14*(-2*(s14*s14)*(8*s23*s24+s23*s23+7*(s24*s24))+s24*s24*(22*s23*s24+7*(s23*s23)+7*(s24*s24))+s14*s24*(s23*s24-6*(s23*s23)+10*(s24*s24)))-(-3*s24*(3*s14+2*s23+4*s24)+s13*(6*s14+4*s23+7*s24)+s13*s13)*pow(s12,4)+(-2*s13+3*s24)*pow(s12,5)+((9*s23+13*s24)*(s14*s14)+s14*(-4*s23*s24+3*(s23*s23)-13*(s24*s24))-s24*(9*s23*s24+s23*s23+s24*s24))*pow(s13,3)+pow(s12,3)*((4*s14+s23-23*s24)*(s13*s13)-s13*(13*s23*s24+6*s14*(2*s23+5*s24)+6*(s14*s14)+2*(s23*s23)-12*(s24*s24))+s24*(17*s23*s24+s14*(18*s23+35*s24)+9*(s14*s14)+3*(s23*s23)+12*(s24*s24))+5*pow(s13,3))+((2*s23-s24)*s24+2*s14*(s23+2*s24))*pow(s13,4)-(s23+s24)*pow(s13,5)+s12*s12*(s13*s13*(s14*(8*s23-47*s24)-37*s23*s24+11*(s14*s14)+2*(s23*s23)-13*(s24*s24))+(18*s14+11*s23-14*s24)*pow(s13,3)+5*pow(s13,4)-s13*(3*(4*s23+13*s24)*(s14*s14)+s24*(-21*s23*s24+6*(s23*s23)-23*(s24*s24))+6*s14*(7*s23*s24+s23*s23-s24*s24)+2*pow(s14,3))+s24*(2*(9*s23+17*s24)*(s14*s14)+s24*(8*s23*s24+5*(s23*s23)+3*(s24*s24))+s14*(45*s23*s24+9*(s23*s23)+32*(s24*s24))+3*pow(s14,3)))+s12*(s14*s24*((6*s23+11*s24)*(s14*s14)+s24*(19*s23*s24+10*(s23*s23)+7*(s24*s24))+s14*(39*s23*s24+9*(s23*s23)+26*(s24*s24)))+(4*s14*(5*s23-s24)-16*s23*s24+13*(s14*s14)+3*(s23*s23)-14*(s24*s24))*pow(s13,3)+(8*s14+5*s23-2*s24)*pow(s13,4)+pow(s13,5)+s13*s13*((13*s23-16*s24)*(s14*s14)+s14*(-57*s23*s24+4*(s23*s23)-42*(s24*s24))+s24*(-5*s23*s24-11*(s23*s23)+10*(s24*s24))+6*pow(s14,3))+s13*(s24*s24*(15*s23*s24+7*(s23*s23)+6*(s24*s24))+2*s14*s24*(11*s23*s24-6*(s23*s23)+17*(s24*s24))-s14*s14*(45*s23*s24+6*(s23*s23)+20*(s24*s24))-4*(s23+4*s24)*pow(s14,3)))+s13*s13*(s14*s14*(-20*s23*s24+2*(s23*s23)-25*(s24*s24))+s14*s24*(-21*s23*s24-11*(s23*s23)+2*(s24*s24))+(6*s23+8*s24)*pow(s14,3)+(7*s23+3*s24)*pow(s24,3)))*pow(s12+s23+s24,-1)+8*(2*pow(s24,-1)+(2*s12-s13+2*(s14-s23+s24))*pow(s13,-1)*pow(s24,-1)-(s12+s23-2*s24)*pow(s12+s23,-1)*pow(s24,-1)-2*s23*(s13-s24)*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)+(s13*(14*s23+5*s24)+s12*(7*s13+5*s14+14*s23+5*s24)+s23*(5*s14+9*s23+10*s24)+5*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)+(2*s13*s24+3*s24*(s12+s14+s24)-2*(s13*s13))*pow(s13-s24,-2)*pow(s24,-1)+(s12+s13+s14+s24)*(s12*(2*s13-3*s24)+s13*(2*s23-s24)-3*s23*s24)*pow(s13,-1)*pow(s13-s24,-2)*pow(s24,-1)-(5*s14*s23-4*s14*s24-4*s23*s24+s12*(13*s13+5*s14+5*s23+s24)+s13*(8*s14+9*s23+2*s24)+5*(s12*s12)+4*(s13*s13)-4*(s24*s24))*pow(s13,-1)*pow(s13-s24,-1)*pow(s24,-1)+2*((s13+s14)*s23+s12*(s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1))+pow(s12+s13+s14,-2)*pow(s23,-1)*(-8*s13*(s12+s13+s14)+8*(s12+s13+s14)*(s12+s23)-16*(s12+s13+s14)*(s12-s13+s14+s23)+8*(s12+s13+s14)*(2*s12*s23+(s13+s14)*s23+s12*s12)*pow(s13,-1)+8*(s12+s13+s14)*(s12*(8*s13+7*s14-6*s23)+s14*s23+s13*(8*s14+s23+6*s24)-s13*s13)*pow(s13,-1)+8*(s12+s13)*((s12+s13+s14)*(s12+s13+s14))*pow(s13,-1)+8*s13*(s12+s13+s14)*(2*s12-s23)*pow(s12+s23,-1)+8*(s12+s13+s14)*(s13*(2*s23+s24)-s23*(s14+s23+3*s24)+s12*(-6*s13+s14+7*s24)+4*(s12*s12))*pow(s12+s23,-1)-8*(s12+s13+s14)*(s13*s23+s12*(s13+4*s23)+s12*s12)*(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s12+s23,-1)+(s12+s13+s14)*(8*(s12-2*s13-s23)*(s12+s23)*(s13-s24)-8*(s12+s13+s23)*(s12+s13+s14-s24)*s24)*pow(s13-s24,-2)+s13*(s12+s13+s14)*(-8*(3*s12-3*s13+2*s14+s23)*(s13-s24)-8*(s13+s24)*(s12+s14+s24))*pow(s13-s24,-2)+8*s13*(s12+s13+s14)*(s12+s23)*pow(s13-s24,-1)-8*(s12+s13+s14)*(s13*s13)*pow(s13-s24,-1)-8*(s12+s13+s14)*(8*s14*s23+10*s14*s24+7*s23*s24+s13*(-10*s14+6*s23+5*s24)+s12*(-s13+5*s14+14*s23+9*s24)+12*(s12*s12)+5*(s13*s13)+3*(s23*s23)+6*(s24*s24))*pow(s13-s24,-1)+8*(s12*s24+s13*(s23+s24))*(2*s14*s23+s13*(s23-s24)+s12*(2*s13+2*s14+2*s23-s24)+2*(s12*s12))*pow(s13,-1)*pow(s13-s24,-1)+8*(s12*s24+s13*(s23+s24))*(s14*(3*s14+s23+4*s24)+s12*(2*s13+7*s14+s23+4*s24)+s13*(3*s14+3*s23+5*s24)+4*(s12*s12))*pow(s13,-1)*pow(s13-s24,-1)-8*(s12+s13+s14)*pow(s12+s23,-1)*pow(s13-s24,-2)*(s13*(s23+s24)*((s13+s14)*(s13+s14))*(s23*s23)+(-2*(s14-s23+2*s24)*(s13*s13)+s13*(10*s23*s24+2*s14*(7*s23+5*s24)+3*(s14*s14)+5*(s23*s23)+9*(s24*s24))-2*s24*(2*s14*(2*s23+s24)+s14*s14+(s23+s24)*(s23+s24)))*pow(s12,3)+(-4*s24*(s14+s23+s24)+s13*(6*s14+7*s23+9*s24)-2*(s13*s13))*pow(s12,4)+(3*s13-2*s24)*pow(s12,5)+s12*s23*(-2*s23*s24*(s14*s14)+s13*((5*s23+2*s24)*(s14*s14)-2*(s23+s24)*(s24*s24)+2*s14*(s23*s24+s23*s23+2*(s24*s24)))+2*(s13*s13)*(3*s14*s23+(s23+2*s24)*(s23+2*s24))-(s23+4*s24)*pow(s13,3))+s12*s12*(-4*s14*s23*s24*(s14+s23+s24)+2*(s13*s13)*(s14*(s23-s24)+5*s23*s24+3*(s23*s23)-s24*s24)-4*s23*pow(s13,3)+s13*((7*s23+s24)*(s14*s14)+s24*(s23*s23)+s23*(s24*s24)+2*s14*(6*s23*s24+5*(s23*s23)+2*(s24*s24))+pow(s23,3)+3*pow(s24,3))))*pow(s12+s23+s24,-2)+8*(s12+s13+s14)*((s13+s14)*s23+s12*(s14+s23+s24)+s12*s12)*(-(s14*s23)+s13*(s23-2*s24)+5*s23*s24+s12*(-6*s13+3*s14+5*s23+4*s24)+7*(s12*s12)+6*(s23*s23)+6*(s24*s24))*pow(s12+s23,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1))+8*(-pow(s13,-1)+pow(s24,-1)+(4*s12+3*s13+2*s14+6*s23+4*s24)*pow(s13,-1)*pow(s24,-1)+(s12+s23+s24)*pow(s12+s23,-1)*pow(s24,-1)-(s12*(2*s13+3*s14+10*s23+3*s24)+s13*(8*s23+6*s24)+3*s23*(s14+2*(s23+s24))+4*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)+(3*s12+s23)*(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s12+s23,-1)*pow(s24,-1)+(2*s12*(s13+s24)+s24*(6*s14+s23+2*s24)+s13*(s14+6*(s23+s24))+2*(s13*s13))*pow(s13,-1)*pow(s13-s24,-1)*pow(s24,-1)-(4*s12+6*s13+4*s14+s24)*(s12*s24+s13*(s23+s24))*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s13-s24,-1)*pow(s24,-1)-(4*s12+s13+4*s23+6*s24)*((s13+s14)*s23+s12*(s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1))+8*pow(s12+s23+s24,-1)*(1-(5*s12+s13+2*s14)*pow(s13,-1)-(s12+s23)*pow(s13,-1)+(s12+2*s13+s23-s24)*pow(s13,-1)+(s12*(s13-3*s24)+s13*(s23-2*s24)-3*s23*s24)*pow(s13,-1)*pow(s12+s23,-1)+(8*s14*s23+6*(s13+2*s23)*s24+s12*(3*s13+8*s14+7*s23+14*s24)+7*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)-(5*s12+3*s23)*(s23*(s14+s24)+s13*(s23+s24)+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s12+s23,-1)+(s12+s13+s23)*((s12+s23)*(s13-s24)+s24*(3*s13+s24))*pow(s13,-1)*pow(s13-s24,-2)+(s12+s23)*pow(s13-s24,-1)+(-6*s14*s24+s23*s24+s12*(s13-5*s23+s24)+s13*(3*s14-4*s23+2*s24)-s13*s13-5*(s23*s23)-5*(s24*s24))*pow(s13,-1)*pow(s13-s24,-1)-(s12*s24+s13*(s23+s24))*(2*s14*s23+s13*(s23-s24)+s12*(2*s13+2*s14+2*s23-s24)+2*(s12*s12))*pow(s13,-1)*pow(s12+s13+s14,-2)*pow(s13-s24,-1)+(2*s12+2*s13+5*s23)*(s12*s24+s13*(s23+s24))*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s13-s24,-1)-(s12*(3*s13-8*s24)+3*s13*(s23+s24)-2*s24*(4*s23+3*s24))*((s13+s14)*s23+s12*(s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s13-s24,-1)*pow(s12+s23+s24,-1))-8*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-2)*(s13*s13*(s14*s23*(s23+13*s24)+2*s24*(31*s23*s24+27*(s23*s23)+5*(s24*s24)))+s23*(s23+s24)*(2*s24*(20*s23*s24+13*(s23*s23)+9*(s24*s24))+s14*(19*s23*s24+7*(s23*s23)+13*(s24*s24)))+(125*s23*s24+s14*(28*s23+26*s24)+s13*(8*s14+45*s23+71*s24)+9*(s13*s13)+42*(s23*s23)+58*(s24*s24))*pow(s12,3)+(15*s13+7*s14+28*s23+33*s24)*pow(s12,4)+7*pow(s12,5)+s24*(17*s23+5*s24)*pow(s13,3)+s12*s12*((s14+18*s23+52*s24)*(s13*s13)+177*s24*(s23*s23)+182*s23*(s24*s24)+s14*(78*s23*s24+42*(s23*s23)+32*(s24*s24))+s13*(8*s14*(3*s23+4*s24)+5*(41*s23*s24+9*(s23*s23)+20*(s24*s24)))+pow(s13,3)+28*pow(s23,3)+45*pow(s24,3))+s13*(8*s14*s23*(4*s23*s24+s23*s23+3*(s24*s24))+s24*(114*s24*(s23*s23)+62*s23*(s24*s24)+63*pow(s23,3)+5*pow(s24,3)))+s12*(190*(s23*s23)*(s24*s24)+s13*s13*(106*s23*s24+s14*(2*s23+13*s24)+9*(s23*s23)+51*(s24*s24))+(s23+14*s24)*pow(s13,3)+111*s24*pow(s23,3)+7*pow(s23,4)+103*s23*pow(s24,3)+s14*(78*s24*(s23*s23)+64*s23*(s24*s24)+28*pow(s23,3)+13*pow(s24,3))+s13*(197*s24*(s23*s23)+214*s23*(s24*s24)+8*s14*(8*s23*s24+3*(s23*s23)+3*(s24*s24))+15*pow(s23,3)+49*pow(s24,3))+13*pow(s24,4)))*pow(s12+s13+s23+s24,-2)-4*pow(s13,-1)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow(s12+s23,-2)*pow(s24,-3)*((58*s23*s24+s14*(72*s23+34*s24)+s13*(36*s14+80*s23+43*s24)+24*(s13*s13)+12*(s14*s14)+60*(s23*s23)+20*(s24*s24))*pow(s12,7)+4*(4*s13+3*(s14+2*s23+s24))*pow(s12,8)+4*pow(s12,9)+pow(s12,6)*((36*s14+96*s23+57*s24)*(s13*s13)+s13*(172*s23*s24+3*s14*(60*s23+29*s24)+24*(s14*s14)+160*(s23*s23)+73*(s24*s24))+16*pow(s13,3)+2*(4*(9*s23+4*s24)*(s14*s14)+55*s24*(s23*s23)+46*s23*(s24*s24)+s14*(83*s23*s24+90*(s23*s23)+16*(s24*s24))+2*pow(s14,3)+40*pow(s23,3)+10*pow(s24,3)))+s23*(2*s14*(s23+s24)*(s23*s23)*(s23*(2*s23+3*s24)*(s14*s14)-s14*s24*(5*s23*s24+s23*s23+3*(s24*s24))+s24*s24*(17*s23*s24+5*(s23*s23)+13*(s24*s24)))+s24*s24*(2*s14*s23*(4*s23+13*s24)+s24*(29*s23*s24+24*(s23*s23)+4*(s24*s24)))*pow(s13,3)+2*(8*s23+s24)*pow(s13,4)*pow(s24,3)+s13*s13*(s24*s24)*(-(s23*(9*s23+2*s24)*(s14*s14))+s14*s23*(99*s23*s24+38*(s23*s23)+54*(s24*s24))+2*s24*(12*s24*(s23*s23)+6*s23*(s24*s24)+5*pow(s23,3)+pow(s24,3)))+s13*s23*(-2*s23*s24*(s14*s14)*(8*s23*s24+s23*s23+6*(s24*s24))+s23*(5*s23*s24+4*(s23*s23)-2*(s24*s24))*pow(s14,3)+2*(2*s24*(s23*s23)+pow(s23,3)-pow(s24,3))*pow(s24,3)+2*s14*(s24*s24)*(67*s24*(s23*s23)+63*s23*(s24*s24)+20*pow(s23,3)+14*pow(s24,3))))+pow(s12,5)*(s13*s13*(183*s23*s24+72*s14*(2*s23+s24)+12*(s14*s14)+144*(s23*s23)+97*(s24*s24))+3*(4*s14+16*s23+11*s24)*pow(s13,3)+4*pow(s13,4)+s13*((120*s23+49*s24)*(s14*s14)+258*s24*(s23*s23)+299*s23*(s24*s24)+s14*(346*s23*s24+360*(s23*s23)+72*(s24*s24))+4*pow(s14,3)+160*pow(s23,3)+71*pow(s24,3))+2*(89*(s23*s23)*(s24*s24)+s14*s14*(79*s23*s24+90*(s23*s23)+9*(s24*s24))+(12*s23+5*s24)*pow(s14,3)+50*s24*pow(s23,3)+30*pow(s23,4)+48*s23*pow(s24,3)+4*s14*(40*s24*(s23*s23)+16*s23*(s24*s24)+30*pow(s23,3)+3*pow(s24,3))+3*pow(s24,4)))+s12*(2*(s24*s24)*(14*s23*s24+7*(s23*s23)+s24*s24)*pow(s13,4)+s24*pow(s13,3)*(2*s14*s23*(10*s23*s24+3*(s23*s23)+24*(s24*s24))+s24*(109*s24*(s23*s23)+48*s23*(s24*s24)+58*pow(s23,3)+4*pow(s24,3)))+s13*s13*(s23*(s14*s14)*(17*s24*(s23*s23)-27*s23*(s24*s24)+12*pow(s23,3)-4*pow(s24,3))+s14*s23*s24*(126*s24*(s23*s23)+263*s23*(s24*s24)+8*pow(s23,3)+100*pow(s24,3))+s24*s24*(93*(s23*s23)*(s24*s24)+153*s24*pow(s23,3)+84*pow(s23,4)+16*s23*pow(s24,3)+2*pow(s24,4)))+s13*s23*(2*s23*(10*s23*s24+10*(s23*s23)-3*(s24*s24))*pow(s14,3)+s23*(s14*s14)*(41*s24*(s23*s23)-37*s23*(s24*s24)+24*pow(s23,3)-34*pow(s24,3))+2*(s24*s24)*(36*(s23*s23)*(s24*s24)+54*s24*pow(s23,3)+25*pow(s23,4)+s23*pow(s24,3)-3*pow(s24,4))+2*s14*s24*(224*(s23*s23)*(s24*s24)+79*s24*pow(s23,3)-pow(s23,4)+162*s23*pow(s24,3)+26*pow(s24,4)))+2*(s23*s23)*(s23*(25*s23*s24+12*(s23*s23)+12*(s24*s24))*pow(s14,3)+s14*s14*(-15*(s23*s23)*(s24*s24)+11*s24*pow(s23,3)+6*pow(s23,4)-28*s23*pow(s24,3)-9*pow(s24,4))+s24*s24*(12*(s23*s23)*(s24*s24)+13*s24*pow(s23,3)+5*pow(s23,4)+3*s23*pow(s24,3)-pow(s24,4))+s14*s24*(91*(s23*s23)*(s24*s24)+20*s24*pow(s23,3)-2*pow(s23,4)+104*s23*pow(s24,3)+34*pow(s24,4))))+pow(s12,4)*((82*s23*s24+s14*(36*s23+19*s24)+48*(s23*s23)+55*(s24*s24))*pow(s13,3)+(8*s23+7*s24)*pow(s13,4)+s13*s13*((48*s23+17*s24)*(s14*s14)+207*s24*(s23*s23)+345*s23*(s24*s24)+4*s14*(56*s23*s24+54*(s23*s23)+11*(s24*s24))+96*pow(s23,3)+96*pow(s24,3))+s13*(509*(s23*s23)*(s24*s24)+s14*s14*(194*s23*s24+240*(s23*s23)+11*(s24*s24))+5*(4*s23+s24)*pow(s14,3)+172*s24*pow(s23,3)+80*pow(s23,4)+294*s23*pow(s24,3)+s14*(514*s24*(s23*s23)+254*s23*(s24*s24)+360*pow(s23,3)+67*pow(s24,3))+27*pow(s24,4))+2*((25*s23*s24+30*(s23*s23)+3*(s24*s24))*pow(s14,3)+96*(s24*s24)*pow(s23,3)+20*s24*pow(s23,4)+12*pow(s23,5)+s14*s14*(155*s24*(s23*s23)+30*s23*(s24*s24)+120*pow(s23,3)-4*pow(s24,3))+97*(s23*s23)*pow(s24,3)+20*s23*pow(s24,4)+s14*(101*(s23*s23)*(s24*s24)+150*s24*pow(s23,3)+90*pow(s23,4)+61*s23*pow(s24,3)+15*pow(s24,4))-4*pow(s24,5)))+s12*s12*(s24*(27*s23*s24+6*(s23*s23)+14*(s24*s24))*pow(s13,4)+pow(s13,3)*(s14*(31*s24*(s23*s23)+16*s23*(s24*s24)+12*pow(s23,3)+22*pow(s24,3))+s24*(168*s24*(s23*s23)+148*s23*(s24*s24)+16*pow(s23,3)+23*pow(s24,3)))+s13*s13*(s14*s14*(51*s24*(s23*s23)-27*s23*(s24*s24)+48*pow(s23,3)-2*pow(s24,3))+s24*(365*(s23*s23)*(s24*s24)+319*s24*pow(s23,3)+12*pow(s23,4)+113*s23*pow(s24,3)+6*pow(s24,4))+s14*(182*(s23*s23)*(s24*s24)+96*s24*pow(s23,3)+36*pow(s23,4)+229*s23*pow(s24,3)+46*pow(s24,4)))+s13*(2*s23*(15*s23*s24+20*(s23*s23)-3*(s24*s24))*pow(s14,3)+s23*(s14*s14)*(184*s24*(s23*s23)-15*s23*(s24*s24)+120*pow(s23,3)-32*pow(s24,3))+2*(s24*s24)*(77*(s23*s23)*(s24*s24)+181*s24*pow(s23,3)+115*pow(s23,4)-2*s23*pow(s24,3)-2*pow(s24,4))+s14*(306*(s24*s24)*pow(s23,3)+79*s24*pow(s23,4)+36*pow(s23,5)+561*(s23*s23)*pow(s24,3)+270*s23*pow(s24,4)+24*pow(s24,5)))+2*s23*(2*s23*(25*s23*s24+15*(s23*s23)+9*(s24*s24))*pow(s14,3)+s14*s14*(70*s24*pow(s23,3)+36*pow(s23,4)-36*s23*pow(s24,3)-9*pow(s24,4))+s24*(57*(s24*s24)*pow(s23,3)+26*s24*pow(s23,4)-pow(s23,5)+38*(s23*s23)*pow(s24,3)+2*s23*pow(s24,4)-4*pow(s24,5))+s14*(46*(s24*s24)*pow(s23,3)+7*s24*pow(s23,4)+6*pow(s23,5)+153*(s23*s23)*pow(s24,3)+133*s23*pow(s24,4)+29*pow(s24,5))))+pow(s12,3)*((13*s23*s24+4*(s23*s23)+11*(s24*s24))*pow(s13,4)+pow(s13,3)*(65*s24*(s23*s23)+165*s23*(s24*s24)+4*s14*(11*s23*s24+9*(s23*s23)+s24*s24)+16*pow(s23,3)+59*pow(s24,3))+s13*s13*(s14*s14*(51*s23*s24+72*(s23*s23)-9*(s24*s24))+483*(s23*s23)*(s24*s24)+93*s24*pow(s23,3)+24*pow(s23,4)+318*s23*pow(s24,3)+s14*(240*s24*(s23*s23)+138*s23*(s24*s24)+144*pow(s23,3)+65*pow(s24,3))+42*pow(s24,4))+s13*((20*s23*s24+40*(s23*s23)-2*(s24*s24))*pow(s14,3)+463*(s24*s24)*pow(s23,3)+43*s24*pow(s23,4)+16*pow(s23,5)+s14*s14*(286*s24*(s23*s23)+17*s23*(s24*s24)+240*pow(s23,3)-10*pow(s24,3))+479*(s23*s23)*pow(s24,3)+113*s23*pow(s24,4)+2*s14*(185*(s23*s23)*(s24*s24)+168*s24*pow(s23,3)+90*pow(s23,4)+157*s23*pow(s24,3)+36*pow(s24,4))-6*pow(s24,5))+2*(2*s23*(25*s23*s24+20*(s23*s23)+6*(s24*s24))*pow(s14,3)+64*(s24*s24)*pow(s23,4)+s24*pow(s23,5)+2*pow(s23,6)+103*pow(s23,3)*pow(s24,3)+s14*s14*(30*(s23*s23)*(s24*s24)+150*s24*pow(s23,3)+90*pow(s23,4)-20*s23*pow(s24,3)-3*pow(s24,4))+43*(s23*s23)*pow(s24,4)-5*s23*pow(s24,5)+s14*(84*(s24*s24)*pow(s23,3)+65*s24*pow(s23,4)+36*pow(s23,5)+133*(s23*s23)*pow(s24,3)+74*s23*pow(s24,4)+8*pow(s24,5))-3*pow(s24,6))))*pow(s12+s13+s23+s24,-2)+8*pow(s13,-1)*pow(s14,-2)*pow(s12+s13+s14,-1)*pow(s23,-2)*pow(s12+s23,-1)*pow(s24,-2)*((-2*s13*s23*(s14*s14-3*(s24*s24))+(7*s14*s23+6*s23*s24-4*(s14*s14)+8*(s23*s23))*(s24*s24))*pow(s12,6)+2*s23*(s24*s24)*pow(s12,7)+pow(s12,5)*(6*s23*(s13*s13)*(-(s14*s14)+s24*s24)+s24*s24*(s14*s23*(24*s23+17*s24)-12*(s23+s24)*(s14*s14)+6*s23*(3*s23*s24+2*(s23*s23)+s24*s24)-4*pow(s14,3))+s13*(19*s14*s23*(s24*s24)+2*s23*(9*s23+8*s24)*(s24*s24)-2*(s14*s14)*(-(s23*s24)+3*(s23*s23)+8*(s24*s24))-4*s23*pow(s14,3)))+s14*s24*(s23*s23)*(s13*s14*(s23+s24)*(s23*(s14*s14)+s14*(8*(s23*s23)-2*(s24*s24))-7*(s23+s24)*(s24*s24))-s23*s24*(s14*s14)*((s23+s24)*(s23+s24))-2*(s14-s24)*(s14*(-s23+s24)+5*s24*(s23+s24))*pow(s13,3)-2*(s14-4*s24)*s24*pow(s13,4)+s13*s13*(s14*s14*(-2*s23*s24+10*(s23*s23)-7*(s24*s24))+s24*s24*(3*s23*s24+2*(s23*s23)+s24*s24)-s14*s24*(20*s23*s24+10*(s23*s23)+9*(s24*s24))+2*s23*pow(s14,3)))+pow(s12,4)*(2*s23*(-3*(s14*s14)+s24*s24)*pow(s13,3)+s13*s13*(25*s14*s23*(s24*s24)+2*s23*(6*s23+7*s24)*(s24*s24)-2*(s14*s14)*(-(s23*s24)+6*(s23*s23)+12*(s24*s24))-8*s23*pow(s14,3))+s24*s24*(-(s14*s14*(23*s23*s24+8*(s23*s23)+12*(s24*s24)))+s14*s23*(43*s23*s24+30*(s23*s23)+13*(s24*s24))+2*s23*(4*s23+s24)*((s23+s24)*(s23+s24))-(17*s23+8*s24)*pow(s14,3))+s13*(s14*s23*(49*s23+38*s24)*(s24*s24)+2*s23*(s24*s24)*(18*s23*s24+9*(s23*s23)+7*(s24*s24))-3*(s23*s24+4*(s23*s23)+4*(s24*s24))*pow(s14,3)-2*s23*pow(s14,4)-s14*s14*(-16*s24*(s23*s23)+43*s23*(s24*s24)+6*pow(s23,3)+40*pow(s24,3))))+s12*((s23+s24)*(s14*s14)*(s23*s23)*(s24*s24)*(9*s23*s24-2*s14*(4*s23+3*s24)+4*(s23*s23)+5*(s24*s24))-2*s14*(-4*s23*(s23+s24)+s14*(s23+2*s24))*(s24*s24)*pow(s13,4)+s24*pow(s13,3)*(s14*s23*s24*(41*s23*s24+16*(s23*s23)+10*(s24*s24))+2*s23*(s23+s24)*pow(s14,3)+s14*s14*(-17*s24*(s23*s23)-20*s23*(s24*s24)+8*pow(s23,3)-8*pow(s24,3))+2*(s23*s23)*pow(s24,3))+s13*s14*s23*(-(s23*(3*s23*s24+2*(s23*s23)+2*(s24*s24))*pow(s14,3))+4*s23*((s23+s24)*(s23+s24))*pow(s24,3)+s24*(s14*s14)*(20*s24*(s23*s23)-s23*(s24*s24)+29*pow(s23,3)+2*pow(s24,3))+s14*s24*(-21*(s23*s23)*(s24*s24)+11*s24*pow(s23,3)+8*pow(s23,4)-35*s23*pow(s24,3)-11*pow(s24,4)))+s13*s13*(s23*s24*(s23*s24+25*(s23*s23)+s24*s24)*pow(s14,3)-2*pow(s14,4)*pow(s23,3)+s14*s23*(s24*s24)*(31*s24*(s23*s23)+23*s23*(s24*s24)+8*pow(s23,3)+pow(s24,3))+2*(s23+s24)*(s23*s23)*pow(s24,4)-s24*(s14*s14)*(49*(s23*s23)*(s24*s24)+16*s24*pow(s23,3)-16*pow(s23,4)+25*s23*pow(s24,3)+4*pow(s24,4))))+s12*s12*(-2*s14*s24*(-4*s23*s24+s14*(s23+2*s24))*pow(s13,4)+pow(s13,3)*(s24*(s14*s14)*(-23*s23*s24+8*(s23*s23)-24*(s24*s24))+s14*s23*(37*s23+31*s24)*(s24*s24)-4*(s23*s24+s23*s23+s24*s24)*pow(s14,3)+2*s23*(2*s23+s24)*pow(s24,3))+s13*s13*(s14*s23*(s24*s24)*(73*s23*s24+37*(s23*s23)+20*(s24*s24))-2*s23*(2*s23+s24)*pow(s14,4)+2*s23*(6*s23*s24+4*(s23*s23)+s24*s24)*pow(s24,3)-pow(s14,3)*(-8*s24*(s23*s23)+17*s23*(s24*s24)+8*pow(s23,3)+8*pow(s24,3))-s24*(s14*s14)*(36*s24*(s23*s23)+75*s23*(s24*s24)-38*pow(s23,3)+28*pow(s24,3)))+s13*(-3*s23*(3*s23*s24+2*(s23*s23)+s24*s24)*pow(s14,4)+4*(s23*s23)*((s23+s24)*(s23+s24))*pow(s24,3)+s14*s23*(s24*s24)*(38*s24*(s23*s23)+31*s23*(s24*s24)+11*pow(s23,3)+4*pow(s24,3))+s24*(s14*s14)*(-63*(s23*s23)*(s24*s24)+9*s24*pow(s23,3)+28*pow(s23,4)-51*s23*pow(s24,3)-8*pow(s24,4))-pow(s14,3)*(4*(s23*s23)*(s24*s24)-31*s24*pow(s23,3)+4*pow(s23,4)+19*s23*pow(s24,3)+4*pow(s24,4)))+s14*s23*(s24*s24)*(-(s14*s14*(30*s23*s24+22*(s23*s23)+9*(s24*s24)))+s14*(27*s24*(s23*s23)+16*s23*(s24*s24)+12*pow(s23,3)+pow(s24,3))+3*s23*pow(s23+s24,3)))+pow(s12,3)*(-2*s23*(s14*s14)*pow(s13,4)+pow(s13,3)*(21*s14*s23*(s24*s24)+2*s23*(s23+2*s24)*(s24*s24)-2*(s14*s14)*(s23*s24+3*(s23*s23)+8*(s24*s24))-4*s23*pow(s14,3))+s13*s13*(2*s14*s23*(27*s23+22*s24)*(s24*s24)+2*s23*(s24*s24)*(11*s23*s24+3*(s23*s23)+5*(s24*s24))-(7*s23*s24+16*(s23*s23)+12*(s24*s24))*pow(s14,3)-2*s23*pow(s14,4)-2*(s14*s14)*(-12*s24*(s23*s23)+26*s23*(s24*s24)+3*pow(s23,3)+24*pow(s24,3)))+s13*(s14*s23*(s24*s24)*(72*s23*s24+41*(s23*s23)+23*(s24*s24))-s23*(6*s23+5*s24)*pow(s14,4)+2*s23*(s24*s24)*(12*s24*(s23*s23)+11*s23*(s24*s24)+3*pow(s23,3)+2*pow(s24,3))-pow(s14,3)*(-7*s24*(s23*s23)+28*s23*(s24*s24)+12*pow(s23,3)+16*pow(s24,3))-s14*s14*(29*(s23*s23)*(s24*s24)-34*s24*pow(s23,3)+2*pow(s23,4)+87*s23*pow(s24,3)+32*pow(s24,4)))+s24*s24*(s14*s23*(16*s23+3*s24)*((s23+s24)*(s23+s24))-2*(13*s23*s24+14*(s23*s23)+2*(s24*s24))*pow(s14,3)+s14*s14*(3*s24*(s23*s23)-10*s23*(s24*s24)+8*pow(s23,3)-4*pow(s24,3))+2*(s23*s23)*pow(s23+s24,3))))*pow(s12+s13+s23+s24,-2)+8*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)*(s24*(s13*s13)*(-(s14*s23)+21*s23*s24+4*(s23*s23)+14*(s24*s24))+s23*(s23+s24)*(s14*(3*s23*s24+2*(s23*s23)+3*(s24*s24))+10*s24*((s23+s24)*(s23+s24)))+(31*s23*s24+s14*(8*s23+5*s24)+2*s13*(s14+6*s23+7*s24)+2*(s13*s13)+12*(s23*s23)+11*(s24*s24))*pow(s12,3)+(4*s13+2*s14+8*s23+7*s24)*pow(s12,4)+2*pow(s12,5)+7*(s24*s24)*pow(s13,3)+s12*s12*(4*(s23+3*s24)*(s13*s13)+51*s24*(s23*s23)+52*s23*(s24*s24)+3*s14*(5*s23*s24+4*(s23*s23)+2*(s24*s24))+s13*(s14*(6*s23-s24)+42*s23*s24+12*(s23*s23)+26*(s24*s24))+8*pow(s23,3)+9*pow(s24,3))+s13*(s14*(2*s23-s24)*(s23*s23)+s24*(39*s24*(s23*s23)+32*s23*(s24*s24)+14*pow(s23,3)+7*pow(s24,3)))+s12*(s13*s13*(16*s23*s24+s24*(-s14+24*s24)+2*(s23*s23))+(33*s23*s24+2*(s23*s23)+3*(s24*s24))*((s23+s24)*(s23+s24))+5*s24*pow(s13,3)+s14*(15*s24*(s23*s23)+12*s23*(s24*s24)+8*pow(s23,3)+3*pow(s24,3))+s13*(2*s14*s23*(3*s23-s24)+42*s24*(s23*s23)+65*s23*(s24*s24)+4*pow(s23,3)+23*pow(s24,3))))*pow(s12+s23+s24,-1)*pow(s12+s13+s23+s24,-2)+8*pow(s24,-1)*(-2+3*s12*pow(s13,-1)-2*s14*pow(s13,-1)+(s12+s23)*pow(s13,-1)-(2*s12+2*s13+2*s23+s24)*pow(s13,-1)-(3*s23*(s23+s24)+3*s12*(s13+2*s23+s24)+s13*(3*s23+2*s24)+3*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)+(s12*(11*s13+8*s14+27*s23+14*s24)+2*(s13*(7*s23+3*s24)+2*s23*(2*s14+3*(s23+s24)))+15*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)-(5*s12+3*s23)*(s13*(s23+s24)+s23*(s14+s23+s24)+s12*(s13+s14+2*s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s12+s23,-1)-(3*(2*s23+s24)*(s12*s12)-(2*s23+3*s24)*(s13*s13)+s13*(s24*s24)+s23*(3*s23*s24+2*(s23*s23)+s24*s24)+s12*(6*s23*s24-2*(s13*s13)+6*(s23*s23)+s24*s24)+2*pow(s12,3))*pow(s13,-1)*pow(s12+s13+s23+s24,-2)-(s12+s23)*pow(s12+s13+s23+s24,-1)+(6*s14*s23+6*s14*s24+11*s23*s24+s13*(3*s14+12*s23+8*s24)+s12*(10*s13+6*s14+23*s23+17*s24)+12*(s12*s12)+4*(s13*s13)+11*(s23*s23)+5*(s24*s24))*pow(s13,-1)*pow(s12+s13+s23+s24,-1)-(s13*s24+s12*(s13+s23+s24)+s12*s12)*(-2*s14*s23+s13*s24+s12*(s13-2*s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s14,-2)*pow(s12+s13+s23+s24,-1)-(2*s12+2*s13+5*s23)*(s13*s24+s12*(s13+s23+s24)+s12*s12)*pow(s13,-1)*pow(s14,-1)*pow(s12+s13+s23+s24,-1)+(s14*s23+s12*(s13+s14+s23+s24)+s12*s12)*(4*s12*(s23-s24)-4*s23*s24-3*s24*(s13+2*s24)+2*(s12*s12)+2*(s23*s23))*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)*pow(s12+s13+s23+s24,-1))+8*(-pow(s13,-1)-pow(s12+s23+s24,-1)+(2*s12-s13+2*s14-2*s23+4*s24)*pow(s13,-1)*pow(s12+s23+s24,-1)+s24*pow(s12+s23,-1)*pow(s12+s23+s24,-1)-(3*s23*(s14+2*s24)+s12*(7*s13+3*s14+2*s23+3*s24)+s13*(s23+6*s24)+2*(s12*s12))*pow(s13,-1)*pow(s12+s23,-1)*pow(s12+s23+s24,-1)+(3*s12+s23)*(s13*(s23+s24)+s23*(s14+s23+s24)+s12*(s13+s14+2*s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s12+s23,-1)*pow(s12+s23+s24,-1)+(2*s12-s13+2*s23+6*s24)*(s14*s23+s12*(s13+s14+s23+s24)+s12*s12)*pow(s13,-1)*pow(s12+s23,-1)*pow(s24,-1)*pow(s12+s13+s23+s24,-1)-(-(s13*(s14-6*s23))+(s23+s24)*(6*s14+s23+2*s24)+s12*(s13+6*s14+7*s23+8*s24)+6*(s12*s12)+s13*s13)*pow(s13,-1)*pow(s12+s23+s24,-1)*pow(s12+s13+s23+s24,-1)-(s12-2*s13+4*s14+s23+s24)*(s13*s24+s12*(s13+s23+s24)+s12*s12)*pow(s13,-1)*pow(s14,-1)*pow(s12+s23+s24,-1)*pow(s12+s13+s23+s24,-1)))/16.;
}

// Coefficient of master 2 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yygCAm2CF<2>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(-1,{
        qq2yygCAm2CF<2,-1>(s12,s13,s14,s23,s24),
        qq2yygCAm2CF<2,0>(s12,s13,s14,s23,s24),
        qq2yygCAm2CF<2,1>(s12,s13,s14,s23,s24)
    });
}

