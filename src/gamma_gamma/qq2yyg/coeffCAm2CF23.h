/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 23: box(s23,(-s12-s13-s14-s23-s24),(-s12-s13-s14))

// Coefficient order epsilon^0 of master 23
template<>
double qq2yygCAm2CF<23,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (pow(s12+s13+s14,-1)*(2*s12*s13+2*s13*s14-2*s14*s23-2*s14*s24-4*s23*s24+2*(s13*s13)-2*(s23*s23)-2*(s24*s24)+(s12+s13+s14+s23+s24)*(s14*s23+s12*(s13+s14+s23-s24)-s13*s24+s12*s12)*pow(s24,-1))-pow(s13,-1)*pow(s24,-2)*(-(s23*s24*(s13*s13))+s12*s12*(-2*s23*s24+2*s13*(s14+s23+s24)+s14*(3*s23+s24)+s13*s13+s14*s14+s23*s23-3*(s24*s24))+s13*(s14*s23*(s23-s24)-s24*(4*s23*s24+3*(s23*s23)+s24*s24))+s23*(s23*(s14*s14)+s14*(s23*s23-s24*s24)-2*s24*((s23+s24)*(s23+s24)))+(2*s13+2*s14+s23+s24)*pow(s12,3)+pow(s12,4)+s12*((s23+s24)*(s13*s13)+2*s23*(s14*s14)+s24*(s23*s23)+s14*(s23*s24+2*(s23*s23)-s24*s24)+s13*(s23*s24+s14*(3*s23+s24)+2*(s23*s23)-s24*s24)-3*s23*(s24*s24)+pow(s23,3)-3*pow(s24,3)))+2*s12*(-(s14*s23*s24*(s13+s23+s24))+s12*s12*(s23*(s23+s24)+2*s14*(2*s23+s24)+s13*(2*s14+2*s23+3*s24)+s13*s13+s14*s14)+s14*s14*(s23*s23)-s13*(s23+s24)*(s24*s24)+s12*(s13*s14*(2*s23+s24)+s24*(s13*s13)+2*s23*(s14*s14)+s14*(s23*s24+2*(s23*s23)-s24*s24)-s24*(4*s23*s24+s23*s23+3*(s24*s24)))+2*(s13+s14+s23+s24)*pow(s12,3)+pow(s12,4))*pow(s13,-1)*pow(s24,-2)*pow(s12+s23+s24,-1)-s12*(s14*s23+s12*(s13+s14+s23-s24)-s13*s24+s12*s12)*pow((-s12-s13-s14),-1)*pow((s12+s13+s23),-1)+(s23+s24)*(s14*s23+s12*(s13+s14+s23-s24)-s13*s24+s12*s12)*(s12*(s13+s24)+(s13+s23)*(s23+s24)+s12*s12)*pow(s13,-1)*pow((-s12-s13-s14),-1)*pow(s24,-1)*pow((s12+s13+s23),-1)-2*s12*(s12+s13)*(s23+s24)*(s14*s23+s12*(s13+s14+s23-s24)-s13*s24+s12*s12)*pow(s13,-1)*pow((-s12-s13-s14),-1)*pow(s12+s23+s24,-1)*pow((s12+s13+s23),-1))/4.;
}

// Coefficient order epsilon^1 of master 23
template<>
double qq2yygCAm2CF<23,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (-((-(s24*(5*s23+s24)*(s13*s13))+s12*s12*(9*s23*s24+s14*(s23+4*s24)+s24*(6*s13+5*s24)+s23*s23)+s12*(s23*s24*(5*s23+11*s24)-(s23-3*s24)*(s13*s13)+s24*(s14*s14)-s13*(s14*(s23-4*s24)+s23*s23-2*(s24*s24))+s14*(5*s23*s24+s23*s23-s24*s24))+s23*s24*(s14*(s23+8*s24)+s14*s14+4*(3*s23*s24+s23*s23+2*(s24*s24)))-s13*(s24*(-(s23*s24)+4*(s23*s23)+2*(s24*s24))+s14*(7*s23*s24+s23*s23+3*(s24*s24)))+(s23+3*s24)*pow(s12,3))*pow(s13,-1)*pow(s24,-2))-((s23-3*s24)*(s12*s12)+s14*(5*s23*s24+2*(s13-s24)*s24+s23*s23)+s24*(3*s13*(s23-s24)+2*(s13*s13)+2*(s23*s23-s24*s24))+s12*(s14*(s23-3*s24)+s13*(s23-s24)+4*s23*s24+s23*s23-5*(s24*s24)))*pow(s12+s13+s14,-1)*pow(s24,-1)-pow(s13,-1)*pow(s24,-2)*(s23*(s14*s14)*(3*s23*s24+s23*s23+2*(s24*s24))+s14*s24*(s23*(7*s23*s24+4*(s23*s23)-s24*s24)+s13*(7*s23*s24+s23*s23+2*(s24*s24)))+s24*s24*(2*(3*s23+s24)*(s13*s13)+2*s23*(s23*s23-s24*s24)+s13*(5*s23*s24+6*(s23*s23)+3*(s24*s24)))+(8*s23*s24+2*s13*(s23+s24)+2*s14*(s23+2*s24)+2*(s23*s23)+5*(s24*s24))*pow(s12,3)+(s23+2*s24)*pow(s12,4)+s12*s12*(s23*(s13*s13)+(s23+2*s24)*(s14*s14)+10*s24*(s23*s23)+13*s23*(s24*s24)+s13*(9*s23*s24+2*s14*(s23+s24)+2*(s23*s23)+5*(s24*s24))+s14*(13*s23*s24+4*(s23*s23)+7*(s24*s24))+pow(s23,3)+4*pow(s24,3))+s12*(3*s23*s24*(s13*s13)+s14*s14*(5*s23*s24+2*(s23*s23)+2*(s24*s24))+s13*(2*s14*(5*s23*s24+s23*s23+2*(s24*s24))+s24*(16*s23*s24+7*(s23*s23)+6*(s24*s24)))+s14*(13*s24*(s23*s23)+15*s23*(s24*s24)+2*pow(s23,3)+5*pow(s24,3))+s24*(15*s24*(s23*s23)+12*s23*(s24*s24)+4*pow(s23,3)+5*pow(s24,3))))*pow(s12+s23+s24,-1)+(s14*s23+s12*(s13+s14+s23-s24)-s13*s24+s12*s12)*(s12*(-2*s13+s14-2*s23+s24)-(s13+s23)*(s13+s14+s23+s24)+s12*s12)*pow(s12,-1)*pow((-s12-s13-s14),-1)*pow((s12+s13+s23),-1)-(s14*s23+s12*(s13+s14+s23-s24)-s13*s24+s12*s12)*pow(s12,-1)*pow(s13,-1)*(-3*(s13+s14)*s23*(s13+s23)*(s13+s14+s23+s24)+s12*s12*(2*s14*s24+2*s23*s24+s13*(8*s14+2*s23+7*s24)+6*(s13*s13)+2*(s14*s14)-2*(s23*s23)+s24*s24)+(6*s13+4*s14+3*s23+4*s24)*pow(s12,3)+2*pow(s12,4)+s12*((4*s14-4*s23+3*s24)*(s13*s13)-s23*(s14*(7*s23+s24)+s14*s14+s23*s23-s24*s24)+s13*(-(s23*s24)+s14*(-6*s23+2*s24)+2*(s14*s14)-8*(s23*s23)+s24*s24)+2*pow(s13,3)))*pow((-s12-s13-s14),-1)*pow(s24,-1)*pow((s12+s13+s23),-1)+(s14*s23+s12*(s13+s14+s23-s24)-s13*s24+s12*s12)*pow(s12,-1)*pow(s13,-1)*(-2*(s13+s14)*s23*(s13+s23)*(s13+s14+s23+s24)+s12*s12*(-4*s14*s23-5*s23*s24+s13*(s14-4*s23+2*s24)+2*(s13*s13)-6*(s23*s23)-s24*s24)+(s13-s23+s24)*pow(s12,3)+s12*((s14-5*s23+s24)*(s13*s13)-s23*(4*s23*s24+2*s14*(3*s23+s24)+2*(s14*s14)+3*(s23*s23)+s24*s24)-s13*(8*s14*s23+(3*s23+s24)*(3*s23+s24))+pow(s13,3)))*pow((-s12-s13-s14),-1)*pow(s12+s23+s24,-1)*pow((s12+s13+s23),-1))/4.;
}

// Coefficient order epsilon^2 of master 23
template<>
double qq2yygCAm2CF<23,2>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (-((-(s24*(15*s23+2*s24)*(s13*s13))+s12*s12*(3*s24*(-s23+s24)+2*s13*(s14+7*s24)+s14*(2*s23+13*s24)+s13*s13+s14*s14)+s23*s24*(8*s23*s24+s14*(-7*s23+9*s24)-6*(s14*s14)-8*(s23*s23)+16*(s24*s24))+s12*(s14*s24*(-7*s23+5*s24)-(s23-7*s24)*(s13*s13)+(s23+6*s24)*(s14*s14)+s13*(-18*s23*s24+s24*(13*s14+s24)-s23*s23)+s24*(4*s23*s24-11*(s23*s23)+s24*s24))-s13*(s24*(5*s23*s24+20*(s23*s23)+s24*s24)+s14*(22*s23*s24+s23*s23+2*(s24*s24)))+(2*s13+2*s14+s23+7*s24)*pow(s12,3)+pow(s12,4))*pow(s13,-1)*pow(s24,-2))-pow(s12+s13+s14,-1)*pow(s24,-1)*(14*s14*s23*s24+s13*(2*s24*(7*s23+6*s24)+s14*(s23+17*s24))+(2*s13+2*s14+s23+13*s24)*(s12*s12)+7*s24*(s13*s13)+s23*(s14*s14)+10*s24*(s14*s14)+s12*(16*s24*(s23+s24)+s13*(2*s14+s23+20*s24)+s14*(2*s23+23*s24)+s13*s13+s14*s14)+6*s24*(s23*s23)+12*s14*(s24*s24)+8*s23*(s24*s24)+pow(s12,3)+2*pow(s24,3))-pow(s13,-1)*pow(s24,-2)*(s14*(s23*(7*s23-13*s24)+s13*(17*s23+3*s24))*(s24*s24)+s23*(s14*s14)*(5*s23*s24+2*(s23*s23)+3*(s24*s24))+s24*s24*(2*(9*s23+2*s24)*(s13*s13)+2*s23*(-5*s23*s24+4*(s23*s23)-9*(s24*s24))+s13*(9*s23*s24+28*(s23*s23)+s24*s24))-(-5*s23*s24+2*s14*(2*s23+s24)+s13*(4*s14+6*s24)+2*(s13*s13)+2*(s14*s14)-2*(s23*s23)+8*(s24*s24))*pow(s12,3)-(4*s13+4*s14+2*s23+3*s24)*pow(s12,4)-2*pow(s12,5)+s12*((6*s23-5*s24)*s24*(s13*s13)+s14*s14*(6*s23*s24+2*(s23*s23)-9*(s24*s24))+(-6*s23*s24+11*(s23*s23)-3*(s24*s24))*(s24*s24)+s13*(4*s14*(4*s23*s24+s23*s23-3*(s24*s24))+s24*(29*s23*s24+6*(s23*s23)+2*(s24*s24)))+s14*(13*s24*(s23*s23)+8*s23*(s24*s24)+4*pow(s23,3)-8*pow(s24,3)))+s12*s12*((2*s23-3*s24)*(s13*s13)+(-2*s23+s24)*(s14*s14)+s13*(11*s23*s24-s24*(2*s14+13*s24)+4*(s23*s23))+s14*(11*s23*s24+4*(s23*s23)-15*(s24*s24))+2*(4*s24*(s23*s23)+4*s23*(s24*s24)+pow(s23,3)-2*pow(s24,3))))*pow(s12+s23+s24,-1)-(s14*s23+s12*(s13+s14+s23-s24)-s13*s24+s12*s12)*(3*(s13+s23)*(s13+s14+s23+s24)+s12*(6*s13+5*s14+6*s23+5*s24)+4*(s12*s12))*pow(s12,-1)*pow((-s12-s13-s14),-1)*pow((s12+s13+s23),-1)-(s14*s23+s12*(s13+s14+s23-s24)-s13*s24+s12*s12)*pow(s12,-1)*pow(s13,-1)*(-7*(s13+s14)*s23*(s13+s23)*(s13+s14+s23+s24)+s12*s12*(-10*s23*s24+2*s13*(8*s14-9*s23+3*s24)+s14*(-14*s23+4*s24)+12*(s13*s13)+4*(s14*s14)-18*(s23*s23)+s24*s24)+(12*s13+8*s14-6*s23+3*s24)*pow(s12,3)+4*pow(s12,4)+s12*((8*s14-19*s23+3*s24)*(s13*s13)-s23*(10*s23*s24+s14*(23*s23+9*s24)+9*(s14*s14)+11*(s23*s23)-s24*s24)+s13*(-17*s23*s24+s14*(-27*s23+4*s24)+4*(s14*s14)-32*(s23*s23)+s24*s24)+4*pow(s13,3)))*pow((-s12-s13-s14),-1)*pow(s24,-1)*pow((s12+s13+s23),-1)+(s14*s23+s12*(s13+s14+s23-s24)-s13*s24+s12*s12)*pow(s12,-1)*pow(s13,-1)*(-7*(s13+s14)*s23*(s13+s23)*(s13+s14+s23+s24)+s12*s12*(-7*s23*s24+s14*(-8*s23+6*s24)+s13*(22*s14-12*s23+9*s24)+14*(s13*s13)+6*(s14*s14)-16*(s23*s23)+2*(s24*s24))+(16*s13+12*s14-2*s23+5*s24)*pow(s12,3)+6*pow(s12,4)+s12*((10*s14-17*s23+4*s24)*(s13*s13)-s23*(9*s23*s24+7*s14*(3*s23+s24)+7*(s14*s14)+11*(s23*s23)-2*(s24*s24))+2*s13*(-8*s23*s24+s14*(-11*s23+3*s24)+3*(s14*s14)-16*(s23*s23)+s24*s24)+4*pow(s13,3)))*pow((-s12-s13-s14),-1)*pow(s12+s23+s24,-1)*pow((s12+s13+s23),-1))/4.;
}

// Coefficient of master 23 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yygCAm2CF<23>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(0,{
        qq2yygCAm2CF<23,0>(s12,s13,s14,s23,s24),
        qq2yygCAm2CF<23,1>(s12,s13,s14,s23,s24),
        qq2yygCAm2CF<23,2>(s12,s13,s14,s23,s24)
    });
}

