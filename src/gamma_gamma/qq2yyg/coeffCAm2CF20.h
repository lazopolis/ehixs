/*This file was produced by Simone Lionetti using a Mathematica script*/

// Master n. 20: box(s14,(s12+s13+s23),s23)

// Coefficient order epsilon^0 of master 20
template<>
double qq2yygCAm2CF<20,0>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (2*(s12+s13)*s14*(s14*s23+s12*(3*s13+s14+s23+s24)+s13*(2*s14+2*s23+s24)+s12*s12+2*(s13*s13))*pow(s12+s13+s14,-2)*pow(s23,-1)-s14*((4*s13+s14+s23+s24)*(s12*s12)+s13*(3*s14*s23+s13*(2*s14+4*s23+s24)+2*(s13*s13))+s12*(s14*s23+s13*(3*s14+5*s23+2*s24)+5*(s13*s13))+pow(s12,3))*pow(s12+s13+s14,-2)*pow(s23,-1)+2*s12*pow(s13,-1)*(-2*s13*s24-4*s12*(s13+s24)-6*(s12*s12)-(2*s12*(s13*s24*(s13+s24)+s14*(s13*s24+s23*s23))+s12*s12*(2*s14*s24+2*s13*(s14+2*s24)+s13*s13+s14*s14+s23*s23+s24*s24)+(s14*s23-s13*s24)*(s14*s23-s13*s24)+2*(s13+s14+s24)*pow(s12,3)+pow(s12,4))*pow(s12+s13+s14,-2)+(3*s12+s13+s24)*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*pow(s12+s13+s14,-1))*pow(s24,-1)+pow(s13,-1)*(2*s12*s13*(2*s13+s23)*s24+2*(2*s13+s23)*(s13+2*s24)*(s12*s12)+4*(2*s13+s23+s24)*pow(s12,3)+4*pow(s12,4)-(s12+s13)*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*(3*s12*(s12+s13+s14)*s23*(s12+s14+s24)+(pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24))*(pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24)))*pow(s12+s13+s14,-3)+(s13*(s13+s24)+s12*(4*s13+s23+s24)+3*(s12*s12))*(2*s12*(s13*s24*(s13+s24)+s14*(s13*s24+s23*s23))+s12*s12*(2*s14*s24+2*s13*(s14+2*s24)+s13*s13+s14*s14+s23*s23+s24*s24)+(s14*s23-s13*s24)*(s14*s23-s13*s24)+2*(s13+s14+s24)*pow(s12,3)+pow(s12,4))*pow(s12+s13+s14,-2)-(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*(s12*(3*s13+s23)*(s13+s24)+(7*s13+3*s23+2*s24)*(s12*s12)+s24*(s13*s13)+4*pow(s12,3))*pow(s12+s13+s14,-1))*pow(s23,-1)*pow(s24,-1)-2*s12*pow(s13,-1)*(2*(s14+s23)*s24*(s13*s13)+s12*(s14*(s14*s23+s24*(3*s23+s24))+s13*(2*s14*(2*s23+s24)+s23*(s23+3*s24))+(3*s23+2*s24)*(s13*s13))+s12*s12*(2*s14*s23+s23*s24+s13*(-2*s14+4*s23+s24)-s13*s13-s14*s14)+2*s23*s24*(s14*s14)+s13*s14*(6*s23*s24+s24*(s14+s24)+s23*s23)+(-2*s13-2*s14+s23)*pow(s12,3)-pow(s12,4)+s24*pow(s13,3))*pow(s12+s13+s14,-2)*pow(s12+s23+s24,-1)+pow(s13,-1)*(2*(s13+s23)*(s14-s24)*(s14*s23-s13*s24)-2*(3*s14*s23+s13*(s14-s23-2*s24)-s24*(s23+s24))*(s12*s12)-2*s12*(s13*(-2*s24*(s23+s24)+s14*(4*s23+s24))+(s14-s24)*(s13*s13)+s23*(s14*(3*s23+s24)-s14*s14-s24*s24))+2*s24*pow(s12,3)+(s12+s13)*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*(3*s12*(s12+s13+s14)*s23*(s12+s14+s24)+(pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24))*(pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24)))*pow(s12+s13+s14,-3)-(-2*s14*s23+s13*(-2*s14-2*s23+s24)+s12*(-2*s14-s23+s24)+s12*s12-s13*s13)*(2*s12*(s13*s24*(s13+s24)+s14*(s13*s24+s23*s23))+s12*s12*(2*s14*s24+2*s13*(s14+2*s24)+s13*s13+s14*s14+s23*s23+s24*s24)+(s14*s23-s13*s24)*(s14*s23-s13*s24)+2*(s13+s14+s24)*pow(s12,3)+pow(s12,4))*pow(s12+s13+s14,-2)-(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*(-(s13*(s14+3*s23)*(s14-s24))+s14*s23*(-s14-2*s23+s24)+(s13+3*s14+s23+s24)*(s12*s12)-(s14-2*s24)*(s13*s13)+s12*(2*s23*s24+s14*(s23+s24)+s13*(2*s14+3*(s23+s24))+s13*s13-s14*s14))*pow(s12+s13+s14,-1))*pow(s23,-1)*pow(s12+s23+s24,-1)-s13*s14*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow((s12+s14+s24),-1)-2*s12*(s12+s13)*(s12+s24)*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s24,-1)*pow((s12+s14+s24),-1)-(s12+s24)*((s13+s23)*s24+s12*(2*s23+s24))*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*pow(s13,-1)*pow(s23,-1)*pow(s12+s23+s24,-1)*pow((s12+s14+s24),-1))/4.;
}

// Coefficient order epsilon^1 of master 20
template<>
double qq2yygCAm2CF<20,1>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (-16*s14*(-2*s14*s23*(s14+s24)+(8*s13-s14+s23+s24)*(s12*s12)+(4*s14+6*s23+s24)*(s13*s13)+s13*(s14*(s23-2*s24)-2*s23*s24-2*(s14*s14))+s12*(-2*s23*s24-s14*(s23+2*s24)+s13*(3*s14+7*s23+2*s24)+13*(s13*s13)-2*(s14*s14))+pow(s12,3)+6*pow(s13,3))*pow(s12+s13+s14,-2)*pow(s23,-1)+16*pow(s12+s13+s14,-1)*(2*s12*s13*s23+4*s12*s14*s23+4*s13*s14*s23-6*s12*s14*s24-6*s13*s14*s24+2*s12*s23*s24+2*s13*s23*s24-2*s14*s23*s24-4*s14*(s12*s12)+2*s23*(s12*s12)+4*s14*(s13*s13)-4*s12*(s14*s14)+4*s23*(s14*s14)-2*s12*(s23*s23)-4*s14*(s23*s23)+(s14*(2*s14-s23)+s12*(3*s14-s23)+s13*(3*s14-s23))*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*pow(s12+s13+s14,-1))*pow(s23,-1)+16*pow(s13,-1)*(-(s13*(s14*s14)*(-(s23*(s23-5*s24))+s14*(13*s23+4*s24)+4*(s14*s14)))+s14*(s13*s13)*(3*s23*s24-s14*(10*s23+s24)-10*(s14*s14)+2*(s23*s23)+s24*s24)+(7*s14*s24+s13*(19*s14+9*s23+11*s24)+33*(s13*s13)-6*(s14*s14)-2*(s24*s24))*pow(s12,3)+(23*s13+2*(4*s14+s23+s24))*pow(s12,4)+6*pow(s12,5)+(-(s14*(s23-6*s24))+2*s23*s24-8*(s14*s14))*pow(s13,3)+s12*s12*((12*s14+12*s23+19*s24)*(s13*s13)+s14*((s23-s24)*s24+s14*(-10*s23+s24)-12*(s14*s14))+s13*(2*s14*(s23+10*s24)-23*(s14*s14)+2*(2*s23*s24+s23*s23-2*(s24*s24)))+21*pow(s13,3))+(-2*s14+3*s24)*pow(s13,4)+s12*(s13*s14*(-2*s14*(10*s23+s24)+3*s23*(s23+2*s24)-23*(s14*s14))-s14*s14*(3*s23*s24+4*s14*(3*s23+s24)+4*(s14*s14))+s13*s13*(s14*(s23+19*s24)-25*(s14*s14)+2*(3*s23*s24+s23*s23-s24*s24))+(-s14+5*s23+13*s24)*pow(s13,3)+5*pow(s13,4))-4*s23*(s14+s24)*pow(s14,3))*pow(s12+s13+s14,-2)*pow(s24,-1)-16*pow(s13,-1)*(-(s13*(s14*s14)*(7*s23*(-s23+s24)+s14*(22*s23+6*s24)+10*(s14*s14)))+s14*(s13*s13)*(3*s23*s24-s14*(9*s23+4*s24)-24*(s14*s14)+6*(s23*s23)+s24*s24)+(s13*(-10*s14+3*s23-7*s24)-2*s24*(3*s23+s24)-s14*(10*s23+7*s24)+21*(s13*s13)-24*(s14*s14))*pow(s12,3)+(11*s13-2*(2*s14+s23+2*s24))*pow(s12,4)+2*pow(s12,5)+(2*s23*s24+s14*(3*s23+5*s24)-18*(s14*s14))*pow(s13,3)+s12*s12*((-12*s14+12*s23+s24)*(s13*s13)-s14*(13*s23*s24+3*s14*(8*s23+3*s24)+28*(s14*s14)-2*(s23*s23)+s24*s24)-s13*(8*s23*s24+3*s14*(s23+3*s24)+63*(s14*s14)-4*(s23*s23)+4*(s24*s24))+17*pow(s13,3))+(-4*s14+3*s24)*pow(s13,4)+s12*(-(s14*s14*(s14*(26*s23+6*s24)+s23*(-4*s23+13*s24)+10*(s14*s14)))-s13*s14*(s23*(-11*s23+8*s24)+s14*(28*s23+15*s24)+52*(s14*s14))+s13*s13*(s14*(10*s23+3*s24)-57*(s14*s14)+4*(s23*s23)-2*(s24*s24))+(-10*s14+7*(s23+s24))*pow(s13,3)+5*pow(s13,4))+2*s23*(-5*s14+s23-3*s24)*pow(s14,3))*pow(s12+s13+s14,-2)*pow(s12+s23+s24,-1)+8*pow(s13,-1)*pow(s23,-1)*pow(s12+s23+s24,-1)*(4*(s13+s23)*(-(s14*(s13-2*s23)*s24)+s13*(s13+3*s23-s24)*s24+2*s23*(s14*s14))+4*(s12*s12)*(2*s14*(s23-s24)+s23*s24+s13*(-3*s14+5*s23+s24)+3*(s13*s13)-2*(s14*s14)+2*(s23*s23)-s24*s24)+12*s13*pow(s12,3)-8*s14*pow(s12,3)+8*s23*pow(s12,3)+4*pow(s12,4)+4*s12*((-s14+4*s23+2*s24)*(s13*s13)+s23*((2*s23-s24)*s24+2*s14*(s23+s24)+2*(s14*s14))+s13*(s14*(s23-3*s24)+4*s23*s24-2*(s14*s14)+3*(s23*s23)-2*(s24*s24))+pow(s13,3))+2*((-2*s14*s23+s13*(-2*s14-2*s23+s24)+s12*(-2*s14-s23+s24)+s12*s12-s13*s13)*((pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24))*(pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24)))+(-2*s14*(s14-2*s23)+s12*(s13+2*s14-s23)+s13*(2*s14+s23)+s13*s13)*(2*s12*(s13*s24*(s13+s24)+s14*(s13*s24+s23*s23))+s12*s12*(2*s14*s24+2*s13*(s14+2*s24)+s13*s13+s14*s14+s23*s23+s24*s24)+(s14*s23-s13*s24)*(s14*s23-s13*s24)+2*(s13+s14+s24)*pow(s12,3)+pow(s12,4)))*pow(s12+s13+s14,-2)-2*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*(-2*s14*s23*(s14+s24)+(2*s13-6*s14-s23-s24)*(s12*s12)+(-3*s14+4*s23-2*s24)*(s13*s13)-s13*(s23*(-3*s23+4*s24)+s14*(3*s23+4*s24)+4*(s14*s14))+s12*(s13*(-9*s14+2*s23-3*s24)+2*(s13*s13)-2*(-(s23*(s23-2*s24))+s14*(s23+2*s24)+3*(s14*s14)))+pow(s12,3)+pow(s13,3))*pow(s12+s13+s14,-1)-(s12+s13)*pow(s12+s13+s14,-3)*pow(pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24),3))+pow(s13,-1)*pow(s23,-1)*pow(s24,-1)*(-32*(s13+s23)*(s14*(-s13+s23)*s24+s13*s24*(s13+2*s23+s24)+3*s23*(s14*s14))-32*(s12*s12)*(5*s14*s23+3*s23*s24+s13*(4*s23+7*s24)+4*(s13*s13)+s23*s23+s24*s24)-32*(5*s13+2*s23+3*s24)*pow(s12,3)-64*pow(s12,4)-32*s12*((3*s23+5*s24)*(s13*s13)+s23*(3*s14*(s23+s24)+s24*(s23+s24)+5*(s14*s14))+s13*(s14*(2*s23-s24)+5*s23*s24+2*(s23*s23)+2*(s24*s24))+pow(s13,3))+(-16*(s13*(s13+s24)+s12*(4*s13+s23+s24)+3*(s12*s12))*((pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24))*(pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24)))+16*(s13*(2*s14+s23)+s12*(3*s13+2*s14+3*s23)+2*(s12*s12)+s13*s13+2*(s14*s14))*(2*s12*(s13*s24*(s13+s24)+s14*(s13*s24+s23*s23))+s12*s12*(2*s14*s24+2*s13*(s14+2*s24)+s13*s13+s14*s14+s23*s23+s24*s24)+(s14*s23-s13*s24)*(s14*s23-s13*s24)+2*(s13+s14+s24)*pow(s12,3)+pow(s12,4)))*pow(s12+s13+s14,-2)+16*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*(-(s14*s23*(s14+s24))+(8*s13-5*s14+s23+3*s24)*(s12*s12)+(-3*s14+3*s23+2*s24)*(s13*s13)-s13*(s14*(4*s23+3*s24)+3*(s14*s14)-2*(s23*s23))+s12*(-(s14*(s23+3*s24))+s13*(-8*s14+3*s23+5*s24)+5*(s13*s13)-5*(s14*s14)+s23*s23)+4*pow(s12,3)+pow(s13,3))*pow(s12+s13+s14,-1)+8*(s12+s13)*pow(s12+s13+s14,-3)*pow(pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24),3))+16*(s13*s14+s12*(s14-s23)+(2*s14-s23)*(s14+s24))*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*pow(s12+s13+s14,-1)*pow(s23,-1)*pow((s12+s14+s24),-1)+16*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*pow(s12,-1)*(2*s14*s23*(s13+s23)*(s14+s24)+s12*s12*(2*s14*s23+s24*(s23+s24)+s13*(s14+4*s24)+s13*s13)+s12*((s14+s24)*(s13*s13)+s13*(2*s14*s23+s24*s24)+s23*(2*s14*(s23+s24)+2*(s14*s14)+s24*s24))+3*(s13+s24)*pow(s12,3)+2*pow(s12,4))*pow(s13,-1)*pow(s23,-1)*pow(s24,-1)*pow((s12+s14+s24),-1)-16*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*pow(s12,-1)*(3*s14*s23*(s13+s23)*(s14+s24)+s12*(s24*(s13*s13)+s23*((s23-s24)*s24+s14*(3*s23+s24)+s14*s14)-s13*(s24*(-s23+s24)+s14*(-3*s23+2*s24)+2*(s14*s14)))+s12*s12*(s14*(s23-2*s24)-s23*s24+s13*(-2*s14+s23+s24)+s13*s13-2*(s14*s14)+s23*s23-s24*s24)+2*(s13-s14)*pow(s12,3)+pow(s12,4))*pow(s13,-1)*pow(s23,-1)*pow(s12+s23+s24,-1)*pow((s12+s14+s24),-1))/64.;
}

// Coefficient order epsilon^2 of master 20
template<>
double qq2yygCAm2CF<20,2>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return (16*(s12+s13+s23)*(s13*s14*(-2*s14+s23-4*s24)+(2*s13-3*s14+s23+s24)*(s12*s12)+(4*s14+s24)*(s13*s13)+s12*(s14*(-10*s14+s23-4*s24)+s13*(s14+s23+2*s24)+s13*s13)-6*(s14+s24)*(s14*s14)+pow(s12,3))*pow(s12+s13+s14,-2)*pow(s23,-1)+16*(s14*(6*s14-7*s23)*s23+(4*s14-3*s23)*(s12*s12)+s13*(-(s23*s24)+s14*(-6*s23+2*s24)+8*(s14*s14))+s12*(s13*(4*s14-3*s23)-s23*(s23+s24)+s14*(-5*s23+2*s24)+10*(s14*s14)))*pow(s12+s13+s14,-1)*pow(s23,-1)-16*pow(s13,-1)*(s13*(s14*s14)*(-(s23*(s23-23*s24))+s14*(53*s23+20*s24)+26*(s14*s14))+s14*(s13*s13)*(2*s23*s24+s14*(46*s23+39*s24)+70*(s14*s14)-3*(s23*s23)-s24*s24)+(7*s23*s24+s13*(151*s14+34*s23+25*s24)+s14*(50*s23+33*s24)+32*(s13*s13)+105*(s14*s14)+12*(s23*s23)+3*(s24*s24))*pow(s12,3)+(28*s13+50*s14+15*s23+10*s24)*pow(s12,4)+9*pow(s12,5)+(s24*(-3*s23+s24)+s14*(13*s23+18*s24)+62*(s14*s14))*pow(s13,3)+s12*s12*((174*s14+27*s23+19*s24)*(s13*s13)+s14*(18*s23*s24+s14*(75*s23+43*s24)+96*(s14*s14)+24*(s23*s23)-s24*s24)+s13*(7*s23*s24+s14*(98*s23+80*s24)+262*(s14*s14)+19*(s23*s23)+7*(s24*s24))+16*pow(s13,3))+(18*s14-s24)*pow(s13,4)+s12*(s14*s14*(20*s14*(3*s23+s24)+s23*(12*s23+25*s24)+32*(s14*s14))+s13*s14*(s14*(117*s23+82*s24)+165*(s14*s14)+2*(6*s23*s24+9*(s23*s23)-s24*s24))+s13*s13*(-3*s23*s24+65*s14*(s23+s24)+221*(s14*s14)+9*(s23*s23)+5*(s24*s24))+(91*s14+8*s23+3*s24)*pow(s13,3)+3*pow(s13,4))+2*s23*(10*s14+7*s24)*pow(s14,3))*pow(s12+s13+s14,-2)*pow(s24,-1)+pow(s13,-1)*(32*(s13+s23)*(s14*(4*s13-5*s23)*s24+s13*s24*(2*s13+3*s23+2*s24)-7*s23*(s14*s14))+32*(s12*s12)*(8*s23*s24+s14*(-5*s23+6*s24)+s13*(11*s14+11*s23+12*s24)+7*(s13*s13)+6*(s14*s14)+5*(s23*s23)+2*(s24*s24))+32*(8*s13+6*s14+6*s23+5*s24)*pow(s12,3)+96*pow(s12,4)+32*s12*((5*s14+5*s23+9*s24)*(s13*s13)+s23*(s24*(5*s23+2*s24)-s14*(7*s23+3*s24)-5*(s14*s14))+s13*(13*s23*s24+s14*(-4*s23+10*s24)+6*(s14*s14)+3*(s23*s23)+4*(s24*s24))+2*pow(s13,3))-16*(s12+s13)*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*(3*s12*(s12+s13+s14)*s23*(s12+s14+s24)+(pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24))*(pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24)))*pow(s12+s13+s14,-3)+(-16*(s13*(2*s14+s23)+s12*(3*s13+2*s14+3*s23)+2*(s12*s12)+s13*s13+2*(s14*s14))*((pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24))*(pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24)))+16*(s13*(8*s14+s24)+s12*(7*s13+8*s14+3*s23+s24)+5*(s12*s12)+2*(s13*s13)+8*(s14*s14))*(2*s12*(s13*s24*(s13+s24)+s14*(s13*s24+s23*s23))+s12*s12*(2*s14*s24+2*s13*(s14+2*s24)+s13*s13+s14*s14+s23*s23+s24*s24)+(s14*s23-s13*s24)*(s14*s23-s13*s24)+2*(s13+s14+s24)*pow(s12,3)+pow(s12,4)))*pow(s12+s13+s14,-2)-16*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*(s14*s23*(9*s14+5*s24)+(8*s13+17*s14+3*s23+2*s24)*(s12*s12)+(12*s14+5*s23+2*s24)*(s13*s13)+s12*(s23*(5*s23-s24)+9*s14*(s23+s24)+s13*(29*s14+9*s23+4*s24)+7*(s13*s13)+17*(s14*s14))+s13*(s14*(10*s23+9*s24)+13*(s14*s14)+3*(s23*s23))+3*pow(s12,3)+2*pow(s13,3))*pow(s12+s13+s14,-1))*pow(s23,-1)*pow(s24,-1)+16*pow(s13,-1)*(s13*(s14*s14)*(-7*s23*(s23-3*s24)+s14*(37*s23+20*s24)+22*(s14*s14))+s14*(s13*s13)*(s14*(23*s23+37*s24)+52*(s14*s14)-7*(s23*s23)-s24*s24)+(5*s23*s24+s13*(115*s14+21*s23+20*s24)+s14*(34*s23+27*s24)+23*(s13*s13)+87*(s14*s14)+10*(s23*s23)+3*(s24*s24))*pow(s12,3)+(21*s13+40*s14+11*s23+8*s24)*pow(s12,4)+7*pow(s12,5)+(s24*(-3*s23+s24)+s14*(2*s23+17*s24)+38*(s14*s14))*pow(s13,3)+s12*s12*((122*s14+13*s23+16*s24)*(s13*s13)+s14*(12*s23*s24+s14*(51*s23+39*s24)+82*(s14*s14)+18*(s23*s23)-s24*s24)+s13*(3*s23*s24+s14*(54*s23+67*s24)+207*(s14*s14)+15*(s23*s23)+7*(s24*s24))+11*pow(s13,3))+8*s14*pow(s13,4)+s12*(s14*s14*(4*s14*(11*s23+5*s24)+3*s23*(2*s23+7*s24)+28*(s14*s14))+s13*s14*(4*s23*s24+s14*(70*s23+76*s24)+135*(s14*s14)+8*(s23*s23)-2*(s24*s24))+s13*s13*(-5*s23*s24+s14*(26*s23+57*s24)+160*(s14*s14)+7*(s23*s23)+5*(s24*s24))+(55*s14+3*s23+4*s24)*pow(s13,3)+2*pow(s13,4))+2*s23*(8*s14-s23+7*s24)*pow(s14,3))*pow(s12+s13+s14,-2)*pow(s12+s23+s24,-1)-pow(s13,-1)*(32*(s13+s23)*(3*s14*(s13-2*s23)*s24+s13*s24*(s13+2*s23+s24)-8*s23*(s14*s14))+32*(s12*s12)*(5*s23*s24+7*s13*(s14+s23+s24)+s14*(-8*s23+4*s24)+4*(s13*s13)+4*(s14*s14)+4*(s23*s23)+s24*s24)+160*s13*pow(s12,3)+128*s14*pow(s12,3)+128*s23*pow(s12,3)+96*s24*pow(s12,3)+64*pow(s12,4)+32*s12*((3*s14+3*s23+5*s24)*(s13*s13)+s23*(s24*(4*s23+s24)-2*s14*(4*s23+3*s24)-8*(s14*s14))+s13*(s14*(-5*s23+7*s24)+4*(s14*s14)+2*(4*s23*s24+s23*s23+s24*s24))+pow(s13,3))-16*(s12+s13)*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*(3*s12*(s12+s13+s14)*s23*(s12+s14+s24)+(pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24))*(pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24)))*pow(s12+s13+s14,-3)-(-16*(-2*s14*(s14-2*s23)+s12*(s13+2*s14-s23)+s13*(2*s14+s23)+s13*s13)*((pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24))*(pow(s12,2)-s14*s23+s13*s24+s12*(s13+s14-s23+s24)))-16*(2*s14*(4*s14-3*s23)-s12*(s13-2*s14+s23-s24)+s13*(2*s14-4*s23+s24)+s12*s12-2*(s13*s13))*(2*s12*(s13*s24*(s13+s24)+s14*(s13*s24+s23*s23))+s12*s12*(2*s14*s24+2*s13*(s14+2*s24)+s13*s13+s14*s14+s23*s23+s24*s24)+(s14*s23-s13*s24)*(s14*s23-s13*s24)+2*(s13+s14+s24)*pow(s12,3)+pow(s12,4)))*pow(s12+s13+s14,-2)-16*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*(2*s14*s23*(4*s14-s23+3*s24)+(5*s13+16*s14+s23+s24)*(s12*s12)+(7*s14+3*s23+s24)*(s13*s13)+s13*(s23*(2*s23-s24)+5*s14*(s23+2*s24)+12*(s14*s14))+s12*(s13*(23*s14+5*s23+2*s24)+4*(s13*s13)+2*(s23*(2*s23-s24)+s14*(3*s23+5*s24)+8*(s14*s14)))+2*pow(s12,3)+pow(s13,3))*pow(s12+s13+s14,-1))*pow(s23,-1)*pow(s12+s23+s24,-1)-16*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*pow(s12,-1)*(3*s14*(s13+s23)*(s14+s24)+s12*(s13*(5*s14+s24)+5*s14*(s14+s23+s24))+(s13+6*s14+s24)*(s12*s12)+pow(s12,3))*pow(s12+s13+s14,-1)*pow(s23,-1)*pow((s12+s14+s24),-1)-16*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*pow(s12,-1)*(-7*s14*s23*(s13+s23)*(s14+s24)+s12*(2*(s14+s24)*(s13*s13)+s23*(-7*s14*(s23+s24)+2*s24*(3*s23+s24)-7*(s14*s14))+s13*(2*s24*(3*s23+s24)+s14*(-7*s23+6*s24)+6*(s14*s14)))+s12*s12*(-7*s14*s23+6*s14*s24+8*s23*s24+s13*(8*s14+6*s23+7*s24)+2*(s13*s13)+6*(s14*s14)+6*(s23*s23)+2*(s24*s24))+(5*s13+6*s14+6*s23+5*s24)*pow(s12,3)+3*pow(s12,4))*pow(s13,-1)*pow(s23,-1)*pow(s24,-1)*pow((s12+s14+s24),-1)+16*(-(s14*s23)+s13*s24+s12*(s13+s14-s23+s24)+s12*s12)*pow(s12,-1)*(-7*s14*s23*(s13+s23)*(s14+s24)+s12*(s24*(s13*s13)+s23*(s24*(5*s23+s24)-s14*(7*s23+9*s24)-9*(s14*s14))+s13*(s24*(3*s23+s24)+s14*(-8*s23+4*s24)+4*(s14*s14)))+s12*s12*(5*s23*s24+s14*(-9*s23+4*s24)+s13*(4*s14+3*s23+4*s24)+s13*s13+4*(s14*s14)+5*(s23*s23)+s24*s24)+(3*s13+4*s14+4*s23+3*s24)*pow(s12,3)+2*pow(s12,4))*pow(s13,-1)*pow(s23,-1)*pow(s12+s23+s24,-1)*pow((s12+s14+s24),-1))/64.;
}

// Coefficient of master 20 as a series in epsilon
template<>
Expansion<Parameter::epsilon, double> qq2yygCAm2CF<20>(const double& s12, const double& s13, const double& s14, const double& s23, const double& s24)
{
    return Expansion<Parameter::epsilon, double>(0,{
        qq2yygCAm2CF<20,0>(s12,s13,s14,s23,s24),
        qq2yygCAm2CF<20,1>(s12,s13,s14,s23,s24),
        qq2yygCAm2CF<20,2>(s12,s13,s14,s23,s24)
    });
}

